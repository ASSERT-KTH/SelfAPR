[BugLab_Wrong_Literal]^private int parity = 0;^65^^^^^60^70^private int parity = 1;^[CLASS] BigMatrixImpl   [VARIABLES] 
[BugLab_Wrong_Literal]^private int scale = 65;^71^^^^^66^76^private int scale = 64;^[CLASS] BigMatrixImpl   [VARIABLES] 
[BugLab_Variable_Misuse]^if  ( scale <=0 || columnDimension <=0 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[BugLab_Variable_Misuse]^if  ( rowDimension <=0 || scale <=0 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[BugLab_Argument_Swapping]^if  ( columnDimension <=0 || rowDimension <=0 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[BugLab_Wrong_Operator]^if  ( rowDimension <=0 && columnDimension <=0 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[BugLab_Wrong_Literal]^if  ( rowDimension <=-1 || columnDimension <=-1 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[BugLab_Variable_Misuse]^this.copyIn ( lu ) ;^116^^^^^115^118^this.copyIn ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[][])   BigDecimal[][] d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^int nRows = scale;^132^^^^^131^150^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = d.length.length;^132^^^^^131^150^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = d;^132^^^^^131^150^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( rowDimension == 0 )  {^133^^^^^131^150^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( nRows >= 0 )  {^133^^^^^131^150^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^if  ( nRows == roundingMode )  {^133^^^^^131^150^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nCols = d[0].length[0].length;^137^^^^^131^150^int nCols = d[0].length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^int nCols = d[row].length;^137^^^^^131^150^int nCols = d[0].length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( scale == 0 )  {^138^^^^^131^150^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( nCols != 0 )  {^138^^^^^131^150^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^if  ( nCols == row )  {^138^^^^^131^150^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( d[row].length != rowDimension )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^if  ( d[row].length[row].length != nCols )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( d[row].length >= nCols )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^for  ( int scale = 1; row < nRows; row++ )  {^142^^^^^131^150^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^for  ( int row = 1; row < scale; row++ )  {^142^^^^^131^150^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^for  ( int row = 1; row <= nRows; row++ )  {^142^^^^^131^150^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^for  ( int row = 2; row < nRows; row++ )  {^142^^^^^131^150^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^if  ( d[row].length != d[row].length )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( d[row].length <= nCols )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < nRows; row++ )  {^142^^^^^131^150^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^int nRows = scale;^162^^^^^161^180^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = d.length.length;^162^^^^^161^180^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = d;^162^^^^^161^180^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( row == 0 )  {^163^^^^^161^180^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( nRows != 0 )  {^163^^^^^161^180^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^if  ( nRows == -1 )  {^163^^^^^161^180^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nCols = d[0].length[0].length;^167^^^^^161^180^int nCols = d[0].length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( scale == 0 )  {^168^^^^^161^180^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( nCols != 0 )  {^168^^^^^161^180^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^if  ( nCols == nCols )  {^168^^^^^161^180^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( d[row].length != row )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^if  ( nCols[row].length != d )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^if  ( d[row].length != d[row].length )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( d[row].length >= nCols )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^for  ( int scale = 1; row < nRows; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^for  ( int row = 1; row < scale; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^for  ( int nRows = 1; row < row; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^for  ( int row = 1; row <= nRows; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^if  ( d[row].length != scale )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( d[row].length > nCols )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^for  ( int row = columnDimension; row < nRows; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^int nRows = scale;^192^^^^^191^197^int nRows = v.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = v.length.length;^192^^^^^191^197^int nRows = v.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^int nRows = v;^192^^^^^191^197^int nRows = v.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^data = new BigDecimal[nRows][nCols];^193^^^^^191^197^data = new BigDecimal[nRows][1];^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Variable_Misuse]^for  ( int scale = 0; row < nRows; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^for  ( int row = ; row < nRows; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^data[row][columnDimension] = v[row];^195^^^^^191^197^data[row][0] = v[row];^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^data[row][row] = v[row];^195^^^^^191^197^data[row][0] = v[row];^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Literal]^for  ( int row = scale; row < nRows; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^216^217^^^^215^229^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  >= m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^216^217^^^^215^229^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  >= m.getRowDimension (  )  )  {^216^217^^^^215^229^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; row < rowCount; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < scale; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = columnCount; row < rowCount; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = rowDimension; row < rowCount; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; col < columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < scale; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( scale, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].add ( m.getEntry ( col, row )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = m[row][col].add ( data.getEntry ( row, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( rowDimension, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( row, scale )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col].add ( m.getEntry ( row, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = col[row][col].add ( m.getEntry ( row, data )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = row[row][col].add ( m.getEntry ( data, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( row, rowDimension )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].add ( row.getEntry ( m, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( rowCount, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col].add ( m.getEntry ( row, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( row, rowCount )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( row, roundingMode )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int scale = 0; col < columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < row; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].add ( col.getEntry ( row, m )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].add ( m.getEntry ( parity, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = columnCount; col < columnCount; col++ )  {^224^^^^^215^229^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( lu ) ;^228^^^^^215^229^return new BigMatrixImpl ( outData ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  && this.getRowDimension (  )  != m.getRowDimension (  )  )  {^239^240^^^^238^252^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  == m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^239^240^^^^238^252^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  <= m.getRowDimension (  )  )  {^239^240^^^^238^252^if  ( this.getColumnDimension (  )  != m.getColumnDimension (  )  || this.getRowDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; row < rowCount; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < parity; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < rowCount; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = parity; row < rowCount; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = row; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( rowCount, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, roundingMode )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col].subtract ( m.getEntry ( row, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].subtract ( row.getEntry ( m, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].subtract ( m.getEntry ( col, row )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, scale )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col].subtract ( m.getEntry ( row, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = m[row][col].subtract ( data.getEntry ( row, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( scale, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = data[row][col].subtract ( col.getEntry ( row, m )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = parity; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = col[row][col].subtract ( m.getEntry ( row, data )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( rowDimension, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < scale; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( roundingMode, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, rowDimension )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, rowCount )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = ; col < columnCount; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = row[row][col].subtract ( m.getEntry ( data, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( lu ) ;^251^^^^^238^252^return new BigMatrixImpl ( outData ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < roundingMode; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = scale; row < rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int rowDimension = 0; col < columnCount; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < row; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < columnCount; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = ZEROata[row][col].add ( d ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col].add ( d ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = dataata[row][col].add ( d ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col].add ( d ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; col < columnCount; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = d[row][col].add ( data ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < rowCount; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = col; col < columnCount; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( lu ) ;^269^^^^^260^270^return new BigMatrixImpl ( outData ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; row < rowCount; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < scale; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int rowCount = 0; row < row; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == rowCount; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > rowCount; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = columnCount; row < rowCount; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < rowCount; row++ )  {^281^^^^^277^287^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int row = 0; col < columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < row; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int columnCount = 0; col < col; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = nCols; col < columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = ZEROata[row][col].multiply ( d ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = outData[row][col].multiply ( d ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = d[row][col].multiply ( data ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = lu[row][col].multiply ( d ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = col; col < columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < scale; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = row; col < columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^outData[row][col] = dataata[row][col].multiply ( d ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < columnCount; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( lu ) ;^286^^^^^277^287^return new BigMatrixImpl ( outData ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^if  ( this.getColumnDimension (  )  == m.getRowDimension (  )  )  {^297^^^^^296^315^if  ( this.getColumnDimension (  )  != m.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^BigDecimal sum = d;^304^^^^^296^315^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( scalent row = 0; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = col; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = ; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( roundingModent col = 0; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = columnCount; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( scalent i = 0; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < row; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( nSumnt i = 0; i < i; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = ZERO.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( roundingMode, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, rowDimension )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( outData[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = m.add ( data[row][i].multiply ( sum.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( col, i )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( col[row][i].multiply ( m.getEntry ( i, data )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = d.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( parity, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, scale )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = i.add ( data[row][i].multiply ( m.getEntry ( sum, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( data[row][i].multiply ( i.getEntry ( m, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( data[row][i].multiply ( col.getEntry ( i, m )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, rowCount )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( i[row][i].multiply ( m.getEntry ( data, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = sum.add ( m[row][i].multiply ( data.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( rowCount, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum;^307^^^^^296^315^sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = data.add ( sum[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = d;^311^^^^^296^315^outData[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( scale, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < scale; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, parity )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = col.add ( data[row][i].multiply ( m.getEntry ( i, sum )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = d;^307^^^^^296^315^sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^outData[row][col] = ZERO;^311^^^^^296^315^outData[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( rowDimension, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < roundingMode; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = row; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < roundingMode; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( row, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, roundingMode )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = nRows; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, row )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = columnCount; row < nRows; row++ )  {^305^^^^^296^315^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = ; i < nSum; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( lu ) ;^314^^^^^296^315^return new BigMatrixImpl ( outData ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( roundingModent i = 0; i < nRows; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < row; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( nRowsnt i = 0; i < i; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = columnDimension; i < nRows; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int roundingMode=0; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( roundingModent j=0; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^for  ( jnt i=0; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int j=rowDimension; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^d[i][j] = outData[i][j].doubleValue (  ) ;^353^^^^^347^357^d[i][j] = data[i][j].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^d[i][j] = dataata[i][j].doubleValue (  ) ;^353^^^^^347^357^d[i][j] = data[i][j].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int parity=0; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( rownt j=0; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^d[i][j] = d[i][j].doubleValue (  ) ;^353^^^^^347^357^d[i][j] = data[i][j].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int i = rowDimension; i < nRows; i++ )  {^351^^^^^347^357^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int j=columnDimension; j<nCols;j++ )  {^352^^^^^347^357^for  ( int j=0; j<nCols;j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return outData;^367^^^^^366^368^return data;^[CLASS] BigMatrixImpl  [METHOD] getDataRef [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return parity;^377^^^^^376^378^return roundingMode;^[CLASS] BigMatrixImpl  [METHOD] getRoundingMode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^this.roundingMode = nSum;^386^^^^^385^387^this.roundingMode = roundingMode;^[CLASS] BigMatrixImpl  [METHOD] setRoundingMode [RETURN_TYPE] void   int roundingMode [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return rowDimension;^396^^^^^395^397^return scale;^[CLASS] BigMatrixImpl  [METHOD] getScale [RETURN_TYPE] int   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^this.scale = rowDimension;^405^^^^^404^406^this.scale = scale;^[CLASS] BigMatrixImpl  [METHOD] setScale [RETURN_TYPE] void   int scale [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^BigDecimal maxColSum = sum;^415^^^^^414^424^BigDecimal maxColSum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = columnDimension; col < this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = i; col < this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = rowDimension; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = maxColSum.add ( data[row][col].abs (  )  ) ;^419^^^^^414^424^sum = sum.add ( data[row][col].abs (  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^sum = sum.add ( outData[row][col].abs (  )  ) ;^419^^^^^414^424^sum = sum.add ( data[row][col].abs (  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^sum = data.add ( sum[row][col].abs (  )  ) ;^419^^^^^414^424^sum = sum.add ( data[row][col].abs (  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^maxColSum = d.max ( sum ) ;^421^^^^^414^424^maxColSum = maxColSum.max ( sum ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^maxColSum = maxColSum.max ( d ) ;^421^^^^^414^424^maxColSum = maxColSum.max ( sum ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Argument_Swapping]^maxColSum = sum.max ( maxColSum ) ;^421^^^^^414^424^maxColSum = maxColSum.max ( sum ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^BigDecimal sum = maxColSum;^417^^^^^414^424^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^for  ( int scale = 0; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = ; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < this.getColumnDimension (  ) ; col++ )  {^416^^^^^414^424^for  ( int col = 0; col < this.getColumnDimension (  ) ; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Wrong_Literal]^for  ( int row = row; row < this.getRowDimension (  ) ; row++ )  {^418^^^^^414^424^for  ( int row = 0; row < this.getRowDimension (  ) ; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^return sum;^423^^^^^414^424^return maxColSum;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[BugLab_Variable_Misuse]^if  ( nSum < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > scale || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || parity < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > startRow || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > parity || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow < 0 || startRow > endRow || endRow > outData.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( data[0].length < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > data[0].length || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > startColumn || data.length < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || endColumn < 0 || startColumn > startColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > data.length.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( startRow < 0 || startRow > endRow || endRow > data[0].length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 && startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow > 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow >= endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow < data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn <= 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn < endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn >= data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^if  ( startRow < -1 || startRow > endRow || endRow > data.length || startColumn < -1 || startColumn > endColumn || endColumn > data[-1].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^if  ( startRow < i || startRow > endRow || endRow > data.length || startColumn < i || startColumn > endColumn || endColumn > data[i].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( roundingMode - startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - row+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, parity - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - roundingMode+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( startColumn - startRow+1, endColumn - endRow+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startColumn+1, endColumn - startRow+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, startColumn - endColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow  >=  startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow  &  startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+parity, endColumn - startColumn+parity ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+nSum, endColumn - startColumn+nSum ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( scale - startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - nSum+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - nSum+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endColumn - startRow+1, endRow - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - endColumn+1, startRow - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow  |  startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow  &&  startRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+endRow, endColumn - startColumn+endRow ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+, endColumn - startColumn+ ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = startColumn; i <= endRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt i = startRow; i <= endRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = startRow; i <= row; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int i = endRow; i <= startRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( endRownt i = startRow; i <= i; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = startRow; i < endRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = startRow; i > endRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = rowCount; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int parity = startColumn; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = startColumn; j <= rowDimension; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent j = startColumn; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int startColumn = j; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i = startColumn; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( endColumnnt j = startColumn; j <= i; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = startColumn; j == endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[startRow - startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][row - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - startColumn] = outData[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  >>  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  &  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[row - startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - row][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][startColumn - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - rowCount] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - startColumn] = subMatrixData[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^subMatrixData[i - startColumn][j - startRow] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i   instanceof   startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  !=  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = parity; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = startColumn; j <= row; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowCountnt j = startColumn; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int j = endColumn; j <= startColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = startColumn; j < endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[roundingMode - startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][parity - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - row] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  <<  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  ==  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startColumn][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][roundingMode - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i - startRow][j - parity] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^subMatrixData[i  ^  startRow][j - startColumn] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( permutation.length * selectedColumns.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( selectedRows.length * permutation.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( parity * selectedColumns.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  ( selectedRows.length * nSum == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( selectedColumns.length * selectedRows.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^if  ( selectedRows * selectedColumns.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( selectedRows.length * selectedColumns.length < 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^if  ( selectedRows.length - selectedColumns.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedColumns.length, selectedColumns.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, permutation.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( parity, selectedColumns.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, parity ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedColumns.length.length, selectedRows ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedColumns.length, selectedRows.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedRows.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( row, selectedColumns.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, startRow ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows, selectedColumns.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < selectedColumns.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( selectedRows.lengthnt i = 0; i < i; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = parity; i < selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < selectedRows.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent j = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < row; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( selectedColumns.lengthnt j = 0; j < i; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = endColumn; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i][j] = outData[selectedRows[i]][selectedColumns[j]];^480^^^^^468^488^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int rowDimension = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int selectedColumns.length = 0; j < j; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = startColumn; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < row; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = scale; i < selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Argument_Swapping]^for  ( selectedColumnsnt j = 0; j < i.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = rowDimension; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int startColumn = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowCountnt j = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < parity; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^subMatrixData[i][j] = subMatrixData[selectedRows[i]][selectedColumns[j]];^480^^^^^468^488^subMatrixData[i][j] = data[selectedRows[i]][selectedColumns[j]];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = startColumn; i < selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < selectedRows.length; i++ )  {^478^^^^^468^488^for  ( int i = 0; i < selectedRows.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[BugLab_Variable_Misuse]^if  (  ( parity < 0 )  ||  ( column < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  ( row < 0 )  ||  ( startRow < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  (  ( column < 0 )  ||  ( row < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row < 0 )  &&  ( column < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row <= 0 )  ||  ( column < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row < 0 )  ||  ( column <= 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  ( row < row )  ||  ( column < row )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  ( row < r )  ||  ( column < r )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int nRows = outData.length;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int nRows = startColumn;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = subMatrix.length.length;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = subMatrix;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( row == 0 )  {^524^^^^^509^539^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( nRows <= 0 )  {^524^^^^^509^539^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( nRows == startRow )  {^524^^^^^509^539^if  ( nRows == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int nCols = outData[0].length;^528^^^^^513^543^int nCols = subMatrix[0].length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nCols = subMatrix[0].length[0].length;^528^^^^^513^543^int nCols = subMatrix[0].length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^int nCols = subMatrix[columnDimension].length;^528^^^^^513^543^int nCols = subMatrix[0].length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( r == 0 )  {^529^^^^^514^544^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( nCols != 0 )  {^529^^^^^514^544^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( nCols == -1 )  {^529^^^^^514^544^if  ( nCols == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrixData[r].length != nCols )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrix[r].length != startRow )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nCols[r].length != subMatrix )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( subMatrix[r].length != subMatrix[r].length )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( subMatrix[r].length == nCols )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int r = 1; r < rowDimension; r++ )  {^533^^^^^518^548^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int r = 1; r <= nRows; r++ )  {^533^^^^^518^548^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int r = j; r < nRows; r++ )  {^533^^^^^518^548^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrix[r].length != parity )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( subMatrix[r].length >= nCols )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int r = columnDimension; r < nRows; r++ )  {^533^^^^^518^548^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrixData == null )  {^539^^^^^524^554^if  ( data == null )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( data != null )  {^539^^^^^524^554^if  ( data == null )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  ( startColumn > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  ( row > 0 ) || ( r > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  (  ( column > 0 ) || ( row > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) && ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row >= 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) || ( column >= 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  ( row > 1 ) || ( column > 1 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData, 0, data, 0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix, 0, subMatrixData, 0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix, 0, data, 0, row ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( data, 0, subMatrix, 0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix.length, 0, data, 0, subMatrix ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, , data, , subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, -1, data, -1, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  ( roundingMode > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row < 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  ( row > 0 ) || ( column == 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  ( row > -1 ) || ( column > -1 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix, columnDimension, data, columnDimension, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  (  ( row + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + startRow )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( r + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + row > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  (  (  ( row + nRows )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  (  (  ( nRows + column )  > this.getRowDimension (  )  )  || ( nCols + row > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( column + nCols > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  && ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  >= this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  (  ( nRows  !=  row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column >= this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols  <  column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < nRows; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < row; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < nRows; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nRows; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + row], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[rowCount + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, row ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, subMatrixData[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( nCols[i], 0, data[row + i], column, subMatrix ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix[i], 0, data[row + nCols], column, i ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( data[i], 0, subMatrix[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix[i], , data[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = endRow; i < nRows; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + startRow], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[scale + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + i], rowDimension, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, data[row + i], column, scale ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( subMatrix[i], 0, data[row + column], i, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( subMatrix[i], rowDimension, data[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  ncols, 0 )  )  {^564^^^^^563^571^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  rowCount, 0 )  )  {^564^^^^^563^571^if  (  !isValidCoordinate (  row, 0 )  )  {^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^BigDecimal[][] out = new BigDecimal[2][ncols];^568^^^^^563^571^BigDecimal[][] out = new BigDecimal[1][ncols];^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( data[row], 0, out[0], 0, nSum ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[row], 0, out[0], 0, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( out[row], 0, data[0], 0, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], -1, out[-1], -1, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], columnDimension, out[columnDimension], columnDimension, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], 1, out[1], 1, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( subMatrixData ) ;^570^^^^^563^571^return new BigMatrixImpl ( out ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( outData ) ;^570^^^^^563^571^return new BigMatrixImpl ( out ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, rowDimension )  )  {^582^^^^^581^591^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  -1, column )  )  {^582^^^^^581^591^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, roundingMode )  )  {^582^^^^^581^591^if  (  !isValidCoordinate (  0, column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^BigDecimal[][] out = new BigDecimal[nRows][j];^586^^^^^581^591^BigDecimal[][] out = new BigDecimal[nRows][1];^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; row < nRows; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < r; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[row][0] = subMatrixData[row][column];^588^^^^^581^591^out[row][0] = data[row][column];^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^out[row][-1] = data[row][column];^588^^^^^581^591^out[row][0] = data[row][column];^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < nRows; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( subMatrixData ) ;^590^^^^^581^591^return new BigMatrixImpl ( out ) ;^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( outData ) ;^590^^^^^581^591^return new BigMatrixImpl ( out ) ;^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  nSum, 0  )   )  {^604^^^^^603^611^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  roundingMode, 0  )   )  {^604^^^^^603^611^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row, roundingMode  )   )  {^604^^^^^603^611^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( data[row], 0, out, 0, nSum ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData[row], 0, out, 0, ncols ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( data[row], 0, ncols, 0, out ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( ncols[row], 0, out, 0, data ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], -1, out, -1, ncols ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[row], col, out, col, ncols ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  nSum, 0  )   )  {^625^^^^^624^634^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  row, nSum  )   )  {^625^^^^^624^634^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  startRow, 0  )   )  {^625^^^^^624^634^if  (  !isValidCoordinate (  row, 0  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt i=0;i<ncols;i++ )  {^630^^^^^624^634^for  ( int i=0;i<ncols;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=-1;i<ncols;i++ )  {^630^^^^^624^634^for  ( int i=0;i<ncols;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = subMatrixData[row][i].doubleValue (  ) ;^631^^^^^624^634^out[i] = data[row][i].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = subMatrix[row][i].doubleValue (  ) ;^631^^^^^624^634^out[i] = data[row][i].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=startRow;i<ncols;i++ )  {^630^^^^^624^634^for  ( int i=0;i<ncols;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getRowAsDoubleArray [RETURN_TYPE] double[]   int row [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate ( 0, row )   )  {^647^^^^^646^656^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate ( j, col )   )  {^647^^^^^646^656^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate ( 0, roundingMode )   )  {^647^^^^^646^656^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate ( -1, col )   )  {^647^^^^^646^656^if  (  !isValidCoordinate ( 0, col )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowCountnt i = 0; i < nRows; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nRowsnt i = 0; i < i; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nRows; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = subMatrixData[i][col];^653^^^^^646^656^out[i] = data[i][col];^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = ; i < nRows; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, roundingMode  )   )  {^670^^^^^669^679^if  (  !isValidCoordinate (  0, col  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  startColumn, col  )   )  {^670^^^^^669^679^if  (  !isValidCoordinate (  0, col  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  (  !isValidCoordinate (  0, r  )   )  {^670^^^^^669^679^if  (  !isValidCoordinate (  0, col  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  (  !isValidCoordinate (  j, col  )   )  {^670^^^^^669^679^if  (  !isValidCoordinate (  0, col  )   )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowDimensionnt i=0;i<nrows;i++ )  {^675^^^^^669^679^for  ( int i=0;i<nrows;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=;i<nrows;i++ )  {^675^^^^^669^679^for  ( int i=0;i<nrows;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = subMatrix[i][col].doubleValue (  ) ;^676^^^^^669^679^out[i] = data[i][col].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = subMatrixData[i][col].doubleValue (  ) ;^676^^^^^669^679^out[i] = data[i][col].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[i] = outData[i][col].doubleValue (  ) ;^676^^^^^669^679^out[i] = data[i][col].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=nSum;i<nrows;i++ )  {^675^^^^^669^679^for  ( int i=0;i<nrows;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnAsDoubleArray [RETURN_TYPE] double[]   int col [VARIABLES] boolean  double[]  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( roundingMode,column )  )  {^698^^^^^696^702^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( row,rowCount )  )  {^698^^^^^696^702^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( parity,column )  )  {^698^^^^^696^702^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !isValidCoordinate ( row,r )  )  {^698^^^^^696^702^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return subMatrix[row][column];^701^^^^^696^702^return data[row][column];^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return getEntry ( parity,column ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return getEntry ( row,nrows ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return getEntry ( nrows,column ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return getEntry ( row,r ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return getEntry ( scale,column ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl out = new BigMatrixImpl ( rowDimension, nRows ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl out = new BigMatrixImpl ( nCols, r ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^BigMatrixImpl out = new BigMatrixImpl ( nRows, nCols ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl out = new BigMatrixImpl ( roundingMode, nRows ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl out = new BigMatrixImpl ( nCols, startRow ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = 0; row < nRows; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < rowCount; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = endColumn; row < nRows; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = 0; col < nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < r; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = startColumn; col < nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^outData[col][row] = subMatrix[row][col];^736^^^^^729^740^outData[col][row] = data[row][col];^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^outData[col][row] = subMatrixData[row][col];^736^^^^^729^740^outData[col][row] = data[row][col];^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = parity; col < nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int scale = 0; col < nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^outData[col][row] = outData[row][col];^736^^^^^729^740^outData[col][row] = data[row][col];^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nSum; row < nRows; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nrows; col < nCols; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( paritysSingular (  )  )  {^763^^^^^759^772^if  ( isSingular (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = startRow; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = d.multiply ( lu[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = det.multiply ( subMatrixData[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^det = lu.multiply ( det[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = sum.multiply ( lu[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = det.multiply ( subMatrix[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return sum;^770^^^^^759^772^return det;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal det =  ( row == 1 )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal det =  ( parity == 1 )  ? sum : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^BigDecimal det =  ( ONE == 1 )  ? parity : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^BigDecimal det =  ( parity >= 1 )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^BigDecimal det =  ( parity == columnCount )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = maxColSum.multiply ( lu[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return maxColSum;^764^^^^^759^772^return ZERO;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rnt i = 0; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^det = det.multiply ( outData[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return sum;^764^^^^^759^772^return ZERO;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal det =  ( rowDimension == 1 )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^BigDecimal det =  ( parity <= 1 )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^BigDecimal det =  ( parity == nCols )  ? ONE : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col; i < this.getRowDimension (  ) ; i++ )  {^767^^^^^759^772^for  ( int i = 0; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return  ( this.getColumnDimension (  )  != this.getRowDimension (  )  ) ;^779^^^^^778^780^return  ( this.getColumnDimension (  )  == this.getRowDimension (  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] isSquare [RETURN_TYPE] boolean   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrixData == null )  {^787^^^^^786^797^if  ( lu == null )  {^[CLASS] BigMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( lu != null )  {^787^^^^^786^797^if  ( lu == null )  {^[CLASS] BigMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return true;^795^^^^^786^797^return false;^[CLASS] BigMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return true;^790^^^^^786^797^return false;^[CLASS] BigMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return false;^792^^^^^786^797^return true;^[CLASS] BigMatrixImpl  [METHOD] isSingular [RETURN_TYPE] boolean   [VARIABLES] InvalidMatrixException  ex  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return subMatrixData.length;^805^^^^^804^806^return data.length;^[CLASS] BigMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return data;^805^^^^^804^806^return data.length;^[CLASS] BigMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return data.length.length;^805^^^^^804^806^return data.length;^[CLASS] BigMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return outData[0].length;^814^^^^^813^815^return data[0].length;^[CLASS] BigMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return data[0].length[0].length;^814^^^^^813^815^return data[0].length;^[CLASS] BigMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return data[columnDimension].length;^814^^^^^813^815^return data[0].length;^[CLASS] BigMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal trace = subMatrixData[0][0];^829^^^^^825^834^BigDecimal trace = data[0][0];^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^BigDecimal trace = data[startColumn][startColumn];^829^^^^^825^834^BigDecimal trace = data[0][0];^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent i = 1; i < this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = r; i < this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = det.add ( data[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = trace.add ( subMatrixData[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^trace = data.add ( trace[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = sum.add ( data[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = trace.add ( subMatrix[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = trace.add ( outData[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = ; i < this.getRowDimension (  ) ; i++ )  {^830^^^^^825^834^for  ( int i = 1; i < this.getRowDimension (  ) ; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^trace = maxColSum.add ( data[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return maxColSum;^833^^^^^825^834^return trace;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( out.length != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( parity != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( v.length.length != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( v != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( v.length == this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt row = 0; row < nRows; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nRowsnt row = 0; row < i; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row > nRows; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < nRows; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < roundingMode; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColsnt i = 0; i < i; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = trace.add ( data[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[row][i].multiply ( out[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( outData[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = data.add ( sum[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = sum.add ( v[row][i].multiply ( data[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = v.add ( data[row][i].multiply ( sum[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = det.add ( data[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( subMatrix[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal sum = trace;^851^^^^^843^858^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( subMatrixData[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rnt i = 0; i < nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[row] = trace;^855^^^^^843^858^out[row] = sum;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = parity; i < nCols; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return v;^857^^^^^843^858^return out;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt i=0;i<bd.length;i++ )  {^869^^^^^867^873^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   double[] v [VARIABLES] boolean  double[]  v  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=r;i<bd.length;i++ )  {^869^^^^^867^873^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   double[] v [VARIABLES] boolean  double[]  v  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=-1;i<bd.length;i++ )  {^869^^^^^867^873^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   double[] v [VARIABLES] boolean  double[]  v  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( out.length != nRows )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( v.length != r )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nrows != nRows )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nRows.length != v )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nRows != v.length )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( v.length <= nRows )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int scale = 0; col < nCols; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < roundingMode; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rnt col = 0; col < nCols; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColsnt col = 0; col < i; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCols; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = columnCount; col < nCols; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < r; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = roundingMode; i < nRows; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = trace.add ( data[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( data[i][col].multiply ( out[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( subMatrixData[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = v.add ( data[i][col].multiply ( sum[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = sum.add ( v[i][col].multiply ( data[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( outData[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.add ( subMatrix[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = data.add ( sum[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[col] = trace;^894^^^^^882^897^out[col] = sum;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal sum = trace;^890^^^^^882^897^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nRows; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = maxColSum.add ( data[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( startRownt i = 0; i < nRows; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = det.add ( data[i][col].multiply ( v[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nSum; col < nCols; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return v;^896^^^^^882^897^return out;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( out.length != nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( b.length != r )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( startRow != nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nRows.length != b )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nRows != b.length )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( b != nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( b.length == nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrix outMatrix = new BigMatrixImpl ( b ) ;^915^^^^^910^922^BigMatrix bMatrix = new BigMatrixImpl ( b ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; row < nRows; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nrows; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = startRow; row < nRows; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[row] = subMatrixData[row][0];^919^^^^^910^922^out[row] = solution[row][0];^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^out[row] = solution[row][scale];^919^^^^^910^922^out[row] = solution[row][0];^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^out[row] = outData[row][0];^919^^^^^910^922^out[row] = solution[row][0];^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return b;^921^^^^^910^922^return out;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( startRownt i=0;i<bd.length;i++ )  {^937^^^^^935^941^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   double[] b [VARIABLES] boolean  double[]  b  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=1;i<bd.length;i++ )  {^937^^^^^935^941^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   double[] b [VARIABLES] boolean  double[]  b  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i=startColumn;i<bd.length;i++ )  {^937^^^^^935^941^for  ( int i=0;i<bd.length;i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   double[] b [VARIABLES] boolean  double[]  b  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  bd  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( b.getRowDimension (  )  >= this.getRowDimension (  )  )  {^955^^^^^940^970^if  ( b.getRowDimension (  )  != this.getRowDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; row < nRowB; row++ )  {^971^^^^^956^986^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nRowB = 0; row < row; row++ )  {^971^^^^^956^986^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRowB; row++ )  {^971^^^^^956^986^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nCols; row < nRowB; row++ )  {^971^^^^^956^986^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = ; row < nRowB; row++ )  {^971^^^^^956^986^for  ( int row = 0; row < nRowB; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nrows; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = endColumn; col < nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], ncols ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], parity ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( selectedRows[row], col ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[row][col] = permutation.getEntry ( b[row], col ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], row ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[row][col] = b.getEntry ( col[row], permutation ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[row][col] = col.getEntry ( permutation[row], b ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = column; col < nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], nSum ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; col < nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < rowCount; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; col < col; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[row][col] = b.getEntry ( permutation[row], nrows ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nrows; col < nColB; col++ )  {^972^^^^^957^987^for  ( int col = 0; col < nColB; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nrows; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt col = 0; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCol = 0; col < col; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  >  ( int col = 0; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = columnCount; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = r + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = col + 1; i < parity; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  &&  ( int i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = col + 1; i == nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = col + 1; i <= nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col ; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int rowCount = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < roundingMode; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt j = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; j < j; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = solution[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( subMatrix[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[i][j] = lu[i][j].subtract ( bp[col][j].multiply ( bp[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = subMatrix[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( subMatrixData[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( outData[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( solution[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = subMatrixData[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < nrows; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rownt j = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = endColumn; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <<  ( int i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col + nRowB; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = outData[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = row + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = col + 1; i < startColumn; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ^  ( int i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col + endColumn; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = nrows; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = startRow; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < r; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( startColumnnt j = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColBnt j = 0; j < i; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = nrows + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ||  ( int i = col + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col + startColumn; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = rowCount; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = nrows - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = nCol - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColnt col = i - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( colnt i = nCol - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = nCol  >  1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = nCol - 1; col > 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nCol ; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= -1; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= nCols; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nCol - 1; col >= ; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; j < nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = subMatrixData[col][j].divide ( lu[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( subMatrixData[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], nRows, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, nSum ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[col][j] = scale[col][j].divide ( lu[col][col], bp, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( solution[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], ncols, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[col][j] = lu[col][j].divide ( bp[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[col][j] = bp[col][j].divide ( lu[col][col], roundingMode, scale ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt i = 0; i < col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nrows; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; i < i; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < parity; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( startColumnnt j = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColBnt j = 0; j < i; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = nSum; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = subMatrixData[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( subMatrixData[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[i][j] = lu[i][j].subtract ( bp[col][j].multiply ( bp[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( subMatrix[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = subMatrix[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( solution[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < row; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt j = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = endRow; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = solution[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( outData[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], nSum, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, nRows ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = ; j < nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = subMatrix[col][j].divide ( lu[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, nrows ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^bp[col][j] = roundingMode[col][j].divide ( lu[col][col], scale, bp ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = 0; j < nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < r; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], rowCount, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, ncols ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, parity ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nSum; i < col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = r; i < col; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < startRow; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt j = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nColB = 0; j < j; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < ncols; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = row - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = nCol  ||  1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < nColB; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = column; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigMatrixImpl outMat = new BigMatrixImpl ( subMatrixData ) ;^998^^^^^983^1013^BigMatrixImpl outMat = new BigMatrixImpl ( bp ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( r != nCols )  {^1024^^^^^1009^1039^if  ( nRows != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nRows != roundingMode )  {^1024^^^^^1009^1039^if  ( nRows != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nCols != nRows )  {^1024^^^^^1009^1039^if  ( nRows != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( nRows == nCols )  {^1024^^^^^1009^1039^if  ( nRows != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nrows; row++ )  {^1031^^^^^1016^1046^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^1031^^^^^1016^1046^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^1031^^^^^1016^1046^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[row] = nSum;^1032^^^^^1017^1047^permutation[row] = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[row] = ncols;^1032^^^^^1017^1047^permutation[row] = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nrows; row < nRows; row++ )  {^1031^^^^^1016^1046^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^parity = 0;^1034^^^^^1019^1049^parity = 1;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( trace.abs (  ) .compareTo ( largest )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( largest.abs (  ) .compareTo ( sum )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( sum.abs (  ) .compareTo ( largest )  != 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( sum.abs (  ) .compareTo ( largest )  == row )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^max = nRows;^1063^^^^^1048^1078^max = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^largest = trace.abs (  ) ;^1062^^^^^1047^1077^largest = sum.abs (  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( outData[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( lu[max][col].abs (  ) .compareTo ( trace )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( TOO_SMALL[max][col].abs (  ) .compareTo ( lu )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  < 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= -1 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nrows != col )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( max != ncols )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( col != max )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( max == col )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < roundingMode; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = max; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^tmp = solution[max][i];^1077^^^^^1062^1092^tmp = lu[max][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[max][i] = outData[col][i];^1078^^^^^1063^1093^lu[max][i] = lu[col][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[col][i] = maxColSum;^1079^^^^^1064^1094^lu[col][i] = tmp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^tmp = subMatrixData[max][i];^1077^^^^^1062^1092^tmp = lu[max][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[max][i] = subMatrixData[col][i];^1078^^^^^1063^1093^lu[max][i] = lu[col][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[col][i] = largest;^1079^^^^^1064^1094^lu[col][i] = tmp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[max] = selectedRows[col];^1082^^^^^1067^1097^permutation[max] = permutation[col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[col] = nSum;^1083^^^^^1068^1098^permutation[col] = temp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^scale = -parity;^1084^^^^^1069^1099^parity = -parity;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal tmp = sum;^1075^^^^^1060^1090^BigDecimal tmp = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int temp = selectedRows[max];^1081^^^^^1066^1096^int temp = permutation[max];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int scale = 0; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < parity; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt col = 0; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <=  ( int col = 0; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nrows; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nRowB; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = nRows; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( sum.abs (  ) .compareTo ( trace )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( sum.abs (  ) .compareTo ( largest )  == endColumn )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^max = nrows;^1063^^^^^1048^1078^max = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( lu[max][col].abs (  ) .compareTo ( maxColSum )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= i )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nSum != col )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( max != nrows )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( max <= col )  {^1074^^^^^1059^1089^if  ( max != col )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rnt i = 0; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColsnt i = 0; i < i; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = columnCount; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^tmp = outData[max][i];^1077^^^^^1062^1092^tmp = lu[max][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[col][i] = trace;^1079^^^^^1064^1094^lu[col][i] = tmp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^tmp = subMatrix[max][i];^1077^^^^^1062^1092^tmp = lu[max][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[col][i] = sum;^1079^^^^^1064^1094^lu[col][i] = tmp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[col] = nrows;^1083^^^^^1068^1098^permutation[col] = temp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^nRows = -parity;^1084^^^^^1069^1099^parity = -parity;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal tmp = trace;^1075^^^^^1060^1090^BigDecimal tmp = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = 0; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt row = 0; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int col = 0; row < row; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( rownt i = 0; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = rowCount; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nSum; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( rownt i = 0; i < i; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nRows; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = largest.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( solution[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = trace.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = lu.subtract ( sum[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( subMatrixData[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = subMatrixData[row][col];^1043^^^^^1028^1058^sum = lu[row][col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = maxColSum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( outData[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( subMatrix[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt i = 0; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rowCount; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = tmp.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = rowCount; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = col; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt row = col; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int row = nRows; row < col; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int col = row; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = col; row == nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = col; row <= nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( sum.abs (  ) .compareTo ( largest )  == nRows )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^largest = maxColSum.abs (  ) ;^1062^^^^^1047^1077^largest = sum.abs (  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < parity; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( colnt i = 0; i < i; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = trace.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( solution[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = maxColSum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( outData[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^sum = lu.subtract ( sum[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = largest.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = tmp;^1058^^^^^1043^1073^lu[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^largest = tmp.abs (  ) ;^1062^^^^^1047^1077^largest = sum.abs (  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^max = temp;^1063^^^^^1048^1078^max = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( sum.abs (  ) .compareTo ( tmp )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( tmp.abs (  ) .compareTo ( largest )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( tempnt i = 0; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nrows; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( subMatrix[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = ncols + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = col + 1; row < nSum; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int col = row + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int row = nRows + 1; row < col; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  &&  ( int row = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = col + 1; row > nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = col + rowCount; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = outData[row][col].divide ( lu[col][col], scale, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], nRows, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, nSum ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^lu[row][col] = roundingMode[row][col].divide ( lu[col][col], scale, lu ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = subMatrixData[row][col].divide ( lu[col][col], scale, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], parity, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = tmp;^1047^^^^^1032^1062^lu[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = subMatrix[row][col];^1054^^^^^1039^1069^sum = lu[row][col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = tmp.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = largest;^1058^^^^^1043^1073^lu[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^permutation[col] = rowCount;^1083^^^^^1068^1098^permutation[col] = temp;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], ncols, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, ncols ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal sum = maxColSum;^1039^^^^^1024^1054^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = temp; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nRowB; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int max = nrows;^1051^^^^^1036^1066^int max = col;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal largest = trace;^1052^^^^^1037^1067^BigDecimal largest = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = ncols; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal tmp = maxColSum;^1075^^^^^1060^1090^BigDecimal tmp = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = j; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = startColumn + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ^  ( int row = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = col ; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = sum.subtract ( subMatrixData[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrix[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( lu[max][col].abs (  ) .compareTo ( tmp )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrixData[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], nSum, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^lu[row][col] = lu[row][col].divide ( lu[col][col], roundingMode, scale ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nColB; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = trace;^1047^^^^^1032^1062^lu[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent i = 0; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = roundingMode; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = col; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = col; row < ncols; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nRowsnt row = col; row < i; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = col; row > nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( sum.abs (  ) .compareTo ( maxColSum )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( sum.abs (  ) .compareTo ( largest )  >= 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( sum.abs (  ) .compareTo ( largest )  == j )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nCols; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = solution[row][col];^1054^^^^^1039^1069^sum = lu[row][col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^largest = largest.abs (  ) ;^1062^^^^^1047^1077^largest = sum.abs (  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nRowB; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( largest.abs (  ) .compareTo ( largest )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt i = 0; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( scalent i = 0; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nCols; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[max][i] = solution[col][i];^1078^^^^^1063^1093^lu[max][i] = lu[col][i];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = parity + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nrows = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = col + 1; row < nrows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nRows = col + 1; row < row; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  !=  ( int row = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = col + 1; row == nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = col + column; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = solution[row][col].divide ( lu[col][col], scale, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], r, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, rowCount ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, parity ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^lu[row][col] = scale[row][col].divide ( lu[col][col], lu, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = solution[row][col];^1043^^^^^1028^1058^sum = lu[row][col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = largest;^1047^^^^^1032^1062^lu[row][col] = sum;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^sum = subMatrixData[row][col];^1054^^^^^1039^1069^sum = lu[row][col];^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^max = nSum;^1063^^^^^1048^1078^max = row;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^nSum = -parity;^1084^^^^^1069^1099^parity = -parity;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, r ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^BigDecimal sum = trace;^1039^^^^^1024^1054^BigDecimal sum = ZERO;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = ; i < row; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int max = parity;^1051^^^^^1036^1066^int max = col;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nColB; i < col; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  &  ( int row = col + 1; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = col + max; row < nRows; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( maxColSum.abs (  ) .compareTo ( largest )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( solution[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, row ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( subMatrix != null )  {^1103^^^^^1100^1118^if  ( data != null )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( data == null )  {^1103^^^^^1100^1118^if  ( data != null )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nSum > 0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( res > 0 ) i.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( i < 0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( i > nRowB ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( r > 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( res > 0 ) j.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( j < 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( j > -1 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < subMatrixData.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( data.lengthnt i = 0; i < i; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = j; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = scale; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nrows; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( i >= 0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( i > nSum ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( j >= 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( j > 1 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt j = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < solution[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int data[0].length = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( data[0].lengthnt j = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( datant j = 0; j < i[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = columnDimension; j < data[columnDimension].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( nSum > 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^res.append ( subMatrixData[i][j] ) ;^1111^^^^^1100^1118^res.append ( data[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < data[1].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^res.append ( subMatrix[i][j] ) ;^1111^^^^^1100^1118^res.append ( data[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int roundingMode = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int data = 0; j < j[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = nCol; j < data[nCol].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = endColumn; j < data[endColumn].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( row > 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = ncols; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^res.append ( outData[i][j] ) ;^1111^^^^^1100^1118^res.append ( data[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( roundingMode > 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < outData.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < data.length.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = ; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nCol; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = max; i < data.length; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( ncols > 0 ) res.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( j > startColumn ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nrowsnt j = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < subMatrix[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < data[-1].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( j == 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = endRow; j < data[endRow].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( paritynt j = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = max; j < data[max].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j = column; j < data[column].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( parity > 0 ) res.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( object != this  )  {^1130^^^^^1129^1150^if  ( object == this  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return false;^1131^^^^^1129^1150^return true;^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( object instanceof BigMatrixImpl != false )  {^1133^^^^^1129^1150^if  ( object instanceof BigMatrixImpl == false )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( object  |  BigMatrixImpl == false )  {^1133^^^^^1129^1150^if  ( object instanceof BigMatrixImpl == false )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^if  ( object instanceof BigMatrixImpl == true )  {^1133^^^^^1129^1150^if  ( object instanceof BigMatrixImpl == false )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return true;^1134^^^^^1129^1150^return false;^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( m.getColumnDimension (  )  != nSum || m.getRowDimension (  )  != nRows )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != ncols )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( nRows.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != m )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( m.getColumnDimension (  )  != nRows || m.getRowDimension (  )  != nCols )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  != nCols && m.getRowDimension (  )  != nRows )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  > nCols || m.getRowDimension (  )  != nRows )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  == nRows )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return true;^1140^^^^^1129^1150^return false;^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( nSum, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( row, rowCount )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( !data[row][col].equals ( m.getEntry ( col, row )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( !data[row][col].equals ( row.getEntry ( m, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return true;^1145^^^^^1129^1150^return false;^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nRows = 0; row < nRows; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < nSum; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nRows = 0; row < row; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = r; row < nRows; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( ncols, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( row, ncols )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^if  ( !data[row][col].equals ( col.getEntry ( row, m )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < roundingMode; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col > nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = roundingMode; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = 1; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( row, nSum )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( rowCount, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( row, nrows )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int parity = 0; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < r; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( r, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( row, parity )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( nRows, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = nRows; row < nRows; row++ )  {^1142^^^^^1129^1150^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = rowDimension; col < nCols; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( !data[row][col].equals ( m.getEntry ( startRow, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return false;^1149^^^^^1129^1150^return true;^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^int ret = 8;^1158^^^^^1157^1170^int ret = 7;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = parity * 31 + nRows;^1161^^^^^1157^1170^ret = ret * 31 + nRows;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 + nrows;^1161^^^^^1157^1170^ret = ret * 31 + nRows;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = nRows * 31 + ret;^1161^^^^^1157^1170^ret = ret * 31 + nRows;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret - 31 + nRows;^1161^^^^^1157^1170^ret = ret * 31 + nRows;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = parity * 31 + nCols;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 + scale;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = nCols * 31 + ret;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret - 31 + nCols;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * row + nCols;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int row = 0; row < r; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row == nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int row = 0; row <= nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for   instanceof   ( int row = 0; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  >=  ( int row = 0; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  !=  ( int row = 0; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <=  ( int row = 0; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = -1; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int ncols = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int col = 0; col < nrows; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols = 0; col < col; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col == nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  >=  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <=  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ||  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <<  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = startRow; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = r * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( ncols+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * outData[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = row * 31 +  ( 11 *  ( ret+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( data+1 )  + 17 *  ( col+1 )  )  * row[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( data+1 )  )  * col[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = data * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * ret[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  &&  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret - 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret + = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ||  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret - = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  <<  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 30 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 10 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 3nColB +  ( nColBnColB *  ( row+nColB )  + nColB7 *  ( col+nColB )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + nrows *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  7 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = nSum * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( rowDimension+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ncols+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * subMatrixData[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = ret * 31 +  ( 11 *  ( col+1 )  + 17 *  ( row+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  >  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret / 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ^  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 32 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( columnDimension *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + roundingMode *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 3r +  ( rr *  ( row+r )  + r7 *  ( col+r )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int col = -1; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int col = 0; col <= nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  >>  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  >  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  <  ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for   instanceof   ( int col = 0; col < nCols; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( nrows+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( r+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^ret = col * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ret+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  |  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret / = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  <=  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( nSum *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 3column +  ( columncolumn *  ( row+column )  + column7 *  ( col+column )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )  + column *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +  ==  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^ret = ret * 31 +   instanceof   ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * ret +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^ret = ret * 31 +  ( 11 *  ( row+1 )   *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int row = 1; row < nRows; row++ )  {^1163^^^^^1157^1170^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return ncols;^1169^^^^^1157^1170^return ret;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return MatrixUtils.createBigIdentityMatrix ( nSum ) ;^1183^^^^^1182^1184^return MatrixUtils.createBigIdentityMatrix ( dimension ) ;^[CLASS] BigMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return MatrixUtils.createBigIdentityMatrix ( r ) ;^1183^^^^^1182^1184^return MatrixUtils.createBigIdentityMatrix ( dimension ) ;^[CLASS] BigMatrixImpl  [METHOD] getIdentity [RETURN_TYPE] BigMatrix   int dimension [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^if  ( outData == null )  {^1214^^^^^1213^1218^if  ( lu == null )  {^[CLASS] BigMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] BigMatrix   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^if  ( lu != null )  {^1214^^^^^1213^1218^if  ( lu == null )  {^[CLASS] BigMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] BigMatrix   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return new BigMatrixImpl ( solution ) ;^1217^^^^^1213^1218^return new BigMatrixImpl ( lu ) ;^[CLASS] BigMatrixImpl  [METHOD] getLUMatrix [RETURN_TYPE] BigMatrix   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( permutation, 0, selectedRows, 0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( selectedRows, 0, out, 0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( permutation, 0, out, 0, ncols ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( out, 0, permutation, 0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( permutation.length, 0, out, 0, permutation ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( permutation, 0, permutation.length, 0, out ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( permutation, , out, , permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( permutation, nRows, out, nRows, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return selectedRows;^1235^^^^^1232^1236^return out;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( ncolsnt i = 0; i < nRows; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nrows; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nRowsnt i = 0; i < i; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nSum; i < nRows; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nRows; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( data[i], 0, subMatrixData[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrix[i], 0, out[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( out[i], 0, data[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^System.arraycopy ( data[i].length[i], 0, out[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[i], temp, out[i], temp, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^System.arraycopy ( data[i], -1, out[i], -1, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^System.arraycopy ( subMatrixData[i], 0, out[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return outData;^1252^^^^^1245^1253^return out;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int nRows = ncols;^1275^^^^^1274^1284^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = in.length.length;^1275^^^^^1274^1284^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = in;^1275^^^^^1274^1284^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nCols = in[0].length[0].length;^1276^^^^^1274^1284^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^int nCols = in[-1].length;^1276^^^^^1274^1284^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nRows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < nrows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < nRows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < nRows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j=0; j < rowCount; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowCountnt j=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols=0; j < j; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColsnt j=0; j < i; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( it j=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j=0; j <= nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( nSumn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^data[i][j] = new BigDecimal ( inn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^data[i][j] = new BigDecimal ( i[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( retn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( ncolsn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=-1; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j=0; j < r; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rnt j=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColst j=0; j < in; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=ncols; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( nrowsn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( parityn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = col; i < nRows; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^int nRows = ncols;^1293^^^^^1292^1302^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = in.length.length;^1293^^^^^1292^1302^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nRows = in;^1293^^^^^1292^1302^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^int nCols = in[0].length[0].length;^1294^^^^^1292^1302^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^int nCols = in[-1].length;^1294^^^^^1292^1302^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( nSumnt i = 0; i < nRows; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < ncols; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nRows; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = nRows; i < nRows; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = roundingMode; i < nRows; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int nSum=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j=0; j < nrows; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( rowDimensionnt j=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( jnt i=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColsnt j=0; j < i; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j=0; j <= nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=temp; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( retn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( rn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^data[i][j] = new BigDecimal ( i[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( nrowsn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=-1; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( int j=0; j < ncols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^for  ( roundingModent j=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( int nCols=0; j < j; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^for  ( nColst j=0; j < in; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^for  ( int j=0; j == nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=1; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( ncolsn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^data[i][j] = new BigDecimal ( inn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^data[i][j] = new BigDecimal ( nSumn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int i = j; i < nRows; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^for  ( int j=j; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row >= ncols || col < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row >= nRows || ncols < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Variable_Misuse]^return ! ( row < 0 || row >= nRows || col < 0 || col >= nrows ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return ! ( col < 0 || row >= nRows || row < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return ! ( row < 0 || row >= nCols || col < 0 || col >= nRows ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return ! ( row < 0 || row >= nRows || nCols < 0 || col >= col ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Argument_Swapping]^return ! ( nCols < 0 || row >= nRows || col < 0 || col >= row ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return ! ( row < 0 && row >= nRows || col < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return ! ( row <= 0 || row >= nRows || col < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row > nRows || col < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row >= nRows || col == 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Operator]^return ! ( row < 0 || row >= nRows || col < 0 || col > nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return ! ( row < 1 || row >= nRows || col < 1 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[BugLab_Wrong_Literal]^return ! ( row < -1 || row >= nRows || col < -1 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
