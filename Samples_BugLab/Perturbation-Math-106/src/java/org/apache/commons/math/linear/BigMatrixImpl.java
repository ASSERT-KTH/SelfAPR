[buglab_swap_variables]^if  ( columnDimension <=0 || rowDimension <=0 )  {^96^^^^^95^102^if  ( rowDimension <=0 || columnDimension <=0 )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(int,int)   int rowDimension int columnDimension [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  columnDimension  parity  roundingMode  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  data  lu  
[buglab_swap_variables]^int nRows = d.length.length;^132^^^^^131^150^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nRows = d;^132^^^^^131^150^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nCols = d[0].length[0].length;^137^^^^^131^150^int nCols = d[0].length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^if  ( nCols[row].length != d )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^if  ( d[row].length != d[row].length )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^if  ( d[row].length[row].length != nCols )  {^143^^^^^131^150^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigMatrixImpl(double[][])   double[][] d [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nRows = d.length.length;^162^^^^^161^180^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nRows = d;^162^^^^^161^180^int nRows = d.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nCols = d[0].length[0].length;^167^^^^^161^180^int nCols = d[0].length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^if  ( d[row].length != d[row].length )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^for  ( int nRows = 1; row < row; row++ )  {^172^^^^^161^180^for  ( int row = 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^if  ( d[row].length[row].length != nCols )  {^173^^^^^161^180^if  ( d[row].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] String[][])   String[][] d [VARIABLES] boolean  String[][]  d  int[]  permutation  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nRows = v.length.length;^192^^^^^191^197^int nRows = v.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^int nRows = v;^192^^^^^191^197^int nRows = v.length;^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^194^^^^^191^197^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] <init> [RETURN_TYPE] BigDecimal[])   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  BigDecimal[]  v  long  serialVersionUID  int  columnDimension  nCols  nRows  parity  roundingMode  row  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  
[buglab_swap_variables]^for  ( int rowCount = 0; row < row; row++ )  {^223^^^^^215^229^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].add ( m.getEntry (  col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].add ( m.getEntry ( col, row )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].add ( m.getEntry ( row )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = col[row][col].add ( m.getEntry ( row, data )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].add ( col.getEntry ( row, m )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].add ( row.getEntry ( m, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = m[row][col].add ( data.getEntry ( row, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = row[row][col].add ( m.getEntry ( data, col )  ) ;^225^^^^^215^229^outData[row][col] = data[row][col].add ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] add [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( int rowCount = 0; row < row; row++ )  {^246^^^^^238^252^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^247^^^^^238^252^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].subtract ( m.getEntry ( col, row )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].subtract ( m.getEntry (  col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].subtract ( m.getEntry ( row )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].subtract ( row.getEntry ( m, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = m[row][col].subtract ( data.getEntry ( row, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = row[row][col].subtract ( m.getEntry ( data, col )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = col[row][col].subtract ( m.getEntry ( row, data )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = data[row][col].subtract ( col.getEntry ( row, m )  ) ;^248^^^^^238^252^outData[row][col] = data[row][col].subtract ( m.getEntry ( row, col )  ) ;^[CLASS] BigMatrixImpl  [METHOD] subtract [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( int rowCount = 0; row < row; row++ )  {^264^^^^^260^270^for  ( int row = 0; row < rowCount; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^265^^^^^260^270^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = dataata[row][col].add ( d ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = d[row][col].add ( data ) ;^266^^^^^260^270^outData[row][col] = data[row][col].add ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarAdd [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( int columnCount = 0; col < col; col++ )  {^282^^^^^277^287^for  ( int col = 0; col < columnCount; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = dataata[row][col].multiply ( d ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^outData[row][col] = d[row][col].multiply ( data ) ;^283^^^^^277^287^outData[row][col] = data[row][col].multiply ( d ) ;^[CLASS] BigMatrixImpl  [METHOD] scalarMultiply [RETURN_TYPE] BigMatrix   BigDecimal d [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  nCols  nRows  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCols; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( nSumnt i = 0; i < i; i++ )  {^308^^^^^296^315^for  ( int i = 0; i < nSum; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = m.add ( data[row][i].multiply ( sum.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = i.add ( data[row][i].multiply ( m.getEntry ( sum, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( data[row][i].multiply ( m.getEntry (  col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( data[row][i].multiply ( i.getEntry ( m, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = data.add ( sum[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = col.add ( data[row][i].multiply ( m.getEntry ( i, sum )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( i[row][i].multiply ( m.getEntry ( data, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( data[row][i].multiply ( m.getEntry ( col, i )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( m[row][i].multiply ( data.getEntry ( i, col )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( col[row][i].multiply ( m.getEntry ( i, data )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = sum.add ( data[row][i].multiply ( col.getEntry ( i, m )  )  ) ;^309^^^^^296^315^sum = sum.add ( data[row][i].multiply ( m.getEntry ( i, col )  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^for  ( nColsnt col = 0; col < i; col++ )  {^306^^^^^296^315^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] multiply [RETURN_TYPE] BigMatrix   BigMatrix m [VARIABLES] boolean  BigMatrix  m  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^d[i][j] = d[i][j].doubleValue (  ) ;^353^^^^^347^357^d[i][j] = data[i][j].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^d[i][j] = dataata[i][j].doubleValue (  ) ;^353^^^^^347^357^d[i][j] = data[i][j].doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDataAsDoubleArray [RETURN_TYPE] double[][]   [VARIABLES] boolean  double[][]  d  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^sum = data.add ( sum[row][col].abs (  )  ) ;^419^^^^^414^424^sum = sum.add ( data[row][col].abs (  )  ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^maxColSum = sum.max ( maxColSum ) ;^421^^^^^414^424^maxColSum = maxColSum.max ( sum ) ;^[CLASS] BigMatrixImpl  [METHOD] getNorm [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  boolean  long  serialVersionUID  int  col  columnCount  columnDimension  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  
[buglab_swap_variables]^if  ( endRow < 0 || startRow > startRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > startColumn || endRow > data.length || endRow < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > endRow || endRow > endColumn.length || startColumn < 0 || startColumn > data || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > data.length || endRow > endRow || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > endRow || endRow > data.length.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( startRow < 0 || startRow > endRow || endRow > data[0].length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^440^441^442^^^438^455^if  ( startRow < 0 || startRow > endRow || endRow > data.length || startColumn < 0 || startColumn > endColumn || endColumn > data[0].length  )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( startRow - endRow+1, endColumn - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - endColumn+1, startRow - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endColumn - startRow+1, endRow - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1 - startColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( startColumn - startRow+1, endColumn - endRow+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startColumn+1, endColumn - startRow+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, startColumn - endColumn+1 ) ;^446^447^^^^438^455^BigMatrixImpl subMatrix = new BigMatrixImpl ( endRow - startRow+1, endColumn - startColumn+1 ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( startRownt i = i; i <= endRow; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( endRownt i = startRow; i <= i; i++ )  {^449^^^^^438^455^for  ( int i = startRow; i <= endRow; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( startColumnnt j = i; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( int startColumn = j; j <= endColumn; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( int endColumn = startColumn; j <= j; j++ )  {^450^^^^^438^455^for  ( int j = startColumn; j <= endColumn; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^subMatrixData[i - startColumn][j - startRow] = data[i][j];^451^^^^^438^455^subMatrixData[i - startRow][j - startColumn] = data[i][j];^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int startRow int endRow int startColumn int endColumn [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( selectedRows.length.length * selectedColumns.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  ( selectedColumns.length * selectedRows.length == 0 )  {^470^^^^^468^488^if  ( selectedRows.length * selectedColumns.length == 0 )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedColumns.length, selectedRows.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl (  selectedColumns.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length.length ) ;^474^475^^^^468^488^BigMatrixImpl subMatrix = new BigMatrixImpl ( selectedRows.length, selectedColumns.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( int selectedColumns.length = 0; j < j; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( selectedColumnsnt j = 0; j < i.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( selectedColumns.lengthnt j = 0; j < i; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^for  ( jnt i = 0; j < selectedColumns.length; j++ )  {^479^^^^^468^488^for  ( int j = 0; j < selectedColumns.length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] getSubMatrix [RETURN_TYPE] BigMatrix   int[] selectedRows int[] selectedColumns [VARIABLES] boolean  BigMatrixImpl  subMatrix  int[]  permutation  selectedColumns  selectedRows  ArrayIndexOutOfBoundsException  e  long  serialVersionUID  int  col  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrixData  
[buglab_swap_variables]^if  (  ( column < 0 )  ||  ( row < 0 )  ) {^519^^^^^504^534^if  (  ( row < 0 )  ||  ( column < 0 )  ) {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = subMatrix.length.length;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = subMatrix;^523^^^^^508^538^int nRows = subMatrix.length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^int nCols = subMatrix[0].length[0].length;^528^^^^^513^543^int nCols = subMatrix[0].length;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nCols[r].length != subMatrix )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( subMatrix[r].length != subMatrix[r].length )  {^534^^^^^519^549^if  ( subMatrix[r].length != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = 1; r < r; r++ )  {^533^^^^^518^548^for  ( int r = 1; r < nRows; r++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  (  ( column > 0 ) || ( row > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^540^541^^^^525^555^if  (  ( row > 0 ) || ( column > 0 )  )  throw new MatrixIndexException ( "matrix must be initialized to perfom this method" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data, 0, subMatrix, 0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy (  0, data, 0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0, subMatrix.length, 0, data ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0,  0, subMatrix.length ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix.length, 0, data, 0, subMatrix ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix, 0, data, 0 ) ;^543^^^^^528^558^System.arraycopy ( subMatrix, 0, data, 0, subMatrix.length ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  (  (  ( nCols + row )  > this.getRowDimension (  )  )  || ( nRows + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  (  (  ( nRows + nCols )  > this.getRowDimension (  )  )  || ( row + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  (  (  ( nRows + column )  > this.getRowDimension (  )  )  || ( nCols + row > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^545^546^547^548^^530^560^if  (  (  ( nRows + row )  > this.getRowDimension (  )  )  || ( nCols + column > this.getColumnDimension (  )  )  ) throw new MatrixIndexException ( "invalid row or column index selection" ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^549^^^^^534^564^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( i[i], 0, data[row + subMatrix], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i],  nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i], column ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( column[i], 0, data[row + i], subMatrix, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + nCols], column, i ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + column], i, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( subMatrix[i], 0, data[row + i], nCols, column ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[i], 0, subMatrix[row + i], column, nCols ) ;^550^^^^^535^565^System.arraycopy ( subMatrix[i], 0, data[row + i], column, nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] setSubMatrix [RETURN_TYPE] void   BigDecimal[][] subMatrix int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( out[row], 0, data[0], 0, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[row], 0[0], 0, ncols ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, out[0], 0 ) ;^569^^^^^563^571^System.arraycopy ( data[row], 0, out[0], 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRowMatrix [RETURN_TYPE] BigMatrix   int row [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^587^^^^^581^591^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumnMatrix [RETURN_TYPE] BigMatrix   int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, ncols, 0, out ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[row], 0,  0, ncols ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[row], 0, out, 0 ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( out[row], 0, data, 0, ncols ) ;^609^^^^^603^611^System.arraycopy ( data[row], 0, out, 0, ncols ) ;^[CLASS] BigMatrixImpl  [METHOD] getRow [RETURN_TYPE] BigDecimal[]   int row [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^652^^^^^646^656^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] getColumn [RETURN_TYPE] BigDecimal[]   int col [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !isValidCoordinate ( column )  )  {^698^^^^^696^702^if  ( !isValidCoordinate ( row,column )  )  {^[CLASS] BigMatrixImpl  [METHOD] getEntry [RETURN_TYPE] BigDecimal   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^return getEntry ( column ) .doubleValue (  ) ;^721^^^^^720^722^return getEntry ( row,column ) .doubleValue (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getEntryAsDouble [RETURN_TYPE] double   int row int column [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl out = new BigMatrixImpl ( nRows, nCols ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl out = new BigMatrixImpl (  nRows ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^BigMatrixImpl out = new BigMatrixImpl ( nCols ) ;^732^^^^^729^740^BigMatrixImpl out = new BigMatrixImpl ( nCols, nRows ) ;^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^734^^^^^729^740^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^735^^^^^729^740^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] transpose [RETURN_TYPE] BigMatrix   [VARIABLES] boolean  BigMatrixImpl  out  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^det = lu.multiply ( det[i][i] ) ;^768^^^^^759^772^det = det.multiply ( lu[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^BigDecimal det =  ( ONE == 1 )  ? parity : ONE.negate (  ) ;^766^^^^^759^772^BigDecimal det =  ( parity == 1 )  ? ONE : ONE.negate (  ) ;^[CLASS] BigMatrixImpl  [METHOD] getDeterminant [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^return data;^805^^^^^804^806^return data.length;^[CLASS] BigMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^return data.length.length;^805^^^^^804^806^return data.length;^[CLASS] BigMatrixImpl  [METHOD] getRowDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^return data[0].length[0].length;^814^^^^^813^815^return data[0].length;^[CLASS] BigMatrixImpl  [METHOD] getColumnDimension [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^trace = data.add ( trace[i][i] ) ;^831^^^^^825^834^trace = trace.add ( data[i][i] ) ;^[CLASS] BigMatrixImpl  [METHOD] getTrace [RETURN_TYPE] BigDecimal   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( v.length.length != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( v != this.getColumnDimension (  )  )  {^844^^^^^843^858^if  ( v.length != this.getColumnDimension (  )  )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt row = 0; row < i; row++ )  {^850^^^^^843^858^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColsnt i = 0; i < i; i++ )  {^852^^^^^843^858^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = v.add ( data[row][i].multiply ( sum[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = data.add ( sum[row][i].multiply ( v[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = sum.add ( v[row][i].multiply ( data[i] )  ) ;^853^^^^^843^858^sum = sum.add ( data[row][i].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] operate [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nRows.length != v )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nRows != v.length )  {^884^^^^^882^897^if  ( v.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColsnt col = 0; col < i; col++ )  {^889^^^^^882^897^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = sum.add ( v[i][col].multiply ( data[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^891^^^^^882^897^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = v.add ( data[i][col].multiply ( sum[i] )  ) ;^892^^^^^882^897^sum = sum.add ( data[i][col].multiply ( v[i] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] preMultiply [RETURN_TYPE] BigDecimal[]   BigDecimal[] v [VARIABLES] boolean  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  out  v  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( b.length.length != nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nRows != b.length )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( b != nRows )  {^912^^^^^910^922^if  ( b.length != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^918^^^^^910^922^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigDecimal[]   BigDecimal[] b [VARIABLES] boolean  BigMatrix  bMatrix  int[]  permutation  selectedColumns  selectedRows  BigDecimal[]  b  out  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCols  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[row][col] = b.getEntry ( permutation[row] ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[row][col] = permutation.getEntry ( b[row], col ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[row][col] = col.getEntry ( permutation[row], b ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[row][col] = b.getEntry ( col[row], permutation ) ;^973^^^^^958^988^bp[row][col] = b.getEntry ( permutation[row], col ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCol; col++ )  {^978^^^^^963^993^for  ( int col = 0; col < nCol; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt i = i + 1; i < nCol; i++ )  {^979^^^^^964^994^for  ( int i = col + 1; i < nCol; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColBnt j = 0; j < i; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jnt i = 0; j < nColB; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[i][j] = lu[i][j].subtract ( bp[col][j].multiply ( bp[i][col] )  ) ;^981^^^^^966^996^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nColB = 0; j < j; j++ )  {^980^^^^^965^995^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCol = col - 1; col >= 0; col-- )  {^987^^^^^972^1002^for  ( int col = nCol - 1; col >= 0; col-- )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nColB = 0; j < j; j++ )  {^988^^^^^973^1003^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = lu[col][j].divide ( bp[col][col], scale, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = bp[col][j].divide ( lu[col][col],  roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = bp[col][j].divide ( roundingMode[col][col], scale, lu ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = bp[col][j].divide ( lu[col][col], scale ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = roundingMode[col][j].divide ( lu[col][col], scale, bp ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt i = 0; i < i; i++ )  {^991^^^^^976^1006^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jnt i = 0; j < nColB; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[i][j] = lu[i][j].subtract ( bp[col][j].multiply ( bp[i][col] )  ) ;^993^^^^^978^1008^bp[i][j] = bp[i][j].subtract ( bp[col][j].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nColB = 0; j < j; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColBnt j = 0; j < i; j++ )  {^992^^^^^977^1007^for  ( int j = 0; j < nColB; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = scale[col][j].divide ( lu[col][col], bp, roundingMode ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^bp[col][j] = bp[col][j].divide ( lu[col][col], roundingMode, scale ) ;^989^^^^^974^1004^bp[col][j] = bp[col][j].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] solve [RETURN_TYPE] BigMatrix   BigMatrix b [VARIABLES] boolean  BigMatrix  b  BigMatrixImpl  outMat  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  maxColSum  sum  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nCols != nRows )  {^1024^^^^^1009^1039^if  ( nRows != nCols )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = 0; row < row; row++ )  {^1031^^^^^1016^1046^for  ( int row = 0; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( largest.abs (  ) .compareTo ( sum )  == 1 )  {^1061^^^^^1046^1076^if  ( sum.abs (  ) .compareTo ( largest )  == 1 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt i = 0; col < nCols; col++ )  {^1037^^^^^1022^1052^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( TOO_SMALL[max][col].abs (  ) .compareTo ( lu )  <= 0 )  {^1068^^^^^1053^1083^if  ( lu[max][col].abs (  ) .compareTo ( TOO_SMALL )  <= 0 )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColsnt i = 0; i < i; i++ )  {^1076^^^^^1061^1091^for  ( int i = 0; i < nCols; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( rownt i = 0; row < col; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt row = 0; row < i; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( rownt i = 0; i < i; i++ )  {^1044^^^^^1029^1059^for  ( int i = 0; i < row; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = lu.subtract ( sum[row][i].multiply ( lu[i][col] )  ) ;^1045^^^^^1030^1060^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int col = row; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int row = nRows; row < col; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt row = i; row < nRows; row++ )  {^1053^^^^^1038^1068^for  ( int row = col; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( colnt i = 0; i < i; i++ )  {^1055^^^^^1040^1070^for  ( int i = 0; i < col; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^sum = lu.subtract ( sum[row][i].multiply ( lu[i][col] )  ) ;^1056^^^^^1041^1071^sum = sum.subtract ( lu[row][i].multiply ( lu[i][col] )  ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int row = nRows + 1; row < col; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nRows = col + 1; row < row; row++ )  {^1088^^^^^1073^1103^for  ( int row = col + 1; row < nRows; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^lu[row][col] = scale[row][col].divide ( lu[col][col], lu, roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^lu[row][col] = lu[row][col].divide ( lu[col][col],  roundingMode ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^lu[row][col] = lu[row][col].divide ( lu[col][col], roundingMode, scale ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^lu[row][col] = lu[row][col].divide ( lu[col][col], scale ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^lu[row][col] = roundingMode[row][col].divide ( lu[col][col], scale, lu ) ;^1089^^^^^1074^1104^lu[row][col] = lu[row][col].divide ( lu[col][col], scale, roundingMode ) ;^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int col = 0; row < row; row++ )  {^1042^^^^^1027^1057^for  ( int row = 0; row < col; row++ )  {^[CLASS] BigMatrixImpl  [METHOD] luDecompose [RETURN_TYPE] void   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( res > 0 ) i.append ( "," ) ;^1105^1106^^^^1100^1118^if  ( i > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( res > 0 ) j.append ( "," ) ;^1109^1110^^^^1100^1118^if  ( j > 0 ) res.append ( "," ) ;^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int i = 0; i < data; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jnt i = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( data[0].lengthnt j = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( datant j = 0; j < i[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int data[0].length = 0; j < data[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( data.lengthnt i = 0; i < i; i++ )  {^1104^^^^^1100^1118^for  ( int i = 0; i < data.length; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int data = 0; j < j[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int j = 0; j < data[0].length[0].length; j++ )  {^1108^^^^^1100^1118^for  ( int j = 0; j < data[0].length; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  res  boolean  int[]  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nRows.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != m )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( nCols.getColumnDimension (  )  != m || m.getRowDimension (  )  != nRows )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( m.getColumnDimension (  )  != nRows || m.getRowDimension (  )  != nCols )  {^1139^^^^^1129^1150^if  ( m.getColumnDimension (  )  != nCols || m.getRowDimension (  )  != nRows )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !data[row][col].equals ( m.getEntry (  col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !data[row][col].equals ( m.getEntry ( row )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !data[row][col].equals ( col.getEntry ( row, m )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !data[row][col].equals ( m.getEntry ( col, row )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^if  ( !data[row][col].equals ( row.getEntry ( m, col )  )  )  {^1144^^^^^1129^1150^if  ( !data[row][col].equals ( m.getEntry ( row, col )  )  )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^1143^^^^^1129^1150^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] equals [RETURN_TYPE] boolean   Object object [VARIABLES] boolean  BigMatrix  m  int[]  permutation  selectedColumns  selectedRows  Object  object  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = nRows * 31 + ret;^1161^^^^^1157^1170^ret = ret * 31 + nRows;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = nCols * 31 + ret;^1162^^^^^1157^1170^ret = ret * 31 + nCols;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols = 0; col < col; col++ )  {^1164^^^^^1157^1170^for  ( int col = 0; col < nCols; col++ )  {^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = data * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * ret[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = row * 31 +  ( 11 *  ( ret+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = col * 31 +  ( 11 *  ( row+1 )  + 17 *  ( ret+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = ret * 31 +  ( 11 *  ( col+1 )  + 17 *  ( row+1 )  )  * data[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^ret = ret * 31 +  ( 11 *  ( data+1 )  + 17 *  ( col+1 )  )  * row[row][col].hashCode (  ) ;^1165^1166^^^^1157^1170^ret = ret * 31 +  ( 11 *  ( row+1 )  + 17 *  ( col+1 )  )  * data[row][col].hashCode (  ) ;^[CLASS] BigMatrixImpl  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] int[]  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( out, 0, permutation, 0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( permutation, 0,  0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy (  0, out, 0, permutation.length ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( permutation.length, 0, out, 0, permutation ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( permutation, 0, out, 0 ) ;^1234^^^^^1232^1236^System.arraycopy ( permutation, 0, out, 0, permutation.length ) ;^[CLASS] BigMatrixImpl  [METHOD] getPermutation [RETURN_TYPE] int[]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^1249^^^^^1245^1253^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( out[i], 0, data[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[i], 0[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[i], 0, out[i], 0[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^System.arraycopy ( data[i], 0, data[i].length[i], 0, data[i].length ) ;^1250^^^^^1245^1253^System.arraycopy ( data[i], 0, out[i], 0, data[i].length ) ;^[CLASS] BigMatrixImpl  [METHOD] copyOut [RETURN_TYPE] BigDecimal[][]   [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = in.length.length;^1275^^^^^1274^1284^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = in;^1275^^^^^1274^1284^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nCols = in[0].length[0].length;^1276^^^^^1274^1284^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowst i = 0; i < in; i++ )  {^1278^^^^^1274^1284^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jnt i=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColst j=0; j < in; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( innt j=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jt in=0; j < nCols; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^data[i][j] = new BigDecimal ( i[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols=0; j < j; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColsnt j=0; j < i; j++ )  {^1279^^^^^1274^1284^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^data[i][j] = new BigDecimal ( inn[i][j] ) ;^1280^^^^^1274^1284^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   double[][] in [VARIABLES] boolean  double[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = in.length.length;^1293^^^^^1292^1302^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nRows = in;^1293^^^^^1292^1302^int nRows = in.length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^int nCols = in[0].length[0].length;^1294^^^^^1292^1302^int nCols = in[0].length;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nRowsnt i = 0; i < i; i++ )  {^1296^^^^^1292^1302^for  ( int i = 0; i < nRows; i++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jt in=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( int nCols=0; j < j; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( jnt i=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( it j=0; j < nCols; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^data[i][j] = new BigDecimal ( inn[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^data[i][j] = new BigDecimal ( i[i][j] ) ;^1298^^^^^1292^1302^data[i][j] = new BigDecimal ( in[i][j] ) ;^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^for  ( nColst j=0; j < in; j++ )  {^1297^^^^^1292^1302^for  ( int j=0; j < nCols; j++ )  {^[CLASS] BigMatrixImpl  [METHOD] copyIn [RETURN_TYPE] void   String[][] in [VARIABLES] boolean  String[][]  in  int[]  out  permutation  selectedColumns  selectedRows  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^return ! ( col < 0 || row >= nRows || row < 0 || col >= nCols ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
[buglab_swap_variables]^return ! ( row < 0 || row >= nCols || col < 0 || col >= nRows ) ;^1315^^^^^1311^1316^return ! ( row < 0 || row >= nRows || col < 0 || col >= nCols ) ;^[CLASS] BigMatrixImpl  [METHOD] isValidCoordinate [RETURN_TYPE] boolean   int row int col [VARIABLES] int[]  out  permutation  selectedColumns  selectedRows  boolean  long  serialVersionUID  int  col  column  columnCount  columnDimension  dimension  endColumn  endRow  i  j  max  nCol  nColB  nCols  nRowB  nRows  nSum  ncols  nrows  parity  r  ret  roundingMode  row  rowCount  rowDimension  scale  startColumn  startRow  temp  BigDecimal  ONE  TOO_SMALL  ZERO  d  det  largest  maxColSum  sum  tmp  trace  BigDecimal[][]  bp  d  data  in  lu  out  outData  solution  subMatrix  subMatrixData  
