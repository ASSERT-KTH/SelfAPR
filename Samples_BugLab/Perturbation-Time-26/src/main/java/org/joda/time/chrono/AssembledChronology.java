[buglab_swap_variables]^if  (  ( iBase = base )  != null )  {^107^^^^^105^111^if  (  ( base = iBase )  != null )  {^[CLASS] AssembledChronology Fields  [METHOD] getZone [RETURN_TYPE] DateTimeZone   [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  iBaseFlags  
[buglab_swap_variables]^if  (  ( iBase = base )  != null &&  ( iBaseFlags & 6 )  == 6 )  {^118^^^^^113^123^if  (  ( base = iBase )  != null &&  ( iBaseFlags & 6 )  == 6 )  {^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return dayOfMonth.getDateTimeMillis ( year, monthOfYear, base, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( dayOfMonth, monthOfYear, year, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis (  monthOfYear, dayOfMonth, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, millisOfDay, dayOfMonth, monthOfYear ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year,  dayOfMonth, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear,  millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( millisOfDay, monthOfYear, dayOfMonth, year ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, millisOfDay, dayOfMonth ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return year.getDateTimeMillis ( base, monthOfYear, dayOfMonth, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, dayOfMonth, monthOfYear, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return monthOfYear.getDateTimeMillis ( year, base, dayOfMonth, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( monthOfYear, year, dayOfMonth, millisOfDay ) ;^120^^^^^113^123^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, millisOfDay ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  iBaseFlags  millisOfDay  monthOfYear  year  
[buglab_swap_variables]^if  (  ( iBaseFlags = iBase )  != null &&  ( base & 5 )  == 5 )  {^131^^^^^125^138^if  (  ( base = iBase )  != null &&  ( iBaseFlags & 5 )  == 5 )  {^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  (  ( iBase = base )  != null &&  ( iBaseFlags & 5 )  == 5 )  {^131^^^^^125^138^if  (  ( base = iBase )  != null &&  ( iBaseFlags & 5 )  == 5 )  {^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return secondOfMinute.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, base, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( dayOfMonth, monthOfYear, year, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis (  monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, minuteOfHour, dayOfMonth, hourOfDay, monthOfYear, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year,  dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, secondOfMinute, hourOfDay, minuteOfHour, dayOfMonth, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear,  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, hourOfDay, dayOfMonth, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth,  minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, secondOfMinute, minuteOfHour, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay,  secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, millisOfSecond, secondOfMinute ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour,  millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( millisOfSecond, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, year ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return minuteOfHour.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, base, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, dayOfMonth, monthOfYear, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( hourOfDay, monthOfYear, dayOfMonth, year, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, millisOfSecond, secondOfMinute, minuteOfHour ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, secondOfMinute, dayOfMonth, hourOfDay, minuteOfHour, monthOfYear, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return hourOfDay.getDateTimeMillis ( year, monthOfYear, dayOfMonth, base, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( secondOfMinute, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, year, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, hourOfDay, dayOfMonth, monthOfYear, minuteOfHour, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, minuteOfHour, hourOfDay, secondOfMinute, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, millisOfSecond, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, monthOfYear ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, secondOfMinute, minuteOfHour, hourOfDay, millisOfSecond ) ;^133^134^^^^125^138^return base.getDateTimeMillis ( year, monthOfYear, dayOfMonth, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  (  ( iBase = base )  != null &&  ( iBaseFlags & 1 )  == 1 )  {^146^^^^^140^153^if  (  ( base = iBase )  != null &&  ( iBaseFlags & 1 )  == 1 )  {^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return minuteOfHour.getDateTimeMillis ( instant, hourOfDay, base, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( hourOfDay, instant, minuteOfHour, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis (  hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, minuteOfHour, hourOfDay, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant,  minuteOfHour, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay, secondOfMinute, minuteOfHour, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay,  secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour,  millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, millisOfSecond, minuteOfHour, secondOfMinute, hourOfDay ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return secondOfMinute.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, base, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( millisOfSecond, hourOfDay, minuteOfHour, secondOfMinute, instant ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay, millisOfSecond, secondOfMinute, minuteOfHour ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, millisOfSecond, secondOfMinute ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return millisOfSecond.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, base ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return instant.getDateTimeMillis ( base, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( minuteOfHour, hourOfDay, instant, secondOfMinute, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^return base.getDateTimeMillis ( secondOfMinute, hourOfDay, minuteOfHour, instant, millisOfSecond ) ;^148^149^^^^140^153^return base.getDateTimeMillis ( instant, hourOfDay, minuteOfHour, secondOfMinute, millisOfSecond ) ;^[CLASS] AssembledChronology Fields  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillis    =  ( f = fields.millis.millis )     != null ? f : super.millis (  ) ;^327^^^^^312^342^iMillis    =  ( f = fields.millis )     != null ? f : super.millis (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillis    =  ( f = fields )     != null ? f : super.millis (  ) ;^327^^^^^312^342^iMillis    =  ( f = fields.millis )     != null ? f : super.millis (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSeconds   =  ( f = fields.seconds.seconds )    != null ? f : super.seconds (  ) ;^328^^^^^313^343^iSeconds   =  ( f = fields.seconds )    != null ? f : super.seconds (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSeconds   =  ( f = fields )    != null ? f : super.seconds (  ) ;^328^^^^^313^343^iSeconds   =  ( f = fields.seconds )    != null ? f : super.seconds (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinutes   =  ( f = fields.minutes.minutes )    != null ? f : super.minutes (  ) ;^329^^^^^314^344^iMinutes   =  ( f = fields.minutes )    != null ? f : super.minutes (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinutes   =  ( f = fields )    != null ? f : super.minutes (  ) ;^329^^^^^314^344^iMinutes   =  ( f = fields.minutes )    != null ? f : super.minutes (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHours     =  ( f = fields.hours.hours )      != null ? f : super.hours (  ) ;^330^^^^^315^345^iHours     =  ( f = fields.hours )      != null ? f : super.hours (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHours     =  ( f = fields )      != null ? f : super.hours (  ) ;^330^^^^^315^345^iHours     =  ( f = fields.hours )      != null ? f : super.hours (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHalfdays  =  ( f = fields.halfdays.halfdays )   != null ? f : super.halfdays (  ) ;^331^^^^^316^346^iHalfdays  =  ( f = fields.halfdays )   != null ? f : super.halfdays (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHalfdays  =  ( f = fields )   != null ? f : super.halfdays (  ) ;^331^^^^^316^346^iHalfdays  =  ( f = fields.halfdays )   != null ? f : super.halfdays (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDays      =  ( f = fields.days.days )       != null ? f : super.days (  ) ;^332^^^^^317^347^iDays      =  ( f = fields.days )       != null ? f : super.days (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDays      =  ( f = fields )       != null ? f : super.days (  ) ;^332^^^^^317^347^iDays      =  ( f = fields.days )       != null ? f : super.days (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeeks     =  ( f = fields.weeks.weeks )      != null ? f : super.weeks (  ) ;^333^^^^^318^348^iWeeks     =  ( f = fields.weeks )      != null ? f : super.weeks (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeeks     =  ( f = fields )      != null ? f : super.weeks (  ) ;^333^^^^^318^348^iWeeks     =  ( f = fields.weeks )      != null ? f : super.weeks (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyears =  ( f = fields.weekyears.weekyears )  != null ? f : super.weekyears (  ) ;^334^^^^^319^349^iWeekyears =  ( f = fields.weekyears )  != null ? f : super.weekyears (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyears =  ( f = fields )  != null ? f : super.weekyears (  ) ;^334^^^^^319^349^iWeekyears =  ( f = fields.weekyears )  != null ? f : super.weekyears (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMonths    =  ( f = fields.months.months )     != null ? f : super.months (  ) ;^335^^^^^320^350^iMonths    =  ( f = fields.months )     != null ? f : super.months (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMonths    =  ( f = fields )     != null ? f : super.months (  ) ;^335^^^^^320^350^iMonths    =  ( f = fields.months )     != null ? f : super.months (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYears     =  ( f = fields.years.years )      != null ? f : super.years (  ) ;^336^^^^^321^351^iYears     =  ( f = fields.years )      != null ? f : super.years (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYears     =  ( f = fields )      != null ? f : super.years (  ) ;^336^^^^^321^351^iYears     =  ( f = fields.years )      != null ? f : super.years (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iCenturies =  ( f = fields.centuries.centuries )  != null ? f : super.centuries (  ) ;^337^^^^^322^352^iCenturies =  ( f = fields.centuries )  != null ? f : super.centuries (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iCenturies =  ( f = fields )  != null ? f : super.centuries (  ) ;^337^^^^^322^352^iCenturies =  ( f = fields.centuries )  != null ? f : super.centuries (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iEras      =  ( f = fields.eras.eras )       != null ? f : super.eras (  ) ;^338^^^^^323^353^iEras      =  ( f = fields.eras )       != null ? f : super.eras (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iEras      =  ( f = fields )       != null ? f : super.eras (  ) ;^338^^^^^323^353^iEras      =  ( f = fields.eras )       != null ? f : super.eras (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillisOfSecond     =  ( f = fields.millisOfSecond.millisOfSecond )      != null ? f : super.millisOfSecond (  ) ;^343^^^^^328^358^iMillisOfSecond     =  ( f = fields.millisOfSecond )      != null ? f : super.millisOfSecond (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillisOfSecond     =  ( f = fields )      != null ? f : super.millisOfSecond (  ) ;^343^^^^^328^358^iMillisOfSecond     =  ( f = fields.millisOfSecond )      != null ? f : super.millisOfSecond (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillisOfDay        =  ( f = fields.millisOfDay.millisOfDay )         != null ? f : super.millisOfDay (  ) ;^344^^^^^329^359^iMillisOfDay        =  ( f = fields.millisOfDay )         != null ? f : super.millisOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMillisOfDay        =  ( f = fields )         != null ? f : super.millisOfDay (  ) ;^344^^^^^329^359^iMillisOfDay        =  ( f = fields.millisOfDay )         != null ? f : super.millisOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSecondOfMinute     =  ( f = fields.secondOfMinute.secondOfMinute )      != null ? f : super.secondOfMinute (  ) ;^345^^^^^330^360^iSecondOfMinute     =  ( f = fields.secondOfMinute )      != null ? f : super.secondOfMinute (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSecondOfMinute     =  ( f = fields )      != null ? f : super.secondOfMinute (  ) ;^345^^^^^330^360^iSecondOfMinute     =  ( f = fields.secondOfMinute )      != null ? f : super.secondOfMinute (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSecondOfDay        =  ( f = fields.secondOfDay.secondOfDay )         != null ? f : super.secondOfDay (  ) ;^346^^^^^331^361^iSecondOfDay        =  ( f = fields.secondOfDay )         != null ? f : super.secondOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iSecondOfDay        =  ( f = fields )         != null ? f : super.secondOfDay (  ) ;^346^^^^^331^361^iSecondOfDay        =  ( f = fields.secondOfDay )         != null ? f : super.secondOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinuteOfHour       =  ( f = fields.minuteOfHour.minuteOfHour )        != null ? f : super.minuteOfHour (  ) ;^347^^^^^332^362^iMinuteOfHour       =  ( f = fields.minuteOfHour )        != null ? f : super.minuteOfHour (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinuteOfHour       =  ( f = fields )        != null ? f : super.minuteOfHour (  ) ;^347^^^^^332^362^iMinuteOfHour       =  ( f = fields.minuteOfHour )        != null ? f : super.minuteOfHour (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinuteOfDay        =  ( f = fields.minuteOfDay.minuteOfDay )         != null ? f : super.minuteOfDay (  ) ;^348^^^^^333^363^iMinuteOfDay        =  ( f = fields.minuteOfDay )         != null ? f : super.minuteOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMinuteOfDay        =  ( f = fields )         != null ? f : super.minuteOfDay (  ) ;^348^^^^^333^363^iMinuteOfDay        =  ( f = fields.minuteOfDay )         != null ? f : super.minuteOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHourOfDay          =  ( f = fields.hourOfDay.hourOfDay )           != null ? f : super.hourOfDay (  ) ;^349^^^^^334^364^iHourOfDay          =  ( f = fields.hourOfDay )           != null ? f : super.hourOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHourOfDay          =  ( f = fields )           != null ? f : super.hourOfDay (  ) ;^349^^^^^334^364^iHourOfDay          =  ( f = fields.hourOfDay )           != null ? f : super.hourOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iClockhourOfDay     =  ( f = fields.clockhourOfDay.clockhourOfDay )      != null ? f : super.clockhourOfDay (  ) ;^350^^^^^335^365^iClockhourOfDay     =  ( f = fields.clockhourOfDay )      != null ? f : super.clockhourOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iClockhourOfDay     =  ( f = fields )      != null ? f : super.clockhourOfDay (  ) ;^350^^^^^335^365^iClockhourOfDay     =  ( f = fields.clockhourOfDay )      != null ? f : super.clockhourOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHourOfHalfday      =  ( f = fields.hourOfHalfday.hourOfHalfday )       != null ? f : super.hourOfHalfday (  ) ;^351^^^^^336^366^iHourOfHalfday      =  ( f = fields.hourOfHalfday )       != null ? f : super.hourOfHalfday (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHourOfHalfday      =  ( f = fields )       != null ? f : super.hourOfHalfday (  ) ;^351^^^^^336^366^iHourOfHalfday      =  ( f = fields.hourOfHalfday )       != null ? f : super.hourOfHalfday (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iClockhourOfHalfday =  ( f = fields.clockhourOfHalfday.clockhourOfHalfday )  != null ? f : super.clockhourOfHalfday (  ) ;^352^^^^^337^367^iClockhourOfHalfday =  ( f = fields.clockhourOfHalfday )  != null ? f : super.clockhourOfHalfday (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iClockhourOfHalfday =  ( f = fields )  != null ? f : super.clockhourOfHalfday (  ) ;^352^^^^^337^367^iClockhourOfHalfday =  ( f = fields.clockhourOfHalfday )  != null ? f : super.clockhourOfHalfday (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHalfdayOfDay       =  ( f = fields.halfdayOfDay.halfdayOfDay )        != null ? f : super.halfdayOfDay (  ) ;^353^^^^^338^368^iHalfdayOfDay       =  ( f = fields.halfdayOfDay )        != null ? f : super.halfdayOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iHalfdayOfDay       =  ( f = fields )        != null ? f : super.halfdayOfDay (  ) ;^353^^^^^338^368^iHalfdayOfDay       =  ( f = fields.halfdayOfDay )        != null ? f : super.halfdayOfDay (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfWeek          =  ( f = fields.dayOfWeek.dayOfWeek )           != null ? f : super.dayOfWeek (  ) ;^354^^^^^339^369^iDayOfWeek          =  ( f = fields.dayOfWeek )           != null ? f : super.dayOfWeek (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfWeek          =  ( f = fields )           != null ? f : super.dayOfWeek (  ) ;^354^^^^^339^369^iDayOfWeek          =  ( f = fields.dayOfWeek )           != null ? f : super.dayOfWeek (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfMonth         =  ( f = fields.dayOfMonth.dayOfMonth )          != null ? f : super.dayOfMonth (  ) ;^355^^^^^340^370^iDayOfMonth         =  ( f = fields.dayOfMonth )          != null ? f : super.dayOfMonth (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfMonth         =  ( f = fields )          != null ? f : super.dayOfMonth (  ) ;^355^^^^^340^370^iDayOfMonth         =  ( f = fields.dayOfMonth )          != null ? f : super.dayOfMonth (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfYear          =  ( f = fields.dayOfYear.dayOfYear )           != null ? f : super.dayOfYear (  ) ;^356^^^^^341^371^iDayOfYear          =  ( f = fields.dayOfYear )           != null ? f : super.dayOfYear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iDayOfYear          =  ( f = fields )           != null ? f : super.dayOfYear (  ) ;^356^^^^^341^371^iDayOfYear          =  ( f = fields.dayOfYear )           != null ? f : super.dayOfYear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekOfWeekyear     =  ( f = fields.weekOfWeekyear.weekOfWeekyear )      != null ? f : super.weekOfWeekyear (  ) ;^357^^^^^342^372^iWeekOfWeekyear     =  ( f = fields.weekOfWeekyear )      != null ? f : super.weekOfWeekyear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekOfWeekyear     =  ( f = fields )      != null ? f : super.weekOfWeekyear (  ) ;^357^^^^^342^372^iWeekOfWeekyear     =  ( f = fields.weekOfWeekyear )      != null ? f : super.weekOfWeekyear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyear           =  ( f = fields.weekyear.weekyear )            != null ? f : super.weekyear (  ) ;^358^^^^^343^373^iWeekyear           =  ( f = fields.weekyear )            != null ? f : super.weekyear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyear           =  ( f = fields )            != null ? f : super.weekyear (  ) ;^358^^^^^343^373^iWeekyear           =  ( f = fields.weekyear )            != null ? f : super.weekyear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyearOfCentury  =  ( f = fields.weekyearOfCentury.weekyearOfCentury )   != null ? f : super.weekyearOfCentury (  ) ;^359^^^^^344^374^iWeekyearOfCentury  =  ( f = fields.weekyearOfCentury )   != null ? f : super.weekyearOfCentury (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iWeekyearOfCentury  =  ( f = fields )   != null ? f : super.weekyearOfCentury (  ) ;^359^^^^^344^374^iWeekyearOfCentury  =  ( f = fields.weekyearOfCentury )   != null ? f : super.weekyearOfCentury (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMonthOfYear        =  ( f = fields.monthOfYear.monthOfYear )         != null ? f : super.monthOfYear (  ) ;^360^^^^^345^375^iMonthOfYear        =  ( f = fields.monthOfYear )         != null ? f : super.monthOfYear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iMonthOfYear        =  ( f = fields )         != null ? f : super.monthOfYear (  ) ;^360^^^^^345^375^iMonthOfYear        =  ( f = fields.monthOfYear )         != null ? f : super.monthOfYear (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYear               =  ( f = fields.year.year )                != null ? f : super.year (  ) ;^361^^^^^346^376^iYear               =  ( f = fields.year )                != null ? f : super.year (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYear               =  ( f = fields )                != null ? f : super.year (  ) ;^361^^^^^346^376^iYear               =  ( f = fields.year )                != null ? f : super.year (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYearOfEra          =  ( f = fields.yearOfEra.yearOfEra )           != null ? f : super.yearOfEra (  ) ;^362^^^^^347^377^iYearOfEra          =  ( f = fields.yearOfEra )           != null ? f : super.yearOfEra (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYearOfEra          =  ( f = fields )           != null ? f : super.yearOfEra (  ) ;^362^^^^^347^377^iYearOfEra          =  ( f = fields.yearOfEra )           != null ? f : super.yearOfEra (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYearOfCentury      =  ( f = fields.yearOfCentury.yearOfCentury )       != null ? f : super.yearOfCentury (  ) ;^363^^^^^348^378^iYearOfCentury      =  ( f = fields.yearOfCentury )       != null ? f : super.yearOfCentury (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iYearOfCentury      =  ( f = fields )       != null ? f : super.yearOfCentury (  ) ;^363^^^^^348^378^iYearOfCentury      =  ( f = fields.yearOfCentury )       != null ? f : super.yearOfCentury (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iCenturyOfEra       =  ( f = fields.centuryOfEra.centuryOfEra )        != null ? f : super.centuryOfEra (  ) ;^364^^^^^349^379^iCenturyOfEra       =  ( f = fields.centuryOfEra )        != null ? f : super.centuryOfEra (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iCenturyOfEra       =  ( f = fields )        != null ? f : super.centuryOfEra (  ) ;^364^^^^^349^379^iCenturyOfEra       =  ( f = fields.centuryOfEra )        != null ? f : super.centuryOfEra (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iEra                =  ( f = fields.era.era )                 != null ? f : super.era (  ) ;^365^^^^^350^380^iEra                =  ( f = fields.era )                 != null ? f : super.era (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^iEra                =  ( f = fields )                 != null ? f : super.era (  ) ;^365^^^^^350^380^iEra                =  ( f = fields.era )                 != null ? f : super.era (  ) ;^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^flags = (  ( iHourOfDay      == iMinuteOfHour.hourOfDay (  )       && iBase   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^372^373^374^375^^369^383^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iSecondOfMinute   == iBase.minuteOfHour (  )    && iMinuteOfHour == iBase.secondOfMinute (  )  &&^372^373^374^375^^369^383^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^flags = (  ( iSecondOfMinute      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iHourOfDay == iBase.secondOfMinute (  )  &&^372^373^374^375^^357^387^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^flags = (  ( iBase      == iHourOfDay.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^372^373^374^375^^357^387^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^flags = (  ( iMinuteOfHour      == iBase.hourOfDay (  )       && iHourOfDay   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^372^373^374^375^^357^387^flags = (  ( iHourOfDay      == iBase.hourOfDay (  )       && iMinuteOfHour   == iBase.minuteOfHour (  )    && iSecondOfMinute == iBase.secondOfMinute (  )  &&^[CLASS] AssembledChronology Fields  [METHOD] setFields [RETURN_TYPE] void   [VARIABLES] Fields  fields  boolean  Object  iParam  param  Chronology  base  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millis (  )  )  )  {^445^^^^^430^460^if  ( isSupported ( f = chrono.millis (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.seconds (  )  )  )  {^448^^^^^433^463^if  ( isSupported ( f = chrono.seconds (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minutes (  )  )  )  {^451^^^^^436^466^if  ( isSupported ( f = chrono.minutes (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hours (  )  )  )  {^454^^^^^439^469^if  ( isSupported ( f = chrono.hours (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.halfdays (  )  )  )  {^457^^^^^442^472^if  ( isSupported ( f = chrono.halfdays (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.days (  )  )  )  {^460^^^^^445^475^if  ( isSupported ( f = chrono.days (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weeks (  )  )  )  {^463^^^^^448^478^if  ( isSupported ( f = chrono.weeks (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyears (  )  )  )  {^466^^^^^451^481^if  ( isSupported ( f = chrono.weekyears (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.months (  )  )  )  {^469^^^^^454^484^if  ( isSupported ( f = chrono.months (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.years (  )  )  )  {^472^^^^^457^487^if  ( isSupported ( f = chrono.years (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.centuries (  )  )  )  {^475^^^^^460^490^if  ( isSupported ( f = chrono.centuries (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.eras (  )  )  )  {^478^^^^^463^493^if  ( isSupported ( f = chrono.eras (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millisOfSecond (  )  )  )  {^485^^^^^470^500^if  ( isSupported ( f = chrono.millisOfSecond (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millisOfDay (  )  )  )  {^488^^^^^473^503^if  ( isSupported ( f = chrono.millisOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.secondOfMinute (  )  )  )  {^491^^^^^476^506^if  ( isSupported ( f = chrono.secondOfMinute (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.secondOfDay (  )  )  )  {^494^^^^^479^509^if  ( isSupported ( f = chrono.secondOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minuteOfHour (  )  )  )  {^497^^^^^482^512^if  ( isSupported ( f = chrono.minuteOfHour (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minuteOfDay (  )  )  )  {^500^^^^^485^515^if  ( isSupported ( f = chrono.minuteOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hourOfDay (  )  )  )  {^503^^^^^488^518^if  ( isSupported ( f = chrono.hourOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.clockhourOfDay (  )  )  )  {^506^^^^^491^521^if  ( isSupported ( f = chrono.clockhourOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hourOfHalfday (  )  )  )  {^509^^^^^494^524^if  ( isSupported ( f = chrono.hourOfHalfday (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.clockhourOfHalfday (  )  )  )  {^512^^^^^497^527^if  ( isSupported ( f = chrono.clockhourOfHalfday (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.halfdayOfDay (  )  )  )  {^515^^^^^500^530^if  ( isSupported ( f = chrono.halfdayOfDay (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfWeek (  )  )  )  {^518^^^^^503^533^if  ( isSupported ( f = chrono.dayOfWeek (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfMonth (  )  )  )  {^521^^^^^506^536^if  ( isSupported ( f = chrono.dayOfMonth (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfYear (  )  )  )  {^524^^^^^509^539^if  ( isSupported ( f = chrono.dayOfYear (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekOfWeekyear (  )  )  )  {^527^^^^^512^542^if  ( isSupported ( f = chrono.weekOfWeekyear (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyear (  )  )  )  {^530^^^^^515^545^if  ( isSupported ( f = chrono.weekyear (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyearOfCentury (  )  )  )  {^533^^^^^518^548^if  ( isSupported ( f = chrono.weekyearOfCentury (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.monthOfYear (  )  )  )  {^536^^^^^521^551^if  ( isSupported ( f = chrono.monthOfYear (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.year (  )  )  )  {^539^^^^^524^554^if  ( isSupported ( f = chrono.year (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.yearOfEra (  )  )  )  {^542^^^^^527^557^if  ( isSupported ( f = chrono.yearOfEra (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.yearOfCentury (  )  )  )  {^545^^^^^530^560^if  ( isSupported ( f = chrono.yearOfCentury (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.centuryOfEra (  )  )  )  {^548^^^^^533^563^if  ( isSupported ( f = chrono.centuryOfEra (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.era (  )  )  )  {^551^^^^^536^566^if  ( isSupported ( f = chrono.era (  )  )  )  {^[CLASS] AssembledChronology Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] boolean  Object  iParam  param  Chronology  base  chrono  iBase  DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  iCenturyOfEra  iClockhourOfDay  iClockhourOfHalfday  iDayOfMonth  iDayOfWeek  iDayOfYear  iEra  iHalfdayOfDay  iHourOfDay  iHourOfHalfday  iMillisOfDay  iMillisOfSecond  iMinuteOfDay  iMinuteOfHour  iMonthOfYear  iSecondOfDay  iSecondOfMinute  iWeekOfWeekyear  iWeekyear  iWeekyearOfCentury  iYear  iYearOfCentury  iYearOfEra  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  DurationField  centuries  days  eras  f  halfdays  hours  iCenturies  iDays  iEras  iHalfdays  iHours  iMillis  iMinutes  iMonths  iSeconds  iWeeks  iWeekyears  iYears  millis  minutes  months  seconds  weeks  weekyears  years  long  instant  serialVersionUID  int  dayOfMonth  flags  hourOfDay  iBaseFlags  millisOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millis (  )  )  )  {^445^^^^^430^460^if  ( isSupported ( f = chrono.millis (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.seconds (  )  )  )  {^448^^^^^433^463^if  ( isSupported ( f = chrono.seconds (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minutes (  )  )  )  {^451^^^^^436^466^if  ( isSupported ( f = chrono.minutes (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hours (  )  )  )  {^454^^^^^439^469^if  ( isSupported ( f = chrono.hours (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.halfdays (  )  )  )  {^457^^^^^442^472^if  ( isSupported ( f = chrono.halfdays (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.days (  )  )  )  {^460^^^^^445^475^if  ( isSupported ( f = chrono.days (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weeks (  )  )  )  {^463^^^^^448^478^if  ( isSupported ( f = chrono.weeks (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyears (  )  )  )  {^466^^^^^451^481^if  ( isSupported ( f = chrono.weekyears (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.months (  )  )  )  {^469^^^^^454^484^if  ( isSupported ( f = chrono.months (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.years (  )  )  )  {^472^^^^^457^487^if  ( isSupported ( f = chrono.years (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.centuries (  )  )  )  {^475^^^^^460^490^if  ( isSupported ( f = chrono.centuries (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.eras (  )  )  )  {^478^^^^^463^493^if  ( isSupported ( f = chrono.eras (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millisOfSecond (  )  )  )  {^485^^^^^470^500^if  ( isSupported ( f = chrono.millisOfSecond (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.millisOfDay (  )  )  )  {^488^^^^^473^503^if  ( isSupported ( f = chrono.millisOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.secondOfMinute (  )  )  )  {^491^^^^^476^506^if  ( isSupported ( f = chrono.secondOfMinute (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.secondOfDay (  )  )  )  {^494^^^^^479^509^if  ( isSupported ( f = chrono.secondOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minuteOfHour (  )  )  )  {^497^^^^^482^512^if  ( isSupported ( f = chrono.minuteOfHour (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.minuteOfDay (  )  )  )  {^500^^^^^485^515^if  ( isSupported ( f = chrono.minuteOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hourOfDay (  )  )  )  {^503^^^^^488^518^if  ( isSupported ( f = chrono.hourOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.clockhourOfDay (  )  )  )  {^506^^^^^491^521^if  ( isSupported ( f = chrono.clockhourOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.hourOfHalfday (  )  )  )  {^509^^^^^494^524^if  ( isSupported ( f = chrono.hourOfHalfday (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.clockhourOfHalfday (  )  )  )  {^512^^^^^497^527^if  ( isSupported ( f = chrono.clockhourOfHalfday (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.halfdayOfDay (  )  )  )  {^515^^^^^500^530^if  ( isSupported ( f = chrono.halfdayOfDay (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfWeek (  )  )  )  {^518^^^^^503^533^if  ( isSupported ( f = chrono.dayOfWeek (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfMonth (  )  )  )  {^521^^^^^506^536^if  ( isSupported ( f = chrono.dayOfMonth (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.dayOfYear (  )  )  )  {^524^^^^^509^539^if  ( isSupported ( f = chrono.dayOfYear (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekOfWeekyear (  )  )  )  {^527^^^^^512^542^if  ( isSupported ( f = chrono.weekOfWeekyear (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyear (  )  )  )  {^530^^^^^515^545^if  ( isSupported ( f = chrono.weekyear (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.weekyearOfCentury (  )  )  )  {^533^^^^^518^548^if  ( isSupported ( f = chrono.weekyearOfCentury (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.monthOfYear (  )  )  )  {^536^^^^^521^551^if  ( isSupported ( f = chrono.monthOfYear (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.year (  )  )  )  {^539^^^^^524^554^if  ( isSupported ( f = chrono.year (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.yearOfEra (  )  )  )  {^542^^^^^527^557^if  ( isSupported ( f = chrono.yearOfEra (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.yearOfCentury (  )  )  )  {^545^^^^^530^560^if  ( isSupported ( f = chrono.yearOfCentury (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.centuryOfEra (  )  )  )  {^548^^^^^533^563^if  ( isSupported ( f = chrono.centuryOfEra (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
[buglab_swap_variables]^if  ( isSupported ( chrono = f.era (  )  )  )  {^551^^^^^536^566^if  ( isSupported ( f = chrono.era (  )  )  )  {^[CLASS] Fields  [METHOD] copyFieldsFrom [RETURN_TYPE] void   Chronology chrono [VARIABLES] DateTimeField  centuryOfEra  clockhourOfDay  clockhourOfHalfday  dayOfMonth  dayOfWeek  dayOfYear  era  f  halfdayOfDay  hourOfDay  hourOfHalfday  millisOfDay  millisOfSecond  minuteOfDay  minuteOfHour  monthOfYear  secondOfDay  secondOfMinute  weekOfWeekyear  weekyear  weekyearOfCentury  year  yearOfCentury  yearOfEra  Chronology  chrono  boolean  DurationField  centuries  days  eras  f  halfdays  hours  millis  minutes  months  seconds  weeks  weekyears  years  
