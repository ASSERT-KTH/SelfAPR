[BugLab_Variable_Misuse]^iEraText = iEraText;^52^^^^^50^53^iEraText = text;^[CLASS] BasicSingleEraDateTimeField  [METHOD] <init> [RETURN_TYPE] String)   String text [VARIABLES] int  ERA_VALUE  String  iEraText  text  boolean  
[BugLab_Wrong_Literal]^return true;^57^^^^^56^58^return false;^[CLASS] BasicSingleEraDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] int  ERA_VALUE  String  iEraText  text  boolean  
[BugLab_Argument_Swapping]^FieldUtils.verifyValueBounds ( this, ERA_VALUE, era, ERA_VALUE ) ;^67^^^^^66^69^FieldUtils.verifyValueBounds ( this, era, ERA_VALUE, ERA_VALUE ) ;^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Argument_Swapping]^if  ( text.equals ( iEraText )  == false && "1".equals ( text )  == false )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Wrong_Operator]^if  ( iEraText.equals ( text )  == false || "1".equals ( text )  == false )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Wrong_Operator]^if  ( iEraText.equals ( text )  != false && "1".equals ( text )  == false )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Wrong_Operator]^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  != false )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Wrong_Literal]^if  ( iEraText.equals ( text )  == true && "1".equals ( text )  == true )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Variable_Misuse]^if  ( iEraText.equals ( iEraText )  == false && "1".equals ( text )  == false )  {^73^^^^^72^77^if  ( iEraText.equals ( text )  == false && "1".equals ( text )  == false )  {^[CLASS] BasicSingleEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  long  instant  
[BugLab_Variable_Misuse]^return era;^116^^^^^115^117^return ERA_VALUE;^[CLASS] BasicSingleEraDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] int  ERA_VALUE  era  String  iEraText  text  boolean  
[BugLab_Variable_Misuse]^return era;^121^^^^^120^122^return ERA_VALUE;^[CLASS] BasicSingleEraDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] int  ERA_VALUE  era  String  iEraText  text  boolean  
[BugLab_Variable_Misuse]^return text.length (  ) ;^131^^^^^130^132^return iEraText.length (  ) ;^[CLASS] BasicSingleEraDateTimeField  [METHOD] getMaximumTextLength [RETURN_TYPE] int   Locale locale [VARIABLES] Locale  locale  String  iEraText  text  boolean  int  ERA_VALUE  era  fieldValue  
