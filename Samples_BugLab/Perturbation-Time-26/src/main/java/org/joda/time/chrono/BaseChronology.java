[BugLab_Wrong_Literal]^long instant = year (  ) .set ( dayOfMonth, year ) ;^102^^^^^98^106^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^long instant = monthOfYear (  ) .set ( 0, year ) ;^102^^^^^98^106^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^instant = monthOfYear (  ) .set ( serialVersionUID, monthOfYear ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^instant = year (  ) .set ( instant, monthOfYear ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( monthOfYear, monthOfYear ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( dayOfMonth, dayOfMonth ) ;^104^^^^^98^106^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^instant = dayOfMonth (  ) .set ( serialVersionUID, dayOfMonth ) ;^104^^^^^98^106^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^return millisOfDay (  ) .set ( serialVersionUID, millisOfDay ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Argument_Swapping]^return instant (  ) .set ( millisOfDay, millisOfDay ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^return year (  ) .set ( instant, millisOfDay ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[BugLab_Variable_Misuse]^long instant = secondOfMinute (  ) .set ( 0, year ) ;^132^^^^^127^139^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Wrong_Literal]^long instant = year (  ) .set ( 1, year ) ;^132^^^^^127^139^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^long instant = monthOfYear (  ) .set ( 0, year ) ;^132^^^^^127^139^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Wrong_Literal]^long instant = year (  ) .set ( secondOfMinute, year ) ;^132^^^^^127^139^long instant = year (  ) .set ( 0, year ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = monthOfYear (  ) .set ( serialVersionUID, monthOfYear ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( monthOfYear, monthOfYear ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = year (  ) .set ( instant, monthOfYear ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = dayOfMonth (  ) .set ( serialVersionUID, dayOfMonth ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = monthOfYear (  ) .set ( instant, dayOfMonth ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( dayOfMonth, dayOfMonth ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = hourOfDay (  ) .set ( serialVersionUID, hourOfDay ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = secondOfMinute (  ) .set ( instant, hourOfDay ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( hourOfDay, hourOfDay ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = minuteOfHour (  ) .set ( serialVersionUID, minuteOfHour ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = year (  ) .set ( instant, minuteOfHour ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( minuteOfHour, minuteOfHour ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = secondOfMinute (  ) .set ( serialVersionUID, secondOfMinute ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = year (  ) .set ( instant, secondOfMinute ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( secondOfMinute, secondOfMinute ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^return millisOfSecond (  ) .set ( serialVersionUID, millisOfSecond ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^return year (  ) .set ( instant, millisOfSecond ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Argument_Swapping]^return instant (  ) .set ( millisOfSecond, millisOfSecond ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[BugLab_Variable_Misuse]^instant = hourOfDay (  ) .set ( serialVersionUID, hourOfDay ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^instant = secondOfMinute (  ) .set ( instant, hourOfDay ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( hourOfDay, hourOfDay ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^instant = minuteOfHour (  ) .set ( serialVersionUID, minuteOfHour ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^instant = secondOfMinute (  ) .set ( instant, minuteOfHour ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( minuteOfHour, minuteOfHour ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^instant = secondOfMinute (  ) .set ( serialVersionUID, secondOfMinute ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^instant = minuteOfHour (  ) .set ( instant, secondOfMinute ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Argument_Swapping]^instant = instant (  ) .set ( secondOfMinute, secondOfMinute ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^return secondOfMinute (  ) .set ( instant, millisOfSecond ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Argument_Swapping]^return instant (  ) .set ( millisOfSecond, millisOfSecond ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^return millisOfSecond (  ) .set ( serialVersionUID, millisOfSecond ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[BugLab_Variable_Misuse]^if  ( size < field.getMinimumValue (  )  )  {^187^^^^^172^202^if  ( value < field.getMinimumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( field < value.getMinimumValue (  )  )  {^187^^^^^172^202^if  ( value < field.getMinimumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( value <= field.getMinimumValue (  )  )  {^187^^^^^172^202^if  ( value < field.getMinimumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( size ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^188^189^190^^^173^203^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^188^189^190^^^173^203^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( field > value.getMaximumValue (  )  )  {^192^^^^^177^207^if  ( value > field.getMaximumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( value >= field.getMaximumValue (  )  )  {^192^^^^^177^207^if  ( value > field.getMaximumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( size ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^193^194^195^^^178^208^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^193^194^195^^^178^208^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^( field.getType (  ) , new Integer ( size ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^194^195^^^^179^209^( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( valuent i = 0; i < size; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < value; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= size; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == size; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = ; i < size; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^( field.getType (  ) , new Integer ( size ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^189^190^^^^174^204^( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^if  ( size > field.getMaximumValue (  )  )  {^192^^^^^177^207^if  ( value > field.getMaximumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^DateTimeField field = partial.getField ( value ) ;^186^^^^^171^201^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^DateTimeField field = i.getField ( partial ) ;^186^^^^^171^201^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < size; i++ )  {^184^^^^^169^199^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^if  ( size < field.getMinimumValue ( partial, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( partial < field.getMinimumValue ( value, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value < partial.getMinimumValue ( field, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value < values.getMinimumValue ( partial, field )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( value > field.getMinimumValue ( partial, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( size ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( values.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, field )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( values, partial )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^( field.getType (  ) , new Integer ( size ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^204^205^^^^189^219^( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^new Integer ( partial.getMinimumValue ( field, values )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^new Integer ( field.getMinimumValue ( values, partial )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^new Integer ( values.getMinimumValue ( partial, field )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( values ) , new Integer ( field.getMinimumValue ( partial, value )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( partial ) , new Integer ( field.getMinimumValue ( value, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^if  ( size > field.getMaximumValue ( partial, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( partial > field.getMaximumValue ( value, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( field > value.getMaximumValue ( partial, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value > field.getMaximumValue ( values, partial )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( value >= field.getMaximumValue ( partial, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( size ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( values ) , null, new Integer ( field.getMaximumValue ( partial, value )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( values, partial )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( values.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, field )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^( field.getType (  ) , new Integer ( size ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^209^210^^^^194^224^( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^null, new Integer ( values.getMaximumValue ( partial, field )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^null, new Integer ( partial.getMaximumValue ( field, values )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^null, new Integer ( field.getMaximumValue ( values, partial )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( partial.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( field, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( partial ) , null, new Integer ( field.getMaximumValue ( value, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( valuent i = 0; i < size; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < value; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= size; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < size; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( values < field.getMinimumValue ( partial, value )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( field < value.getMinimumValue ( partial, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( value <= field.getMinimumValue ( partial, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^throw new IllegalFieldValueException ( partial.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( field, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( values > field.getMaximumValue ( partial, value )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value > partial.getMaximumValue ( field, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value > values.getMaximumValue ( partial, field )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^DateTimeField field = partial.getField ( value ) ;^201^^^^^186^216^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^DateTimeField field = i.getField ( partial ) ;^201^^^^^186^216^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < size; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( value < field.getMinimumValue ( values, partial )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( sizent i = 0; i < size; i++ )  {^225^^^^^222^229^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^for  ( sizent i = 0; i < i; i++ )  {^225^^^^^222^229^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= size; i++ )  {^225^^^^^222^229^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Wrong_Literal]^for  ( int i = i; i < size; i++ )  {^225^^^^^222^229^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^values[i] = partial.getFieldType ( size ) .getField ( this ) .get ( instant ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^values[i] = i.getFieldType ( partial ) .getField ( this ) .get ( instant ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^values[i] = instant.getFieldType ( i ) .getField ( this ) .get ( partial ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( serialVersionUID ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Argument_Swapping]^values[i] = partial.getFieldType ( instant ) .getField ( this ) .get ( i ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Argument_Swapping]^for  ( partialnt i = 0, isize = i.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = partial.size (  ) ; i <= isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Variable_Misuse]^instant = partial.getFieldType ( isize ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Variable_Misuse]^instant = partial.getFieldType ( i ) .getField ( this ) .set ( serialVersionUID, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Argument_Swapping]^instant = instant.getFieldType ( i ) .getField ( this ) .set ( partial, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Argument_Swapping]^instant = i.getFieldType ( partial ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Argument_Swapping]^instant = partial.getFieldType ( instant ) .getField ( this ) .set ( i, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Variable_Misuse]^return serialVersionUID;^242^^^^^238^243^return instant;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[BugLab_Variable_Misuse]^if  ( serialVersionUID != endInstant )  {^257^^^^^254^266^if  ( startInstant != endInstant )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^if  ( startInstant != startInstant )  {^257^^^^^254^266^if  ( startInstant != endInstant )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^if  ( endInstant != startInstant )  {^257^^^^^254^266^if  ( startInstant != endInstant )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( startInstant == endInstant )  {^257^^^^^254^266^if  ( startInstant != endInstant )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( valuent i = 0; i < size; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < value; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^for  ( sizent i = 0; i < i; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= size; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^startInstant = field.add ( serialVersionUID, value ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^startInstant = field.add ( startInstant, size ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^startInstant = value.add ( startInstant, field ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^startInstant = field.add ( value, startInstant ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^values[i] = size;^262^^^^^254^266^values[i] = value;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^DurationField field = period.getFieldType ( value ) .getField ( this ) ;^259^^^^^254^266^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^DurationField field = i.getFieldType ( period ) .getField ( this ) ;^259^^^^^254^266^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( startInstant, startInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( endInstant, serialVersionUID ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = endInstant.getDifference ( field, startInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = startInstant.getDifference ( endInstant, field ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( serialVersionUID, startInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = field.getDifference ( startInstant, endInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^startInstant = startInstant.add ( field, value ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = size; i < size; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < size; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^if  ( startInstant != 0 )  {^278^^^^^275^290^if  ( duration != 0 )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( duration == 0 )  {^278^^^^^275^290^if  ( duration != 0 )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^if  ( duration != i )  {^278^^^^^275^290^if  ( duration != 0 )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^current = field.add ( serialVersionUID, value ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^current = field.add ( current, size ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^current = value.add ( current, field ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^current = field.add ( value, current ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^values[i] = size;^285^^^^^275^290^values[i] = value;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( serialVersionUID, current ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( duration, startInstant ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = current.getDifference ( duration, field ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = duration.getDifference ( field, current ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^int value = field.getDifference ( current, duration ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^current = field.add ( startInstant, value ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^current = current.add ( field, value ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( valuent i = 0; i < size; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < value; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= size; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = value; i < size; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( startInstant, current ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^int value = field.getDifference ( duration, serialVersionUID ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Variable_Misuse]^DurationField field = period.getFieldType ( value ) .getField ( this ) ;^281^^^^^275^290^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^DurationField field = i.getFieldType ( period ) .getField ( this ) ;^281^^^^^275^290^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^long current = value;^279^^^^^275^290^long current = 0;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Argument_Swapping]^for  ( sizent i = 0; i < i; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^long current = i;^279^^^^^275^290^long current = 0;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < size; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[BugLab_Wrong_Operator]^if  ( scalar != 0 || period != null )  {^301^^^^^300^310^if  ( scalar != 0 && period != null )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^if  ( scalar == 0 && period != null )  {^301^^^^^300^310^if  ( scalar != 0 && period != null )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^if  ( scalar != 0 && period == null )  {^301^^^^^300^310^if  ( scalar != 0 && period != null )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^if  ( scalar != 1 && period != null )  {^301^^^^^300^310^if  ( scalar != 0 && period != null )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^if  ( scalar != -1 && period != null )  {^301^^^^^300^310^if  ( scalar != 0 && period != null )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^if  ( instant != 0 )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^if  ( value <= 0 )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^if  ( value != scalar )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( isize ) .getField ( this ) .add ( instant, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( value, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, instant * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * isize ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = instant.getFieldType ( i ) .getField ( this ) .add ( period, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = i.getFieldType ( period ) .getField ( this ) .add ( instant, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( i ) .getField ( this ) .add ( value, instant * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = value.getFieldType ( i ) .getField ( this ) .add ( instant, period * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( scalar ) .getField ( this ) .add ( instant, value * i ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value / scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, startInstant * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( value ) .getField ( this ) .add ( instant, i * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, scalar * value ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( scalar ) .getField ( this ) .add ( instant, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^for  ( scalarnt i = 0, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^for  ( int i = 0, scalar = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^for  ( int i = 0, period = isize.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = period.size (  ) ; i <= isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^for  ( int i = scalar, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^for  ( int i = isize, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^if  ( serialVersionUID != 0 )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^if  ( value < 0 )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^if  ( value !=  )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( startInstant, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( i ) .getField ( this ) .add ( scalar, value * instant ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( serialVersionUID, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = period.getFieldType ( instant ) .getField ( this ) .add ( i, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^instant = scalar.getFieldType ( i ) .getField ( this ) .add ( instant, value * period ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value + scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^long value = period.getValue ( scalar ) ;^303^^^^^300^310^long value = period.getValue ( i ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Argument_Swapping]^long value = i.getValue ( period ) ;^303^^^^^300^310^long value = period.getValue ( i ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, serialVersionUID * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value - scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Operator]^if  ( value == 0 )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^if  ( value != i )  {^304^^^^^300^310^if  ( value != 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^for  ( int i = -1, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Wrong_Literal]^for  ( int i = 1, isize = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^return value;^309^^^^^300^310^return instant;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[BugLab_Variable_Misuse]^if  ( startInstant == 0 || scalar == 0 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Argument_Swapping]^if  ( scalar == 0 || duration == 0 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Wrong_Operator]^if  ( duration == 0 && scalar == 0 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Wrong_Operator]^if  ( duration < 0 || scalar == 0 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Wrong_Operator]^if  ( duration == 0 || scalar >= 0 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Wrong_Literal]^if  ( duration == 1 || scalar == 1 )  {^322^^^^^321^327^if  ( duration == 0 || scalar == 0 )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Variable_Misuse]^return value;^323^^^^^321^327^return instant;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Variable_Misuse]^long add = FieldUtils.safeMultiply ( value, scalar ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Argument_Swapping]^long add = FieldUtils.safeMultiply ( scalar, duration ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Variable_Misuse]^long add = FieldUtils.safeMultiply ( startInstant, scalar ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Variable_Misuse]^return FieldUtils.safeAdd ( value, add ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Variable_Misuse]^return FieldUtils.safeAdd ( instant, value ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[BugLab_Argument_Swapping]^return FieldUtils.safeAdd ( add, instant ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
