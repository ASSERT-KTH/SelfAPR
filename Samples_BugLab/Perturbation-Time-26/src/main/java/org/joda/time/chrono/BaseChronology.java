[buglab_swap_variables]^instant = instant (  ) .set ( monthOfYear, monthOfYear ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = monthOfYear (  ) .set (  monthOfYear ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = monthOfYear (  ) .set ( instant ) ;^103^^^^^98^106^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( dayOfMonth, dayOfMonth ) ;^104^^^^^98^106^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = dayOfMonth (  ) .set (  dayOfMonth ) ;^104^^^^^98^106^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = dayOfMonth (  ) .set ( instant ) ;^104^^^^^98^106^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^return instant (  ) .set ( millisOfDay, millisOfDay ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^return millisOfDay (  ) .set (  millisOfDay ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^return millisOfDay (  ) .set ( instant ) ;^105^^^^^98^106^return millisOfDay (  ) .set ( instant, millisOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int millisOfDay [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  millisOfDay  monthOfYear  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( monthOfYear, monthOfYear ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = monthOfYear (  ) .set (  monthOfYear ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = monthOfYear (  ) .set ( instant ) ;^133^^^^^127^139^instant = monthOfYear (  ) .set ( instant, monthOfYear ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( dayOfMonth, dayOfMonth ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = dayOfMonth (  ) .set (  dayOfMonth ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = dayOfMonth (  ) .set ( instant ) ;^134^^^^^127^139^instant = dayOfMonth (  ) .set ( instant, dayOfMonth ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( hourOfDay, hourOfDay ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = hourOfDay (  ) .set (  hourOfDay ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = hourOfDay (  ) .set ( instant ) ;^135^^^^^127^139^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( minuteOfHour, minuteOfHour ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = minuteOfHour (  ) .set (  minuteOfHour ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = minuteOfHour (  ) .set ( instant ) ;^136^^^^^127^139^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( secondOfMinute, secondOfMinute ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = secondOfMinute (  ) .set (  secondOfMinute ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = secondOfMinute (  ) .set ( instant ) ;^137^^^^^127^139^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^return instant (  ) .set ( millisOfSecond, millisOfSecond ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^return millisOfSecond (  ) .set (  millisOfSecond ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^return millisOfSecond (  ) .set ( instant ) ;^138^^^^^127^139^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   int year int monthOfYear int dayOfMonth int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  dayOfMonth  hourOfDay  millisOfSecond  minuteOfHour  monthOfYear  secondOfMinute  year  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( hourOfDay, hourOfDay ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = hourOfDay (  ) .set (  hourOfDay ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = hourOfDay (  ) .set ( instant ) ;^163^^^^^158^167^instant = hourOfDay (  ) .set ( instant, hourOfDay ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( minuteOfHour, minuteOfHour ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = minuteOfHour (  ) .set (  minuteOfHour ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = minuteOfHour (  ) .set ( instant ) ;^164^^^^^158^167^instant = minuteOfHour (  ) .set ( instant, minuteOfHour ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = instant (  ) .set ( secondOfMinute, secondOfMinute ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = secondOfMinute (  ) .set (  secondOfMinute ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^instant = secondOfMinute (  ) .set ( instant ) ;^165^^^^^158^167^instant = secondOfMinute (  ) .set ( instant, secondOfMinute ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^return instant (  ) .set ( millisOfSecond, millisOfSecond ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^return millisOfSecond (  ) .set (  millisOfSecond ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^return millisOfSecond (  ) .set ( instant ) ;^166^^^^^158^167^return millisOfSecond (  ) .set ( instant, millisOfSecond ) ;^[CLASS] BaseChronology  [METHOD] getDateTimeMillis [RETURN_TYPE] long   long instant int hourOfDay int minuteOfHour int secondOfMinute int millisOfSecond [VARIABLES] long  instant  serialVersionUID  int  hourOfDay  millisOfSecond  minuteOfHour  secondOfMinute  boolean  
[buglab_swap_variables]^if  ( field < value.getMinimumValue (  )  )  {^187^^^^^172^202^if  ( value < field.getMinimumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^188^189^190^^^173^203^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( field > value.getMaximumValue (  )  )  {^192^^^^^177^207^if  ( value > field.getMaximumValue (  )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^193^194^195^^^178^208^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^DateTimeField field = i.getField ( partial ) ;^186^^^^^171^201^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( partial < field.getMinimumValue ( value, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < field.getMinimumValue ( partials )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < partial.getMinimumValue ( field, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < field.getMinimumValue (  values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < values.getMinimumValue ( partial, field )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < field.getMinimumValue ( partial )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( partial.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( field, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partials )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( values, partial )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue (  values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( values ) , new Integer ( field.getMinimumValue ( partial, value )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^new Integer ( partial.getMinimumValue ( field, values )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^new Integer ( field.getMinimumValue (  values )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^new Integer ( values.getMinimumValue ( partial, field )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^new Integer ( field.getMinimumValue ( partial )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( values.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, field )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( partial ) , new Integer ( field.getMinimumValue ( value, values )  ) , null ) ;^203^204^205^^^188^218^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^new Integer ( field.getMinimumValue ( values, partial )  ) , null ) ;^205^^^^^190^220^new Integer ( field.getMinimumValue ( partial, values )  ) , null ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( field > value.getMaximumValue ( partial, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value > field.getMaximumValue ( partials )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value > values.getMaximumValue ( partial, field )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value > field.getMaximumValue ( values, partial )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value > field.getMaximumValue (  values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( values > field.getMaximumValue ( partial, value )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value > field.getMaximumValue ( partial )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( values.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, field )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( value.getType (  ) , new Integer ( field ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partials )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( partial ) , null, new Integer ( field.getMaximumValue ( value, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue (  values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^null, new Integer ( partial.getMaximumValue ( field, values )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^null, new Integer ( field.getMaximumValue ( values, partial )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^null, new Integer ( field.getMaximumValue (  values )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^null, new Integer ( field.getMaximumValue ( partial )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^for  ( sizent i = 0; i < i; i++ )  {^199^^^^^184^214^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( field < value.getMinimumValue ( partial, values )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( value < field.getMinimumValue ( values, partial )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( values < field.getMinimumValue ( partial, value )  )  {^202^^^^^187^217^if  ( value < field.getMinimumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^if  ( partial > field.getMaximumValue ( value, values )  )  {^207^^^^^192^222^if  ( value > field.getMaximumValue ( partial, values )  )  {^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( partial.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( field, values )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( values, partial )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^null, new Integer ( values.getMaximumValue ( partial, field )  )  ) ;^210^^^^^195^225^null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( values ) , null, new Integer ( field.getMaximumValue ( partial, value )  )  ) ;^208^209^210^^^193^223^throw new IllegalFieldValueException ( field.getType (  ) , new Integer ( value ) , null, new Integer ( field.getMaximumValue ( partial, values )  )  ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^DateTimeField field = i.getField ( partial ) ;^201^^^^^186^216^DateTimeField field = partial.getField ( i ) ;^[CLASS] BaseChronology  [METHOD] validate [RETURN_TYPE] void   ReadablePartial partial int[] values [VARIABLES] int[]  values  ReadablePartial  partial  DateTimeField  field  boolean  long  instant  serialVersionUID  int  i  size  value  
[buglab_swap_variables]^for  ( sizent i = 0; i < i; i++ )  {^225^^^^^222^229^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[buglab_swap_variables]^values[i] = i.getFieldType ( partial ) .getField ( this ) .get ( instant ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[buglab_swap_variables]^values[i] = partial.getFieldType ( instant ) .getField ( this ) .get ( i ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[buglab_swap_variables]^values[i] = instant.getFieldType ( i ) .getField ( this ) .get ( partial ) ;^226^^^^^222^229^values[i] = partial.getFieldType ( i ) .getField ( this ) .get ( instant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePartial partial long instant [VARIABLES] int[]  values  ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  size  
[buglab_swap_variables]^for  ( partialnt i = 0, isize = i.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = partial.size (  ) ; i < isize; i++ )  {^239^^^^^238^243^for  ( int i = 0, isize = partial.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^instant = i.getFieldType ( partial ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^instant = partial.getFieldType ( instant ) .getField ( this ) .set ( i, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^instant = partial.getFieldType ( i ) .getField ( this ) .set (  partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^instant = instant.getFieldType ( i ) .getField ( this ) .set ( partial, partial.getValue ( i )  ) ;^240^^^^^238^243^instant = partial.getFieldType ( i ) .getField ( this ) .set ( instant, partial.getValue ( i )  ) ;^[CLASS] BaseChronology  [METHOD] set [RETURN_TYPE] long   ReadablePartial partial long instant [VARIABLES] ReadablePartial  partial  boolean  long  instant  serialVersionUID  int  i  isize  
[buglab_swap_variables]^for  ( sizent i = 0; i < i; i++ )  {^258^^^^^254^266^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^startInstant = startInstant.add ( field, value ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^startInstant = field.add (  value ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^startInstant = value.add ( startInstant, field ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^startInstant = field.add ( startInstant ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^DurationField field = i.getFieldType ( period ) .getField ( this ) ;^259^^^^^254^266^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = startInstant.getDifference ( endInstant, field ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = endInstant.getDifference ( field, startInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference (  startInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference ( endInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference ( startInstant, endInstant ) ;^260^^^^^254^266^int value = field.getDifference ( endInstant, startInstant ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^startInstant = field.add ( value, startInstant ) ;^261^^^^^254^266^startInstant = field.add ( startInstant, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long startInstant long endInstant [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^current = value.add ( current, field ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^current = field.add ( value, current ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^current = field.add (  value ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^current = field.add ( current ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = duration.getDifference ( field, current ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference ( current, duration ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference (  current ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = field.getDifference ( duration ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^int value = current.getDifference ( duration, field ) ;^283^^^^^275^290^int value = field.getDifference ( duration, current ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^current = current.add ( field, value ) ;^284^^^^^275^290^current = field.add ( current, value ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^for  ( sizent i = 0; i < i; i++ )  {^280^^^^^275^290^for  ( int i = 0; i < size; i++ )  {^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^DurationField field = i.getFieldType ( period ) .getField ( this ) ;^281^^^^^275^290^DurationField field = period.getFieldType ( i ) .getField ( this ) ;^[CLASS] BaseChronology  [METHOD] get [RETURN_TYPE] int[]   ReadablePeriod period long duration [VARIABLES] int[]  values  boolean  ReadablePeriod  period  DurationField  field  long  current  duration  endInstant  instant  serialVersionUID  startInstant  int  i  size  value  
[buglab_swap_variables]^instant = value.getFieldType ( i ) .getField ( this ) .add ( instant, period * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( instant ) .getField ( this ) .add ( i, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( i ) .getField ( this ) .add ( scalar, value * instant ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( i ) .getField ( this ) .add (  value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( i ) .getField ( this ) .add ( value, instant * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( scalar ) .getField ( this ) .add ( instant, value * i ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = i.getFieldType ( period ) .getField ( this ) .add ( instant, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^for  ( isizent i = 0, i = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^for  ( int i = 0size = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^for  ( int i = 0 = period.size (  ) ; i < isize; i++ )  {^302^^^^^300^310^for  ( int i = 0, isize = period.size (  ) ; i < isize; i++ )  {^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = instant.getFieldType ( i ) .getField ( this ) .add ( period, value * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( value ) .getField ( this ) .add ( instant, i * scalar ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, scalar * value ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^long value = i.getValue ( period ) ;^303^^^^^300^310^long value = period.getValue ( i ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^instant = scalar.getFieldType ( i ) .getField ( this ) .add ( instant, value * period ) ;^305^^^^^300^310^instant = period.getFieldType ( i ) .getField ( this ) .add ( instant, value * scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   ReadablePeriod period long instant int scalar [VARIABLES] boolean  ReadablePeriod  period  long  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  i  isize  scalar  
[buglab_swap_variables]^long add = FieldUtils.safeMultiply ( scalar, duration ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[buglab_swap_variables]^long add = FieldUtils.safeMultiply (  scalar ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[buglab_swap_variables]^long add = FieldUtils.safeMultiply ( duration ) ;^325^^^^^321^327^long add = FieldUtils.safeMultiply ( duration, scalar ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[buglab_swap_variables]^return FieldUtils.safeAdd ( add, instant ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[buglab_swap_variables]^return FieldUtils.safeAdd (  add ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
[buglab_swap_variables]^return FieldUtils.safeAdd ( instant ) ;^326^^^^^321^327^return FieldUtils.safeAdd ( instant, add ) ;^[CLASS] BaseChronology  [METHOD] add [RETURN_TYPE] long   long instant long duration int scalar [VARIABLES] long  add  current  duration  endInstant  instant  serialVersionUID  startInstant  value  int  scalar  boolean  
