[BugLab_Variable_Misuse]^iBase = iBase;^58^^^^^56^59^iBase = base;^[CLASS] LenientDateTimeField  [METHOD] <init> [RETURN_TYPE] Chronology)   DateTimeField field Chronology base [VARIABLES] Chronology  base  iBase  DateTimeField  field  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( field != null )  {^44^^^^^43^54^if  ( field == null )  {^[CLASS] LenientDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field Chronology base [VARIABLES] Chronology  base  iBase  DateTimeField  field  boolean  long  serialVersionUID  
[BugLab_Wrong_Operator]^if  ( field  <<  StrictDateTimeField )  {^47^^^^^43^54^if  ( field instanceof StrictDateTimeField )  {^[CLASS] LenientDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field Chronology base [VARIABLES] Chronology  base  iBase  DateTimeField  field  boolean  long  serialVersionUID  
[BugLab_Variable_Misuse]^return new LenientDateTimeField ( field, iBase ) ;^53^^^^^43^54^return new LenientDateTimeField ( field, base ) ;^[CLASS] LenientDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field Chronology base [VARIABLES] Chronology  base  iBase  DateTimeField  field  boolean  long  serialVersionUID  
[BugLab_Argument_Swapping]^return new LenientDateTimeField ( base, field ) ;^53^^^^^43^54^return new LenientDateTimeField ( field, base ) ;^[CLASS] LenientDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field Chronology base [VARIABLES] Chronology  base  iBase  DateTimeField  field  boolean  long  serialVersionUID  
[BugLab_Wrong_Literal]^return false;^62^^^^^61^63^return true;^[CLASS] LenientDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  Chronology  base  iBase  boolean  
[BugLab_Argument_Swapping]^long localInstant = instant.getZone (  ) .convertUTCToLocal ( iBase ) ;^72^^^^^69^76^long localInstant = iBase.getZone (  ) .convertUTCToLocal ( instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^long localInstant = base.getZone (  ) .convertUTCToLocal ( instant ) ;^72^^^^^69^76^long localInstant = iBase.getZone (  ) .convertUTCToLocal ( instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^long difference = FieldUtils.safeSubtract ( instant, get ( value )  ) ;^73^^^^^69^76^long difference = FieldUtils.safeSubtract ( value, get ( instant )  ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^long difference = FieldUtils.safeSubtract ( value, get ( serialVersionUID )  ) ;^73^^^^^69^76^long difference = FieldUtils.safeSubtract ( value, get ( instant )  ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, serialVersionUID ) ;^74^^^^^69^76^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, difference ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^localInstant = getType (  ) .getField ( base.withUTC (  )  ) .add ( localInstant, difference ) ;^74^^^^^69^76^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, difference ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( difference, localInstant ) ;^74^^^^^69^76^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, difference ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^localInstant = getType (  ) .getField ( difference.withUTC (  )  ) .add ( localInstant, iBase ) ;^74^^^^^69^76^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, difference ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^localInstant = getType (  ) .getField ( localInstant.withUTC (  )  ) .add ( iBase, difference ) ;^74^^^^^69^76^localInstant = getType (  ) .getField ( iBase.withUTC (  )  ) .add ( localInstant, difference ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^return iBase.getZone (  ) .convertLocalToUTC ( serialVersionUID, false, instant ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, serialVersionUID ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^return base.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^return iBase.getZone (  ) .convertLocalToUTC ( instant, false, localInstant ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^return localInstant.getZone (  ) .convertLocalToUTC ( iBase, false, instant ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
[BugLab_Wrong_Literal]^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, true, instant ) ;^75^^^^^69^76^return iBase.getZone (  ) .convertLocalToUTC ( localInstant, false, instant ) ;^[CLASS] LenientDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] Chronology  base  iBase  boolean  long  difference  instant  localInstant  serialVersionUID  int  value  
