[BugLab_Argument_Swapping]^super ( param, base ) ;^128^^^^^127^129^super ( base, param ) ;^[CLASS] BuddhistChronology  [METHOD] <init> [RETURN_TYPE] Object)   Chronology base Object param [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  Object  param  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^104^^^^^103^117^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Argument_Swapping]^BuddhistChronology chrono = zone.get ( cCache ) ;^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^BuddhistChronology chrono = 2.get ( zone ) ;^107^^^^^103^117^BuddhistChronology chrono = cCache.get ( zone ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^if  ( INSTANCE_UTC == null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Operator]^if  ( chrono != null )  {^108^^^^^103^117^if  ( chrono == null )  {^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( INSTANCE_UTC, lowerLimit, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Argument_Swapping]^chrono = new BuddhistChronology ( LimitChronology.getInstance ( lowerLimit, chrono, null ) , "" ) ;^113^^^^^103^117^chrono = new BuddhistChronology ( LimitChronology.getInstance ( chrono, lowerLimit, null ) , "" ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, INSTANCE_UTC ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, BE, BE, BE, BE, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 2, 2, 2, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, , , , , chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Argument_Swapping]^cCache.put ( chrono, zone ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( BE, BE, BE, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, 1, 1, 1, 1, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 0, 0, 0, 0, 0, 0, 0, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Literal]^DateTime lowerLimit = new DateTime ( 1, 1, 1, BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, BUDDHIST_OFFSET, chrono ) ;^112^^^^^103^117^DateTime lowerLimit = new DateTime ( 1, 1, 1, 0, 0, 0, 0, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^cCache.put ( zone, INSTANCE_UTC ) ;^114^^^^^103^117^cCache.put ( zone, chrono ) ;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Variable_Misuse]^return INSTANCE_UTC;^116^^^^^103^117^return chrono;^[CLASS] BuddhistChronology  [METHOD] getInstance [RETURN_TYPE] BuddhistChronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  DateTime  lowerLimit  
[BugLab_Wrong_Operator]^return base != null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^136^^^^^134^137^return base == null ? getInstanceUTC (  )  : getInstance ( base.getZone (  )  ) ;^[CLASS] BuddhistChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Chronology  base  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^return chrono;^147^^^^^146^148^return INSTANCE_UTC;^[CLASS] BuddhistChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^157^^^^^156^164^if  ( zone == null )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( zone != getZone (  )  )  {^160^^^^^156^164^if  ( zone == getZone (  )  )  {^[CLASS] BuddhistChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^return "Buddhist".hashCode (  |  )  * 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Operator]^return "Buddhist".hashCode (  )  / 11 + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^return "Buddhist".hashCode (  )  * BUDDHIST_OFFSET + getZone (  ) .hashCode (  ) ;^184^^^^^183^185^return "Buddhist".hashCode (  )  * 11 + getZone (  ) .hashCode (  ) ;^[CLASS] BuddhistChronology  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] DateTimeField  ERA_FIELD  boolean  BuddhistChronology  INSTANCE_UTC  chrono  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Operator]^if  ( zone == null )  {^197^^^^^194^201^if  ( zone != null )  {^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Argument_Swapping]^str = zone + '[' + str.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str + '[' + zone.getID (  &  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str   instanceof   '['   instanceof   zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str  <<  '[' + zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str + '[' + zone.getID (  !=  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str  &  '['  &  zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^str = str  >=  '[' + zone.getID (  )  + ']';^198^^^^^194^201^str = str + '[' + zone.getID (  )  + ']';^[CLASS] BuddhistChronology  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  String  str  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( getParam (  )  != null )  {^204^^^^^189^219^if  ( getParam (  )  == null )  {^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BE ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Argument_Swapping]^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, BUDDHIST_OFFSET ) , field ) ;^207^208^^^^192^222^fields.year = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Argument_Swapping]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, BUDDHIST_OFFSET ) , field ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, BE ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.centuryOfEra = new DividedDateTimeField ( ERA_FIELD, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.yearOfCentury = new OffsetDateTimeField ( ERA_FIELD, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 0 ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , BE ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.weekyearOfCentury = new OffsetDateTimeField ( ERA_FIELD, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 0 ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.era = field;^234^^^^^219^249^fields.era = ERA_FIELD;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^208^^^^^193^223^new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BE ) ;^217^218^^^^202^232^fields.weekyear = new OffsetDateTimeField ( new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Variable_Misuse]^new SkipUndoDateTimeField ( this, ERA_FIELD ) , BUDDHIST_OFFSET ) ;^218^^^^^203^233^new SkipUndoDateTimeField ( this, field ) , BUDDHIST_OFFSET ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, 98 ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 99 ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , BUDDHIST_OFFSET ) ;^226^227^^^^211^241^fields.yearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.yearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) ,  ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^field = new OffsetDateTimeField ( fields.yearOfEra, BUDDHIST_OFFSET ) ;^220^^^^^205^235^field = new OffsetDateTimeField ( fields.yearOfEra, 99 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , BE ) ;^221^222^^^^206^236^fields.centuryOfEra = new DividedDateTimeField ( field, DateTimeFieldType.centuryOfEra (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , BE ) ;^231^232^^^^216^246^fields.weekyearOfCentury = new OffsetDateTimeField ( field, DateTimeFieldType.weekyearOfCentury (  ) , 1 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
[BugLab_Wrong_Literal]^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , BUDDHIST_OFFSET ) ;^229^230^^^^214^244^field = new RemainderDateTimeField ( fields.weekyear, DateTimeFieldType.weekyearOfCentury (  ) , 100 ) ;^[CLASS] BuddhistChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  BuddhistChronology  INSTANCE_UTC  chrono  DateTimeField  ERA_FIELD  field  Map  cCache  long  serialVersionUID  int  BE  BUDDHIST_OFFSET  
