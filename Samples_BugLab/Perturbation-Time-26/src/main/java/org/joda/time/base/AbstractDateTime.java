[BugLab_Wrong_Operator]^if  ( type != null )  {^66^^^^^65^70^if  ( type == null )  {^[CLASS] AbstractDateTime  [METHOD] get [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  
[BugLab_Wrong_Operator]^if  ( locale != null )  {^259^^^^^258^266^if  ( locale == null )  {^[CLASS] AbstractDateTime  [METHOD] toCalendar [RETURN_TYPE] Calendar   Locale locale [VARIABLES] Locale  locale  boolean  Calendar  cal  DateTimeZone  zone  
[BugLab_Argument_Swapping]^Calendar cal = Calendar.getInstance ( locale.toTimeZone (  ) , zone ) ;^263^^^^^258^266^Calendar cal = Calendar.getInstance ( zone.toTimeZone (  ) , locale ) ;^[CLASS] AbstractDateTime  [METHOD] toCalendar [RETURN_TYPE] Calendar   Locale locale [VARIABLES] Locale  locale  boolean  Calendar  cal  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( pattern != null )  {^297^^^^^296^301^if  ( pattern == null )  {^[CLASS] AbstractDateTime  [METHOD] toString [RETURN_TYPE] String   String pattern [VARIABLES] boolean  String  pattern  
[BugLab_Wrong_Operator]^if  ( pattern != null )  {^311^^^^^310^315^if  ( pattern == null )  {^[CLASS] AbstractDateTime  [METHOD] toString [RETURN_TYPE] String   String pattern Locale locale [VARIABLES] Locale  locale  boolean  String  pattern  
[BugLab_Argument_Swapping]^return DateTimeFormat.forPattern ( locale ) .withLocale ( pattern ) .print ( this ) ;^314^^^^^310^315^return DateTimeFormat.forPattern ( pattern ) .withLocale ( locale ) .print ( this ) ;^[CLASS] AbstractDateTime  [METHOD] toString [RETURN_TYPE] String   String pattern Locale locale [VARIABLES] Locale  locale  boolean  String  pattern  
