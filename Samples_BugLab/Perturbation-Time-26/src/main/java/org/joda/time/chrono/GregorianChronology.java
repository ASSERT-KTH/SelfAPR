[BugLab_Wrong_Operator]^private - static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^50^51^^^^50^51^private static final long MILLIS_PER_YEAR = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[BugLab_Wrong_Operator]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY * 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[BugLab_Wrong_Operator]^private - static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 11 ) ;^53^54^^^^53^54^private static final long MILLIS_PER_MONTH = ( long )   ( 365.2425 * DateTimeConstants.MILLIS_PER_DAY / 12 ) ;^[CLASS] GregorianChronology   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int MAX_YEAR = 292278992;^62^^^^^57^67^private static final int MAX_YEAR = 292278993;^[CLASS] GregorianChronology   [VARIABLES] 
[BugLab_Variable_Misuse]^super ( base, param, MIN_YEAR ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[BugLab_Argument_Swapping]^super ( param, base, minDaysInFirstWeek ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[BugLab_Argument_Swapping]^super ( base, minDaysInFirstWeek, param ) ;^148^^^^^147^149^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  Object  param  Chronology  base  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  
[BugLab_Wrong_Literal]^return getInstance ( DateTimeZone.getDefault (  ) , MIN_YEAR ) ;^90^^^^^89^91^return getInstance ( DateTimeZone.getDefault (  ) , 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  
[BugLab_Wrong_Literal]^return getInstance ( zone, minDaysInFirstWeek ) ;^100^^^^^99^101^return getInstance ( zone, 4 ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^111^^^^^110^139^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( chronos != null )  {^117^^^^^110^139^if  ( chronos == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Literal]^chronos = new GregorianChronology[MAX_YEAR];^118^^^^^110^139^chronos = new GregorianChronology[7];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^cCache.put ( chronos, zone ) ;^119^^^^^110^139^cCache.put ( zone, chronos ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^if  ( INSTANCE_UTC == null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( chrono != null )  {^127^^^^^110^139^if  ( chrono == null )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^if  ( zone == DateTimeZone.INSTANCE_UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( zone <= DateTimeZone.UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^128^134^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, MIN_YEAR ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^132^133^^^^128^134^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^128^134^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = new GregorianChronology ( null, null, MIN_YEAR ) ;^129^^^^^110^139^chrono = new GregorianChronology ( null, null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = getInstance ( DateTimeZone.UTC, MIN_YEAR ) ;^131^^^^^110^139^chrono = getInstance ( DateTimeZone.UTC, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( minDaysInFirstWeek, zone ) , null, chrono ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, minDaysInFirstWeek ) , null, zone ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chronos[MIN_YEAR - 1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chronos[minDaysInFirstWeek - 1] = INSTANCE_UTC;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^chronos[minDaysInFirstWeek  ^  1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Literal]^chronos[minDaysInFirstWeek - MIN_YEAR] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, MIN_YEAR ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^chrono = new GregorianChronology ( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^132^133^^^^110^139^chrono = new GregorianChronology ( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^( ZonedChronology.getInstance ( zone, chrono ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^if  ( zone != DateTimeZone.UTC )  {^128^^^^^110^139^if  ( zone == DateTimeZone.UTC )  {^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^chrono = chronos[MIN_YEAR - 1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^chrono = chronos[minDaysInFirstWeek  <=  1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Literal]^chrono = chronos[minDaysInFirstWeek ];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^chrono = chronos[minDaysInFirstWeek  <  1];^122^^^^^110^139^chrono = chronos[minDaysInFirstWeek - 1];^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^chronos[minDaysInFirstWeek  &  1] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Literal]^chronos[minDaysInFirstWeek - minDaysInFirstWeek] = chrono;^135^^^^^110^139^chronos[minDaysInFirstWeek - 1] = chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Invalid min days in first week: " + MIN_YEAR ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  <  minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Argument_Swapping]^GregorianChronology[] chronos = zone.get ( cCache ) ;^116^^^^^110^139^GregorianChronology[] chronos = cCache.get ( zone ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid min days in first week: "  >  minDaysInFirstWeek ) ;^124^125^^^^110^139^throw new IllegalArgumentException ( "Invalid min days in first week: " + minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^( ZonedChronology.getInstance ( INSTANCE_UTC, zone ) , null, minDaysInFirstWeek ) ;^133^^^^^110^139^( ZonedChronology.getInstance ( chrono, zone ) , null, minDaysInFirstWeek ) ;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^return INSTANCE_UTC;^138^^^^^110^139^return chrono;^[CLASS] GregorianChronology  [METHOD] getInstance [RETURN_TYPE] GregorianChronology   DateTimeZone zone int minDaysInFirstWeek [VARIABLES] boolean  GregorianChronology  INSTANCE_UTC  chrono  Map  cCache  GregorianChronology[]  chronos  ArrayIndexOutOfBoundsException  e  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDaysInFirstWeek  DateTimeZone  zone  
[BugLab_Variable_Misuse]^minDays =  ( MIN_YEAR == 0 ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^minDays =  ( minDays >= 0 ? 4 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^minDays =  ( minDays == 0 ? 5 : minDays ) ;^157^^^^^154^161^minDays =  ( minDays == 0 ? 4 : minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return base == null ? getInstance ( DateTimeZone.UTC, MIN_YEAR )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^return minDays == null ? getInstance ( DateTimeZone.UTC, base )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return base != null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^158^159^160^^^154^161^return base == null ? getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^getInstance ( DateTimeZone.UTC, MIN_YEAR )  : getInstance ( base.getZone (  ) , minDays ) ;^159^160^^^^154^161^getInstance ( DateTimeZone.UTC, minDays )  : getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^getInstance ( base.getZone (  ) , minDaysInFirstWeek ) ;^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^getInstance ( minDays.getZone (  ) , base ) ;^160^^^^^154^161^getInstance ( base.getZone (  ) , minDays ) ;^[CLASS] GregorianChronology  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Chronology  base  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return chrono;^171^^^^^170^172^return INSTANCE_UTC;^[CLASS] GregorianChronology  [METHOD] withUTC [RETURN_TYPE] Chronology   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^181^^^^^180^188^if  ( zone == null )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^if  ( zone <= getZone (  )  )  {^184^^^^^180^188^if  ( zone == getZone (  )  )  {^[CLASS] GregorianChronology  [METHOD] withZone [RETURN_TYPE] Chronology   DateTimeZone zone [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  DateTimeZone  zone  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^if  ( getBase (  )  != null )  {^191^^^^^190^194^if  ( getBase (  )  == null )  {^[CLASS] GregorianChronology  [METHOD] assemble [RETURN_TYPE] void   Fields fields [VARIABLES] Fields  fields  boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return  (  ( minDaysInFirstWeek & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  == 0 )  ||  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  != 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year  <=  3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 &&  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  >= 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year   instanceof   100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  >= 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year  &  400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return  (  ( year & 3 )  == minDaysInFirstWeek )  &&  (  ( year % 1minDaysInFirstWeekminDaysInFirstWeek )  != minDaysInFirstWeek ||  ( year % 4minDaysInFirstWeekminDaysInFirstWeek )  == minDaysInFirstWeek ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % DAYS_0000_TO_1970 )  != 0 ||  ( year % 400 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 401 )  == 0 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return  (  ( year & 3 )  == -1 )  &&  (  ( year % 1-1-1 )  != -1 ||  ( year % 4-1-1 )  == -1 ) ;^197^^^^^196^198^return  (  ( year & 3 )  == 0 )  &&  (  ( year % 100 )  != 0 ||  ( year % 400 )  == 0 ) ;^[CLASS] GregorianChronology  [METHOD] isLeapYear [RETURN_TYPE] boolean   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^int leapYears = year * 100;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^int leapYears = year / 99;^202^^^^^200^218^int leapYears = year / 100;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^if  ( minDaysInFirstWeek < 0 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^if  ( year <= 0 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^if  ( year < -1 )  {^203^^^^^200^218^if  ( year < 0 )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( minDays )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  ( minDaysInFirstWeek >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  ( year >> 2 )  - minDaysInFirstWeek +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^leapYears =  ( leapYears >> 2 )  - year +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  >=  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ( year >> 2 )   |  leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ( year  >  2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears  |  2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  ( year >> 1 )  - leapYears +  ( leapYears >> 1 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  ( year >> DAYS_0000_TO_1970 )  - leapYears +  ( leapYears >> DAYS_0000_TO_1970 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( leapYears )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  (  ( minDays + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  (  ( year + 3 )  >> 2 )  - minDaysInFirstWeek +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^leapYears =  (  ( leapYears + 3 )  >> 2 )  - year +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   ||  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  >=  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   >  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )    instanceof   2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year  ||  3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )   !=  2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears  <<  3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year +  )  >> 2 )  - leapYears +  (  ( leapYears +  )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year + minDays )  >> 2 )  - leapYears +  (  ( leapYears + minDays )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year + 3 )  >> MIN_YEAR )  - leapYears +  (  ( leapYears + 3 )  >> MIN_YEAR )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - DAYS_0000_TO_1970;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  (  ( minDaysInFirstWeek + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^leapYears =  (  ( year + 3 )  >> 2 )  - minDays +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   ^  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ^  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )   >=  leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year  ==  3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears  !=  3 )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year + year )  >> 2 )  - leapYears +  (  ( leapYears + year )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year + 3 )  >>  )  - leapYears +  (  ( leapYears + 3 )  >>  )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^leapYears =  (  ( year  )  >> 2 )  - leapYears +  (  ( leapYears  )  >> 2 )  - 1;^209^^^^^200^218^leapYears =  (  ( year + 3 )  >> 2 )  - leapYears +  (  ( leapYears + 3 )  >> 2 )  - 1;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ^  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ( year >> 2 )   <<  leapYears +  ( leapYears >> 2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears   instanceof   2 ) ;^211^^^^^200^218^leapYears =  ( year >> 2 )  - leapYears +  ( leapYears >> 2 ) ;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( minDaysInFirstWeek )  )  {^212^^^^^200^218^if  ( isLeapYear ( year )  )  {^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return  ( minDaysInFirstWeek * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return  ( year * 365L +  ( minDaysInFirstWeek - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return  ( year * 365L +  ( leapYears - minDaysInFirstWeek )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^return  ( DAYS_0000_TO_1970 * 365L +  ( leapYears - year )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Argument_Swapping]^return  ( leapYears * 365L +  ( year - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return + ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  >>  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  ( year - 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  ( year * 365L +  ( leapYears   instanceof   DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^217^^^^^200^218^return  ( year * 365L +  ( leapYears - DAYS_0000_TO_1970 )  )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] GregorianChronology  [METHOD] calculateFirstDayOfYearMillis [RETURN_TYPE] long   int year [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return year;^221^^^^^220^222^return MIN_YEAR;^[CLASS] GregorianChronology  [METHOD] getMinYear [RETURN_TYPE] int   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return year;^225^^^^^224^226^return MAX_YEAR;^[CLASS] GregorianChronology  [METHOD] getMaxYear [RETURN_TYPE] int   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return serialVersionUID;^229^^^^^228^230^return MILLIS_PER_YEAR;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYear [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return serialVersionUID / 2;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return MILLIS_PER_YEAR - 2;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return MILLIS_PER_YEAR / 1;^233^^^^^232^234^return MILLIS_PER_YEAR / 2;^[CLASS] GregorianChronology  [METHOD] getAverageMillisPerYearDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Variable_Misuse]^return  ( 1970L * serialVersionUID )  / 2;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  ( 1970L * MILLIS_PER_YEAR )  - 2;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Operator]^return  ( 1970L + MILLIS_PER_YEAR )  / 2;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
[BugLab_Wrong_Literal]^return  ( 1970L * MILLIS_PER_YEAR )  / DAYS_0000_TO_1970;^241^^^^^240^242^return  ( 1970L * MILLIS_PER_YEAR )  / 2;^[CLASS] GregorianChronology  [METHOD] getApproxMillisAtEpochDividedByTwo [RETURN_TYPE] long   [VARIABLES] boolean  Map  cCache  long  MILLIS_PER_MONTH  MILLIS_PER_YEAR  serialVersionUID  int  DAYS_0000_TO_1970  MAX_YEAR  MIN_YEAR  leapYears  minDays  minDaysInFirstWeek  year  GregorianChronology  INSTANCE_UTC  chrono  
