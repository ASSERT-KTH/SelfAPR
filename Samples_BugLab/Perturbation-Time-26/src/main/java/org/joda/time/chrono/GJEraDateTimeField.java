[BugLab_Variable_Misuse]^iChronology = iChronology;^47^^^^^45^48^iChronology = chronology;^[CLASS] GJEraDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return true;^51^^^^^50^52^return false;^[CLASS] GJEraDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( iChronology.getYear ( serialVersionUID )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( chronology.getYear ( instant )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^if  ( instant.getYear ( iChronology )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Operator]^if  ( iChronology.getYear ( instant )  < 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^if  ( iChronology.getYear ( instant )  <= 4 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return GJLocaleSymbols.forLocale ( fieldValue ) .eraValueToText ( locale ) ;^68^^^^^67^69^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText ( fieldValue ) ;^[CLASS] GJEraDateTimeField  [METHOD] getAsText [RETURN_TYPE] String   int fieldValue Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  fieldValue  
[BugLab_Variable_Misuse]^FieldUtils.verifyValueBounds ( this, year, DateTimeConstants.BCE, DateTimeConstants.CE ) ;^80^^^^^79^89^FieldUtils.verifyValueBounds ( this, era, DateTimeConstants.BCE, DateTimeConstants.CE ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^int oldEra = get ( serialVersionUID ) ;^82^^^^^79^89^int oldEra = get ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^if  ( oldEra != oldEra )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Argument_Swapping]^if  ( era != oldEra )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Wrong_Operator]^if  ( oldEra == era )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^return iChronology.setYear ( serialVersionUID, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^return iChronology.setYear ( instant, -oldEra ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Argument_Swapping]^return instant.setYear ( iChronology, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^int year = iChronology.getYear ( serialVersionUID ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^int year = chronology.getYear ( instant ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Argument_Swapping]^int year = instant.getYear ( iChronology ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^return chronology.setYear ( instant, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^return serialVersionUID;^87^^^^^79^89^return instant;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[BugLab_Variable_Misuse]^return set ( serialVersionUID, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[BugLab_Argument_Swapping]^return set ( text, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( instant )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[BugLab_Argument_Swapping]^return set ( instant, GJLocaleSymbols.forLocale ( text ) .eraTextToValue ( locale )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[BugLab_Argument_Swapping]^return set ( locale, GJLocaleSymbols.forLocale ( instant ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[BugLab_Variable_Misuse]^if  ( get ( serialVersionUID )  == DateTimeConstants.CE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Operator]^if  ( get ( instant )  != DateTimeConstants.CE )  {^96^^^^^95^101^if  ( get ( instant )  == DateTimeConstants.CE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.setYear ( 0, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return iChronology.setYear ( -1, 1 ) ;^97^^^^^95^101^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( get ( serialVersionUID )  == DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Operator]^if  ( get ( instant )  > DateTimeConstants.BCE )  {^104^^^^^103^109^if  ( get ( instant )  == DateTimeConstants.BCE )  {^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.setYear ( 0, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return iChronology.setYear ( 0, 0 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return iChronology.setYear ( -1, 1 ) ;^105^^^^^103^109^return iChronology.setYear ( 0, 1 ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return roundFloor ( serialVersionUID ) ;^113^^^^^111^114^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return roundFloor ( serialVersionUID ) ;^118^^^^^116^119^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return roundFloor ( serialVersionUID ) ;^123^^^^^121^124^return roundFloor ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] roundHalfEven [RETURN_TYPE] long   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.era (  ) ;^150^^^^^149^151^return iChronology.era (  ) ;^[CLASS] GJEraDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
