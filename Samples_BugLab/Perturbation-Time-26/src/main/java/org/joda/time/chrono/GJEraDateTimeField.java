[buglab_swap_variables]^if  ( instant.getYear ( iChronology )  <= 0 )  {^60^^^^^59^65^if  ( iChronology.getYear ( instant )  <= 0 )  {^[CLASS] GJEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[buglab_swap_variables]^return GJLocaleSymbols.forLocale ( fieldValue ) .eraValueToText ( locale ) ;^68^^^^^67^69^return GJLocaleSymbols.forLocale ( locale ) .eraValueToText ( fieldValue ) ;^[CLASS] GJEraDateTimeField  [METHOD] getAsText [RETURN_TYPE] String   int fieldValue Locale locale [VARIABLES] Locale  locale  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  fieldValue  
[buglab_swap_variables]^if  ( era != oldEra )  {^83^^^^^79^89^if  ( oldEra != era )  {^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[buglab_swap_variables]^return iChronology.setYear (  -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[buglab_swap_variables]^return instant.setYear ( iChronology, -year ) ;^85^^^^^79^89^return iChronology.setYear ( instant, -year ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[buglab_swap_variables]^int year = instant.getYear ( iChronology ) ;^84^^^^^79^89^int year = iChronology.getYear ( instant ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int era [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  era  oldEra  year  
[buglab_swap_variables]^return set ( locale, GJLocaleSymbols.forLocale ( instant ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[buglab_swap_variables]^return set (  GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[buglab_swap_variables]^return set ( instant, GJLocaleSymbols.forLocale ( text ) .eraTextToValue ( locale )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
[buglab_swap_variables]^return set ( text, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( instant )  ) ;^92^^^^^91^93^return set ( instant, GJLocaleSymbols.forLocale ( locale ) .eraTextToValue ( text )  ) ;^[CLASS] GJEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant String text Locale locale [VARIABLES] Locale  locale  String  text  boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  
