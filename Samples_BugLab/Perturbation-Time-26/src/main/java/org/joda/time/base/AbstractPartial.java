[BugLab_Wrong_Operator]^for  ( int i = 0; i == result.length; i++ )  {^91^^^^^89^95^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getFieldTypes [RETURN_TYPE] DateTimeFieldType[]   [VARIABLES] boolean  DateTimeFieldType[]  result  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < result.length; i++ )  {^91^^^^^89^95^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getFieldTypes [RETURN_TYPE] DateTimeFieldType[]   [VARIABLES] boolean  DateTimeFieldType[]  result  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= result.length; i++ )  {^117^^^^^115^121^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getFields [RETURN_TYPE] DateTimeField[]   [VARIABLES] boolean  DateTimeField[]  result  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < result.length; i++ )  {^117^^^^^115^121^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getFields [RETURN_TYPE] DateTimeField[]   [VARIABLES] boolean  DateTimeField[]  result  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < result.length; i++ )  {^117^^^^^115^121^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getFields [RETURN_TYPE] DateTimeField[]   [VARIABLES] boolean  DateTimeField[]  result  int  i  
[BugLab_Argument_Swapping]^for  ( resultnt i = 0; i < i.length; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < result.length.length; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < result; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == result.length; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < result.length; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[BugLab_Wrong_Operator]^return  ( indexOf ( type )  == -1 ) ;^160^^^^^159^161^return  ( indexOf ( type )  != -1 ) ;^[CLASS] AbstractPartial  [METHOD] isSupported [RETURN_TYPE] boolean   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  
[BugLab_Variable_Misuse]^if  ( getFieldType ( isize )  == type )  {^171^^^^^169^176^if  ( getFieldType ( i )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getFieldType ( type )  == i )  {^171^^^^^169^176^if  ( getFieldType ( i )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getFieldType ( i )  != type )  {^171^^^^^169^176^if  ( getFieldType ( i )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Variable_Misuse]^return isize;^172^^^^^169^176^return i;^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^if  ( index <= -1 )  {^188^^^^^186^192^if  ( index == -1 )  {^[CLASS] AbstractPartial  [METHOD] indexOfSupported [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  index  
[BugLab_Wrong_Literal]^if  ( index == -index )  {^188^^^^^186^192^if  ( index == -1 )  {^[CLASS] AbstractPartial  [METHOD] indexOfSupported [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  index  
[BugLab_Variable_Misuse]^if  ( getFieldType ( isize ) .getDurationType (  )  == type )  {^203^^^^^201^208^if  ( getFieldType ( i ) .getDurationType (  )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getFieldType ( type ) .getDurationType (  )  == i )  {^203^^^^^201^208^if  ( getFieldType ( i ) .getDurationType (  )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getFieldType ( i ) .getDurationType (  )  != type )  {^203^^^^^201^208^if  ( getFieldType ( i ) .getDurationType (  )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Variable_Misuse]^return isize;^204^^^^^201^208^return i;^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Wrong_Literal]^return -isize;^207^^^^^201^208^return -1;^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[BugLab_Wrong_Operator]^if  ( index < -1 )  {^220^^^^^218^224^if  ( index == -1 )  {^[CLASS] AbstractPartial  [METHOD] indexOfSupported [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  index  
[BugLab_Wrong_Literal]^if  ( index == -2 )  {^220^^^^^218^224^if  ( index == -1 )  {^[CLASS] AbstractPartial  [METHOD] indexOfSupported [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  index  
[BugLab_Argument_Swapping]^long resolved = instantMillis.set ( this, chrono ) ;^242^^^^^239^244^long resolved = chrono.set ( this, instantMillis ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[BugLab_Variable_Misuse]^long resolved = chrono.set ( this, resolved ) ;^242^^^^^239^244^long resolved = chrono.set ( this, instantMillis ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[BugLab_Variable_Misuse]^return new DateTime ( instantMillis, chrono ) ;^243^^^^^239^244^return new DateTime ( resolved, chrono ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[BugLab_Argument_Swapping]^return new DateTime ( chrono, resolved ) ;^243^^^^^239^244^return new DateTime ( resolved, chrono ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[BugLab_Wrong_Operator]^if  ( this != partial )  {^255^^^^^254^271^if  ( this == partial )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^return false;^256^^^^^254^271^return true;^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( partial instanceof ReadablePartial >= false )  {^258^^^^^254^271^if  ( partial instanceof ReadablePartial == false )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( partial  ||  ReadablePartial == false )  {^258^^^^^254^271^if  ( partial instanceof ReadablePartial == false )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^if  ( partial instanceof ReadablePartial == true )  {^258^^^^^254^271^if  ( partial instanceof ReadablePartial == false )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^return true;^259^^^^^254^271^return false;^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( size (  )  == other.size (  )  )  {^262^^^^^254^271^if  ( size (  )  != other.size (  )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^return true;^263^^^^^254^271^return false;^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Variable_Misuse]^if  ( getValue ( isize )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getValue ( other )  != i.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  != other.getValue ( i )  && getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  > other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  >= other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^return true;^267^^^^^254^271^return false;^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = size (  ) ; i < isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  >= other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  == other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = -1, isize = size (  ) ; i < isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[BugLab_Wrong_Literal]^int total = i;^280^^^^^279^287^int total = 157;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^for  ( totalnt i = 0, isize = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^for  ( int i = 0, total = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * isize + getValue ( i ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * total + getValue ( isize ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Argument_Swapping]^total = 23 * i + getValue ( total ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^total = 23 / total + getValue ( i ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Literal]^total = i * total + getValue ( i ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * isize + getFieldType ( i ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * total + getFieldType ( isize ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Argument_Swapping]^total = 23 * i + getFieldType ( total ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^total = 23 * total + getFieldType ( i ) .hashCode (  &  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^total = 23 - total + getFieldType ( i ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * total + getValue ( total ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^total = 23 * total + getFieldType ( total ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^total = 23 - total + getValue ( i ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Literal]^total = isize * total + getValue ( i ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^total = 23 * total + getFieldType ( i ) .hashCode (  |  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Variable_Misuse]^return isize;^286^^^^^279^287^return total;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[BugLab_Wrong_Operator]^if  ( this <= other )  {^316^^^^^315^337^if  ( this == other )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return ;^317^^^^^315^337^return 0;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return isize;^317^^^^^315^337^return 0;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( size (  )  >= other.size (  )  )  {^319^^^^^315^337^if  ( size (  )  != other.size (  )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Variable_Misuse]^if  ( getFieldType ( isize )  != other.getFieldType ( i )  )  {^323^^^^^315^337^if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getFieldType ( other )  != i.getFieldType ( i )  )  {^323^^^^^315^337^if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getFieldType ( i )  == other.getFieldType ( i )  )  {^323^^^^^315^337^if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = 1, isize = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getFieldType ( i )  < other.getFieldType ( i )  )  {^323^^^^^315^337^if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = i, isize = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Variable_Misuse]^if  ( getValue ( isize )  > other.getValue ( i )  )  {^329^^^^^315^337^if  ( getValue ( i )  > other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getValue ( other )  > i.getValue ( i )  )  {^329^^^^^315^337^if  ( getValue ( i )  > other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  >= other.getValue ( i )  )  {^329^^^^^315^337^if  ( getValue ( i )  > other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return 0;^330^^^^^315^337^return 1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Variable_Misuse]^if  ( getValue ( isize )  < other.getValue ( i )  )  {^332^^^^^315^337^if  ( getValue ( i )  < other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Argument_Swapping]^if  ( getValue ( other )  < i.getValue ( i )  )  {^332^^^^^315^337^if  ( getValue ( i )  < other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( getValue ( i )  <= other.getValue ( i )  )  {^332^^^^^315^337^if  ( getValue ( i )  < other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return -2;^333^^^^^315^337^return -1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Variable_Misuse]^for  ( isizent i = 0, isize = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Argument_Swapping]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^for  ( int i = 0, isize = size (  ) ; i <= isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = isize, isize = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return i;^330^^^^^315^337^return 1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return -isize;^333^^^^^315^337^return -1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return 2;^330^^^^^315^337^return 1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return -i;^333^^^^^315^337^return -1;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^for  ( int i = 1, isize = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Literal]^return isize;^336^^^^^315^337^return 0;^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[BugLab_Wrong_Operator]^if  ( partial != null )  {^355^^^^^354^359^if  ( partial == null )  {^[CLASS] AbstractPartial  [METHOD] isAfter [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^return compareTo ( partial )  < 0;^358^^^^^354^359^return compareTo ( partial )  > 0;^[CLASS] AbstractPartial  [METHOD] isAfter [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Literal]^return compareTo ( partial )  > -1;^358^^^^^354^359^return compareTo ( partial )  > 0;^[CLASS] AbstractPartial  [METHOD] isAfter [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^if  ( partial != null )  {^377^^^^^376^381^if  ( partial == null )  {^[CLASS] AbstractPartial  [METHOD] isBefore [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^return compareTo ( partial )  > 0;^380^^^^^376^381^return compareTo ( partial )  < 0;^[CLASS] AbstractPartial  [METHOD] isBefore [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Literal]^return compareTo ( partial )  < -1;^380^^^^^376^381^return compareTo ( partial )  < 0;^[CLASS] AbstractPartial  [METHOD] isBefore [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^if  ( partial != null )  {^399^^^^^398^403^if  ( partial == null )  {^[CLASS] AbstractPartial  [METHOD] isEqual [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^return compareTo ( partial )  >= 0;^402^^^^^398^403^return compareTo ( partial )  == 0;^[CLASS] AbstractPartial  [METHOD] isEqual [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Literal]^return compareTo ( partial )  == -1;^402^^^^^398^403^return compareTo ( partial )  == 0;^[CLASS] AbstractPartial  [METHOD] isEqual [RETURN_TYPE] boolean   ReadablePartial partial [VARIABLES] ReadablePartial  partial  boolean  
[BugLab_Wrong_Operator]^if  ( formatter != null )  {^414^^^^^413^418^if  ( formatter == null )  {^[CLASS] AbstractPartial  [METHOD] toString [RETURN_TYPE] String   DateTimeFormatter formatter [VARIABLES] boolean  DateTimeFormatter  formatter  
