[buglab_swap_variables]^for  ( result.lengthnt i = 0; i < i; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[buglab_swap_variables]^for  ( resultnt i = 0; i < i.length; i++ )  {^133^^^^^131^137^for  ( int i = 0; i < result.length; i++ )  {^[CLASS] AbstractPartial  [METHOD] getValues [RETURN_TYPE] int[]   [VARIABLES] boolean  int[]  result  int  i  
[buglab_swap_variables]^if  ( getFieldType ( type )  == i )  {^171^^^^^169^176^if  ( getFieldType ( i )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^170^^^^^169^176^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DateTimeFieldType type [VARIABLES] boolean  DateTimeFieldType  type  int  i  isize  
[buglab_swap_variables]^if  ( getFieldType ( type ) .getDurationType (  )  == i )  {^203^^^^^201^208^if  ( getFieldType ( i ) .getDurationType (  )  == type )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^202^^^^^201^208^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] indexOf [RETURN_TYPE] int   DurationFieldType type [VARIABLES] boolean  DurationFieldType  type  int  i  isize  
[buglab_swap_variables]^long resolved = instantMillis.set ( this, chrono ) ;^242^^^^^239^244^long resolved = chrono.set ( this, instantMillis ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[buglab_swap_variables]^long resolved = chrono.set ( this ) ;^242^^^^^239^244^long resolved = chrono.set ( this, instantMillis ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[buglab_swap_variables]^return new DateTime ( chrono, resolved ) ;^243^^^^^239^244^return new DateTime ( resolved, chrono ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[buglab_swap_variables]^return new DateTime (  chrono ) ;^243^^^^^239^244^return new DateTime ( resolved, chrono ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[buglab_swap_variables]^return new DateTime ( resolved ) ;^243^^^^^239^244^return new DateTime ( resolved, chrono ) ;^[CLASS] AbstractPartial  [METHOD] toDateTime [RETURN_TYPE] DateTime   ReadableInstant baseInstant [VARIABLES] ReadableInstant  baseInstant  boolean  Chronology  chrono  long  instantMillis  resolved  
[buglab_swap_variables]^if  ( getValue ( other )  != i.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^266^^^^^254^271^if  ( getValue ( i )  != other.getValue ( i )  || getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^265^^^^^254^271^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] equals [RETURN_TYPE] boolean   Object partial [VARIABLES] ReadablePartial  other  boolean  Object  partial  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^281^^^^^279^287^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[buglab_swap_variables]^total = 23 * i + getValue ( total ) ;^282^^^^^279^287^total = 23 * total + getValue ( i ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[buglab_swap_variables]^total = 23 * i + getFieldType ( total ) .hashCode (  ) ;^283^^^^^279^287^total = 23 * total + getFieldType ( i ) .hashCode (  ) ;^[CLASS] AbstractPartial  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  int  i  isize  total  
[buglab_swap_variables]^if  ( getFieldType ( other )  != i.getFieldType ( i )  )  {^323^^^^^315^337^if  ( getFieldType ( i )  != other.getFieldType ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^322^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^if  ( getValue ( other )  > i.getValue ( i )  )  {^329^^^^^315^337^if  ( getValue ( i )  > other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^if  ( getValue ( other )  < i.getValue ( i )  )  {^332^^^^^315^337^if  ( getValue ( i )  < other.getValue ( i )  )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( isizent i = 0, i = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0size = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
[buglab_swap_variables]^for  ( int i = 0 = size (  ) ; i < isize; i++ )  {^328^^^^^315^337^for  ( int i = 0, isize = size (  ) ; i < isize; i++ )  {^[CLASS] AbstractPartial  [METHOD] compareTo [RETURN_TYPE] int   ReadablePartial other [VARIABLES] ReadablePartial  other  boolean  int  i  isize  
