[BugLab_Wrong_Operator]^if  ( field != null )  {^41^^^^^40^51^if  ( field == null )  {^[CLASS] StrictDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field [VARIABLES] long  serialVersionUID  DateTimeField  field  boolean  
[BugLab_Wrong_Operator]^if  ( field  >>  LenientDateTimeField )  {^44^^^^^40^51^if  ( field instanceof LenientDateTimeField )  {^[CLASS] StrictDateTimeField  [METHOD] getInstance [RETURN_TYPE] DateTimeField   DateTimeField field [VARIABLES] long  serialVersionUID  DateTimeField  field  boolean  
[BugLab_Wrong_Literal]^return true;^58^^^^^57^59^return false;^[CLASS] StrictDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  boolean  
[BugLab_Variable_Misuse]^FieldUtils.verifyValueBounds ( this, value, getMinimumValue ( serialVersionUID ) , getMaximumValue ( instant )  ) ;^67^68^^^^66^70^FieldUtils.verifyValueBounds ( this, value, getMinimumValue ( instant ) , getMaximumValue ( instant )  ) ;^[CLASS] StrictDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] long  instant  serialVersionUID  int  value  boolean  
[BugLab_Argument_Swapping]^FieldUtils.verifyValueBounds ( this, instant, getMinimumValue ( value ) , getMaximumValue ( instant )  ) ;^67^68^^^^66^70^FieldUtils.verifyValueBounds ( this, value, getMinimumValue ( instant ) , getMaximumValue ( instant )  ) ;^[CLASS] StrictDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] long  instant  serialVersionUID  int  value  boolean  
[BugLab_Variable_Misuse]^( this, value, getMinimumValue ( serialVersionUID ) , getMaximumValue ( instant )  ) ;^68^^^^^66^70^( this, value, getMinimumValue ( instant ) , getMaximumValue ( instant )  ) ;^[CLASS] StrictDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int value [VARIABLES] long  instant  serialVersionUID  int  value  boolean  
