[BugLab_Variable_Misuse]^super ( DateTimeFieldType.year (  ) , iChronology.getAverageMillisPerYear (  )  ) ;^45^^^^^44^47^super ( DateTimeFieldType.year (  ) , chronology.getAverageMillisPerYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^iChronology = iChronology;^46^^^^^44^47^iChronology = chronology;^[CLASS] BasicYearDateTimeField  [METHOD] <init> [RETURN_TYPE] BasicChronology)   BasicChronology chronology [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return true;^50^^^^^49^51^return false;^[CLASS] BasicYearDateTimeField  [METHOD] isLenient [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return iChronology.getYear ( serialVersionUID ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.getYear ( instant ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return instant.getYear ( iChronology ) ;^54^^^^^53^55^return iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] long  instant  serialVersionUID  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( thisYear == 0 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Wrong_Operator]^if  ( years < 0 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Wrong_Literal]^if  ( years == 1 )  {^58^^^^^57^64^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^return serialVersionUID;^59^^^^^57^64^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^int thisYear = get ( serialVersionUID ) ;^61^^^^^57^64^int thisYear = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^int newYear = FieldUtils.safeAdd ( years, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^int newYear = FieldUtils.safeAdd ( thisYear, thisYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Argument_Swapping]^int newYear = FieldUtils.safeAdd ( years, thisYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^int newYear = FieldUtils.safeAdd ( newYear, years ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^int newYear = FieldUtils.safeAdd ( thisYear, newYear ) ;^62^^^^^57^64^int newYear = FieldUtils.safeAdd ( thisYear, years ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^return set ( instant, years ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Argument_Swapping]^return set ( newYear, instant ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^return set ( serialVersionUID, newYear ) ;^63^^^^^57^64^return set ( instant, newYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  BasicChronology  chronology  iChronology  int  newYear  thisYear  years  
[BugLab_Variable_Misuse]^return add ( serialVersionUID, FieldUtils.safeToInt ( years )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return add ( instant, FieldUtils.safeToInt ( serialVersionUID )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return add ( years, FieldUtils.safeToInt ( instant )  ) ;^67^^^^^66^68^return add ( instant, FieldUtils.safeToInt ( years )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( wrappedYear == 0 )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Wrong_Operator]^if  ( years <= 0 )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Wrong_Literal]^if  ( years == wrappedYear )  {^71^^^^^70^79^if  ( years == 0 )  {^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^return years;^72^^^^^70^79^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^int thisYear = iChronology.getYear ( years ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^int thisYear = chronology.getYear ( instant ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^int thisYear = instant.getYear ( iChronology ) ;^75^^^^^70^79^int thisYear = iChronology.getYear ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^int wrappedYear = FieldUtils.getWrappedValue ( years, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^int wrappedYear = FieldUtils.getWrappedValue ( iChronology, years, thisYear.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^int wrappedYear = FieldUtils.getWrappedValue ( years, thisYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, wrappedYear, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, iChronology, years.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^76^77^^^^70^79^int wrappedYear = FieldUtils.getWrappedValue ( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^( thisYear, years, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^77^^^^^70^79^( thisYear, years, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^return set ( years, wrappedYear ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Variable_Misuse]^return set ( instant, years ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^return set ( wrappedYear, instant ) ;^78^^^^^70^79^return set ( instant, wrappedYear ) ;^[CLASS] BasicYearDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  thisYear  wrappedYear  years  
[BugLab_Argument_Swapping]^FieldUtils.verifyValueBounds ( this, iChronology, year.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^82^83^^^^81^85^FieldUtils.verifyValueBounds ( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^( this, year, chronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^83^^^^^81^85^( this, year, iChronology.getMinYear (  ) , iChronology.getMaxYear (  )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^return iChronology.setYear ( years, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^return chronology.setYear ( instant, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^return instant.setYear ( iChronology, year ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^return iChronology.setYear ( year, instant ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^return year.setYear ( instant, iChronology ) ;^84^^^^^81^85^return iChronology.setYear ( instant, year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] boolean  long  instant  serialVersionUID  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^if  ( years < subtrahendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( minuendInstant < years )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^if  ( subtrahendInstant < minuendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Operator]^if  ( minuendInstant <= subtrahendInstant )  {^88^^^^^87^92^if  ( minuendInstant < subtrahendInstant )  {^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return -iChronology.getYearDifference ( years, minuendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return -iChronology.getYearDifference ( subtrahendInstant, years ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return -iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^89^^^^^87^92^return -iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return iChronology.getYearDifference ( years, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return iChronology.getYearDifference ( minuendInstant, years ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return iChronology.getYearDifference ( subtrahendInstant, minuendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return minuendInstant.getYearDifference ( iChronology, subtrahendInstant ) ;^91^^^^^87^92^return iChronology.getYearDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return instant.isLeapYear ( get ( iChronology )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.isLeapYear ( get ( instant )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return iChronology.isLeapYear ( get ( years )  ) ;^99^^^^^98^100^return iChronology.isLeapYear ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] isLeap [RETURN_TYPE] boolean   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( iChronology.isLeapYear ( get ( years )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^if  ( chronology.isLeapYear ( get ( instant )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^if  ( instant.isLeapYear ( get ( iChronology )  )  )  {^103^^^^^102^108^if  ( iChronology.isLeapYear ( get ( instant )  )  )  {^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Literal]^return 3;^106^^^^^102^108^return 0;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapAmount [RETURN_TYPE] int   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.days (  ) ;^111^^^^^110^112^return iChronology.days (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getLeapDurationField [RETURN_TYPE] DurationField   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.getMinYear (  ) ;^115^^^^^114^116^return iChronology.getMinYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.getMaxYear (  ) ;^119^^^^^118^120^return iChronology.getMaxYear (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] getMaximumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.getYearMillis ( get ( instant )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Argument_Swapping]^return instant.getYearMillis ( get ( iChronology )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return iChronology.getYearMillis ( get ( years )  ) ;^123^^^^^122^124^return iChronology.getYearMillis ( get ( instant )  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^int year = get ( years ) ;^127^^^^^126^134^int year = get ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^long yearStartMillis = chronology.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^long iChronologyStartMillis = year.getYearMillis ( year ) ;^128^^^^^126^134^long yearStartMillis = iChronology.getYearMillis ( year ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^if  ( years != yearStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^if  ( instant != subtrahendInstant )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^if  ( yearStartMillis != instant )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^if  ( year != instantStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Operator]^if  ( instant <= yearStartMillis )  {^129^^^^^126^134^if  ( instant != yearStartMillis )  {^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^instant = chronology.getYearMillis ( year + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Argument_Swapping]^instant = year.getYearMillis ( iChronology + 1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Operator]^instant = iChronology.getYearMillis ( year  <  1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Literal]^instant = iChronology.getYearMillis ( year  ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Operator]^instant = iChronology.getYearMillis ( year  >=  1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Operator]^instant = iChronology.getYearMillis ( year  >  1 ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Wrong_Literal]^instant = iChronology.getYearMillis ( year + year ) ;^131^^^^^126^134^instant = iChronology.getYearMillis ( year + 1 ) ;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^return yearStartMillis;^133^^^^^126^134^return instant;^[CLASS] BasicYearDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  int  year  
[BugLab_Variable_Misuse]^return yearStartMillis - roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Wrong_Operator]^return instant  ||  roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return years - roundFloor ( instant ) ;^137^^^^^136^138^return instant - roundFloor ( instant ) ;^[CLASS] BasicYearDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
[BugLab_Variable_Misuse]^return chronology.year (  ) ;^144^^^^^143^145^return iChronology.year (  ) ;^[CLASS] BasicYearDateTimeField  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  yearStartMillis  years  BasicChronology  chronology  iChronology  boolean  
