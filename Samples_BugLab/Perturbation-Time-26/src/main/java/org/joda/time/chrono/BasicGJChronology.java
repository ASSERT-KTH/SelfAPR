[BugLab_Wrong_Operator]^private / static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[BugLab_Wrong_Operator]^private static final long FEB_29 =  ( 31L + 29  ==  1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[BugLab_Wrong_Operator]^private static final long FEB_29 =  ( 31L  >=  29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final long FEB_29 =  ( 31L  - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final long FEB_29 =  ( 31L + 29  )  * DateTimeConstants.MILLIS_PER_DAY;^50^^^^^45^55^private static final long FEB_29 =  ( 31L + 29 - 1 )  * DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology   [VARIABLES] 
[BugLab_Argument_Swapping]^super ( minDaysInFirstWeek, param, base ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[BugLab_Argument_Swapping]^super ( param, base, minDaysInFirstWeek ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[BugLab_Argument_Swapping]^super ( base, minDaysInFirstWeek, param ) ;^75^^^^^74^76^super ( base, param, minDaysInFirstWeek ) ;^[CLASS] BasicGJChronology  [METHOD] <init> [RETURN_TYPE] Object,int)   Chronology base Object param int minDaysInFirstWeek [VARIABLES] boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  Object  param  Chronology  base  long  FEB_29  serialVersionUID  int  minDaysInFirstWeek  
[BugLab_Variable_Misuse]^int i =  ( int )  (  ( serialVersionUID - getYearMillis ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Argument_Swapping]^int i =  ( int )  (  ( year - getYearMillis ( millis )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^int i =  ( int )  (  ( millis - getYearMillis ( year )  )   >  10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^int i =  ( int )  (  ( millis  <  getYearMillis ( year )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 9 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Variable_Misuse]^int i =  ( int )  (  ( millis - getYearMillis ( i )  )  >> 10 ) ;^88^^^^^79^109^int i =  ( int )  (  ( millis - getYearMillis ( year )  )  >> 10 ) ;^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Argument_Swapping]^return ( yearsLeapYear ( i )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i <= 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 + 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i > 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 / 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i > 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return + ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return - ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return ( isLeapYear ( year )  ) ?  (  ( i == 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Operator]^return / ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < i * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 *  ) ?  (  ( i < 91 *  )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * year ) ?  (  ( i < 91 * year )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < year82 * 84375 ) ?  (  ( i < 9year * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * i ) ?  (  ( i < 91 * i )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 183 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84275 ) ?  (  ( i < 91 * 84275 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84376 ) ?  (  ( i < 91 * 84376 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 8year375 ) ?  (  ( i < 91 * 8year375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 8437i ) ?  (  ( i < 91 * 8437i )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84365 ) ?  (  ( i < 91 * 84365 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 192 * 94375 ) ?  (  ( i < 91 * 94375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 81 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < i82 * 84375 ) ?  (  ( i < 9i * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 181 * 84375 ) ?  (  ( i < 91 * 84375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84i75 ) ?  (  ( i < 91 * 84i75 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84374 ) ?  (  ( i < 91 * 84374 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Wrong_Literal]^return ( isLeapYear ( year )  ) ?  (  ( i < 1year2 * year4375 ) ?  (  ( i < 91 * year4375 )^93^94^95^96^^79^109^return ( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Variable_Misuse]^( isLeapYear ( i )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^94^95^96^97^^79^109^( isLeapYear ( year )  ) ?  (  ( i < 182 * 84375 ) ?  (  ( i < 91 * 84375 ) ?  (  ( i < 31 * 84375 )  ? 1 :  ( i < 60 * 84375 )  ? 2 : 3 )^[CLASS] BasicGJChronology  [METHOD] getMonthOfYear [RETURN_TYPE] int   long millis int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  i  year  
[BugLab_Variable_Misuse]^return MIN_DAYS_PER_MONTH_ARRAY[year - 1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MIN_DAYS_PER_MONTH_ARRAY[month  &  1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MIN_DAYS_PER_MONTH_ARRAY[month - year];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MAX_DAYS_PER_MONTH_ARRAY[year - 1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MAX_DAYS_PER_MONTH_ARRAY[month  &&  1];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MAX_DAYS_PER_MONTH_ARRAY[month ];^121^^^^^119^125^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MIN_DAYS_PER_MONTH_ARRAY[month  ^  1];^123^^^^^119^125^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( month )  )  {^120^^^^^119^125^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getDaysInYearMonth [RETURN_TYPE] int   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MIN_DAYS_PER_MONTH_ARRAY[month - 1];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[BugLab_Wrong_Operator]^return MAX_DAYS_PER_MONTH_ARRAY[month  |  1];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[BugLab_Wrong_Literal]^return MAX_DAYS_PER_MONTH_ARRAY[month ];^129^^^^^128^130^return MAX_DAYS_PER_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMax [RETURN_TYPE] int   int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  millis  serialVersionUID  int  month  
[BugLab_Variable_Misuse]^return  ( value > 28 ? getDaysInMonthMax ( serialVersionUID )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[BugLab_Argument_Swapping]^return  ( instant > 28 ? getDaysInMonthMax ( value )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[BugLab_Wrong_Operator]^return  ( value >= 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[BugLab_Wrong_Literal]^return  ( value > 27 ? getDaysInMonthMax ( instant )  : 27 ) ;^134^^^^^133^135^return  ( value > 28 ? getDaysInMonthMax ( instant )  : 28 ) ;^[CLASS] BasicGJChronology  [METHOD] getDaysInMonthMaxForSet [RETURN_TYPE] int   long instant int value [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  value  
[BugLab_Variable_Misuse]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[year - 1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month  <  1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month ];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[year - 1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month  <<  1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - year];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month  !=  1];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month ];^140^^^^^138^144^return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Operator]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month  &&  1];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Wrong_Literal]^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - month];^142^^^^^138^144^return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( month )  )  {^139^^^^^138^144^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] getTotalMillisByYearMonth [RETURN_TYPE] long   int year int month [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  serialVersionUID  int  month  year  
[BugLab_Variable_Misuse]^int minuendYear = getYear ( subtrahendRem ) ;^148^^^^^147^171^int minuendYear = getYear ( minuendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^int subtrahendYear = getYear ( subtrahendRem ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^int subtrahendYear = getYear ( minuendRem ) ;^149^^^^^147^171^int subtrahendYear = getYear ( subtrahendInstant ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^long minuendRem = subtrahendRem - getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^long minuendRem = minuendInstant - getYearMillis ( subtrahendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^long minuendRem = minuendYear - getYearMillis ( minuendInstant ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^long minuendRem = minuendInstant  ==  getYearMillis ( minuendYear ) ;^152^^^^^147^171^long minuendRem = minuendInstant - getYearMillis ( minuendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^long subtrahendRem = minuendRem - getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^long subtrahendRem = subtrahendInstant - getYearMillis ( minuendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^long subtrahendRem = subtrahendYear - getYearMillis ( subtrahendInstant ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^long subtrahendRem = subtrahendInstant  ||  getYearMillis ( subtrahendYear ) ;^153^^^^^147^171^long subtrahendRem = subtrahendInstant - getYearMillis ( subtrahendYear ) ;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( serialVersionUID >= FEB_29 )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( subtrahendRem >= subtrahendInstant )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^if  ( FEB_29 >= subtrahendRem )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^if  ( subtrahendRem > FEB_29 )  {^156^^^^^147^171^if  ( subtrahendRem >= FEB_29 )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( difference )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^} else if  ( subtrahendInstant >= FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^} else if  ( minuendRem >= FEB_29 && isLeapYear ( subtrahendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^} else if  ( minuendRem >= subtrahendRem && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^} else if  ( FEB_29 >= minuendRem && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^} else if  ( minuendYear >= FEB_29 && isLeapYear ( minuendRem )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^} else if  ( minuendRem >= FEB_29 || isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^} else if  ( minuendRem > FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^minuendRem += DateTimeConstants.MILLIS_PER_DAY;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( !isLeapYear ( subtrahendYear )  )  {^158^^^^^147^171^if  ( !isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^subtrahendRem = DateTimeConstants.MILLIS_PER_DAY;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^} else if  ( subtrahendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^} else if  ( minuendRem >= minuendYear && isLeapYear ( FEB_29 )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^} else if  ( minuendRem < FEB_29 && isLeapYear ( minuendYear )  )  {^161^^^^^147^171^} else if  ( minuendRem >= FEB_29 && isLeapYear ( minuendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^subtrahendRem += DateTimeConstants.MILLIS_PER_DAY;^159^^^^^147^171^subtrahendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( minuendYear )  )  {^157^^^^^147^171^if  ( isLeapYear ( subtrahendYear )  )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^minuendRem = DateTimeConstants.MILLIS_PER_DAY;^162^^^^^147^171^minuendRem -= DateTimeConstants.MILLIS_PER_DAY;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^int difference = subtrahendYear - subtrahendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^int difference = subtrahendYear - minuendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^int difference = minuendYear  >>  subtrahendYear;^166^^^^^147^171^int difference = minuendYear - subtrahendYear;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( serialVersionUID < subtrahendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^if  ( minuendRem < subtrahendInstant )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Argument_Swapping]^if  ( subtrahendRem < minuendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Wrong_Operator]^if  ( minuendRem <= subtrahendRem )  {^167^^^^^147^171^if  ( minuendRem < subtrahendRem )  {^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^return subtrahendYear;^170^^^^^147^171^return difference;^[CLASS] BasicGJChronology  [METHOD] getYearDifference [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  difference  minuendYear  subtrahendYear  
[BugLab_Variable_Misuse]^int thisYear = getYear ( subtrahendRem ) ;^175^^^^^174^199^int thisYear = getYear ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^int dayOfYear = getDayOfYear ( subtrahendRem, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^int dayOfYear = getDayOfYear ( instant, year ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Argument_Swapping]^int dayOfYear = getDayOfYear ( thisYear, instant ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^int dayOfYear = getDayOfYear ( subtrahendInstant, thisYear ) ;^176^^^^^174^199^int dayOfYear = getDayOfYear ( instant, thisYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^int millisOfDay = getMillisOfDay ( subtrahendRem ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^int millisOfDay = getMillisOfDay ( subtrahendInstant ) ;^177^^^^^174^199^int millisOfDay = getMillisOfDay ( instant ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^if  ( year >  ( 31 + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Wrong_Operator]^if  ( dayOfYear >=  ( 31 + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Wrong_Operator]^if  ( dayOfYear >  ( 31  &&  28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Wrong_Literal]^if  ( dayOfYear >  ( year + 28 )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Wrong_Literal]^if  ( dayOfYear >  ( 31 + millisOfDay )  )  {^179^^^^^174^199^if  ( dayOfYear >  ( 31 + 28 )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( millisOfDay )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( thisYear )  )  {^188^^^^^174^199^if  ( isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^if  ( !isLeapYear ( thisYear )  )  {^182^^^^^174^199^if  ( !isLeapYear ( year )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^if  ( isLeapYear ( year )  )  {^180^^^^^174^199^if  ( isLeapYear ( thisYear )  )  {^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^instant = getYearMonthDayMillis ( thisYear, 1, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^instant = getYearMonthDayMillis ( year, 1, thisYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Argument_Swapping]^instant = getYearMonthDayMillis ( dayOfYear, 1, year ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Wrong_Literal]^instant = getYearMonthDayMillis ( year, millisOfDay, dayOfYear ) ;^195^^^^^174^199^instant = getYearMonthDayMillis ( year, 1, dayOfYear ) ;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
[BugLab_Variable_Misuse]^instant += year;^196^^^^^174^199^instant += millisOfDay;^[CLASS] BasicGJChronology  [METHOD] setYear [RETURN_TYPE] long   long instant int year [VARIABLES] int[]  MAX_DAYS_PER_MONTH_ARRAY  MIN_DAYS_PER_MONTH_ARRAY  boolean  long[]  MAX_TOTAL_MILLIS_BY_MONTH_ARRAY  MIN_TOTAL_MILLIS_BY_MONTH_ARRAY  long  FEB_29  instant  millis  minuendInstant  minuendRem  serialVersionUID  subtrahendInstant  subtrahendRem  int  dayOfYear  millisOfDay  thisYear  year  
