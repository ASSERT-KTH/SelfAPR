[buglab_swap_variables]^this ( field, chronology, 0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[buglab_swap_variables]^this (  field, 0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[buglab_swap_variables]^this ( chronology,  0 ) ;^54^^^^^53^55^this ( chronology, field, 0 ) ;^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField)   Chronology chronology DateTimeField field [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  
[buglab_swap_variables]^if  ( skip < min )  {^68^^^^^64^76^if  ( min < skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[buglab_swap_variables]^} else if  ( skip == min )  {^70^^^^^64^76^} else if  ( min == skip )  {^[CLASS] SkipDateTimeField  [METHOD] <init> [RETURN_TYPE] DateTimeField,int)   Chronology chronology DateTimeField field int skip [VARIABLES] Chronology  chronology  iChronology  DateTimeField  field  boolean  long  serialVersionUID  int  iMinValue  iSkip  min  skip  
[buglab_swap_variables]^if  ( iSkip <= value )  {^81^^^^^79^85^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] get [RETURN_TYPE] int   long millis [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[buglab_swap_variables]^FieldUtils.verifyValueBounds ( this, iMinValue, value, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[buglab_swap_variables]^FieldUtils.verifyValueBounds ( this,  iMinValue, getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[buglab_swap_variables]^FieldUtils.verifyValueBounds ( this, value,  getMaximumValue (  )  ) ;^88^^^^^87^97^FieldUtils.verifyValueBounds ( this, value, iMinValue, getMaximumValue (  )  ) ;^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[buglab_swap_variables]^if  ( iSkip <= value )  {^89^^^^^87^97^if  ( value <= iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
[buglab_swap_variables]^if  ( iSkip == value )  {^90^^^^^87^97^if  ( value == iSkip )  {^[CLASS] SkipDateTimeField  [METHOD] set [RETURN_TYPE] long   long millis int value [VARIABLES] Chronology  chronology  iChronology  boolean  long  millis  serialVersionUID  int  iMinValue  iSkip  min  skip  value  
