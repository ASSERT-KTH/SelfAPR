[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( end, start, DurationFieldType.days (  )  ) ;^118^^^^^117^120^int amount = BaseSingleFieldPeriod.between ( start, end, DurationFieldType.days (  )  ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadableInstant start ReadableInstant end [VARIABLES] ReadableInstant  end  start  boolean  PeriodFormatter  PARSER  long  serialVersionUID  int  amount  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between (  end, DurationFieldType.days (  )  ) ;^118^^^^^117^120^int amount = BaseSingleFieldPeriod.between ( start, end, DurationFieldType.days (  )  ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadableInstant start ReadableInstant end [VARIABLES] ReadableInstant  end  start  boolean  PeriodFormatter  PARSER  long  serialVersionUID  int  amount  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( start,  DurationFieldType.days (  )  ) ;^118^^^^^117^120^int amount = BaseSingleFieldPeriod.between ( start, end, DurationFieldType.days (  )  ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadableInstant start ReadableInstant end [VARIABLES] ReadableInstant  end  start  boolean  PeriodFormatter  PARSER  long  serialVersionUID  int  amount  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  
[buglab_swap_variables]^if  ( end instanceof LocalDate && start instanceof LocalDate )    {^135^^^^^134^143^if  ( start instanceof LocalDate && end instanceof LocalDate )    {^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( end, start, ZERO ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between (  end, ZERO ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( start, ZERO, end ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( start,  ZERO ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( ZERO, end, start ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^int amount = BaseSingleFieldPeriod.between ( start, end ) ;^141^^^^^134^143^int amount = BaseSingleFieldPeriod.between ( start, end, ZERO ) ;^[CLASS] Days  [METHOD] daysBetween [RETURN_TYPE] Days   ReadablePartial start ReadablePartial end [VARIABLES] ReadablePartial  end  start  boolean  PeriodFormatter  PARSER  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  Chronology  chrono  long  serialVersionUID  int  amount  days  
[buglab_swap_variables]^Period p = periodStr.parsePeriod ( PARSER ) ;^203^^^^^199^205^Period p = PARSER.parsePeriod ( periodStr ) ;^[CLASS] Days  [METHOD] parseDays [RETURN_TYPE] Days   String periodStr [VARIABLES] Period  p  String  periodStr  boolean  PeriodFormatter  PARSER  long  serialVersionUID  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  
[buglab_swap_variables]^return new Duration ( DateTimeConstants.MILLIS_PER_DAY * days ) ;^333^^^^^331^334^return new Duration ( days * DateTimeConstants.MILLIS_PER_DAY ) ;^[CLASS] Days  [METHOD] toStandardDuration [RETURN_TYPE] Duration   [VARIABLES] boolean  PeriodFormatter  PARSER  long  days  serialVersionUID  Days  FIVE  FOUR  MAX_VALUE  MIN_VALUE  ONE  SEVEN  SIX  THREE  TWO  ZERO  
