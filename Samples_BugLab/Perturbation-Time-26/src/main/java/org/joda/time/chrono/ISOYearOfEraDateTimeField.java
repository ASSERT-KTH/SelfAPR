[BugLab_Variable_Misuse]^int year = getWrappedField (  ) .get ( serialVersionUID ) ;^50^^^^^49^52^int year = getWrappedField (  ) .get ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  int  year  
[BugLab_Wrong_Operator]^return year <= 0 ? -year : year;^51^^^^^49^52^return year < 0 ? -year : year;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  int  year  
[BugLab_Wrong_Literal]^return year < year ? -year : year;^51^^^^^49^52^return year < 0 ? -year : year;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] get [RETURN_TYPE] int   long instant [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  int  year  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .add ( years, instant ) ;^55^^^^^54^56^return getWrappedField (  ) .add ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  int  years  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .add ( serialVersionUID, years ) ;^55^^^^^54^56^return getWrappedField (  ) .add ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant int years [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  int  years  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .add ( serialVersionUID, years ) ;^59^^^^^58^60^return getWrappedField (  ) .add ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .add ( instant, serialVersionUID ) ;^59^^^^^58^60^return getWrappedField (  ) .add ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  DateTimeField  INSTANCE  boolean  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .add ( years, instant ) ;^59^^^^^58^60^return getWrappedField (  ) .add ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] add [RETURN_TYPE] long   long instant long years [VARIABLES] long  instant  serialVersionUID  years  DateTimeField  INSTANCE  boolean  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .addWrapField ( years, instant ) ;^63^^^^^62^64^return getWrappedField (  ) .addWrapField ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  years  int  years  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .addWrapField ( serialVersionUID, years ) ;^63^^^^^62^64^return getWrappedField (  ) .addWrapField ( instant, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] long   long instant int years [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  serialVersionUID  years  int  years  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .addWrapField ( values, fieldIndex, instant, years ) ;^67^^^^^66^68^return getWrappedField (  ) .addWrapField ( instant, fieldIndex, values, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] int[]   ReadablePartial instant int fieldIndex int[] values int years [VARIABLES] int[]  values  DateTimeField  INSTANCE  ReadablePartial  instant  boolean  long  instant  serialVersionUID  years  int  fieldIndex  years  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .addWrapField ( instant, years, values, fieldIndex ) ;^67^^^^^66^68^return getWrappedField (  ) .addWrapField ( instant, fieldIndex, values, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] int[]   ReadablePartial instant int fieldIndex int[] values int years [VARIABLES] int[]  values  DateTimeField  INSTANCE  ReadablePartial  instant  boolean  long  instant  serialVersionUID  years  int  fieldIndex  years  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .addWrapField ( instant, fieldIndex, years, values ) ;^67^^^^^66^68^return getWrappedField (  ) .addWrapField ( instant, fieldIndex, values, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] int[]   ReadablePartial instant int fieldIndex int[] values int years [VARIABLES] int[]  values  DateTimeField  INSTANCE  ReadablePartial  instant  boolean  long  instant  serialVersionUID  years  int  fieldIndex  years  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .addWrapField ( years, fieldIndex, values, instant ) ;^67^^^^^66^68^return getWrappedField (  ) .addWrapField ( instant, fieldIndex, values, years ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] addWrapField [RETURN_TYPE] int[]   ReadablePartial instant int fieldIndex int[] values int years [VARIABLES] int[]  values  DateTimeField  INSTANCE  ReadablePartial  instant  boolean  long  instant  serialVersionUID  years  int  fieldIndex  years  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .getDifference ( years, subtrahendInstant ) ;^71^^^^^70^72^return getWrappedField (  ) .getDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifference [RETURN_TYPE] int   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .getDifference ( minuendInstant, years ) ;^71^^^^^70^72^return getWrappedField (  ) .getDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifference [RETURN_TYPE] int   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .getDifference ( subtrahendInstant, minuendInstant ) ;^71^^^^^70^72^return getWrappedField (  ) .getDifference ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifference [RETURN_TYPE] int   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .getDifferenceAsLong ( years, subtrahendInstant ) ;^75^^^^^74^76^return getWrappedField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Argument_Swapping]^return getWrappedField (  ) .getDifferenceAsLong ( subtrahendInstant, minuendInstant ) ;^75^^^^^74^76^return getWrappedField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .getDifferenceAsLong ( minuendInstant, years ) ;^75^^^^^74^76^return getWrappedField (  ) .getDifferenceAsLong ( minuendInstant, subtrahendInstant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getDifferenceAsLong [RETURN_TYPE] long   long minuendInstant long subtrahendInstant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Wrong_Literal]^FieldUtils.verifyValueBounds ( this, year, year, getMaximumValue (  )  ) ;^79^^^^^78^84^FieldUtils.verifyValueBounds ( this, year, 0, getMaximumValue (  )  ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  int  year  
[BugLab_Variable_Misuse]^if  ( getWrappedField (  ) .get ( years )  < 0 )  {^80^^^^^78^84^if  ( getWrappedField (  ) .get ( instant )  < 0 )  {^[CLASS] ISOYearOfEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  int  year  
[BugLab_Wrong_Operator]^if  ( getWrappedField (  ) .get ( instant )  <= 0 )  {^80^^^^^78^84^if  ( getWrappedField (  ) .get ( instant )  < 0 )  {^[CLASS] ISOYearOfEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  int  year  
[BugLab_Wrong_Literal]^if  ( getWrappedField (  ) .get ( instant )  < 1 )  {^80^^^^^78^84^if  ( getWrappedField (  ) .get ( instant )  < 0 )  {^[CLASS] ISOYearOfEraDateTimeField  [METHOD] set [RETURN_TYPE] long   long instant int year [VARIABLES] DateTimeField  INSTANCE  boolean  long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  int  year  
[BugLab_Wrong_Literal]^return 1;^87^^^^^86^88^return 0;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] getMinimumValue [RETURN_TYPE] int   [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .roundFloor ( years ) ;^95^^^^^94^96^return getWrappedField (  ) .roundFloor ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] roundFloor [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .roundCeiling ( subtrahendInstant ) ;^99^^^^^98^100^return getWrappedField (  ) .roundCeiling ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .roundCeiling ( years ) ;^99^^^^^98^100^return getWrappedField (  ) .roundCeiling ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] roundCeiling [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .remainder ( years ) ;^103^^^^^102^104^return getWrappedField (  ) .remainder ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
[BugLab_Variable_Misuse]^return getWrappedField (  ) .remainder ( subtrahendInstant ) ;^103^^^^^102^104^return getWrappedField (  ) .remainder ( instant ) ;^[CLASS] ISOYearOfEraDateTimeField  [METHOD] remainder [RETURN_TYPE] long   long instant [VARIABLES] long  instant  minuendInstant  serialVersionUID  subtrahendInstant  years  DateTimeField  INSTANCE  boolean  
