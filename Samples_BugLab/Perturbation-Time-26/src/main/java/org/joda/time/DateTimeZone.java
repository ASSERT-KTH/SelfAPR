[BugLab_Variable_Misuse]^if  ( iID == null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( id != null )  {^689^^^^^688^693^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[BugLab_Variable_Misuse]^iID = iID;^692^^^^^688^693^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[BugLab_Variable_Misuse]^iID = iID;^1231^^^^^1230^1232^iID = id;^[CLASS] DateTimeZone 1 Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  Provider  cProvider  
[BugLab_Variable_Misuse]^DateTimeZone zone = temp;^133^^^^^132^162^DateTimeZone zone = cDefault;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( cDefault == null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^134^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( cDefault == null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^137^^^^^132^162^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( iID != null )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( id == null )  {^142^^^^^132^162^if  ( id != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^temp = forID ( iID ) ;^143^^^^^132^162^temp = forID ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( zone == null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( temp != null )  {^148^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( zone == null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( temp != null )  {^154^^^^^132^162^if  ( temp == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^temp = zone;^155^^^^^132^162^temp = UTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^cDefault = zone = zone;^157^^^^^132^162^cDefault = zone = temp;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Variable_Misuse]^return temp;^161^^^^^132^162^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefault [RETURN_TYPE] DateTimeZone   [VARIABLES] Set  cAvailableIDs  RuntimeException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  IllegalArgumentException  ex  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( sm == null )  {^175^^^^^173^184^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( temp == null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^178^^^^^173^184^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[BugLab_Variable_Misuse]^cDefault = temp;^182^^^^^173^184^cDefault = zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] setDefault [RETURN_TYPE] void   DateTimeZone zone [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( iID == null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( id != null )  {^204^^^^^203^224^if  ( id == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( iID.equals ( "UTC" )  )  {^207^^^^^203^224^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^DateTimeZone zone = cProvider.getZone ( iID ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^DateTimeZone zone = id.getZone ( cProvider ) ;^210^^^^^203^224^DateTimeZone zone = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( temp != null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone == null )  {^211^^^^^203^224^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return temp;^212^^^^^203^224^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( iID.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( id.startsWith ( "+" )  && id.startsWith ( "-" )  )  {^214^^^^^203^224^if  ( id.startsWith ( "+" )  || id.startsWith ( "-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( offset >= 0L )  {^216^^^^^203^224^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^return fixedOffsetZone ( offset, id ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return fixedOffsetZone ( iID, offset ) ;^220^^^^^203^224^return fixedOffsetZone ( id, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^int offset = parseOffset ( iID ) ;^215^^^^^203^224^int offset = parseOffset ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forID [RETURN_TYPE] DateTimeZone   String id [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^return forOffsetHoursMinutes ( hoursOffset, 1 ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[BugLab_Wrong_Literal]^return forOffsetHoursMinutes ( hoursOffset, hoursOffset ) ;^237^^^^^236^238^return forOffsetHoursMinutes ( hoursOffset, 0 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHours [RETURN_TYPE] DateTimeZone   int hoursOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursOffset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( offset == 0 && minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( hoursOffset == 0 && offset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^if  ( minutesOffset == 0 && hoursOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( hoursOffset == 0 || minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( hoursOffset >= 0 && minutesOffset == 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( hoursOffset == 0 && minutesOffset != 0 )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^if  ( hoursOffset == hoursInMinutes && minutesOffset == hoursInMinutes )  {^254^^^^^253^273^if  ( hoursOffset == 0 && minutesOffset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( minutesOffset < 0 && minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( minutesOffset <= 0 || minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( minutesOffset < 0 || minutesOffset < 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^if  ( minutesOffset < hoursInMinutes || minutesOffset > 59 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^if  ( minutesOffset < 0 || minutesOffset > 60 )  {^257^^^^^253^273^if  ( minutesOffset < 0 || minutesOffset > 59 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( offset < 0 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( hoursInMinutes <= 0 )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^minutesOffset = FieldUtils.safeAdd ( offset, minutesOffset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, offset ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^minutesOffset = FieldUtils.safeAdd ( minutesOffset, hoursInMinutes ) ;^266^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^offset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^minutesOffset = FieldUtils.safeAdd ( offset, -minutesOffset ) ;^264^^^^^253^273^minutesOffset = FieldUtils.safeAdd ( hoursInMinutes, -minutesOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^if  ( hoursInMinutes < hoursOffset )  {^263^^^^^253^273^if  ( hoursInMinutes < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^int hoursInMinutes = FieldUtils.safeMultiply ( offset, 60 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, hoursInMinutes ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^offset = FieldUtils.safeMultiply ( offset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^268^^^^^253^273^offset = FieldUtils.safeMultiply ( minutesOffset, DateTimeConstants.MILLIS_PER_MINUTE ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 59 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 61 ) ;^262^^^^^253^273^int hoursInMinutes = FieldUtils.safeMultiply ( hoursOffset, 60 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return forOffsetMillis ( minutesOffset ) ;^272^^^^^253^273^return forOffsetMillis ( offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetHoursMinutes [RETURN_TYPE] DateTimeZone   int hoursOffset int minutesOffset [VARIABLES] Set  cAvailableIDs  ArithmeticException  ex  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  hoursInMinutes  hoursOffset  minutesOffset  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return fixedOffsetZone ( iID, millisOffset ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[BugLab_Argument_Swapping]^return fixedOffsetZone ( millisOffset, id ) ;^283^^^^^281^284^return fixedOffsetZone ( id, millisOffset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forOffsetMillis [RETURN_TYPE] DateTimeZone   int millisOffset [VARIABLES] Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  temp  zone  int  millisOffset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone != null )  {^302^^^^^287^317^if  ( zone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( iID.equals ( "UTC" )  )  {^306^^^^^291^321^if  ( id.equals ( "UTC" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^String convId = getConvertedId ( iID ) ;^312^^^^^297^327^String convId = getConvertedId ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( id != null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( convId == null )  {^313^^^^^298^328^if  ( convId != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^dtz = cProvider.getZone ( id ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^dtz = convId.getZone ( cProvider ) ;^314^^^^^299^329^dtz = cProvider.getZone ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( zone == null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( dtz != null )  {^316^^^^^301^331^if  ( dtz == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^dtz = cProvider.getZone ( iID ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^dtz = id.getZone ( cProvider ) ;^317^^^^^302^332^dtz = cProvider.getZone ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( zone != null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( dtz == null )  {^319^^^^^304^334^if  ( dtz != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return temp;^320^^^^^305^335^return dtz;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return zone;^320^^^^^305^335^return dtz;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( id == null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( convId != null )  {^324^^^^^309^339^if  ( convId == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( id.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( convId.startsWith ( "GMT+" )  && convId.startsWith ( "GMT-" )  )  {^326^^^^^311^341^if  ( convId.startsWith ( "GMT+" )  || convId.startsWith ( "GMT-" )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( offset != 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^return fixedOffsetZone ( offset, convId ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return fixedOffsetZone ( id, offset ) ;^333^^^^^329^334^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^convId = id.substring ( 3 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^convId = convId.substring ( 2 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^return fixedOffsetZone ( offset, convId ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^int offset = parseOffset ( id ) ;^328^^^^^313^343^int offset = parseOffset ( convId ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^convId = convId.substring ( offset ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( offset < 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return fixedOffsetZone ( id, offset ) ;^333^^^^^318^348^return fixedOffsetZone ( convId, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( offset <= 0L )  {^329^^^^^314^344^if  ( offset == 0L )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^convId = convId.substring ( 4 ) ;^327^^^^^312^342^convId = convId.substring ( 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] forTimeZone [RETURN_TYPE] DateTimeZone   TimeZone zone [VARIABLES] TimeZone  zone  Set  cAvailableIDs  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( offset != 0 )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Literal]^if  ( offset == -1 )  {^349^^^^^348^366^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( iFixedOffsetCache != null )  {^352^^^^^348^366^if  ( iFixedOffsetCache == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( iID ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^Reference<DateTimeZone> ref = id.get ( iFixedOffsetCache ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^Reference<DateTimeZone> ref = 2.get ( id ) ;^356^^^^^348^366^Reference<DateTimeZone> ref = iFixedOffsetCache.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( null != null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( ref == null )  {^357^^^^^348^366^if  ( ref != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( dtz != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( zone == null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return temp;^360^^^^^348^366^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^zone = null.get (  ) ;^358^^^^^348^366^zone = ref.get (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^if  ( temp != null )  {^359^^^^^348^366^if  ( zone != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^zone = new FixedDateTimeZone ( iID, null, offset, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^zone = new FixedDateTimeZone ( offset, null, id, offset ) ;^363^^^^^348^366^zone = new FixedDateTimeZone ( id, null, offset, offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( temp )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^iFixedOffsetCache.put ( iID, new SoftReference<DateTimeZone> ( zone )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Argument_Swapping]^iFixedOffsetCache.put ( zone, new SoftReference<DateTimeZone> ( id )  ) ;^364^^^^^348^366^iFixedOffsetCache.put ( id, new SoftReference<DateTimeZone> ( zone )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Variable_Misuse]^return temp;^365^^^^^348^366^return zone;^[CLASS] DateTimeZone 1 Stub  [METHOD] fixedOffsetZone [RETURN_TYPE] DateTimeZone   String id int offset [VARIABLES] Set  cAvailableIDs  boolean  Reference  ref  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  
[BugLab_Wrong_Operator]^if  ( sm == null )  {^402^^^^^400^406^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^setProvider0 ( cProvider ) ;^405^^^^^400^406^setProvider0 ( provider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  boolean  SecurityManager  sm  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( cProvider == null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( provider != null )  {^415^^^^^414^431^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^Set<String> ids = cProvider.getAvailableIDs (  ) ;^418^^^^^414^431^Set<String> ids = provider.getAvailableIDs (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( ids == null && ids.size (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( ids != null || ids.size (  )  == 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( ids == null || ids.size (  )  != 0 )  {^419^^^^^414^431^if  ( ids == null || ids.size (  )  == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( !UTC.equals ( cProvider.getZone ( "UTC" )  )  )  {^426^^^^^414^431^if  ( !UTC.equals ( provider.getZone ( "UTC" )  )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setProvider0 [RETURN_TYPE] void   Provider provider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  String  convId  iID  id  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( providerClass == null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^provider =  ( Provider )  Class.forName ( id ) .newInstance (  ) ;^450^^^^^435^465^provider =  ( Provider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Argument_Swapping]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^453^^^^^438^468^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^if  ( id != null )  {^448^^^^^433^463^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^if  ( cProvider == null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( provider != null )  {^460^^^^^445^475^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Argument_Swapping]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^465^^^^^450^480^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^if  ( cProvider == null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( provider != null )  {^469^^^^^454^484^if  ( provider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultProvider [RETURN_TYPE] Provider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( sm == null )  {^501^^^^^499^505^if  ( sm != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^setNameProvider0 ( cNameProvider ) ;^504^^^^^499^505^setNameProvider0 ( nameProvider ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  SecurityManager  sm  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( cNameProvider == null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nameProvider != null )  {^514^^^^^513^518^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^cNameProvider = cNameProvider;^517^^^^^513^518^cNameProvider = nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] setNameProvider0 [RETURN_TYPE] void   NameProvider nameProvider [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( id != null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( providerClass == null )  {^532^^^^^528^549^if  ( providerClass != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^nameProvider =  ( NameProvider )  Class.forName ( id ) .newInstance (  ) ;^534^^^^^528^549^nameProvider =  ( NameProvider )  Class.forName ( providerClass ) .newInstance (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Argument_Swapping]^thread.getThreadGroup (  ) .uncaughtException ( ex, thread ) ;^537^^^^^528^549^thread.getThreadGroup (  ) .uncaughtException ( thread, ex ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( nameProvider != null )  {^544^^^^^528^549^if  ( nameProvider == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Variable_Misuse]^return cNameProvider;^548^^^^^528^549^return nameProvider;^[CLASS] DateTimeZone 1 Stub  [METHOD] getDefaultNameProvider [RETURN_TYPE] NameProvider   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  SecurityException  ex  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Exception  ex  Provider  cProvider  provider  Thread  thread  
[BugLab_Wrong_Operator]^if  ( map != null )  {^560^^^^^545^575^if  ( map == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return map.get ( providerClass ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^return id.get ( map ) ;^597^^^^^582^612^return map.get ( id ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getConvertedId [RETURN_TYPE] String   String id [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( providerClass ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^return - ( int )  offsetFormatter (  ) .withChronology ( str ) .parseMillis ( chrono ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( id ) ;^617^^^^^600^618^return - ( int )  offsetFormatter (  ) .withChronology ( chrono ) .parseMillis ( str ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] parseOffset [RETURN_TYPE] int   String str [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  Chronology  chrono  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( seconds >= 0 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offset > 0 )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  ( offset >= seconds )  {^631^^^^^616^646^if  ( offset >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^seconds = -offset;^635^^^^^631^636^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^seconds = -offset;^635^^^^^620^650^offset = -offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int hours = offset / zone;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^int hours = DateTimeConstants.MILLIS_PER_HOUR / offset;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int hours = offset * DateTimeConstants.MILLIS_PER_HOUR;^638^^^^^623^653^int hours = offset / DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^FormatUtils.appendPaddedInteger ( hours, buf, 2 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^FormatUtils.appendPaddedInteger ( buf, hours, 3 ) ;^639^^^^^624^654^FormatUtils.appendPaddedInteger ( buf, hours, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset -= seconds *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset - -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset += hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^640^^^^^625^655^offset -= hours *  ( int )  DateTimeConstants.MILLIS_PER_HOUR;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int minutes = seconds / DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int minutes = offset / zone;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^int minutes = DateTimeConstants.MILLIS_PER_MINUTE / offset;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int minutes = offset - DateTimeConstants.MILLIS_PER_MINUTE;^642^^^^^627^657^int minutes = offset / DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^FormatUtils.appendPaddedInteger ( minutes, buf, 2 ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^FormatUtils.appendPaddedInteger ( buf, minutes, minutes ) ;^644^^^^^629^659^FormatUtils.appendPaddedInteger ( buf, minutes, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset -= seconds * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset -= minutes * zone;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^offset -= DateTimeConstants.MILLIS_PER_MINUTE * minutes;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset + -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset = minutes * DateTimeConstants.MILLIS_PER_MINUTE;^645^^^^^630^660^offset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( seconds == 0 )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offset > 0 )  {^646^^^^^631^661^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int seconds = minutes / DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int seconds = offset / temp;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^int seconds = DateTimeConstants.MILLIS_PER_SECOND / offset;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int seconds = offset * DateTimeConstants.MILLIS_PER_SECOND;^650^^^^^635^665^int seconds = offset / DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^FormatUtils.appendPaddedInteger ( buf, offset, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^FormatUtils.appendPaddedInteger ( seconds, buf, 2 ) ;^652^^^^^637^667^FormatUtils.appendPaddedInteger ( buf, seconds, 2 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset -= offset * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset -= seconds * zone;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^offset -= DateTimeConstants.MILLIS_PER_SECOND * seconds;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset + -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^offset = seconds * DateTimeConstants.MILLIS_PER_SECOND;^653^^^^^638^668^offset -= seconds * DateTimeConstants.MILLIS_PER_SECOND;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( seconds == 0 )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offset != 0 )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  ( offset == seconds )  {^654^^^^^639^669^if  ( offset == 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^FormatUtils.appendPaddedInteger ( buf, seconds, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^FormatUtils.appendPaddedInteger ( offset, buf, 3 ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^FormatUtils.appendPaddedInteger ( buf, offset, seconds ) ;^659^^^^^644^674^FormatUtils.appendPaddedInteger ( buf, offset, 3 ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] printOffset [RETURN_TYPE] String   int offset [VARIABLES] StringBuffer  buf  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  hours  minutes  offset  seconds  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( cOffsetFormatter != null )  {^669^^^^^668^675^if  ( cOffsetFormatter == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, false, 2, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 3 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 5 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 3, 4 ) .toFormatter (  ) ;^670^671^672^^^668^675^cOffsetFormatter = new DateTimeFormatterBuilder (  ) .appendTimeZoneOffset ( null, true, 2, 4 ) .toFormatter (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] offsetFormatter [RETURN_TYPE] DateTimeFormatter   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return str;^705^^^^^704^706^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getID [RETURN_TYPE] String   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return getShortName ( serialVersionUID, null ) ;^728^^^^^727^729^return getShortName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( locale != null )  {^743^^^^^742^755^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String nameKey = getNameKey ( serialVersionUID ) ;^746^^^^^742^755^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nameKey != null )  {^747^^^^^742^755^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return str;^748^^^^^742^755^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = cNameProvider.getShortName ( locale, iID, providerClass ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = nameProvider.getShortName ( locale, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = cNameProvider.getShortName ( locale, providerClass, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = cNameProvider.getShortName ( nameKey, iID, locale ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = cNameProvider.getShortName ( locale, nameKey, iID ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = nameKey.getShortName ( locale, iID, cNameProvider ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = cNameProvider.getShortName ( iID, locale, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = locale.getShortName ( cNameProvider, iID, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = iID.getShortName ( locale, cNameProvider, nameKey ) ;^750^^^^^742^755^String name = cNameProvider.getShortName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( providerClass != null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( name == null )  {^751^^^^^742^755^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return str;^752^^^^^742^755^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return nameKey;^752^^^^^742^755^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return printOffset ( getOffset ( serialVersionUID )  ) ;^754^^^^^742^755^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getShortName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return getName ( serialVersionUID, null ) ;^768^^^^^767^769^return getName ( instant, null ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( locale != null )  {^783^^^^^782^795^if  ( locale == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String nameKey = getNameKey ( serialVersionUID ) ;^786^^^^^782^795^String nameKey = getNameKey ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( str == null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nameKey != null )  {^787^^^^^782^795^if  ( nameKey == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return str;^788^^^^^782^795^return iID;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = cNameProvider.getName ( locale, iID, str ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = nameProvider.getName ( locale, iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = cNameProvider.getName ( locale, str, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = cNameProvider.getName ( iID, locale, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = cNameProvider.getName ( locale, nameKey, iID ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = nameKey.getName ( locale, iID, cNameProvider ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^String name = cNameProvider.getName ( locale, providerClass, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^String name = locale.getName ( cNameProvider, iID, nameKey ) ;^790^^^^^782^795^String name = cNameProvider.getName ( locale, iID, nameKey ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( str != null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( name == null )  {^791^^^^^782^795^if  ( name != null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return str;^792^^^^^782^795^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return providerClass;^792^^^^^782^795^return name;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return printOffset ( getOffset ( serialVersionUID )  ) ;^794^^^^^782^795^return printOffset ( getOffset ( instant )  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getName [RETURN_TYPE] String   long instant Locale locale [VARIABLES] Locale  locale  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( instant != null )  {^812^^^^^811^816^if  ( instant == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffset [RETURN_TYPE] int   ReadableInstant instant [VARIABLES] ReadableInstant  instant  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return getOffset ( serialVersionUID )  == getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^return getOffset ( instant )  <= getStandardOffset ( instant ) ;^843^^^^^842^844^return getOffset ( instant )  == getStandardOffset ( instant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] isStandardOffset [RETURN_TYPE] boolean   long instant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetLocal = getOffset ( serialVersionUID ) ;^878^^^^^876^897^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetAdjusted = getOffset ( nextLocal - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^int offsetAdjusted = getOffset ( offsetLocal - instantLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int offsetAdjusted = getOffset ( instantLocal  ||  offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetAdjusted = getOffset ( serialVersionUID - offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetAdjusted = getOffset ( instantLocal - offsetAdjusted ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int offsetAdjusted = getOffset ( instantLocal  >>  offsetLocal ) ;^880^^^^^876^897^int offsetAdjusted = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( offsetAdjusted != offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( offsetLocal != offsetLocal )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offsetAdjusted != offsetLocal )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offsetLocal >= offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offsetLocal < offsetAdjusted )  {^882^^^^^876^897^if  ( offsetLocal != offsetAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( offsetAdjusted - offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( offsetLocal - offsetLocal )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( offsetAdjusted - offsetLocal )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal - offsetAdjusted )  <= 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  >=  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  ^  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  &&  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  (  ( offsetLocal - offsetAdjusted )  < 1 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( serialVersionUID != nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal != serialVersionUID )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( nextAdjusted != nextLocal )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal == nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return offsetAdjusted;^892^^^^^876^897^return offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( serialVersionUID - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( instantLocal - offsetAdjusted ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long nextLocal = nextTransition ( offsetLocal - instantLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  &  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( serialVersionUID - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( instantLocal - offsetLocal ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long nextAdjusted = nextTransition ( offsetAdjusted - instantLocal ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  <  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( nextLocal - offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal   instanceof   offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  >  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  ||  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  !=  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  |  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  >=  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal - offsetAdjusted )  == 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  !=  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  ==  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( offsetLocal  ||  offsetAdjusted )  < 0 )  {^885^^^^^876^897^if  (  ( offsetLocal - offsetAdjusted )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  &  offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( nextLocal - offsetAdjusted ) ;^890^^^^^876^897^long nextAdjusted = nextTransition ( instantLocal - offsetAdjusted ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal >= nextAdjusted )  {^891^^^^^876^897^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  >  offsetLocal ) ;^889^^^^^876^897^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return offsetLocal;^896^^^^^876^897^return offsetAdjusted;^[CLASS] DateTimeZone 1 Stub  [METHOD] getOffsetFromLocal [RETURN_TYPE] int   long instantLocal [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetAdjusted  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offset = getOffset ( serialVersionUID ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offset = getOffset ( nextLocal ) ;^910^^^^^909^917^int offset = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long instantLocal = serialVersionUID + offset;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long instantLocal = offset + instantUTC;^911^^^^^909^917^long instantLocal = instantUTC + offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( serialVersionUID ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( instantUTC ^ serialVersionUID )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( instantUTC ^ offset )  < 0 &&  ( instantUTC ^ instantLocal )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 ||  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantUTC ^ instantLocal )  <= 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantUTC & instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  < 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC & offset )  >= 0 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  (  ( instantUTC ^ instantLocal )  < 1 &&  ( instantUTC ^ offset )  >= 1 )  {^913^^^^^909^917^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantUTC ^ offset )  >= 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return serialVersionUID;^916^^^^^909^917^return instantLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertUTCToLocal [RETURN_TYPE] long   long instantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetOriginal = getOffset ( serialVersionUID ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetOriginal = getOffset ( nextAdjusted ) ;^937^^^^^936^944^int offsetOriginal = getOffset ( originalInstantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long instantUTC = serialVersionUID - offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long instantUTC = instantLocal - offsetLocalFromOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long instantUTC = offsetOriginal - instantLocal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long instantUTC = instantLocal  >=  offsetOriginal;^938^^^^^936^944^long instantUTC = instantLocal - offsetOriginal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetLocalFromOriginal = getOffset ( nextLocal ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetLocalFromOriginal = getOffset ( originalInstantUTC ) ;^939^^^^^936^944^int offsetLocalFromOriginal = getOffset ( instantUTC ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( offsetOriginal == offsetOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offsetOriginal == offsetLocalFromOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offsetLocalFromOriginal != offsetOriginal )  {^940^^^^^936^944^if  ( offsetLocalFromOriginal == offsetOriginal )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return nextLocal;^941^^^^^936^944^return instantUTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^return convertLocalToUTC ( strict, instantLocal ) ;^943^^^^^936^944^return convertLocalToUTC ( instantLocal, strict ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict long originalInstantUTC [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offsetLocalFromOriginal  offsetOriginal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offsetLocal = getOffset ( nextLocal ) ;^960^^^^^945^975^int offsetLocal = getOffset ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^int offset = getOffset ( offsetLocal - instantLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int offset = getOffset ( instantLocal  ==  offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offset = getOffset ( nextLocal - offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^int offset = getOffset ( instantLocal - offset ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^int offset = getOffset ( instantLocal  >>  offsetLocal ) ;^962^^^^^947^977^int offset = getOffset ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( offset != offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( offsetLocalLocal != offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offset != offsetLocal )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( offsetLocal >= offset )  {^964^^^^^949^979^if  ( offsetLocal != offset )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( strict || offset < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( strict && offsetLocal < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( strict || offsetLocal <= 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  ( strict || offsetLocal < 1 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextAdjusted ==  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal ==  ( serialVersionUID - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal ==  ( instantLocal - offset )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( instantLocal ==  ( nextLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal !=  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal ==  ( instantLocal  >=  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( serialVersionUID ==  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextAdjusted ==  ( serialVersionUID - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextAdjusted ==  ( instantLocal - offsetLocal )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextAdjusted >  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextAdjusted ==  ( instantLocal  |  offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( serialVersionUID != nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal != serialVersionUID )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( nextAdjusted != nextLocal )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal == nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset = offset;^989^^^^^980^990^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  &  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ||  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <<  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ==  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )   instanceof   )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  ^  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^offset = offset;^989^^^^^974^1004^offset = offsetLocal;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( serialVersionUID )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >>  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  &&  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( nextLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( originalInstantUTC )  )  + "  ( " + getID (  )  + " ) " ) ;^983^984^^^^968^998^DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  |  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  >=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( serialVersionUID - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( instantLocal - offset ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long nextLocal = nextTransition ( offsetLocal - instantLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal   instanceof   offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( serialVersionUID - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( instantLocal - offsetLocal ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long nextAdjusted = nextTransition ( offset - instantLocal ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  >>  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  >  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( nextLocal - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  <  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offsetLocal ==  ( instantLocal - nextLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal ==  ( instantLocal  <=  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offset ==  ( instantLocal - nextAdjusted )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( nextAdjusted ==  ( offset - instantLocal )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextAdjusted !=  ( instantLocal - offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextAdjusted != nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal >= nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  <  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  !=  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( originalInstantUTC )  )  + "  ( " + getID (  )  + " ) " ) ;^982^983^984^^^967^997^throw new IllegalArgumentException ( "Illegal instant due to time zone offset transition: " + DateTimeFormat.forPattern ( "yyyy-MM-dd'T'HH:mm:ss.SSS" ) .print ( new Instant ( instantLocal )  )  + "  ( " + getID (  )  + " ) " ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( originalInstantUTC - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  <<  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  <<  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextLocal = nextTransition ( nextLocal - offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  >=  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long nextAdjusted = nextTransition ( originalInstantUTC - offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  ==  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( offset || strictLocal < 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( strict || offsetLocal > 0 )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  ( strict || offsetLocal < offset )  {^968^^^^^953^983^if  ( strict || offsetLocal < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( serialVersionUID ==  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal ==  ( originalInstantUTC - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  ( nextLocal ==  ( offsetLocal - instantLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal <=  ( instantLocal - offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal ==  ( instantLocal  !=  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextAdjusted ==  ( instantLocal  <  offset )  )  {^975^^^^^960^990^if  ( nextAdjusted ==  ( instantLocal - offset )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( originalInstantUTC != nextAdjusted )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal != nextLocal )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  |  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  &&  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( nextLocal ==  ( instantLocal  ||  offsetLocal )  )  {^971^^^^^956^986^if  ( nextLocal ==  ( instantLocal - offsetLocal )  )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( nextLocal != originalInstantUTC )  {^978^^^^^963^993^if  ( nextLocal != nextAdjusted )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  |  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  <=  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextLocal = nextTransition ( instantLocal  !=  offsetLocal ) ;^970^^^^^955^985^long nextLocal = nextTransition ( instantLocal - offsetLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long nextAdjusted = nextTransition ( instantLocal  >=  offset ) ;^974^^^^^959^989^long nextAdjusted = nextTransition ( instantLocal - offset ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long instantUTC = instantLocal - offsetLocal;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^long instantUTC = offset - instantLocal;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^long instantUTC = instantLocal  <  offset;^995^^^^^980^1010^long instantUTC = instantLocal - offset;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( serialVersionUID ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( instantLocal ^ serialVersionUID )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offsetLocal )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( offset ^ instantUTC )  < 0 &&  ( instantLocal ^ instantLocal )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( instantUTC ^ instantLocal )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^if  (  ( instantLocal ^ offset )  < 0 &&  ( instantLocal ^ instantUTC )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantLocal ^ instantUTC )  < 0 ||  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantLocal ^ instantUTC )  <= 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantLocal & instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal & offset )  < 0 )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^if  (  ( instantLocal ^ instantUTC )  < offsetLocal &&  ( instantLocal ^ offset )  < offsetLocal )  {^997^^^^^982^1012^if  (  ( instantLocal ^ instantUTC )  < 0 &&  ( instantLocal ^ offset )  < 0 )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return serialVersionUID;^1000^^^^^985^1015^return instantUTC;^[CLASS] DateTimeZone 1 Stub  [METHOD] convertLocalToUTC [RETURN_TYPE] long   long instantLocal boolean strict [VARIABLES] Set  cAvailableIDs  ids  boolean  strict  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  temp  zone  int  offset  offsetLocal  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( zone == null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( newZone != null )  {^1014^^^^^1013^1022^if  ( newZone == null )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^if  ( zone == this )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^if  ( newZone != this )  {^1017^^^^^1013^1022^if  ( newZone == this )  {^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return nextLocal;^1018^^^^^1013^1022^return oldInstant;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^long instantLocal = serialVersionUID + getOffset ( oldInstant ) ;^1020^^^^^1013^1022^long instantLocal = oldInstant + getOffset ( oldInstant ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return originalInstantUTC - newZone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return instantLocal - zone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Argument_Swapping]^return newZone - instantLocal.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^return instantLocal  ||  newZone.getOffsetFromLocal ( instantLocal ) ;^1021^^^^^1013^1022^return instantLocal - newZone.getOffsetFromLocal ( instantLocal ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] getMillisKeepLocal [RETURN_TYPE] long   DateTimeZone newZone long oldInstant [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^return true;^1132^^^^^1130^1140^return false;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^return true;^1136^^^^^1130^1140^return false;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^return false;^1138^^^^^1130^1140^return true;^[CLASS] DateTimeZone 1 Stub  [METHOD] isLocalDateTimeGap [RETURN_TYPE] boolean   LocalDateTime localDateTime [VARIABLES] LocalDateTime  localDateTime  Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  IllegalArgumentException  ex  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return java.util.TimeZone.getTimeZone ( nameKey ) ;^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return java.util.TimeZone.getTimeZone ( providerClass ) ;^1179^^^^^1178^1180^return java.util.TimeZone.getTimeZone ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] toTimeZone [RETURN_TYPE] TimeZone   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Operator]^return 57 + getID (   instanceof   ) .hashCode (  ) ;^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Wrong_Literal]^return  + getID (  ) .hashCode (  ) ;^1196^^^^^1195^1197^return 57 + getID (  ) .hashCode (  ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return new Stub ( str ) ;^1214^^^^^1213^1215^return new Stub ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeReplace [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^out.writeUTF ( providerClass ) ;^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  ObjectOutputStream  out  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^return forID ( str ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] DateTimeZone 1 Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] Set  cAvailableIDs  ids  boolean  NameProvider  cNameProvider  nameProvider  String  convId  iID  id  name  nameKey  providerClass  str  DateTimeFormatter  cOffsetFormatter  Map  cZoneIdConversion  iFixedOffsetCache  map  long  instant  instantLocal  instantUTC  nextAdjusted  nextLocal  oldInstant  originalInstantUTC  serialVersionUID  DateTimeZone  UTC  cDefault  dtz  newZone  temp  zone  Provider  cProvider  provider  
[BugLab_Variable_Misuse]^iID = iID;^1231^^^^^1230^1232^iID = id;^[CLASS] Stub  [METHOD] <init> [RETURN_TYPE] String)   String id [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
[BugLab_Variable_Misuse]^out.writeUTF ( id ) ;^1235^^^^^1234^1236^out.writeUTF ( iID ) ;^[CLASS] Stub  [METHOD] writeObject [RETURN_TYPE] void   ObjectOutputStream out [VARIABLES] String  iID  id  boolean  ObjectOutputStream  out  long  serialVersionUID  
[BugLab_Variable_Misuse]^return forID ( id ) ;^1243^^^^^1242^1244^return forID ( iID ) ;^[CLASS] Stub  [METHOD] readResolve [RETURN_TYPE] Object   [VARIABLES] long  serialVersionUID  String  iID  id  boolean  
