[BugLab_Wrong_Literal]^long avg = -1;^45^^^^^40^50^long avg = 0;^[CLASS] DateTimePerformance Result   [VARIABLES] 
[BugLab_Wrong_Literal]^private static int COUNT_FAST = 1;^51^^^^^46^56^private static int COUNT_FAST = 200000;^[CLASS] DateTimePerformance Result   [VARIABLES] 
[BugLab_Wrong_Literal]^private long start = -1;^58^^^^^53^63^private long start = 0;^[CLASS] DateTimePerformance Result   [VARIABLES] 
[BugLab_Wrong_Literal]^private long end = ;^59^^^^^54^64^private long end = 0;^[CLASS] DateTimePerformance Result   [VARIABLES] 
[BugLab_Wrong_Literal]^long jodaTotal = -1;^138^^^^^123^153^long jodaTotal = 0;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Literal]^long jisoTotal = ;^139^^^^^124^154^long jisoTotal = 0;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Literal]^long gcalTotal = COUNT_FAST;^140^^^^^125^155^long gcalTotal = 0;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Literal]^long dateTotal = 1;^141^^^^^126^156^long dateTotal = 0;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^if  ( result.object.equals ( "Joda" )  )  {^145^^^^^130^160^if  ( res.object.equals ( "Joda" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^if  ( object.equals ( "Joda" )  )  {^145^^^^^130^160^if  ( res.object.equals ( "Joda" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( object.equals ( "JISO" )  )  {^147^^^^^132^162^} else if  ( res.object.equals ( "JISO" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.object.object.equals ( "JISO" )  )  {^147^^^^^132^162^} else if  ( res.object.equals ( "JISO" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.equals ( "JISO" )  )  {^147^^^^^132^162^} else if  ( res.object.equals ( "JISO" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( result.object.equals ( "GCal" )  )  {^149^^^^^134^164^} else if  ( res.object.equals ( "GCal" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.object.object.equals ( "GCal" )  )  {^149^^^^^134^164^} else if  ( res.object.equals ( "GCal" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( result.object.equals ( "Date" )  )  {^151^^^^^136^166^} else if  ( res.object.equals ( "Date" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( object.equals ( "Date" )  )  {^151^^^^^136^166^} else if  ( res.object.equals ( "Date" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^dateTotal += result.avg;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^dateTotal += time;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^dateTotal += res.avg.avg;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^dateTotal += res;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^dateTotal += jisoTotal;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.object.object.equals ( "Date" )  )  {^151^^^^^136^166^} else if  ( res.object.equals ( "Date" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.equals ( "Date" )  )  {^151^^^^^136^166^} else if  ( res.object.equals ( "Date" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^gcalTotal += result.avg;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^gcalTotal += jisoTotal;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^gcalTotal += res.avg.avg;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^gcalTotal += res;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^dateTotal += start;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( object.equals ( "GCal" )  )  {^149^^^^^134^164^} else if  ( res.object.equals ( "GCal" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^} else if  ( res.equals ( "GCal" )  )  {^149^^^^^134^164^} else if  ( res.object.equals ( "GCal" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jisoTotal += result.avg;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jisoTotal += jisoTotal;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^jisoTotal += res.avg.avg;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^jisoTotal += res;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^dateTotal += jodaTotal;^152^^^^^137^167^dateTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^gcalTotal += start;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^} else if  ( result.object.equals ( "JISO" )  )  {^147^^^^^132^162^} else if  ( res.object.equals ( "JISO" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jodaTotal += result.avg;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jodaTotal += start;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^jodaTotal += res.avg.avg;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^jodaTotal += res;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jisoTotal += start;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^gcalTotal += jodaTotal;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( Iterator it = resultultList.iterator (  ) ; it.hasNext (  ) ; )  {^142^^^^^127^157^for  ( Iterator it = resultList.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( Iterator resultList = it.iterator (  ) ; it.hasNext (  ) ; )  {^142^^^^^127^157^for  ( Iterator it = resultList.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( Iterator it = resultListultList.iterator (  ) ; it.hasNext (  ) ; )  {^142^^^^^127^157^for  ( Iterator it = resultList.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^if  ( res.equals ( "Joda" )  )  {^145^^^^^130^160^if  ( res.object.equals ( "Joda" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jisoTotal += jodaTotal;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jisoTotal += time;^148^^^^^133^163^jisoTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jodaTotal += time;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^gcalTotal += time;^150^^^^^135^165^gcalTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( object + "." + res.name + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( res.object + "." + object + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( res.object + "." + res.name + ": " + time + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^System.out.println ( res.avg.object + "." + res.name + ": " + res + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^System.out.println ( res.name + "." + res.object + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( res.object  <<  "." + res.name + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^if  ( res.object.object.equals ( "Joda" )  )  {^145^^^^^130^160^if  ( res.object.equals ( "Joda" )  )  {^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^jodaTotal += jisoTotal;^146^^^^^131^161^jodaTotal += res.avg;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( result.object + "." + res.name + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( res.object + "." + res.name + ": " + jisoTotal + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Argument_Swapping]^System.out.println ( res.avg + "." + res.name + ": " + res.object + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( res.object  &  "." + res.name + ": " + res.avg + "ns" ) ;^144^^^^^129^159^System.out.println ( res.object + "." + res.name + ": " + res.avg + "ns" ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( "Joda: " + jisoTotal ) ;^156^^^^^141^171^System.out.println ( "Joda: " + jodaTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( "Joda: "  >>  jodaTotal ) ;^156^^^^^141^171^System.out.println ( "Joda: " + jodaTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( "JISO: " + time ) ;^157^^^^^142^172^System.out.println ( "JISO: " + jisoTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( "JISO: "  <<  jisoTotal ) ;^157^^^^^142^172^System.out.println ( "JISO: " + jisoTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^System.out.println ( "GCal: " + start ) ;^158^^^^^143^173^System.out.println ( "GCal: " + gcalTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( "GCal: "  &&  gcalTotal ) ;^158^^^^^143^173^System.out.println ( "GCal: " + gcalTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Wrong_Operator]^System.out.println ( "Date: "  &  dateTotal ) ;^159^^^^^144^174^System.out.println ( "Date: " + dateTotal ) ;^[CLASS] DateTimePerformance Result  [METHOD] <init> [RETURN_TYPE] DateTimePerformance()   [VARIABLES] boolean  Iterator  it  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  runs  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^166^^^^^165^177^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ <= 0 )  {System.out.println ( "Anti optimise" ) ;}^173^^^^^165^177^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < i )  {System.out.println ( "Anti optimise" ) ;}^173^^^^^165^177^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ == 0 )  {System.out.println ( "Anti optimise" ) ;}^173^^^^^165^177^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^173^^^^^165^177^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^175^^^^^165^177^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^169^^^^^165^177^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^171^^^^^165^177^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( count ) ;^175^^^^^165^177^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^180^^^^^179^191^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^int count = i;^182^^^^^179^191^int count = 0;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ <= 0 )  {System.out.println ( "Anti optimise" ) ;}^187^^^^^179^191^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < -1 )  {System.out.println ( "Anti optimise" ) ;}^187^^^^^179^191^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^183^^^^^179^191^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^189^^^^^179^191^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^185^^^^^179^191^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^194^^^^^193^205^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^int count = COUNT_FAST;^196^^^^^193^205^int count = 0;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ <= 0 )  {System.out.println ( "Anti optimise" ) ;}^201^^^^^193^205^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < 1 )  {System.out.println ( "Anti optimise" ) ;}^201^^^^^193^205^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < runs )  {System.out.println ( "Anti optimise" ) ;}^201^^^^^193^205^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ > 0 )  {System.out.println ( "Anti optimise" ) ;}^201^^^^^193^205^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^203^^^^^193^205^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < count; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^199^^^^^193^205^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ <  )  {System.out.println ( "Anti optimise" ) ;}^201^^^^^193^205^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^197^^^^^193^205^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^203^^^^^193^205^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = i;^208^^^^^207^219^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^int count = runs;^210^^^^^207^219^int count = 0;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ <= 0 )  {System.out.println ( "Anti optimise" ) ;}^215^^^^^207^219^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( COUNT_VERY_FASTnt i = 0; i < AVERAGE; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < count; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ > 0 )  {System.out.println ( "Anti optimise" ) ;}^215^^^^^207^219^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < COUNT )  {System.out.println ( "Anti optimise" ) ;}^215^^^^^207^219^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( count++ == 0 )  {System.out.println ( "Anti optimise" ) ;}^215^^^^^207^219^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( count++ < 1 )  {System.out.println ( "Anti optimise" ) ;}^215^^^^^207^219^if  ( count++ < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^213^^^^^207^219^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^211^^^^^207^219^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( count ) ;^217^^^^^207^219^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor1 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = i;^225^^^^^224^235^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^231^^^^^224^235^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^233^^^^^224^235^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < count; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^229^^^^^224^235^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^227^^^^^224^235^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = i;^238^^^^^237^248^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^244^^^^^237^248^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( count ) ;^246^^^^^237^248^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^240^^^^^237^248^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^242^^^^^237^248^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^251^^^^^250^262^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^258^^^^^250^262^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^260^^^^^250^262^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^255^^^^^250^262^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^253^^^^^250^262^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^260^^^^^250^262^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^265^^^^^264^275^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^271^^^^^264^275^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( COUNT_VERY_FASTnt i = 0; i < AVERAGE; i++ )  {^267^^^^^264^275^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < count; i++ )  {^267^^^^^264^275^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^267^^^^^264^275^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^267^^^^^264^275^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^267^^^^^264^275^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^273^^^^^264^275^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < count; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^269^^^^^264^275^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor2 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^281^^^^^280^293^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( runs, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, j, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( j972, j0, j, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1-1, 1, -1, -1, -1, -1, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1runs, 1, runs, runs, runs, runs, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 11, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1, 1, , , , , GJChronology.getInstance (  )  ) ;^282^283^^^^280^293^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^289^^^^^280^293^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( COUNT_VERY_FASTnt i = 0; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < count; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < count; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1973, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 2972, 20, 2, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1-1, 1, -1, -1, -1, -1, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1j, 1, j, j, j, j, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( j, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, runs, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( j972, j0, j, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT_SLOW, 1, COUNT_SLOW, COUNT_SLOW, COUNT_SLOW, COUNT_SLOW, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1runs, 1, runs, runs, runs, runs, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( COUNT_FAST, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 11, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1count, 1, count, count, count, count, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 11, 1, 1, 1, 1, 1, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT, 1, COUNT, COUNT, COUNT, COUNT, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( COUNT_SLOW, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, COUNT_SLOW, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1AVERAGE, 1, AVERAGE, AVERAGE, AVERAGE, AVERAGE, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1, 1, , , , , GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^286^^^^^280^293^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( runs, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT_VERY_FAST, 1, COUNT_VERY_FAST, COUNT_VERY_FAST, COUNT_VERY_FAST, COUNT_VERY_FAST, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, i, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( count972, count0, count, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT_FAST, 1, COUNT_FAST, COUNT_FAST, COUNT_FAST, COUNT_FAST, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( COUNT, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, COUNT, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 0972, 00, 0, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^287^288^^^^280^293^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0, GJChronology.getInstance (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^284^^^^^280^293^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( count ) ;^291^^^^^280^293^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^296^^^^^295^306^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( i, 10, 1, 0, 0, 0, 0 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, AVERAGE, 1, 0, 0, 0, 0 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( COUNT_VERY_FAST972, COUNT_VERY_FAST0, COUNT_VERY_FAST, 0, 0, 0, 0 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1runs, 1, runs, runs, runs, runs ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1COUNT_FAST, 1, COUNT_FAST, COUNT_FAST, COUNT_FAST, COUNT_FAST ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1j, 1, j, j, j, j ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1COUNT, 1, COUNT, COUNT, COUNT, COUNT ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1971, 10, 1, 0, 0, 0, 0 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, j, 1, 0, 0, 0, 0 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1-1, 1, -1, -1, -1, -1 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 1AVERAGE, 1, AVERAGE, AVERAGE, AVERAGE, AVERAGE ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^DateTime dt = new DateTime ( 1972, 11, 1, 1, 1, 1, 1 ) ;^297^^^^^295^306^DateTime dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^302^^^^^295^306^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^298^^^^^295^306^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( j, 10, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( count972, count0, count, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 11, 1, 1, 1, 1, 1 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT, 1, COUNT, COUNT, COUNT, COUNT ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1-1, 1, -1, -1, -1, -1 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( AVERAGE, 10, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, i, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1i, 1, i, i, i, i ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1973, 10, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, count, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, AVERAGE, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^304^^^^^295^306^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1AVERAGE, 1, AVERAGE, AVERAGE, AVERAGE, AVERAGE ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( , 10, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, COUNT_SLOW, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( runs972, runs0, runs, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1, 1, , , ,  ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( COUNT972, COUNT0, COUNT, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1runs, 1, runs, runs, runs, runs ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1COUNT_SLOW, 1, COUNT_SLOW, COUNT_SLOW, COUNT_SLOW, COUNT_SLOW ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( COUNT_FAST, 10, 1, 0, 0, 0, 0 ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new DateTime ( 1972, 1count, 1, count, count, count, count ) ;^301^^^^^295^306^dt = new DateTime ( 1972, 10, 1, 0, 0, 0, 0 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^300^^^^^295^306^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^309^^^^^308^319^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^GregorianCalendar dt = new GregorianCalendar ( 1972, COUNT_SLOW, 1 ) ;^310^^^^^308^319^GregorianCalendar dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^GregorianCalendar dt = new GregorianCalendar ( 0972, 00, 0 ) ;^310^^^^^308^319^GregorianCalendar dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^GregorianCalendar dt = new GregorianCalendar ( 1972, 9, 1 ) ;^310^^^^^308^319^GregorianCalendar dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^GregorianCalendar dt = new GregorianCalendar ( 2972, 20, 2 ) ;^310^^^^^308^319^GregorianCalendar dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^315^^^^^308^319^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < count; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^311^^^^^308^319^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int COUNT_VERY_FAST = 0; j < COUNT; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1972, 11, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( AVERAGE972, AVERAGE0, AVERAGE ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( runs, 10, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1972, runs, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( COUNT_SLOW972, COUNT_SLOW0, COUNT_SLOW ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 2972, 20, 2 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1972, j, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^317^^^^^308^319^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( COUNT_FAST, 10, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1972, 9, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( count972, count0, count ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1973, 10, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( 1972, COUNT_FAST, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( i, 10, 1 ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^dt = new GregorianCalendar ( runs972, runs0, runs ) ;^314^^^^^308^319^dt = new GregorianCalendar ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^313^^^^^308^319^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^317^^^^^308^319^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^322^^^^^321^332^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^328^^^^^321^332^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^324^^^^^321^332^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^324^^^^^321^332^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^324^^^^^321^332^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^324^^^^^321^332^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1971, 10, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1972, runs, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1972, COUNT_SLOW, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( i, 10, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1973, 10, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1972, 9, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( COUNT_FAST972, COUNT_FAST0, COUNT_FAST ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^330^^^^^321^332^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < count; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( runs, 10, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( COUNT_SLOW, 10, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 2972, 20, 2 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( COUNT_SLOW972, COUNT_SLOW0, COUNT_SLOW ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = new Date ( 1972, i, 1 ) ;^327^^^^^321^332^dt = new Date ( 1972, 10, 1 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^324^^^^^321^332^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^326^^^^^321^332^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^330^^^^^321^332^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateConstructor3 [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^338^^^^^337^348^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^340^^^^^337^348^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_VERY_FAST )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^346^^^^^337^348^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^342^^^^^337^348^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == 1 )  {System.out.println ( "Anti optimise" ) ;}^344^^^^^337^348^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^351^^^^^350^361^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == runs )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^359^^^^^350^361^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = val; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT )  {System.out.println ( "Anti optimise" ) ;}^357^^^^^350^361^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^353^^^^^350^361^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^355^^^^^350^361^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^359^^^^^350^361^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^364^^^^^363^374^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == 1 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == runs )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_VERY_FAST )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^369^^^^^363^374^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.i ) ;^369^^^^^363^374^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.j ) ;^369^^^^^363^374^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^372^^^^^363^374^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^370^^^^^363^374^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.runs ) ;^369^^^^^363^374^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^366^^^^^363^374^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^368^^^^^363^374^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^372^^^^^363^374^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^377^^^^^376^387^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^385^^^^^376^387^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^383^^^^^376^387^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^379^^^^^376^387^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^381^^^^^376^387^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^393^^^^^392^403^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == runs )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == val )  {System.out.println ( "Anti optimise" ) ;}^399^^^^^392^403^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^401^^^^^392^403^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^395^^^^^392^403^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^397^^^^^392^403^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^406^^^^^405^416^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == count )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^408^^^^^405^416^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^408^^^^^405^416^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^408^^^^^405^416^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^408^^^^^405^416^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == AVERAGE )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^414^^^^^405^416^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^410^^^^^405^416^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val ==  )  {System.out.println ( "Anti optimise" ) ;}^412^^^^^405^416^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^419^^^^^418^429^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == val )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == 1 )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^424^^^^^418^429^int val = dt.get ( GregorianCalendar.MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^427^^^^^418^429^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT )  {System.out.println ( "Anti optimise" ) ;}^425^^^^^418^429^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.i ) ;^424^^^^^418^429^int val = dt.get ( GregorianCalendar.MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.val ) ;^424^^^^^418^429^int val = dt.get ( GregorianCalendar.MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^421^^^^^418^429^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^423^^^^^418^429^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^438^^^^^431^442^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^440^^^^^431^442^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^434^^^^^431^442^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^436^^^^^431^442^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^440^^^^^431^442^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetMonth [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^448^^^^^447^458^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^454^^^^^447^458^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^454^^^^^447^458^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^450^^^^^447^458^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^450^^^^^447^458^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^450^^^^^447^458^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^450^^^^^447^458^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^454^^^^^447^458^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^454^^^^^447^458^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^454^^^^^447^458^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^456^^^^^447^458^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^450^^^^^447^458^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^452^^^^^447^458^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^456^^^^^447^458^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^461^^^^^460^471^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == COUNT_SLOW )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == j )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = val; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^469^^^^^460^471^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == 0 )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val ==  )  {System.out.println ( "Anti optimise" ) ;}^467^^^^^460^471^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^463^^^^^460^471^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^465^^^^^460^471^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^474^^^^^473^484^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == 1 )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == runs )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^479^^^^^473^484^int val = dt.get ( GregorianCalendar.DAY_OF_MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.runs ) ;^479^^^^^473^484^int val = dt.get ( GregorianCalendar.DAY_OF_MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.val ) ;^479^^^^^473^484^int val = dt.get ( GregorianCalendar.DAY_OF_MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^482^^^^^473^484^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^478^^^^^473^484^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == i )  {System.out.println ( "Anti optimise" ) ;}^480^^^^^473^484^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.j ) ;^479^^^^^473^484^int val = dt.get ( GregorianCalendar.DAY_OF_MONTH ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^476^^^^^473^484^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^482^^^^^473^484^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetDay [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^487^^^^^486^497^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == 1 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^489^^^^^486^497^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^489^^^^^486^497^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^489^^^^^486^497^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^489^^^^^486^497^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^491^^^^^486^497^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {System.out.println ( "Anti optimise" ) ;}^493^^^^^486^497^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^489^^^^^486^497^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^495^^^^^486^497^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetDay [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^503^^^^^502^513^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -2 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val < -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == - )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -COUNT_VERY_FAST )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^511^^^^^502^513^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > -1 )  {System.out.println ( "Anti optimise" ) ;}^509^^^^^502^513^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^505^^^^^502^513^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^507^^^^^502^513^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^516^^^^^515^526^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == -1 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val >= -1 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -COUNT_SLOW )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^518^^^^^515^526^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^518^^^^^515^526^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^518^^^^^515^526^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == -1 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= -1 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -0 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != -1 )  {System.out.println ( "Anti optimise" ) ;}^522^^^^^515^526^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^524^^^^^515^526^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^518^^^^^515^526^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^520^^^^^515^526^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^524^^^^^515^526^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == -1 )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != -1 )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i == -1 )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -COUNT_VERY_FAST )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^534^^^^^528^539^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.j ) ;^534^^^^^528^539^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.runs ) ;^534^^^^^528^539^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^537^^^^^528^539^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -count )  {System.out.println ( "Anti optimise" ) ;}^535^^^^^528^539^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.i ) ;^534^^^^^528^539^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^531^^^^^528^539^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^533^^^^^528^539^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.val ) ;^534^^^^^528^539^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^542^^^^^541^552^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val != -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -0 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^544^^^^^541^552^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count == -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -j )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs == -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val < -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val == -COUNT_FAST )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^550^^^^^541^552^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j == -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= -1 )  {System.out.println ( "Anti optimise" ) ;}^548^^^^^541^552^if  ( val == -1 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^546^^^^^541^552^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^550^^^^^541^552^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^558^^^^^557^569^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^565^^^^^557^569^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = j; j < COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( AVERAGE ) ;^564^^^^^557^569^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( COUNT_SLOW ) ;^564^^^^^557^569^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^567^^^^^557^569^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^561^^^^^557^569^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^563^^^^^557^569^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( COUNT_FAST ) ;^564^^^^^557^569^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^567^^^^^557^569^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^572^^^^^571^583^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^579^^^^^571^583^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^575^^^^^571^583^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^575^^^^^571^583^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^575^^^^^571^583^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^575^^^^^571^583^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( count ) ;^578^^^^^571^583^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = AVERAGE; j < COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^581^^^^^571^583^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^575^^^^^571^583^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^577^^^^^571^583^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( COUNT ) ;^578^^^^^571^583^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^581^^^^^571^583^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetYear [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^586^^^^^585^596^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^592^^^^^585^596^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^594^^^^^585^596^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.YEAR, 1971 ) ;^591^^^^^585^596^dt.set ( GregorianCalendar.YEAR, 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = AVERAGE; i < AVERAGE; i++ )  {^588^^^^^585^596^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^590^^^^^585^596^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.YEAR, runs ) ;^591^^^^^585^596^dt.set ( GregorianCalendar.YEAR, 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^594^^^^^585^596^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^599^^^^^598^609^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^605^^^^^598^609^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( i ) ;^604^^^^^598^609^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^607^^^^^598^609^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^603^^^^^598^609^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( COUNT_SLOW ) ;^604^^^^^598^609^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^601^^^^^598^609^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( 1973 ) ;^604^^^^^598^609^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^607^^^^^598^609^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^615^^^^^614^637^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs < 0 )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < 1 )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i < 0 )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( COUNT_VERY_FAST ) ;^631^^^^^614^637^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( j ) ;^631^^^^^614^637^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( COUNT_SLOW ) ;^631^^^^^614^637^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^635^^^^^614^637^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^630^^^^^614^637^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < runs )  {System.out.println ( "Anti optimise" ) ;}^633^^^^^614^637^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( 1973 ) ;^631^^^^^614^637^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( i ) ;^631^^^^^614^637^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^628^^^^^614^637^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^640^^^^^639^662^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs < 0 )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < COUNT )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^653^^^^^639^662^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^653^^^^^639^662^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^653^^^^^639^662^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^653^^^^^639^662^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^653^^^^^639^662^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < 1 )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( 1973 ) ;^656^^^^^639^662^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( runs ) ;^656^^^^^639^662^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( COUNT_FAST ) ;^656^^^^^639^662^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count < 0 )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < runs )  {System.out.println ( "Anti optimise" ) ;}^658^^^^^639^662^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt = dt.year (  ) .setCopy ( i ) ;^656^^^^^639^662^dt = dt.year (  ) .setCopy ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^655^^^^^639^662^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^660^^^^^639^662^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^665^^^^^664^676^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( runs < 0 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val < -1 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( j < 0 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^if  ( val <  )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count < 0 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val == 0 )  {System.out.println ( "Anti optimise" ) ;}^672^^^^^664^676^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^671^^^^^664^676^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.YEAR, COUNT ) ;^670^^^^^664^676^dt.set ( GregorianCalendar.YEAR, 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.i ) ;^671^^^^^664^676^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.runs ) ;^671^^^^^664^676^int val = dt.get ( GregorianCalendar.YEAR ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^669^^^^^664^676^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.YEAR, 1971 ) ;^670^^^^^664^676^dt.set ( GregorianCalendar.YEAR, 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = runs; i < AVERAGE; i++ )  {^667^^^^^664^676^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^674^^^^^664^676^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^679^^^^^678^690^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( i < 0 )  {System.out.println ( "Anti optimise" ) ;}^686^^^^^678^690^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val <= 0 )  {System.out.println ( "Anti optimise" ) ;}^686^^^^^678^690^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( runsnt i = 0; i < AVERAGE; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^681^^^^^678^690^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( val > 0 )  {System.out.println ( "Anti optimise" ) ;}^686^^^^^678^690^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( COUNT ) ;^684^^^^^678^690^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( i ) ;^684^^^^^678^690^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( count < 0 )  {System.out.println ( "Anti optimise" ) ;}^686^^^^^678^690^if  ( val < 0 )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = val; j < COUNT; j++ )  {^683^^^^^678^690^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setYear ( count ) ;^684^^^^^678^690^dt.setYear ( 1972 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetYear [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^696^^^^^695^707^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^703^^^^^695^707^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = runs; i < AVERAGE; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( COUNT_VERY_FAST ) ;^702^^^^^695^707^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^705^^^^^695^707^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^701^^^^^695^707^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( 14 ) ;^702^^^^^695^707^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^699^^^^^695^707^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^705^^^^^695^707^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^717^^^^^709^721^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^713^^^^^709^721^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^713^^^^^709^721^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^713^^^^^709^721^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^713^^^^^709^721^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( 12 ) ;^716^^^^^709^721^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^719^^^^^709^721^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^715^^^^^709^721^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( val ) ;^716^^^^^709^721^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^713^^^^^709^721^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( COUNT_FAST ) ;^716^^^^^709^721^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^724^^^^^723^734^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^730^^^^^723^734^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^726^^^^^723^734^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^726^^^^^723^734^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^726^^^^^723^734^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^726^^^^^723^734^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, 14 ) ;^729^^^^^723^734^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, runs ) ;^729^^^^^723^734^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^732^^^^^723^734^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^728^^^^^723^734^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, AVERAGE ) ;^729^^^^^723^734^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^726^^^^^723^734^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, val ) ;^729^^^^^723^734^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^732^^^^^723^734^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^737^^^^^736^747^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^743^^^^^736^747^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = count; i < AVERAGE; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours ( 14 ) ;^742^^^^^736^747^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^745^^^^^736^747^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^741^^^^^736^747^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours (  ) ;^742^^^^^736^747^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = runs; i < AVERAGE; i++ )  {^739^^^^^736^747^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours ( 12 ) ;^742^^^^^736^747^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^753^^^^^752^765^int COUNT = COUNT_VERY_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^761^^^^^752^765^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^756^^^^^752^765^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^756^^^^^752^765^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^756^^^^^752^765^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT; i < AVERAGE; i++ )  {^756^^^^^752^765^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( COUNT_FAST ) ;^759^^^^^752^765^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( runs ) ;^763^^^^^752^765^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( 14 ) ;^759^^^^^752^765^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^758^^^^^752^765^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^763^^^^^752^765^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^776^^^^^767^780^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^771^^^^^767^780^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^771^^^^^767^780^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^771^^^^^767^780^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^771^^^^^767^780^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = runs; i < AVERAGE; i++ )  {^771^^^^^767^780^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( 14 ) ;^774^^^^^767^780^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( 12 ) ;^774^^^^^767^780^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^778^^^^^767^780^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHourOfDay ( runs ) ;^774^^^^^767^780^dt.setHourOfDay ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT; j < COUNT; j++ )  {^773^^^^^767^780^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^778^^^^^767^780^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  MutableDateTime  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^790^^^^^782^794^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, count ) ;^788^^^^^782^794^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.val ) ;^789^^^^^782^794^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.count ) ;^789^^^^^782^794^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^792^^^^^782^794^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_VERY_FAST; j < COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^dt.set ( GregorianCalendar.HOUR_OF_DAY, 14 ) ;^788^^^^^782^794^dt.set ( GregorianCalendar.HOUR_OF_DAY, 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^785^^^^^782^794^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^787^^^^^782^794^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int val = dt.get ( GregorianCalendar.runs ) ;^789^^^^^782^794^int val = dt.get ( GregorianCalendar.HOUR_OF_DAY ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^792^^^^^782^794^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^797^^^^^796^808^int COUNT = COUNT_FAST;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( dt != null )  {System.out.println ( "Anti optimise" ) ;}^804^^^^^796^808^if  ( dt == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = i; i < AVERAGE; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < AVERAGE; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours ( count ) ;^802^^^^^796^808^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours ( 14 ) ;^802^^^^^796^808^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^806^^^^^796^808^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = count; j < COUNT; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^dt.setHours ( i ) ;^802^^^^^796^808^dt.setHours ( 13 ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_SLOW; i < AVERAGE; i++ )  {^799^^^^^796^808^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = i; j < COUNT; j++ )  {^801^^^^^796^808^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^806^^^^^796^808^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateSetGetHour [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^814^^^^^813^826^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( object == null )  {System.out.println ( "Anti optimise" ) ;}^822^^^^^813^826^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( str != null )  {System.out.println ( "Anti optimise" ) ;}^822^^^^^813^826^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < runs; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = j; i < AVERAGE; i++ )  {^817^^^^^813^826^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^824^^^^^813^826^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^819^^^^^813^826^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^824^^^^^813^826^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJodaToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = val;^829^^^^^828^841^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( object == null )  {System.out.println ( "Anti optimise" ) ;}^837^^^^^828^841^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( str != null )  {System.out.println ( "Anti optimise" ) ;}^837^^^^^828^841^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < AVERAGE; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = val; i < AVERAGE; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int runs = 0; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_FAST; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( val ) ;^839^^^^^828^841^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < runs; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = ; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_FAST; i < AVERAGE; i++ )  {^832^^^^^828^841^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^834^^^^^828^841^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^839^^^^^828^841^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkJISOToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  DateTimeFormatter  f  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  DateTime  dt  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = j;^844^^^^^843^855^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( object == null )  {System.out.println ( "Anti optimise" ) ;}^851^^^^^843^855^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( str != null )  {System.out.println ( "Anti optimise" ) ;}^851^^^^^843^855^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( valnt i = 0; i < AVERAGE; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < val; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == AVERAGE; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = COUNT_VERY_FAST; i < AVERAGE; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == COUNT; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = runs; j < COUNT; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^String str = dt.format ( sdf.getTime (  )  ) ;^850^^^^^843^855^String str = sdf.format ( dt.getTime (  )  ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^end ( j ) ;^853^^^^^843^855^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = COUNT_SLOW; j < COUNT; j++ )  {^848^^^^^843^855^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int i = ; i < AVERAGE; i++ )  {^846^^^^^843^855^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkGCalToString [RETURN_TYPE] void   [VARIABLES] boolean  GregorianCalendar  dt  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^int COUNT = runs;^858^^^^^857^869^int COUNT = COUNT_SLOW;^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^if  ( object == null )  {System.out.println ( "Anti optimise" ) ;}^865^^^^^857^869^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^if  ( str != null )  {System.out.println ( "Anti optimise" ) ;}^865^^^^^857^869^if  ( str == null )  {System.out.println ( "Anti optimise" ) ;}^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < AVERAGE; i++ )  {^860^^^^^857^869^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( AVERAGEnt i = 0; i < i; i++ )  {^860^^^^^857^869^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= AVERAGE; i++ )  {^860^^^^^857^869^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > AVERAGE; i++ )  {^860^^^^^857^869^for  ( int i = 0; i < AVERAGE; i++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int count = 0; j < COUNT; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < val; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^for  ( int COUNT = 0; j < j; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= COUNT; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < COUNT; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Argument_Swapping]^String str = dt.format ( sdf ) ;^864^^^^^857^869^String str = sdf.format ( dt ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^end ( i ) ;^867^^^^^857^869^end ( COUNT ) ;^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^for  ( int val = 0; j < COUNT; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < COUNT; j++ )  {^862^^^^^857^869^for  ( int j = 0; j < COUNT; j++ )  {^[CLASS] DateTimePerformance Result  [METHOD] checkDateToString [RETURN_TYPE] void   [VARIABLES] boolean  List  resultList  String  name  object  str  Map  results  SimpleDateFormat  sdf  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Date  dt  Result  res  result  
[BugLab_Variable_Misuse]^result =  ( Result )  results.get ( str + str2 ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result =  ( Result )  results.get ( str1 + str ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result =  ( Result )  results.get ( str2 + str1 ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result =  ( Result )  str1.get ( results + str2 ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^result =  ( Result )  results.get ( str1  ^  str2 ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result =  ( Result )  str2.get ( str1 + results ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^result =  ( Result )  results.get ( str1   instanceof   str2 ) ;^877^^^^^876^886^result =  ( Result )  results.get ( str1 + str2 ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^if  ( res == null )  {^878^^^^^876^886^if  ( result == null )  {^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^if  ( result != null )  {^878^^^^^876^886^if  ( result == null )  {^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.object = str2;^880^^^^^876^886^result.object = str1;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.name = str1;^881^^^^^876^886^result.name = str2;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^results.put ( str + str2, result ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^results.put ( str1 + str1, result ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^results.put ( str1 + str2, res ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^results.put ( str2 + str1, result ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^results.put ( str1 + result, str2 ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^resultList.add ( res ) ;^883^^^^^876^886^resultList.add ( result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.object = str;^880^^^^^876^886^result.object = str1;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^results.put ( str1 + str, result ) ;^882^^^^^876^886^results.put ( str1 + str2, result ) ;^[CLASS] DateTimePerformance Result  [METHOD] start [RETURN_TYPE] void   String str1 String str2 [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^long time =  ( jodaTotal - start ) ;^893^^^^^891^898^long time =  ( end - start ) ;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^long time =  ( end - jisoTotal ) ;^893^^^^^891^898^long time =  ( end - start ) ;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^long time =  ( start - end ) ;^893^^^^^891^898^long time =  ( end - start ) ;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^long time =  ( end  ==  start ) ;^893^^^^^891^898^long time =  ( end - start ) ;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.time = result.time + jodaTotal;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.time = res.time + time;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.time = jisoTotal + time;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.time = time + result.time;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.time = time.time + result;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.time = result + time;^894^^^^^891^898^result.time = result.time + time;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.runs = result.runs + val;^895^^^^^891^898^result.runs = result.runs + count;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.runs = res.runs + count;^895^^^^^891^898^result.runs = result.runs + count;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.runs = val + count;^895^^^^^891^898^result.runs = result.runs + count;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.runs = count + result.runs;^895^^^^^891^898^result.runs = result.runs + count;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.runs = count.runs + result;^895^^^^^891^898^result.runs = result.runs + count;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.avg =  ( res.time * 1000000 )  / result.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Variable_Misuse]^result.avg =  ( result.time * 1000000 )  / j;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.avg =  ( result.time.time * 1000000 )  / result.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.avg =  ( result * 1000000 )  / result.time.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Argument_Swapping]^result.avg =  ( result.runs.time * 1000000 )  / result;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^result.avg =  ( result.time * 1000000 )  + result.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Operator]^result.avg =  ( result.time / 1000000 )  / result.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^result.avg =  ( result.time * COUNT )  / result.runs;^896^^^^^891^898^result.avg =  ( result.time * 1000000 )  / result.runs;^[CLASS] DateTimePerformance Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^long time = 1;^44^^^^^39^49^long time = 0;^[CLASS] Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^long avg = COUNT;^45^^^^^40^50^long avg = 0;^[CLASS] Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
[BugLab_Wrong_Literal]^int runs = val;^46^^^^^41^51^int runs = 0;^[CLASS] Result  [METHOD] end [RETURN_TYPE] void   int count [VARIABLES] boolean  List  resultList  String  name  object  str  str1  str2  Map  results  long  avg  dateTotal  end  gcalTotal  jisoTotal  jodaTotal  start  time  int  AVERAGE  COUNT  COUNT_FAST  COUNT_SLOW  COUNT_VERY_FAST  count  i  j  runs  val  Result  res  result  
