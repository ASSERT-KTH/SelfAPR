[BugLab_Variable_Misuse]^System.arraycopy ( copy, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Variable_Misuse]^System.arraycopy ( original, 0, copy, 0, Math.min ( newLength, newLength )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Argument_Swapping]^System.arraycopy ( copy, 0, original, 0, Math.min ( original.length, newLength )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Argument_Swapping]^System.arraycopy ( original, 0, newLength, 0, Math.min ( original.length, copy )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Argument_Swapping]^System.arraycopy ( original, 0, copy, 0, Math.min ( newLength, original.length )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Wrong_Literal]^System.arraycopy ( original, newLength, copy, newLength, Math.min ( original.length, newLength )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Wrong_Literal]^System.arraycopy ( original, 1, copy, 1, Math.min ( original.length, newLength )  ) ;^11^12^^^^9^14^System.arraycopy ( original, 0, copy, 0, Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Variable_Misuse]^Math.min ( copy.length, newLength )  ) ;^12^^^^^9^14^Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Argument_Swapping]^Math.min ( newLength.length, original )  ) ;^12^^^^^9^14^Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Argument_Swapping]^Math.min ( newLength, original.length )  ) ;^12^^^^^9^14^Math.min ( original.length, newLength )  ) ;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Variable_Misuse]^return original;^13^^^^^9^14^return copy;^[CLASS] Arrays  [METHOD] copyOf [RETURN_TYPE] int[]   int[] original int newLength [VARIABLES] boolean  int[]  copy  original  int  newLength  
[BugLab_Variable_Misuse]^System.arraycopy ( dest, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Variable_Misuse]^System.arraycopy ( original, 0, original, 0, Math.min ( original.length, dest.length )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Argument_Swapping]^System.arraycopy ( dest.length, 0, dest, 0, Math.min ( original.length, original )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Argument_Swapping]^System.arraycopy ( dest, 0, original, 0, Math.min ( original.length, dest.length )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Argument_Swapping]^System.arraycopy ( original, 0, dest, 0, Math.min ( dest.length, original.length )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Wrong_Literal]^System.arraycopy ( original, 1, dest, 1, Math.min ( original.length, dest.length )  ) ;^19^20^^^^16^21^System.arraycopy ( original, 0, dest, 0, Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Variable_Misuse]^Math.min ( original.length, original.length )  ) ;^20^^^^^16^21^Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Argument_Swapping]^Math.min ( dest.length.length, original )  ) ;^20^^^^^16^21^Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
[BugLab_Argument_Swapping]^Math.min ( dest.length, original.length )  ) ;^20^^^^^16^21^Math.min ( original.length, dest.length )  ) ;^[CLASS] Arrays  [METHOD] copy [RETURN_TYPE] void   Object[] original Object[] dest [VARIABLES] boolean  Object[]  dest  original  
