[BugLab_Variable_Misuse]^this.scope = Util.getScope ( var ) ;^57^^^^^56^58^this.scope = Util.getScope ( scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] setScope [RETURN_TYPE] void   String scope [VARIABLES] Object  value  String  scope  var  boolean  int  scope  
[BugLab_Variable_Misuse]^this.var = scope;^61^^^^^60^62^this.var = var;^[CLASS] SetDateTimeZoneSupport  [METHOD] setVar [RETURN_TYPE] void   String var [VARIABLES] Object  value  String  scope  var  boolean  int  scope  
[BugLab_Wrong_Operator]^if  ( value != null )  {^66^^^^^64^86^if  ( value == null )  {^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Wrong_Operator]^} else if  ( value  >  String )  {^68^^^^^64^86^} else if  ( value instanceof String )  {^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Wrong_Operator]^} else if  ( value  |  String )  {^68^^^^^64^86^} else if  ( value instanceof String )  {^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Wrong_Operator]^if  ( var == null )  {^78^^^^^64^86^if  ( var != null )  {^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Argument_Swapping]^Config.set ( dateTimeZone, DateTimeZoneSupport.FMT_TIME_ZONE, pageContext, scope ) ;^81^82^^^^64^86^Config.set ( pageContext, DateTimeZoneSupport.FMT_TIME_ZONE, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Argument_Swapping]^Config.set ( scope, DateTimeZoneSupport.FMT_TIME_ZONE, dateTimeZone, pageContext ) ;^81^82^^^^64^86^Config.set ( pageContext, DateTimeZoneSupport.FMT_TIME_ZONE, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Variable_Misuse]^pageContext.setAttribute ( scope, dateTimeZone, scope ) ;^79^^^^^64^86^pageContext.setAttribute ( var, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Argument_Swapping]^pageContext.setAttribute ( dateTimeZone, var, scope ) ;^79^^^^^64^86^pageContext.setAttribute ( var, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Argument_Swapping]^pageContext.setAttribute ( scope, dateTimeZone, var ) ;^79^^^^^64^86^pageContext.setAttribute ( var, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
[BugLab_Argument_Swapping]^Config.set ( pageContext, DateTimeZoneSupport.FMT_TIME_ZONE, scope, dateTimeZone ) ;^81^82^^^^64^86^Config.set ( pageContext, DateTimeZoneSupport.FMT_TIME_ZONE, dateTimeZone, scope ) ;^[CLASS] SetDateTimeZoneSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Object  value  String  scope  var  boolean  int  scope  DateTimeZone  dateTimeZone  IllegalArgumentException  iae  
