[BugLab_Variable_Misuse]^this.var = style;^77^^^^^76^78^this.var = var;^[CLASS] FormatSupport  [METHOD] setVar [RETURN_TYPE] void   String var [VARIABLES] Locale  locale  Object  value  String  pattern  style  var  boolean  DateTimeZone  dateTimeZone  int  scope  
[BugLab_Variable_Misuse]^this.scope = Util.getScope ( var ) ;^81^^^^^80^82^this.scope = Util.getScope ( scope ) ;^[CLASS] FormatSupport  [METHOD] setScope [RETURN_TYPE] void   String scope [VARIABLES] Locale  locale  Object  value  String  pattern  scope  style  var  boolean  DateTimeZone  dateTimeZone  int  scope  
[BugLab_Wrong_Operator]^if  ( value != null )  {^88^^^^^73^103^if  ( value == null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( var == null )  {^89^^^^^74^104^if  ( var != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.removeAttribute ( style, scope ) ;^90^^^^^75^105^pageContext.removeAttribute ( var, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^pageContext.removeAttribute ( scope, var ) ;^90^^^^^75^105^pageContext.removeAttribute ( var, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^if  ( style != null )  {^89^^^^^74^104^if  ( var != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.removeAttribute ( scope, scope ) ;^90^^^^^75^105^pageContext.removeAttribute ( var, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^if  ( var != null )  {^97^^^^^82^112^if  ( pattern != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( pattern == null )  {^97^^^^^82^112^if  ( pattern != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^} else if  ( var != null )  {^99^^^^^84^114^} else if  ( style != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^} else if  ( style == null )  {^99^^^^^84^114^} else if  ( style != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^formatter = DateTimeFormat.forStyle ( scope ) ;^100^^^^^85^115^formatter = DateTimeFormat.forStyle ( style ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^formatter = DateTimeFormat.forStyle ( var ) ;^100^^^^^85^115^formatter = DateTimeFormat.forStyle ( style ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^formatter = DateTimeFormat.forPattern ( var ) ;^98^^^^^83^113^formatter = DateTimeFormat.forPattern ( pattern ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( locale != null )  {^108^^^^^93^123^if  ( locale == null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Literal]^locale = Util.getFormattingLocale ( pageContext, this, false, DateFormat.getAvailableLocales (  )  ) ;^109^110^^^^94^124^locale = Util.getFormattingLocale ( pageContext, this, true, DateFormat.getAvailableLocales (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^locale = Util.getFormattingLocale ( this, this, true, DateFormat.getAvailableLocales (  )  ) ;^109^110^^^^94^124^locale = Util.getFormattingLocale ( pageContext, this, true, DateFormat.getAvailableLocales (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( locale == null )  {^112^^^^^97^127^if  ( locale != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^formatter = locale.withLocale ( formatter ) ;^113^^^^^98^128^formatter = formatter.withLocale ( locale ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^DateTimeZone tz = dateTimeZone;^117^^^^^102^132^DateTimeZone tz = this.dateTimeZone;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^if  ( dateTimeZone == null )  {^118^^^^^103^133^if  ( tz == null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( tz != null )  {^118^^^^^103^133^if  ( tz == null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^tz = DateTimeZoneSupport.getDateTimeZone ( 4, this ) ;^119^^^^^104^134^tz = DateTimeZoneSupport.getDateTimeZone ( pageContext, this ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^if  ( dateTimeZone != null )  {^121^^^^^106^136^if  ( tz != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( tz == null )  {^121^^^^^106^136^if  ( tz != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^formatter = formatter.withZone ( dateTimeZone ) ;^122^^^^^107^137^formatter = formatter.withZone ( tz ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^formatter = tz.withZone ( formatter ) ;^122^^^^^107^137^formatter = formatter.withZone ( tz ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( value  ==  ReadableInstant )  {^127^^^^^112^142^if  ( value instanceof ReadableInstant )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( value  >=  ReadableInstant )  {^127^^^^^112^142^if  ( value instanceof ReadableInstant )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^} else if  ( value  >  ReadablePartial )  {^129^^^^^114^144^} else if  ( value instanceof ReadablePartial )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  <  " was: "  <  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  >>  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"   instanceof   " was: "   instanceof   value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  ==  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  &  " was: "  &  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"   instanceof   " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  ==  " was: "  ==  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  <=  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^} else if  ( value  >>  ReadablePartial )  {^129^^^^^114^144^} else if  ( value instanceof ReadablePartial )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  <=  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  >  " was: "  >  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^129^135^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  ||  " was: "  ||  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  !=  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  >=  " was: "  >=  value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial,"  >>  " was: " + value.getClass (  ) .getName (  )  ) ;^132^133^134^^^117^147^throw new JspException ( "value attribute of format tag must be a ReadableInstant or ReadablePartial," + " was: " + value.getClass (  ) .getName (  )  ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^if  ( style != null )  {^137^^^^^122^152^if  ( var != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Wrong_Operator]^if  ( var == null )  {^137^^^^^122^152^if  ( var != null )  {^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.getOut (  ) .print ( var ) ;^141^^^^^137^145^pageContext.getOut (  ) .print ( formatted ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.getOut (  ) .print ( style ) ;^141^^^^^137^145^pageContext.getOut (  ) .print ( formatted ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.setAttribute ( var, var, scope ) ;^138^^^^^123^153^pageContext.setAttribute ( var, formatted, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.setAttribute ( style, formatted, scope ) ;^138^^^^^123^153^pageContext.setAttribute ( var, formatted, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^pageContext.setAttribute ( formatted, var, scope ) ;^138^^^^^123^153^pageContext.setAttribute ( var, formatted, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^pageContext.setAttribute ( scope, formatted, var ) ;^138^^^^^123^153^pageContext.setAttribute ( var, formatted, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.getOut (  ) .print ( style ) ;^141^^^^^126^156^pageContext.getOut (  ) .print ( formatted ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Argument_Swapping]^pageContext.setAttribute ( var, scope, formatted ) ;^138^^^^^123^153^pageContext.setAttribute ( var, formatted, scope ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
[BugLab_Variable_Misuse]^pageContext.getOut (  ) .print ( var ) ;^141^^^^^126^156^pageContext.getOut (  ) .print ( formatted ) ;^[CLASS] FormatSupport  [METHOD] doEndTag [RETURN_TYPE] int   [VARIABLES] Locale  locale  boolean  Object  value  String  formatted  pattern  scope  style  var  IOException  ioe  DateTimeFormatter  formatter  DateTimeZone  dateTimeZone  tz  int  scope  
