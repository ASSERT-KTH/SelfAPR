[buglab_swap_variables]^String name =  ( String )  localeStr.get ( iNames ) ;^72^^^^^70^86^String name =  ( String )  iNames.get ( localeStr ) ;^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^if  ( locale == null && name.getVariant (  ) .length (  )  > 0 )  {^73^^^^^70^86^if  ( name == null && locale.getVariant (  ) .length (  )  > 0 )  {^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^name =  ( String )  localeStr.get ( iNames.substring ( 0, 5 )  ) ;^74^^^^^70^86^name =  ( String )  iNames.get ( localeStr.substring ( 0, 5 )  ) ;^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^if  ( locale == null && name.getCountry (  ) .length (  )  > 0 )  {^76^^^^^70^86^if  ( name == null && locale.getCountry (  ) .length (  )  > 0 )  {^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^name =  ( String )  localeStr.get ( iNames.substring ( 0, 2 )  ) ;^77^^^^^70^86^name =  ( String )  iNames.get ( localeStr.substring ( 0, 2 )  ) ;^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^if  ( iNames == null && name.size (  )  > 0 )  {^82^^^^^70^86^if  ( name == null && iNames.size (  )  > 0 )  {^[CLASS] Holiday  [METHOD] getName [RETURN_TYPE] String   Locale locale [VARIABLES] Locale  locale  List  iHolidayRules  String  iId  localeStr  name  boolean  Map  iNames  
[buglab_swap_variables]^if  ( mdt.appliesForYear ( rule, year )  )  {^99^^^^^95^104^if  ( rule.appliesForYear ( mdt, year )  )  {^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^if  ( rule.appliesForYear ( year, mdt )  )  {^99^^^^^95^104^if  ( rule.appliesForYear ( mdt, year )  )  {^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^if  ( rule.appliesForYear (  year )  )  {^99^^^^^95^104^if  ( rule.appliesForYear ( mdt, year )  )  {^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^if  ( rule.appliesForYear ( mdt )  )  {^99^^^^^95^104^if  ( rule.appliesForYear ( mdt, year )  )  {^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^return new YearMonthDay ( year.applyForYear ( mdt, rule )  ) ;^100^^^^^95^104^return new YearMonthDay ( rule.applyForYear ( mdt, year )  ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^return new YearMonthDay ( mdt.applyForYear ( rule, year )  ) ;^100^^^^^95^104^return new YearMonthDay ( rule.applyForYear ( mdt, year )  ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^return new YearMonthDay ( rule.applyForYear (  year )  ) ;^100^^^^^95^104^return new YearMonthDay ( rule.applyForYear ( mdt, year )  ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^return new YearMonthDay ( rule.applyForYear ( year, mdt )  ) ;^100^^^^^95^104^return new YearMonthDay ( rule.applyForYear ( mdt, year )  ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^return new YearMonthDay ( rule.applyForYear ( mdt )  ) ;^100^^^^^95^104^return new YearMonthDay ( rule.applyForYear ( mdt, year )  ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^HolidayRule rule =  ( HolidayRule )  iHolidayRulesHolidayRules.get ( i ) ;^98^^^^^95^104^HolidayRule rule =  ( HolidayRule )  iHolidayRules.get ( i ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^HolidayRule rule =  ( HolidayRule )  i.get ( iHolidayRules ) ;^98^^^^^95^104^HolidayRule rule =  ( HolidayRule )  iHolidayRules.get ( i ) ;^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
[buglab_swap_variables]^if  ( year.appliesForYear ( mdt, rule )  )  {^99^^^^^95^104^if  ( rule.appliesForYear ( mdt, year )  )  {^[CLASS] Holiday  [METHOD] yearMonthDayForYear [RETURN_TYPE] YearMonthDay   int year [VARIABLES] boolean  MutableDateTime  mdt  List  iHolidayRules  String  iId  localeStr  name  Map  iNames  HolidayRule  rule  int  i  year  
