[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.JANUARY ) .plusWeeks ( iYear ) ;^48^49^50^^^46^51^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.JANUARY ) .plusWeeks ( 2 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( 3 ) ;^61^62^63^^^59^64^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( 2 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( iYear ) ;^61^62^63^^^59^64^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( 2 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JULY, iYear ) .toDateTime (  ) ;^79^80^^^^78^81^return new DateMidnight ( iYear, DateTimeConstants.JULY, 4 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JULY, 5 ) .toDateTime (  ) ;^79^80^^^^78^81^return new DateMidnight ( iYear, DateTimeConstants.JULY, 4 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^return TimeUtility.AdjustAmericanHolidayForWeekend ( NEW_YEAR_HOLIDAY .create ( iYear )  ) ;^87^88^^^^86^89^return TimeUtility.AdjustAmericanHolidayForWeekend ( INDEPENDENCE_DAY .create ( iYear )  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Argument_Swapping]^return TimeUtility.AdjustAmericanHolidayForWeekend ( iYear .create ( INDEPENDENCE_DAY )  ) ;^87^88^^^^86^89^return TimeUtility.AdjustAmericanHolidayForWeekend ( INDEPENDENCE_DAY .create ( iYear )  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^return TimeUtility.AdjustAmericanHolidayForWeekend ( WASHINGTONS_BIRTHDAY_HOLIDAY .create ( iYear )  ) ;^87^88^^^^86^89^return TimeUtility.AdjustAmericanHolidayForWeekend ( INDEPENDENCE_DAY .create ( iYear )  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER ) .plusWeeks ( iYear ) ;^105^106^107^^^103^108^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER ) .plusWeeks ( 1 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( iYear ) ;^115^116^117^^^113^118^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 3 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 2 ) ;^115^116^117^^^113^118^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 3 ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^136^137^^^^135^138^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 22 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 21 ) .toDateTime (  ) ;^136^137^^^^135^138^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 22 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 13 ) .toDateTime (  ) ;^144^145^^^^143^146^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 12 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^144^145^^^^143^146^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 12 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MAY, 6 ) .toDateTime (  ) ;^152^153^^^^151^154^return new DateMidnight ( iYear, DateTimeConstants.MAY, 5 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, 32 ) .toDateTime (  ) ;^160^161^^^^159^162^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, 31 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, iYear ) .toDateTime (  ) ;^160^161^^^^159^162^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, 31 ) .toDateTime (  ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Operator]^if  ( iYear % 4 == 0 )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Operator]^if  ( iYear  <=  4 != 0 )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^if  ( iYear % 4 !=  )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonthAfterYMonthday ( DateTimeConstants.TUESDAY, iYear, iYear, DateTimeConstants.NOVEMBER ) ;^176^177^178^^^170^179^return TimeUtility.GetFirstXWeekdayOfMonthAfterYMonthday ( DateTimeConstants.TUESDAY, 1, iYear, DateTimeConstants.NOVEMBER ) ;^[CLASS] USAnniversaries 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  CHRISTMAS_HOLIDAY  CINCO_DE_MAYO  COLUMBUS_DAY  ELECTION_DAY  HALLOWEEN  INDEPENDENCE_DAY  INDEPENDENCE_DAY_HOLIDAY  LINCOLNS_BIRTHDAY  MARTIN_LUTHER_KING_DAY  MEMORIAL_DAY  NEW_YEAR_HOLIDAY  PRE_FDR_THANKSGIVING  THANKSGIVING  VETERANS_DAY_HOLIDAY  WASHINGTONS_BIRTHDAY  WASHINGTONS_BIRTHDAY_HOLIDAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( iYear ) ;^61^62^63^^^59^64^return TimeUtility .GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.FEBRUARY ) .plusWeeks ( 2 ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JULY, iYear ) .toDateTime (  ) ;^79^80^^^^78^81^return new DateMidnight ( iYear, DateTimeConstants.JULY, 4 ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Argument_Swapping]^return TimeUtility.AdjustAmericanHolidayForWeekend ( iYear .create ( INDEPENDENCE_DAY )  ) ;^87^88^^^^86^89^return TimeUtility.AdjustAmericanHolidayForWeekend ( INDEPENDENCE_DAY .create ( iYear )  ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER ) .plusWeeks ( iYear ) ;^105^106^107^^^103^108^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.MONDAY, iYear, DateTimeConstants.OCTOBER ) .plusWeeks ( 1 ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 2 ) ;^115^116^117^^^113^118^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 3 ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( iYear ) ;^115^116^117^^^113^118^return TimeUtility.GetFirstXWeekdayOfMonth ( DateTimeConstants.THURSDAY, iYear, DateTimeConstants.NOVEMBER ) .plusWeeks ( 3 ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^136^137^^^^135^138^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 22 ) .toDateTime (  ) ;^[CLASS] 11  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY,  ) .toDateTime (  ) ;^136^137^^^^135^138^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 22 ) .toDateTime (  ) ;^[CLASS] 11  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^144^145^^^^143^146^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 12 ) .toDateTime (  ) ;^[CLASS] 12  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY,  ) .toDateTime (  ) ;^144^145^^^^143^146^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 12 ) .toDateTime (  ) ;^[CLASS] 12  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MAY, 4 ) .toDateTime (  ) ;^152^153^^^^151^154^return new DateMidnight ( iYear, DateTimeConstants.MAY, 5 ) .toDateTime (  ) ;^[CLASS] 13  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MAY, iYear ) .toDateTime (  ) ;^152^153^^^^151^154^return new DateMidnight ( iYear, DateTimeConstants.MAY, 5 ) .toDateTime (  ) ;^[CLASS] 13  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, iYear ) .toDateTime (  ) ;^160^161^^^^159^162^return new DateMidnight ( iYear, DateTimeConstants.OCTOBER, 31 ) .toDateTime (  ) ;^[CLASS] 14  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Operator]^if  ( iYear % 4 == 0 )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] 15  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Operator]^if  ( iYear  <<  4 != 0 )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] 15  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^if  ( iYear % iYear != 0 )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] 15  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^if  ( iYear % 4 != iYear )  {^172^^^^^170^179^if  ( iYear % 4 != 0 )  {^[CLASS] 15  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return TimeUtility.GetFirstXWeekdayOfMonthAfterYMonthday ( DateTimeConstants.TUESDAY, 2, iYear, DateTimeConstants.NOVEMBER ) ;^176^177^178^^^170^179^return TimeUtility.GetFirstXWeekdayOfMonthAfterYMonthday ( DateTimeConstants.TUESDAY, 1, iYear, DateTimeConstants.NOVEMBER ) ;^[CLASS] 15  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
