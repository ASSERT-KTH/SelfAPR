[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^53^54^^^^52^55^return new DateMidnight ( iYear, DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^[CLASS] CanadaAnniversaries 1 2 3 4 5 6 7 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  BOXING_DAY_HOLIDAY  CANADA_DAY  CANADA_DAY_HOLIDAY  CHRISTMAS_HOLIDAY  NEW_YEAR_HOLIDAY  REMEMBRANCE_DAY_HOLIDAY  THANKSGIVING  VICTORIA_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^53^54^^^^52^55^return new DateMidnight ( iYear, DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^[CLASS] CanadaAnniversaries 1 2 3 4 5 6 7 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  BOXING_DAY_HOLIDAY  CANADA_DAY  CANADA_DAY_HOLIDAY  CHRISTMAS_HOLIDAY  NEW_YEAR_HOLIDAY  REMEMBRANCE_DAY_HOLIDAY  THANKSGIVING  VICTORIA_DAY  int  iYear  boolean  
[buglab_swap_variables]^return TimeUtility .AdjustCanadianHolidayForWeekend ( iYear.create ( CHRISTMAS_HOLIDAY ) .plusDays ( 1 )  ) ;^99^100^101^^^98^102^return TimeUtility .AdjustCanadianHolidayForWeekend ( CHRISTMAS_HOLIDAY.create ( iYear ) .plusDays ( 1 )  ) ;^[CLASS] CanadaAnniversaries 1 2 3 4 5 6 7 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  BOXING_DAY_HOLIDAY  CANADA_DAY  CANADA_DAY_HOLIDAY  CHRISTMAS_HOLIDAY  NEW_YEAR_HOLIDAY  REMEMBRANCE_DAY_HOLIDAY  THANKSGIVING  VICTORIA_DAY  int  iYear  boolean  
[buglab_swap_variables]^.AdjustCanadianHolidayForWeekend ( iYear.create ( CHRISTMAS_HOLIDAY ) .plusDays ( 1 )  ) ;^100^101^^^^98^102^.AdjustCanadianHolidayForWeekend ( CHRISTMAS_HOLIDAY.create ( iYear ) .plusDays ( 1 )  ) ;^[CLASS] CanadaAnniversaries 1 2 3 4 5 6 7 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  BOXING_DAY_HOLIDAY  CANADA_DAY  CANADA_DAY_HOLIDAY  CHRISTMAS_HOLIDAY  NEW_YEAR_HOLIDAY  REMEMBRANCE_DAY_HOLIDAY  THANKSGIVING  VICTORIA_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^53^54^^^^52^55^return new DateMidnight ( iYear, DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^53^54^^^^52^55^return new DateMidnight ( iYear, DateTimeConstants.JULY, 1 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return TimeUtility .AdjustCanadianHolidayForWeekend ( iYear.create ( CHRISTMAS_HOLIDAY ) .plusDays ( 1 )  ) ;^99^100^101^^^98^102^return TimeUtility .AdjustCanadianHolidayForWeekend ( CHRISTMAS_HOLIDAY.create ( iYear ) .plusDays ( 1 )  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^.AdjustCanadianHolidayForWeekend ( iYear.create ( CHRISTMAS_HOLIDAY ) .plusDays ( 1 )  ) ;^100^101^^^^98^102^.AdjustCanadianHolidayForWeekend ( CHRISTMAS_HOLIDAY.create ( iYear ) .plusDays ( 1 )  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
