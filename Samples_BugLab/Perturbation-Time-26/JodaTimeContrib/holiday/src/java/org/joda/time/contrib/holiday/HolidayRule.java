[BugLab_Wrong_Literal]^private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = -1;^50^^^^^45^55^private static final int WEEKEND_ADJUST_NEXT_WEEKDAY = 0;^[CLASS] HolidayRule   [VARIABLES] 
[BugLab_Variable_Misuse]^return iMonthOfYear;^70^^^^^69^71^return iFromYear;^[CLASS] HolidayRule  [METHOD] getFromYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  boolean  
[BugLab_Variable_Misuse]^iFromYear = iRelativeDays;^79^^^^^78^80^iFromYear = year;^[CLASS] HolidayRule  [METHOD] setFromYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return year;^89^^^^^88^90^return iToYear;^[CLASS] HolidayRule  [METHOD] getToYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^iToYear = iRelativeDays;^98^^^^^97^99^iToYear = year;^[CLASS] HolidayRule  [METHOD] setToYear [RETURN_TYPE] void   int year [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return iToYear;^108^^^^^107^109^return iMonthOfYear;^[CLASS] HolidayRule  [METHOD] getMonthOfYear [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return year;^118^^^^^117^119^return iDayOfMonth;^[CLASS] HolidayRule  [METHOD] getDayOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return iWeekendAdjust;^128^^^^^127^129^return iDayOfWeek;^[CLASS] HolidayRule  [METHOD] getDayOfWeek [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return year;^139^^^^^138^140^return iWeekOfMonth;^[CLASS] HolidayRule  [METHOD] getWeekOfMonth [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return year;^149^^^^^148^150^return iRelativeDays;^[CLASS] HolidayRule  [METHOD] getRelativeDays [RETURN_TYPE] int   [VARIABLES] int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return  ( iFromYear <= iRelativeDays && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return  ( iWeekOfMonth <= year && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^return  ( iFromYear <= year && iRelativeDays >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Argument_Swapping]^return  ( iFromYear <= iToYear && year >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Argument_Swapping]^return  ( iToYear <= year && iFromYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^return  ( iFromYear <= year || iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^return  ( iFromYear == year && iToYear >= year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^return  ( iFromYear <= year && iToYear > year ) ;^171^^^^^170^172^return  ( iFromYear <= year && iToYear >= year ) ;^[CLASS] HolidayRule  [METHOD] appliesForYear [RETURN_TYPE] boolean   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.setDate ( iWeekendAdjust, 1, 1 ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Literal]^mdt.setDate ( year, WEEKEND_ADJUST_PREVIOUS_WEEKDAY, WEEKEND_ADJUST_PREVIOUS_WEEKDAY ) ;^183^^^^^182^203^mdt.setDate ( year, 1, 1 ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iMonthOfYear != Integer.year )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iMonthOfYear == Integer.MIN_VALUE )  {^184^^^^^182^203^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.setMonthOfYear ( iWeekOfMonth ) ;^185^^^^^182^203^mdt.setMonthOfYear ( iMonthOfYear ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iDayOfMonth != Integer.iToYear )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iDayOfMonth == Integer.MIN_VALUE )  {^187^^^^^182^203^if  ( iDayOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.setDayOfMonth ( iRelativeDays ) ;^188^^^^^182^203^mdt.setDayOfMonth ( iDayOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iDayOfWeek != Integer.iWeekOfMonth )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iDayOfWeek >= Integer.MIN_VALUE )  {^190^^^^^182^203^if  ( iDayOfWeek != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.setDayOfWeek ( iRelativeDays ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.setDayOfWeek ( year ) ;^191^^^^^182^203^mdt.setDayOfWeek ( iDayOfWeek ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iRelativeDays != Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iWeekOfMonth != Integer.iRelativeDays )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iWeekOfMonth == Integer.MIN_VALUE )  {^193^^^^^182^203^if  ( iWeekOfMonth != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^calculateWeekOfMonth ( mdt, year, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^calculateWeekOfMonth ( mdt, iMonthOfYear, year ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Argument_Swapping]^calculateWeekOfMonth ( iMonthOfYear, mdt, iWeekOfMonth ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Argument_Swapping]^calculateWeekOfMonth ( mdt, iWeekOfMonth, iMonthOfYear ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^calculateWeekOfMonth ( mdt, iMonthOfYear, iToYear ) ;^194^^^^^182^203^calculateWeekOfMonth ( mdt, iMonthOfYear, iWeekOfMonth ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iRelativeDays != Integer.iMonthOfYear )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iRelativeDays <= Integer.MIN_VALUE )  {^196^^^^^182^203^if  ( iRelativeDays != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.addDays ( iMonthOfYear ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^mdt.addDays ( year ) ;^197^^^^^182^203^mdt.addDays ( iRelativeDays ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iMonthOfYear != Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^if  ( iWeekendAdjust != Integer.iRelativeDays )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Wrong_Operator]^if  ( iWeekendAdjust <= Integer.MIN_VALUE )  {^199^^^^^182^203^if  ( iWeekendAdjust != Integer.MIN_VALUE )  {^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^calculateWeekendAdjust ( mdt, iMonthOfYear ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Argument_Swapping]^calculateWeekendAdjust ( iWeekendAdjust, mdt ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^calculateWeekendAdjust ( mdt, iToYear ) ;^200^^^^^182^203^calculateWeekendAdjust ( mdt, iWeekendAdjust ) ;^[CLASS] HolidayRule  [METHOD] applyForYear [RETURN_TYPE] MutableDateTime   MutableDateTime mdt int year [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  year  boolean  
[BugLab_Variable_Misuse]^while  ( mdt.getMonthOfYear (  )  >= iRelativeDays )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Argument_Swapping]^while  ( month.getMonthOfYear (  )  >= mdt )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^while  ( mdt.getMonthOfYear (  )  > month )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( -iDayOfWeek ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^while  ( mdt.getMonthOfYear (  )  <= iToYear )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Argument_Swapping]^while  ( month.getMonthOfYear (  )  <= mdt )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^while  ( mdt.getMonthOfYear (  )  < month )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( 0 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^if  ( week == 0 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^if  ( week > -1 )  {^215^^^^^214^226^if  ( week > 0 )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^while  ( mdt.getMonthOfYear (  )  <= year )  {^221^^^^^214^226^while  ( mdt.getMonthOfYear (  )  <= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( 2 ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^mdt.addWeeks ( -month ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^while  ( mdt.getMonthOfYear (  )  >= iWeekendAdjust )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^while  ( mdt.getMonthOfYear (  )  == month )  {^216^^^^^214^226^while  ( mdt.getMonthOfYear (  )  >= month )  {^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( -iFromYear ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^mdt.addWeeks ( iRelativeDays ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( -WEEKEND_ADJUST_PREVIOUS_WEEKDAY ) ;^217^^^^^214^226^mdt.addWeeks ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^mdt.addWeeks ( iToYear ) ;^219^^^^^214^226^mdt.addWeeks ( week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addWeeks ( WEEKEND_ADJUST_NEXT_WEEKDAY ) ;^222^^^^^214^226^mdt.addWeeks ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Variable_Misuse]^mdt.addWeeks ( -iRelativeDays ) ;^224^^^^^214^226^mdt.addWeeks ( -week ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekOfMonth [RETURN_TYPE] void   MutableDateTime mdt int month int week [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^if  ( mdt.getDayOfWeek (  )  > DateTimeConstants.SATURDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^if  ( mdt.getDayOfWeek (  )  != DateTimeConstants.SATURDAY )  {^236^^^^^234^257^if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SATURDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^} else if  ( mdt.getDayOfWeek (  )  > DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( -1 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( 2 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( -3 ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( iDayOfMonth ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Operator]^} else if  ( mdt.getDayOfWeek (  )  < DateTimeConstants.SUNDAY )  {^246^^^^^234^257^} else if  ( mdt.getDayOfWeek (  )  == DateTimeConstants.SUNDAY )  {^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( 0 ) ;^250^^^^^234^257^mdt.addDays ( 1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( -iDayOfWeek ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( 3 ) ;^239^^^^^234^257^mdt.addDays ( 2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( -2 ) ;^243^^^^^234^257^mdt.addDays ( -1 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
[BugLab_Wrong_Literal]^mdt.addDays ( -WEEKEND_ADJUST_NEXT_WEEKDAY ) ;^253^^^^^234^257^mdt.addDays ( -2 ) ;^[CLASS] HolidayRule  [METHOD] calculateWeekendAdjust [RETURN_TYPE] void   MutableDateTime mdt int adjust [VARIABLES] MutableDateTime  mdt  int  WEEKEND_ADJUST_NEAREST_WEEKDAY  WEEKEND_ADJUST_NEXT_WEEKDAY  WEEKEND_ADJUST_PREVIOUS_WEEKDAY  adjust  iDayOfMonth  iDayOfWeek  iFromYear  iMonthOfYear  iRelativeDays  iToYear  iWeekOfMonth  iWeekendAdjust  month  week  year  boolean  
