[BugLab_Variable_Misuse]^_day = _start;^46^^^^^44^48^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[BugLab_Variable_Misuse]^_month = _month;^47^^^^^44^48^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  
[BugLab_Variable_Misuse]^_day = end;^61^^^^^59^66^_day = day;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[BugLab_Variable_Misuse]^_month = _month;^62^^^^^59^66^_month = month;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[BugLab_Variable_Misuse]^_start = end;^63^^^^^59^66^_start = start;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[BugLab_Variable_Misuse]^_every = day;^65^^^^^59^66^_every = every;^[CLASS] AbstractHoliday  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  _month  month  Weekday  _weekday  String  label  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  
[BugLab_Variable_Misuse]^List<Date> list = new ArrayList<Date> ( every - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^List<Date> list = new ArrayList<Date> ( end - year + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Argument_Swapping]^List<Date> list = new ArrayList<Date> ( start - end + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Operator]^List<Date> list = new ArrayList<Date> ( end - start  <<  1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Operator]^List<Date> list = new ArrayList<Date> ( end  |  start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^List<Date> list = new ArrayList<Date> ( end - start  ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^List<Date> list = new ArrayList<Date> ( year - start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^List<Date> list = new ArrayList<Date> ( end - day + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Operator]^List<Date> list = new ArrayList<Date> ( end - start  ==  1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Operator]^List<Date> list = new ArrayList<Date> ( end  <=  start + 1 ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^List<Date> list = new ArrayList<Date> ( end - start + _day ) ;^76^^^^^75^81^List<Date> list = new ArrayList<Date> ( end - start + 1 ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^f list.add ( date ( day )  ) ;^77^78^^^^75^81^f list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^list.add ( date ( day )  ) ;^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Variable_Misuse]^list.add ( date ( start )  ) ;^78^^^^^75^81^list.add ( date ( year )  ) ;^[CLASS] AbstractHoliday  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p , 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, _start, 2_start, 11, _start1, 18, 8, 28, 16, 5, 25, 1_start, 2, 22, 10, _start0, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 17, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 1_end, _end, 2_end, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, end, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, _every, 13, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, _day, 2, 22, 10, 30, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 33, 11, 31, 18, 8, 38, 16, 5, 35, 13, 3, 33, 10, 30, 17, 7, 37 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 29, 17, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, _start, 7, 27 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 18, 8, 28 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Wrong_Literal]^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 28 };^102^103^104^^^102^104^p 14, 3, 23, 11, 31, 18, 8, 28, 16, 5, 25, 13, 2, 22, 10, 30, 17, 7, 27 };^[CLASS] HolidayEaster  [METHOD] dates [RETURN_TYPE] List   int start int end [VARIABLES] Month  _month  month  Weekday  _weekday  List  list  boolean  long  serialVersionUID  int  _day  _end  _every  _start  day  end  every  start  year  
[BugLab_Argument_Swapping]^super ( days, null, label ) ;^99^^^^^98^100^super ( label, null, days ) ;^[CLASS] HolidayEaster  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[]  EASTER  String  label  boolean  long  serialVersionUID  int  days  
[BugLab_Wrong_Operator]^int day = EASTER[year  >  19];^113^^^^^112^117^int day = EASTER[year % 19];^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^int day = EASTER[year % year];^113^^^^^112^117^int day = EASTER[year % 19];^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Variable_Misuse]^Date easter = DateFactory.date ( day,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Variable_Misuse]^Date easter = DateFactory.date ( year,  ( year < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date easter = DateFactory.date ( Month.MAR,  ( day < 20 )  ? Month.APR : year, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date easter = DateFactory.date ( day,  ( year < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date easter = DateFactory.date ( Month.APR,  ( day < 20 )  ? year : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.MAR : Month.APR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Operator]^Date easter = DateFactory.date ( year,  ( day <= 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^Date easter = DateFactory.date ( year,  ( day < day )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( day ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^Date easter = DateFactory.date ( year,  ( day < year )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 0 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Literal]^Date easter = DateFactory.date ( year,  ( day < 21 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date easter = DateFactory.date ( year,  ( Month.APR < 20 )  ? day : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Wrong_Operator]^Date easter = DateFactory.date ( year,  ( day > 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^114^^^^^112^117^Date easter = DateFactory.date ( year,  ( day < 20 )  ? Month.APR : Month.MAR, day ) .addDays ( 1 ) .nextWeekday ( Weekday.SUN ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^Date holi = _day.addDays ( easter ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Variable_Misuse]^Date holi = holi.addDays ( _day ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Variable_Misuse]^Date holi = easter.addDays ( year ) ;^115^^^^^112^117^Date holi = easter.addDays ( _day ) ;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Variable_Misuse]^return easter;^116^^^^^112^117^return holi;^[CLASS] HolidayEaster  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[]  EASTER  boolean  long  serialVersionUID  int  day  year  Date  easter  holi  
[BugLab_Argument_Swapping]^super ( days, spring ? Month.MAR : Month.SEP, label ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[BugLab_Argument_Swapping]^super ( spring, label ? Month.MAR : Month.SEP, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[BugLab_Argument_Swapping]^super ( label, spring ? days : Month.SEP, Month.MAR ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[BugLab_Argument_Swapping]^super ( label, spring ? Month.SEP : Month.MAR, days ) ;^136^^^^^135^137^super ( label, spring ? Month.MAR : Month.SEP, days ) ;^[CLASS] HolidayEquinox  [METHOD] <init> [RETURN_TYPE] String,boolean,int)   String label boolean spring int days [VARIABLES] String  label  boolean  spring  long  serialVersionUID  int  days  
[BugLab_Variable_Misuse]^if  ( 1 == Month.MAR )  {^148^^^^^145^155^if  ( _month == Month.MAR )  {^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Wrong_Operator]^if  ( _month <= Month.MAR )  {^148^^^^^145^155^if  ( _month == Month.MAR )  {^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Argument_Swapping]^equinox = DateFactory.date ( _month, year, 23 ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Wrong_Literal]^equinox = DateFactory.date ( year, _month, year ) ;^151^^^^^145^155^equinox = DateFactory.date ( year, _month, 23 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Argument_Swapping]^equinox = DateFactory.date ( _month, year, 21 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Wrong_Literal]^equinox = DateFactory.date ( year, _month, 22 ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Wrong_Literal]^equinox = DateFactory.date ( year, _month, year ) ;^149^^^^^145^155^equinox = DateFactory.date ( year, _month, 21 ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Variable_Misuse]^Date holi = equinox.addDays ( year ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Argument_Swapping]^Date holi = _day.addDays ( equinox ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Variable_Misuse]^Date holi = holi.addDays ( _day ) ;^153^^^^^145^155^Date holi = equinox.addDays ( _day ) ;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Variable_Misuse]^return equinox;^154^^^^^145^155^return holi;^[CLASS] HolidayEquinox  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  equinox  holi  
[BugLab_Argument_Swapping]^super ( days, null, label ) ;^173^^^^^172^174^super ( label, null, days ) ;^[CLASS] HolidayIslamic  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  ISLAMIC  String  label  boolean  long  serialVersionUID  int  days  
[BugLab_Wrong_Operator]^if  ( 1999 <= year || year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Operator]^if  ( 1999 > year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Operator]^if  ( 1999 <= year && year > 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^if  ( yr <= year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^if  ( 1999 <= year && year <= 2001 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^if  ( year999 <= year && year <= 2002 )  {^188^^^^^186^194^if  ( 1999 <= year && year <= 2002 )  {^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Variable_Misuse]^holi = holi.addDays ( _day ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Variable_Misuse]^holi = islamic.addDays ( yr ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Argument_Swapping]^holi = _day.addDays ( islamic ) ;^191^^^^^186^194^holi = islamic.addDays ( _day ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Operator]^int yr = year  ^  1999;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^int yr = year ;^189^^^^^186^194^int yr = year - 1999;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Variable_Misuse]^Date islamic = DateFactory.date ( yr, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Argument_Swapping]^Date islamic = DateFactory.date ( ISLAMIC, Month.month ( year[yr][1] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][year] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][year] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][yr] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][2] ) , ISLAMIC[yr][2] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Wrong_Literal]^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][3] ) ;^190^^^^^186^194^Date islamic = DateFactory.date ( year, Month.month ( ISLAMIC[yr][1] ) , ISLAMIC[yr][2] ) ;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Variable_Misuse]^return islamic;^193^^^^^186^194^return holi;^[CLASS] HolidayIslamic  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  ISLAMIC  boolean  long  serialVersionUID  int  year  yr  Date  holi  islamic  
[BugLab_Argument_Swapping]^super ( days, null, label ) ;^212^^^^^211^213^super ( label, null, days ) ;^[CLASS] HolidayLunar  [METHOD] <init> [RETURN_TYPE] String,int)   String label int days [VARIABLES] int[][]  LUNAR  String  label  boolean  long  serialVersionUID  int  days  
[BugLab_Wrong_Operator]^if  ( 1999 <= year || year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Operator]^if  ( 1999 < year && year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Operator]^if  ( 1999 <= year && year > 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^if  ( 1999 <= year && year <= yr )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^if  ( yr <= year && year <= 2010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^if  ( 2999 <= year && year <= 2020 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^if  ( 1999 <= year && year <= year010 )  {^228^^^^^226^234^if  ( 1999 <= year && year <= 2010 )  {^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Variable_Misuse]^holi = holi.addDays ( _day ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Variable_Misuse]^holi = lunar.addDays ( yr ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Argument_Swapping]^holi = _day.addDays ( lunar ) ;^231^^^^^226^234^holi = lunar.addDays ( _day ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Operator]^int yr = year  ||  1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^int yr = year ;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Variable_Misuse]^Date lunar = DateFactory.date ( yr, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][yr] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Argument_Swapping]^Date lunar = DateFactory.date ( LUNAR, Month.month ( year[yr][1] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][yr] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][year] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Operator]^int yr = year  <<  1999;^229^^^^^226^234^int yr = year - 1999;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][year] ) , LUNAR[yr][2] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Wrong_Literal]^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][1] ) ;^230^^^^^226^234^Date lunar = DateFactory.date ( year, Month.month ( LUNAR[yr][1] ) , LUNAR[yr][2] ) ;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Variable_Misuse]^return lunar;^233^^^^^226^234^return holi;^[CLASS] HolidayLunar  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] int[][]  LUNAR  boolean  long  serialVersionUID  int  year  yr  Date  holi  lunar  
[BugLab_Argument_Swapping]^super ( month, label, day ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[BugLab_Argument_Swapping]^super ( label, day, month ) ;^253^^^^^252^254^super ( label, month, day ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int)   String label Month month int day [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  
[BugLab_Variable_Misuse]^super ( label, month, day, end, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Variable_Misuse]^super ( label, month, day, start, every, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Variable_Misuse]^super ( label, month, day, start, end, end ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Argument_Swapping]^super ( day, month, label, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Argument_Swapping]^super ( label, day, month, start, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Argument_Swapping]^super ( label, month, start, day, end, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Argument_Swapping]^super ( label, month, day, end, start, every ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Argument_Swapping]^super ( label, month, day, every, end, start ) ;^266^^^^^265^267^super ( label, month, day, start, end, every ) ;^[CLASS] HolidayMonthDay  [METHOD] <init> [RETURN_TYPE] Month,int,int,int,int)   String label Month month int day int start int end int every [VARIABLES] Month  month  String  label  boolean  long  serialVersionUID  int  day  end  every  start  
[BugLab_Variable_Misuse]^if  ( year == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Variable_Misuse]^if  ( _every == 1 ||  ( year <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Variable_Misuse]^if  ( _every == 1 ||  ( _start <= year && year <= year &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^if  ( _end == 1 ||  ( _start <= year && year <= _every &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^if  ( _every == 1 ||  ( _end <= year && year <= _start &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^if  ( _every == 1 ||  ( _start <= _end && year <= year &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 &&  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every >= 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 ||  ( _start <= year || year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 ||  ( _start == year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 ||  ( _start <= year && year < _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every != 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )   &  _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Operator]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year   instanceof   _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Literal]^if  ( _every == 0 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Wrong_Literal]^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == year )  )  )  {^277^^^^^275^281^if  ( _every == 1 ||  ( _start <= year && year <= _end &&  (  ( year - _start )  % _every == 0 )  )  )  {^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^holi = DateFactory.date ( _month, year, _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^holi = DateFactory.date ( year, _day, _month ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^holi = DateFactory.date ( _day, _month, year ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Variable_Misuse]^holi = DateFactory.date ( year, null, _day ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Variable_Misuse]^holi = DateFactory.date ( year, _month, year ) ;^278^^^^^275^281^holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayMonthDay  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^super ( month, label, day ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[BugLab_Argument_Swapping]^super ( day, month, label ) ;^301^^^^^300^303^super ( label, month, day ) ;^[CLASS] HolidayWeekday  [METHOD] <init> [RETURN_TYPE] Weekday)   String label Month month int day Weekday weekday [VARIABLES] Month  month  Weekday  weekday  String  label  boolean  long  serialVersionUID  int  day  
[BugLab_Variable_Misuse]^Date holi = DateFactory.date ( year, _month, year ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^Date holi = DateFactory.date ( _day, _month, year ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^Date holi = DateFactory.date ( _month, year, _day ) ;^312^^^^^311^314^Date holi = DateFactory.date ( year, _month, _day ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
[BugLab_Argument_Swapping]^return _weekday.nextWeekday ( holi ) ;^313^^^^^311^314^return holi.nextWeekday ( _weekday ) ;^[CLASS] HolidayWeekday  [METHOD] date [RETURN_TYPE] Date   int year [VARIABLES] boolean  long  serialVersionUID  int  year  Date  holi  
