[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 0 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY,  ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 2 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 18 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 16 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, iYear ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^return ST_VALENTINES_DAY.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Argument_Swapping]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 3 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( iYear ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^return NEW_YEAR.create ( iYear ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^int iG = iMonth % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iG = iYear  ^  19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iG = iYear % iH;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iC = iJ / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iC = iYear * 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iC = iYear / 99;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iH =  ( iL - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iL + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )   |  30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  >  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  !=  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC  !=  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC * 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC + 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC  |  13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 / iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 + iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / iH -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC  )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25  * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG  )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % iC;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iI = iL -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iYear )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iI = iH  ==   ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int / iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH * 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1  >>   ( 29 /  ( iH + 1 )  )  *  (  ( 21  >>  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  ||  1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21  <<  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( iG /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( iL -  ( 29 /  ( iH + iL )  )  *  (  ( 2iL - iG )  / iLiL )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 20 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iJ =  ( iYear + iYear / 4 + iL + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iJ =  ( iC + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iJ =  ( iYear + iYear / 4 + iC + 2 - iI + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )   <<  7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  &&  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2  <=  iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  >  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =   instanceof   ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  ( iYear  &&  iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear + 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC * 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / iMonth + iI + 2 - iC + iC / iMonth )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / 4 + iI + iC - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / iJ + iI + 2 - iC + iC / iJ )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % iH;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iL = iYear - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iL = iI - iYear;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iL = iI  ==  iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iMonth = 3 +  ( iJ + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iMonth = 3 +  <  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iMonth = 3 +  ( iL + 40 )  * 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iMonth = 3 +  ( iL  ==  40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iMonth = iC +  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iMonth = 3 +  ( iL + iG )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iMonth = 3 +  ( iL + 40 )  / iYear;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^int iDay = iL + 28 - 31 *  ( iYear / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iDay = iL + 28  |  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iDay = iL  ||  28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int + iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Operator]^int iDay = iL + 28 - 31 *  ( iMonth + 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iDay = iL + iG - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Wrong_Literal]^int iDay = iL + 28 - iJ *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iL, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iL, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iJ ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iI, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iI, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Argument_Swapping]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iL ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[BugLab_Variable_Misuse]^return LABOR_DAY.create ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Argument_Swapping]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 0 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Variable_Misuse]^return ST_PATRICKS_DAY.create ( iYear ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( iYear ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 12 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, iYear ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 2 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, iYear ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.JANUARY,  ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY,  ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 13 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, iYear ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.MARCH, iYear ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Argument_Swapping]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .minusDays ( iYear ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Variable_Misuse]^int iG = iJ % 19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iG = iYear  >=  19;^62^^^^^61^71^int iG = iYear % 19;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iC = iJ / 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iC = iYear - 100;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iC = iYear / 99;^63^^^^^61^71^int iC = iYear / 100;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iH =  ( iYear - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iYear + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )   |  30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  <<  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ==  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC  |  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC  >  iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC + 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC  &&  13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 + iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 - iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / iYear -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( iC * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + iL )  / 25 + 19 * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + iL * iG + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG  )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iI = iL -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iYear )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH  &   ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int + iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH + 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1  ||   ( 29 /  ( iH + 1 )  )  *  (  ( 21  ||  iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int / iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH * 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH  !=  1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH - 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21   instanceof   iG )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( iJ -  ( 29 /  ( iH + iJ )  )  *  (  ( 2iJ - iG )  / iJiJ )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( iH -  ( 29 /  ( iH + iH )  )  *  (  ( 2iH - iG )  / iHiH )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  /  )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iJ =  ( iMonth + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iJ =  ( iYear + iYear / 4 + iMonth + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iJ =  ( iC + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iJ =  ( iYear + iYear / 4 + iC + 2 - iI + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )    instanceof   7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  !=  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2  <  iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  >>  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  &&  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  ( iYear  |  iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear + 4 + iI + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC * 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / iC + iI + 2 - iC + iC / iC )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / 4 + iI  - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iJ =  ( iYear + iYear / iYear + iI + 2 - iC + iC / iYear )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iL = iYear - iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iL = iI - iYear;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iL = iI   instanceof   iJ;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iMonth = 3 +  ( iI + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iMonth = 3 +  ^  ( iL + 40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iMonth = 3 +  ( iL + 40 )  + 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iMonth = 3 +  ( iL  <=  40 )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iMonth = 3 +  ( iL + iYear )  / 44;^68^^^^^61^71^int iMonth = 3 +  ( iL + 40 )  / 44;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iDay = iYear + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^int iDay = iL + 28 - 31 *  ( iYear / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iDay = iL + 28  |  31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iDay = iL  >  28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int / iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Operator]^int iDay = iL + 28 - 31 *  ( iMonth * 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iDay = iL + iC - 31 *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iDay = iL + 28 -  *  ( iMonth / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Wrong_Literal]^int iDay = iL + 28 - 31 *  ( iMonth /  ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iMonth, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iL ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iJ, iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iL, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iJ ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Variable_Misuse]^return new DateMidnight ( iYear, iMonth, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[BugLab_Argument_Swapping]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return EASTER_SUNDAY.create ( iYear ) .plusDays ( iYear ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, iYear ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 24 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[BugLab_Wrong_Literal]^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
