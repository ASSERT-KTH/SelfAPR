[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^int iJ =  ( iI + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^int iJ =  ( iYear + iYear / 4 + iC + 2 - iI + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear,  iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  boolean  
[buglab_swap_variables]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] CommonAnniversaries 1 2 3 4 5 6 7 8 9 10  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] AnniversaryFactory  ARMISTICE_DAY  BOXING_DAY  CHRISTMAS  EASTER_MONDAY  EASTER_SUNDAY  GOOD_FRIDAY  LABOR_DAY  NEW_YEAR  ST_PATRICKS_DAY  ST_VALENTINES_DAY  int  iYear  boolean  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 1 ) .toDateTime (  ) ;^27^28^^^^26^29^return new DateMidnight ( iYear, DateTimeConstants.JANUARY, 1 ) .toDateTime (  ) ;^[CLASS] 1  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 14 ) .toDateTime (  ) ;^35^36^^^^34^37^return new DateMidnight ( iYear, DateTimeConstants.FEBRUARY, 14 ) .toDateTime (  ) ;^[CLASS] 2  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 17 ) .toDateTime (  ) ;^43^44^^^^42^45^return new DateMidnight ( iYear, DateTimeConstants.MARCH, 17 ) .toDateTime (  ) ;^[CLASS] 3  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return iYear.create ( EASTER_SUNDAY ) .minusDays ( 2 ) ;^51^^^^^50^52^return EASTER_SUNDAY.create ( iYear ) .minusDays ( 2 ) ;^[CLASS] 4  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^int iH =  ( iG - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iC + 15 )  % 30;^64^^^^^61^71^int iH =  ( iC - iC / 4 -  ( 8 * iC + 13 )  / 25 + 19 * iG + 15 )  % 30;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^int iI = iG -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iH )  / 11 )  ) ;^65^^^^^61^71^int iI = iH -  ( iH / 28 )  *  ( 1 -  ( 29 /  ( iH + 1 )  )  *  (  ( 21 - iG )  / 11 )  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^int iJ =  ( iI + iYear / 4 + iYear + 2 - iC + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^int iJ =  ( iC + iYear / 4 + iI + 2 - iYear + iC / 4 )  % 7;^66^^^^^61^71^int iJ =  ( iYear + iYear / 4 + iI + 2 - iC + iC / 4 )  % 7;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^int iL = iJ - iI;^67^^^^^61^71^int iL = iI - iJ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^int iDay = iMonth + 28 - 31 *  ( iL / 4 ) ;^69^^^^^61^71^int iDay = iL + 28 - 31 *  ( iMonth / 4 ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight ( iDay, iMonth, iYear ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight (  iMonth, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight ( iMonth, iYear, iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear,  iDay ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, iDay, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, iMonth ) .toDateTime (  ) ;^70^^^^^61^71^return new DateMidnight ( iYear, iMonth, iDay ) .toDateTime (  ) ;^[CLASS] 5  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iC  iDay  iG  iH  iI  iJ  iL  iMonth  iYear  
[buglab_swap_variables]^return iYear.create ( EASTER_SUNDAY ) .plusDays ( 1 ) ;^77^^^^^76^78^return EASTER_SUNDAY.create ( iYear ) .plusDays ( 1 ) ;^[CLASS] 6  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 11 ) .toDateTime (  ) ;^87^88^^^^86^89^return new DateMidnight ( iYear, DateTimeConstants.NOVEMBER, 11 ) .toDateTime (  ) ;^[CLASS] 7  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 25 ) .toDateTime (  ) ;^95^96^^^^94^97^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 25 ) .toDateTime (  ) ;^[CLASS] 8  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight (  DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
[buglab_swap_variables]^return new DateMidnight ( iYear, DateTimeConstants. 26 ) .toDateTime (  ) ;^103^104^^^^102^105^return new DateMidnight ( iYear, DateTimeConstants.DECEMBER, 26 ) .toDateTime (  ) ;^[CLASS] 9  [METHOD] create [RETURN_TYPE] DateTime   int iYear [VARIABLES] boolean  int  iYear  
