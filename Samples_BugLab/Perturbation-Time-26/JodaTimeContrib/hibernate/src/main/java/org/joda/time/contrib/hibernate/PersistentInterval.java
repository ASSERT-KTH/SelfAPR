[BugLab_Variable_Misuse]^private static final Type[] TYPES = new Type[] { Hibernate.TIMESTAMP, Hibernate.this };^49^^^^^44^54^private static final Type[] TYPES = new Type[] { Hibernate.TIMESTAMP, Hibernate.TIMESTAMP };^[CLASS] PersistentInterval   [VARIABLES] 
[BugLab_Argument_Swapping]^if  ( y == x )  {^64^^^^^63^71^if  ( x == y )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Operator]^if  ( x != y )  {^64^^^^^63^71^if  ( x == y )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Literal]^return false;^65^^^^^63^71^return true;^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Argument_Swapping]^if  ( y == null || x == null )  {^67^^^^^63^71^if  ( x == null || y == null )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Operator]^if  ( x == null && y == null )  {^67^^^^^63^71^if  ( x == null || y == null )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Operator]^if  ( x != null || y == null )  {^67^^^^^63^71^if  ( x == null || y == null )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Operator]^if  ( x == null || y != null )  {^67^^^^^63^71^if  ( x == null || y == null )  {^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Literal]^return true;^68^^^^^63^71^return false;^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Argument_Swapping]^return y.equals ( x ) ;^70^^^^^63^71^return x.equals ( y ) ;^[CLASS] PersistentInterval  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] Type[]  TYPES  Object  x  y  String[]  PROPERTY_NAMES  boolean  
[BugLab_Argument_Swapping]^return  ( interval == 0 )  ? property.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^83^^^^^81^84^return  ( property == 0 )  ? interval.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^[CLASS] PersistentInterval  [METHOD] getPropertyValue [RETURN_TYPE] Object   Object component int property [VARIABLES] Type[]  TYPES  Object  component  String[]  PROPERTY_NAMES  boolean  int  property  Interval  interval  
[BugLab_Wrong_Operator]^return  ( property <= 0 )  ? interval.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^83^^^^^81^84^return  ( property == 0 )  ? interval.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^[CLASS] PersistentInterval  [METHOD] getPropertyValue [RETURN_TYPE] Object   Object component int property [VARIABLES] Type[]  TYPES  Object  component  String[]  PROPERTY_NAMES  boolean  int  property  Interval  interval  
[BugLab_Wrong_Literal]^return  ( property == -1 )  ? interval.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^83^^^^^81^84^return  ( property == 0 )  ? interval.getStart (  ) .toDate (  )  : interval.getEnd (  ) .toDate (  ) ;^[CLASS] PersistentInterval  [METHOD] getPropertyValue [RETURN_TYPE] Object   Object component int property [VARIABLES] Type[]  TYPES  Object  component  String[]  PROPERTY_NAMES  boolean  int  property  Interval  interval  
[BugLab_Wrong_Literal]^return true;^91^^^^^90^92^return false;^[CLASS] PersistentInterval  [METHOD] isMutable [RETURN_TYPE] boolean   [VARIABLES] Type[]  TYPES  String[]  PROPERTY_NAMES  boolean  
[BugLab_Wrong_Operator]^if  ( resultSet != null )  {^96^^^^^94^106^if  ( resultSet == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Variable_Misuse]^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, PROPERTY_NAMES[0] ) ;^100^^^^^94^106^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime start =  ( DateTime )  names.nullSafeGet ( resultSet, pst[0] ) ;^100^^^^^94^106^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime start =  ( DateTime )  resultSet.nullSafeGet ( pst, names[0] ) ;^100^^^^^94^106^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime start =  ( DateTime )  pst.nullSafeGet ( names, resultSet[0] ) ;^100^^^^^94^106^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Literal]^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[] ) ;^100^^^^^94^106^DateTime start =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Variable_Misuse]^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, PROPERTY_NAMES[1] ) ;^101^^^^^94^106^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[1] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime end =  ( DateTime )  resultSet.nullSafeGet ( pst, names[1] ) ;^101^^^^^94^106^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[1] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime end =  ( DateTime )  pst.nullSafeGet ( names, resultSet[1] ) ;^101^^^^^94^106^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[1] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^DateTime end =  ( DateTime )  names.nullSafeGet ( resultSet, pst[1] ) ;^101^^^^^94^106^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[1] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Literal]^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[0] ) ;^101^^^^^94^106^DateTime end =  ( DateTime )  pst.nullSafeGet ( resultSet, names[1] ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^if  ( end == null || start == null )  {^102^^^^^94^106^if  ( start == null || end == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Operator]^if  ( start == null && end == null )  {^102^^^^^94^106^if  ( start == null || end == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Operator]^if  ( start != null || end == null )  {^102^^^^^94^106^if  ( start == null || end == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Operator]^if  ( start == null || end != null )  {^102^^^^^94^106^if  ( start == null || end == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Argument_Swapping]^return new Interval ( end, start ) ;^105^^^^^94^106^return new Interval ( start, end ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] names SessionImplementor session Object owner [VARIABLES] boolean  PersistentDateTime  pst  Type[]  TYPES  ResultSet  resultSet  SessionImplementor  session  Object  owner  String[]  PROPERTY_NAMES  names  DateTime  end  start  
[BugLab_Wrong_Operator]^if  ( value != null )  {^110^^^^^108^118^if  ( value == null )  {^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Wrong_Operator]^statement.setNull ( index + 1, Hibernate.TIMESTAMP.sqlType (  >>  )  ) ;^112^^^^^108^118^statement.setNull ( index + 1, Hibernate.TIMESTAMP.sqlType (  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Wrong_Literal]^statement.setNull ( index , Hibernate.TIMESTAMP.sqlType (  )  ) ;^112^^^^^108^118^statement.setNull ( index + 1, Hibernate.TIMESTAMP.sqlType (  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Wrong_Operator]^statement.setNull ( index + 1, Hibernate.TIMESTAMP.sqlType (  &&  )  ) ;^112^^^^^108^118^statement.setNull ( index + 1, Hibernate.TIMESTAMP.sqlType (  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Argument_Swapping]^statement.setTimestamp ( interval, asTimeStamp ( index.getStart (  )  )  ) ;^116^^^^^108^118^statement.setTimestamp ( index, asTimeStamp ( interval.getStart (  )  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Argument_Swapping]^statement.setTimestamp ( interval + 1, asTimeStamp ( index.getEnd (  )  )  ) ;^117^^^^^108^118^statement.setTimestamp ( index + 1, asTimeStamp ( interval.getEnd (  )  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Wrong_Operator]^statement.setTimestamp ( index + 1, asTimeStamp ( interval.getEnd (  &&  )  )  ) ;^117^^^^^108^118^statement.setTimestamp ( index + 1, asTimeStamp ( interval.getEnd (  )  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Wrong_Literal]^statement.setTimestamp ( index , asTimeStamp ( interval.getEnd (  )  )  ) ;^117^^^^^108^118^statement.setTimestamp ( index + 1, asTimeStamp ( interval.getEnd (  )  )  ) ;^[CLASS] PersistentInterval  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement statement Object value int index SessionImplementor session [VARIABLES] boolean  Type[]  TYPES  SessionImplementor  session  PreparedStatement  statement  Object  value  String[]  PROPERTY_NAMES  names  int  index  Interval  interval  
[BugLab_Variable_Misuse]^return target;^126^^^^^124^127^return original;^[CLASS] PersistentInterval  [METHOD] replace [RETURN_TYPE] Object   Object original Object target SessionImplementor session Object owner [VARIABLES] Type[]  TYPES  SessionImplementor  session  Object  original  owner  target  String[]  PROPERTY_NAMES  names  boolean  
