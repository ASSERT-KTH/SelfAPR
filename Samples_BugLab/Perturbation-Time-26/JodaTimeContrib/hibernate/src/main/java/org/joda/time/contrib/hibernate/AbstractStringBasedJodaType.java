[BugLab_Argument_Swapping]^String s =  ( String )  Hibernate.STRING.nullSafeGet ( strings, resultSet[0] ) ;^40^^^^^39^46^String s =  ( String )  Hibernate.STRING.nullSafeGet ( resultSet, strings[0] ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] strings Object object [VARIABLES] ResultSet  resultSet  int[]  SQL_TYPES  Object  object  String[]  strings  String  s  boolean  
[BugLab_Wrong_Literal]^String s =  ( String )  Hibernate.STRING.nullSafeGet ( resultSet, strings[1] ) ;^40^^^^^39^46^String s =  ( String )  Hibernate.STRING.nullSafeGet ( resultSet, strings[0] ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] strings Object object [VARIABLES] ResultSet  resultSet  int[]  SQL_TYPES  Object  object  String[]  strings  String  s  boolean  
[BugLab_Wrong_Operator]^if  ( s != null )  {^41^^^^^39^46^if  ( s == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeGet [RETURN_TYPE] Object   ResultSet resultSet String[] strings Object object [VARIABLES] ResultSet  resultSet  int[]  SQL_TYPES  Object  object  String[]  strings  String  s  boolean  
[BugLab_Wrong_Operator]^if  ( value != null )  {^51^^^^^50^56^if  ( value == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement preparedStatement Object value int index [VARIABLES] int[]  SQL_TYPES  PreparedStatement  preparedStatement  Object  value  boolean  int  index  
[BugLab_Argument_Swapping]^Hibernate.STRING.nullSafeSet ( value, toNonNullString ( preparedStatement ) , index ) ;^54^^^^^50^56^Hibernate.STRING.nullSafeSet ( preparedStatement, toNonNullString ( value ) , index ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement preparedStatement Object value int index [VARIABLES] int[]  SQL_TYPES  PreparedStatement  preparedStatement  Object  value  boolean  int  index  
[BugLab_Argument_Swapping]^Hibernate.STRING.nullSafeSet ( preparedStatement, toNonNullString ( index ) , value ) ;^54^^^^^50^56^Hibernate.STRING.nullSafeSet ( preparedStatement, toNonNullString ( value ) , index ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement preparedStatement Object value int index [VARIABLES] int[]  SQL_TYPES  PreparedStatement  preparedStatement  Object  value  boolean  int  index  
[BugLab_Argument_Swapping]^Hibernate.STRING.nullSafeSet ( index, null, preparedStatement ) ;^52^^^^^50^56^Hibernate.STRING.nullSafeSet ( preparedStatement, null, index ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement preparedStatement Object value int index [VARIABLES] int[]  SQL_TYPES  PreparedStatement  preparedStatement  Object  value  boolean  int  index  
[BugLab_Argument_Swapping]^Hibernate.STRING.nullSafeSet ( index, toNonNullString ( value ) , preparedStatement ) ;^54^^^^^50^56^Hibernate.STRING.nullSafeSet ( preparedStatement, toNonNullString ( value ) , index ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] nullSafeSet [RETURN_TYPE] void   PreparedStatement preparedStatement Object value int index [VARIABLES] int[]  SQL_TYPES  PreparedStatement  preparedStatement  Object  value  boolean  int  index  
[BugLab_Argument_Swapping]^if  ( y == x )  {^61^^^^^60^68^if  ( x == y )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( x <= y )  {^61^^^^^60^68^if  ( x == y )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Literal]^return false;^62^^^^^60^68^return true;^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Argument_Swapping]^if  ( y == null || x == null )  {^64^^^^^60^68^if  ( x == null || y == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( x == null && y == null )  {^64^^^^^60^68^if  ( x == null || y == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( x != null || y == null )  {^64^^^^^60^68^if  ( x == null || y == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Operator]^if  ( x == null || y != null )  {^64^^^^^60^68^if  ( x == null || y == null )  {^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Literal]^return true;^65^^^^^60^68^return false;^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Argument_Swapping]^return y.equals ( x ) ;^67^^^^^60^68^return x.equals ( y ) ;^[CLASS] AbstractStringBasedJodaType  [METHOD] equals [RETURN_TYPE] boolean   Object x Object y [VARIABLES] int[]  SQL_TYPES  Object  x  y  boolean  
[BugLab_Wrong_Literal]^return true;^79^^^^^78^80^return false;^[CLASS] AbstractStringBasedJodaType  [METHOD] isMutable [RETURN_TYPE] boolean   [VARIABLES] int[]  SQL_TYPES  boolean  
[BugLab_Variable_Misuse]^return target;^91^^^^^90^92^return original;^[CLASS] AbstractStringBasedJodaType  [METHOD] replace [RETURN_TYPE] Object   Object original Object target Object owner [VARIABLES] int[]  SQL_TYPES  Object  original  owner  target  boolean  
