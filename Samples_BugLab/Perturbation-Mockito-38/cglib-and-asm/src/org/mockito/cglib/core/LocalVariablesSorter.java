[BugLab_Variable_Misuse]^state.nextLocal =  (  ( Opcodes.ACC_STATIC & nextLocal )  != 0 )  ? 0 : 1;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Operator]^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  > 0 )  ? 0 : 1;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Operator]^state.nextLocal =  (  ( Opcodes.ACC_STATIC  |  access )  != 0 )  ? 0 : 1;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Literal]^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != firstLocal )  ? firstLocal : 1;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Literal]^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != access )  ? access : 1;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Literal]^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : i;^70^^^^^62^75^state.nextLocal =  (  ( Opcodes.ACC_STATIC & access )  != 0 )  ? 0 : 1;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= args.length; i++ )  {^71^^^^^62^75^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < args.length; i++ )  {^71^^^^^62^75^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < args.length; i++ )  {^71^^^^^62^75^for  ( int i = 0; i < args.length; i++ )  {^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Variable_Misuse]^firstLocal = nextLocal;^74^^^^^62^75^firstLocal = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Argument_Swapping]^firstLocal = state;^74^^^^^62^75^firstLocal = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Argument_Swapping]^firstLocal = state.nextLocal.nextLocal;^74^^^^^62^75^firstLocal = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] MethodVisitor)   final int access String desc MethodVisitor mv [VARIABLES] boolean  State  state  Type[]  args  int[]  mapping  String  desc  int  access  firstLocal  i  nextLocal  MethodVisitor  mv  
[BugLab_Variable_Misuse]^state = state;^79^^^^^77^81^state = lvs.state;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Argument_Swapping]^state = lvs.state.state;^79^^^^^77^81^state = lvs.state;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Argument_Swapping]^state = lvs;^79^^^^^77^81^state = lvs.state;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Variable_Misuse]^firstLocal = i;^80^^^^^77^81^firstLocal = lvs.firstLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Argument_Swapping]^firstLocal = lvs.firstLocal.firstLocal;^80^^^^^77^81^firstLocal = lvs.firstLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Argument_Swapping]^firstLocal = lvs;^80^^^^^77^81^firstLocal = lvs.firstLocal;^[CLASS] LocalVariablesSorter State  [METHOD] <init> [RETURN_TYPE] LocalVariablesSorter)   LocalVariablesSorter lvs [VARIABLES] int[]  mapping  LocalVariablesSorter  lvs  boolean  State  state  int  access  firstLocal  i  nextLocal  
[BugLab_Wrong_Literal]^size = var;^90^^^^^83^96^size = 2;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Wrong_Literal]^size = 0;^93^^^^^83^96^size = 1;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitVarInsn ( size, remap ( var, size )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitVarInsn ( opcode, remap ( nextLocal, size )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitVarInsn ( opcode, remap ( var, var )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitVarInsn ( var, remap ( opcode, size )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitVarInsn ( opcode, remap ( size, var )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitVarInsn ( opcode, remap ( var, opcode )  ) ;^95^^^^^83^96^mv.visitVarInsn ( opcode, remap ( var, size )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitIincInsn ( remap ( size, 1 ) , increment ) ;^99^^^^^98^100^mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitIincInsn ( remap ( var, 1 ) , opcode ) ;^99^^^^^98^100^mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitIincInsn ( remap ( increment, 1 ) , var ) ;^99^^^^^98^100^mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  nextLocal  opcode  size  var  
[BugLab_Wrong_Literal]^mv.visitIincInsn ( remap ( var, 2 ) , increment ) ;^99^^^^^98^100^mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  nextLocal  opcode  size  var  
[BugLab_Wrong_Literal]^mv.visitIincInsn ( remap ( var, var ) , increment ) ;^99^^^^^98^100^mv.visitIincInsn ( remap ( var, 1 ) , increment ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitMaxs ( nextLocal, state.nextLocal ) ;^103^^^^^102^104^mv.visitMaxs ( maxStack, state.nextLocal ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitMaxs ( maxStack, nextLocal ) ;^103^^^^^102^104^mv.visitMaxs ( maxStack, state.nextLocal ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitMaxs ( state.nextLocal, maxStack ) ;^103^^^^^102^104^mv.visitMaxs ( maxStack, state.nextLocal ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitMaxs ( maxStack, state ) ;^103^^^^^102^104^mv.visitMaxs ( maxStack, state.nextLocal ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitMaxs ( maxStack, state.nextLocal.nextLocal ) ;^103^^^^^102^104^mv.visitMaxs ( maxStack, state.nextLocal ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( desc, desc, signature, start, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, signature, signature, start, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, desc, name, start, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, desc, signature, end, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, desc, signature, start, start, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( nextLocal )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( signature, desc, name, start, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, signature, desc, start, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, start, signature, end, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, signature, end, start, remap ( index )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, index, signature, start, end, remap ( desc )  ) ;^114^^^^^106^115^mv.visitLocalVariable ( name, desc, signature, start, end, remap ( index )  ) ;^[CLASS] LocalVariablesSorter State  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  mapping  String  desc  name  signature  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^int var = maxStack;^120^^^^^119^123^int var = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] newLocal [RETURN_TYPE] int   final int size [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^int var = state;^120^^^^^119^123^int var = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] newLocal [RETURN_TYPE] int   final int size [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Argument_Swapping]^int var = state.nextLocal.nextLocal;^120^^^^^119^123^int var = state.nextLocal;^[CLASS] LocalVariablesSorter State  [METHOD] newLocal [RETURN_TYPE] int   final int size [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^state.nextLocal += var;^121^^^^^119^123^state.nextLocal += size;^[CLASS] LocalVariablesSorter State  [METHOD] newLocal [RETURN_TYPE] int   final int size [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^return size;^122^^^^^119^123^return var;^[CLASS] LocalVariablesSorter State  [METHOD] newLocal [RETURN_TYPE] int   final int size [VARIABLES] int[]  mapping  boolean  State  state  int  access  firstLocal  i  increment  index  maxLocals  maxStack  nextLocal  opcode  size  var  
[BugLab_Variable_Misuse]^if  ( value < firstLocal )  {^126^^^^^125^143^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( var < size )  {^126^^^^^125^143^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^if  ( firstLocal < var )  {^126^^^^^125^143^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( var == firstLocal )  {^126^^^^^125^143^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^return value;^127^^^^^125^143^return var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int key = 2 * opcode + size - 1;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int key = 2 * size + var - 1;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int key = 2 * var + size   instanceof   1;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int key = 2 * var   instanceof   size - 1;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int key = 2 - var + size - 1;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int key = 2 * var + size ;^129^^^^^125^143^int key = 2 * var + size - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int length = newMapping.length;^130^^^^^125^143^int length = state.mapping.length;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int state.mapping = length.length;^130^^^^^125^143^int length = state.mapping.length;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int length = state.length;^130^^^^^125^143^int length = state.mapping.length;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int length = state.mapping.mapping.length;^130^^^^^125^143^int length = state.mapping.length;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( maxStack >= length )  {^131^^^^^125^143^if  ( key >= length )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^if  ( length >= key )  {^131^^^^^125^143^if  ( key >= length )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( key > length )  {^131^^^^^125^143^if  ( key >= length )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^state.mapping = mapping;^134^^^^^125^143^state.mapping = newMapping;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * var, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * length, maxStack + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int[] newMapping = new int[Math.max ( 2 * key, length + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] + newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] newMapping = new int[Math.max ( 2 * length, key  >  1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int[] newMapping = new int[Math.max ( 1 * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int[] newMapping = new int[Math.max ( 2 * length, key  ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * length, opcode + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] / newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] newMapping = new int[Math.max ( 2 * length, key  <<  1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int[] newMapping = new int[Math.max ( value * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^System.arraycopy ( state.mapping, 0, mapping, 0, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^System.arraycopy ( state.mapping, 0, newMapping, 0, nextLocal ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^System.arraycopy ( mapping, 0, newMapping, 0, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^System.arraycopy ( newMapping, 0, state.mapping, 0, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^System.arraycopy ( length.mapping, 0, newMapping, 0, state ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^System.arraycopy ( state.mapping, i, newMapping, i, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * maxStack, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int[] newMapping = new int[Math.max ( firstLocal * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * nextLocal, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int[] newMapping = new int[Math.max ( 2 * length, nextLocal + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] - newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int[] newMapping = new int[Math.max ( 2 * length, key  |  1 ) ];^132^^^^^125^143^int[] newMapping = new int[Math.max ( 2 * length, key + 1 ) ];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^System.arraycopy ( state.mapping, 0, newMapping, 0, var ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^System.arraycopy ( newMapping, 0, newMapping, 0, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^System.arraycopy ( newMapping.mapping, 0, state, 0, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^System.arraycopy ( length, 0, newMapping, 0, state.mapping ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^System.arraycopy ( state.mapping, maxStack, newMapping, maxStack, length ) ;^133^^^^^125^143^System.arraycopy ( state.mapping, 0, newMapping, 0, length ) ;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int value = newMapping[key];^136^^^^^125^143^int value = state.mapping[key];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int value = state[key];^136^^^^^125^143^int value = state.mapping[key];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int value = state.mapping.mapping[key];^136^^^^^125^143^int value = state.mapping[key];^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( var == 0 )  {^137^^^^^125^143^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( value != 0 )  {^137^^^^^125^143^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^if  ( value == 1 )  {^137^^^^^125^143^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = maxStack + 1;^138^^^^^125^143^value = state.nextLocal + 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^value = state + 1;^138^^^^^125^143^value = state.nextLocal + 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^value = state.nextLocal.nextLocal + 1;^138^^^^^125^143^value = state.nextLocal + 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^value = state.nextLocal + var;^138^^^^^125^143^value = state.nextLocal + 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^state.mapping[key] = maxStack;^139^^^^^125^143^state.mapping[key] = value;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^state.nextLocal += value;^140^^^^^125^143^state.nextLocal += size;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^value = state.nextLocal + ;^138^^^^^125^143^value = state.nextLocal + 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^state.nextLocal += maxLocals;^140^^^^^125^143^state.nextLocal += size;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^return nextLocal - 1;^142^^^^^125^143^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^return value  >=  1;^142^^^^^125^143^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^return value ;^142^^^^^125^143^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var final int size [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( var < size )  {^146^^^^^145^158^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^if  ( firstLocal < var )  {^146^^^^^145^158^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( var <= firstLocal )  {^146^^^^^145^158^if  ( var < firstLocal )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^return nextLocal;^147^^^^^145^158^return var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^return value;^147^^^^^145^158^return var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int key = 2 * opcode;^149^^^^^145^158^int key = 2 * var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int / key = 2 * var;^149^^^^^145^158^int key = 2 * var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int key = 3 * var;^149^^^^^145^158^int key = 2 * var;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int value = maxStack < state.mapping.length ? state.mapping[key] : 0;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int value = key < state.mapping.var ? state.mapping[key] : 0;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^int value = key < newMapping.length ? state.mapping[key] : 0;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^int value = state.mapping < key.length ? state.mapping[key] : 0;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^int value = key <= state.mapping.length ? state.mapping[key] : 0;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int value = key < state.mapping.length ? state.mapping[key] : length;^150^^^^^145^158^int value = key < state.mapping.length ? state.mapping[key] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( nextLocal == 0 )  {^151^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( value < 0 )  {^151^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^if  ( value == length )  {^151^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^if  ( value == opcode )  {^151^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = opcode + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = key + 1 < state.mapping.maxStack ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = key + 1 < newMapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^value = key + 1 < state.length ? state.mapping.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^value = key + 1 < state.mapping.mapping.length ? state[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^value = key + 1 <= state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^value = key  <=  1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^value = key  >  1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^value = key  < state.mapping.length ? state.mapping[key ] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : increment;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = maxStack + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^value = key + 1 < state.mapping.nextLocal ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Argument_Swapping]^value = state + 1 < key.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^value = key  &&  1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^value = key  >>  1 < state.mapping.length ? state.mapping[key + 1] : 0;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 1;^152^^^^^145^158^value = key + 1 < state.mapping.length ? state.mapping[key + 1] : 0;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^if  ( opcode == 0 )  {^154^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^if  ( value != 0 )  {^154^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^if  ( value == 1 )  {^154^^^^^145^158^if  ( value == 0 )  {^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Variable_Misuse]^return opcode - 1;^157^^^^^145^158^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Operator]^return value  |  1;^157^^^^^145^158^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^return value ;^157^^^^^145^158^return value - 1;^[CLASS] LocalVariablesSorter State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
[BugLab_Wrong_Literal]^int[] mapping = new int[size];^55^^^^^50^60^int[] mapping = new int[40];^[CLASS] State  [METHOD] remap [RETURN_TYPE] int   final int var [VARIABLES] int[]  mapping  newMapping  boolean  State  state  int  access  firstLocal  i  increment  index  key  length  maxLocals  maxStack  nextLocal  opcode  size  value  var  
