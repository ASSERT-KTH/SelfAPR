[BugLab_Variable_Misuse]^className = superName.replace ( '/', '.' ) ;^56^^^^^50^59^className = name.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[BugLab_Variable_Misuse]^this.superName = name.replace ( '/', '.' ) ;^57^^^^^50^59^this.superName = superName.replace ( '/', '.' ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  String[]  interfaces  int  access  version  
[BugLab_Variable_Misuse]^return signature;^62^^^^^61^63^return className;^[CLASS] DebuggingClassWriter 1  [METHOD] getClassName [RETURN_TYPE] String   [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  
[BugLab_Variable_Misuse]^return name;^66^^^^^65^67^return superName;^[CLASS] DebuggingClassWriter 1  [METHOD] getSuperName [RETURN_TYPE] String   [VARIABLES] boolean  traceEnabled  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  name  signature  superName  
[BugLab_Variable_Misuse]^if  ( superName != null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( debugLocation ) , superName + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( signature ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  <<  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( debugLocation ) , signature + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs   instanceof   ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( superName ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, -1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >>  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ==  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.separatorChar + signature ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( signature + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &&  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( debugLocation ) , signature + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( superName ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( name ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <<  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <<  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.separatorChar + superName ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( name + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ==  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  !=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( superName + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  |  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  |  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^String dirs = signature.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( debugLocation ) , superName + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  !=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >>  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, 1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  <=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ^  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.separatorChar + name ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( signature ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^String dirs = superName.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] toByteArray [RETURN_TYPE] byte[]   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( superName != null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, 1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( debugLocation ) , superName + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( superName ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( debugLocation ) , signature + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( signature ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >>  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, null ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, -1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  &&  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv,  ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.separatorChar + signature ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( superName + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  |  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( debugLocation ) , superName + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( superName ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  !=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( name ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  !=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( debugLocation ) , name + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >>  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( signature + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.1 + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >>  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.separatorChar + superName ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  >=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, this ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  <  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( signature ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^String dirs = superName.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs   instanceof   ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &&  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ||  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (   instanceof   ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ==  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <<  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( name ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^String dirs = signature.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ^  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] DebuggingClassWriter 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  boolean  traceEnabled  TraceClassVisitor  tcv  OutputStream  out  ClassReader  cr  String  DEBUG_LOCATION_PROPERTY  className  debugLocation  dirs  name  signature  superName  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( debugLocation == null )  {^77^^^^^62^92^if  ( debugLocation != null )  {^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^file = new File ( new File ( dirs ) , debugLocation + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^file = new File ( new File ( dirs ) , dirs + ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv,  ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  &  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  <  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  >>  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.2 + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  |  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ||  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^File file = new File ( new File ( dirs ) , debugLocation + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  |  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^File file = new File ( new File ( dirs ) , dirs + ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  <=  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ^  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Argument_Swapping]^new File ( dirs + File.separatorChar + debugLocation ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ==  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ^  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, -1 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ||  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >=  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  &  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^String dirs = dirs.replace ( '.', File.separatorChar ) ;^78^^^^^63^93^String dirs = className.replace ( '.', File.separatorChar ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  &&  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <<  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Literal]^cr.accept ( tcv, 2 ) ;^97^^^^^82^112^cr.accept ( tcv, 0 ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  |  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs   instanceof   ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  &&  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( debugLocation + File.3 + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (   instanceof   ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  >  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ^  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  <  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Variable_Misuse]^new File ( dirs + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^file = new File ( new File ( debugLocation ) , dirs  ==  ".asm" ) ;^91^^^^^76^106^file = new File ( new File ( debugLocation ) , dirs + ".asm" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  <=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^File file = new File ( new File ( debugLocation ) , dirs  ||  ".class" ) ;^82^^^^^67^97^File file = new File ( new File ( debugLocation ) , dirs + ".class" ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
[BugLab_Wrong_Operator]^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  !=  ) .mkdirs (  ) ;^80^^^^^65^95^new File ( debugLocation + File.separatorChar + dirs ) .getParentFile (  ) .mkdirs (  ) ;^[CLASS] 1  [METHOD] run [RETURN_TYPE] Object   [VARIABLES] byte[]  b  TraceClassVisitor  tcv  boolean  OutputStream  out  ClassReader  cr  String  dirs  IOException  e  File  file  PrintWriter  pw  
