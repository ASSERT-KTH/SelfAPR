[buglab_swap_variables]^return  ( access & Constants.ACC_FINAL )  != 0;^48^^^^^47^49^return  ( Constants.ACC_FINAL & access )  != 0;^[CLASS] TypeUtils  [METHOD] isFinal [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_STATIC )  != 0;^52^^^^^51^53^return  ( Constants.ACC_STATIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isStatic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_PROTECTED )  != 0;^56^^^^^55^57^return  ( Constants.ACC_PROTECTED & access )  != 0;^[CLASS] TypeUtils  [METHOD] isProtected [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_PUBLIC )  != 0;^60^^^^^59^61^return  ( Constants.ACC_PUBLIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPublic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_ABSTRACT )  != 0;^64^^^^^63^65^return  ( Constants.ACC_ABSTRACT & access )  != 0;^[CLASS] TypeUtils  [METHOD] isAbstract [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_INTERFACE )  != 0;^68^^^^^67^69^return  ( Constants.ACC_INTERFACE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isInterface [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_PRIVATE )  != 0;^72^^^^^71^73^return  ( Constants.ACC_PRIVATE & access )  != 0;^[CLASS] TypeUtils  [METHOD] isPrivate [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( access & Constants.ACC_SYNTHETIC )  != 0;^76^^^^^75^77^return  ( Constants.ACC_SYNTHETIC & access )  != 0;^[CLASS] TypeUtils  [METHOD] isSynthetic [RETURN_TYPE] boolean   int access [VARIABLES] Map  rtransforms  transforms  int  access  boolean  
[buglab_swap_variables]^return  ( className < 0 )  ? "" : idx.substring ( 0, idx ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[buglab_swap_variables]^return  ( idx < 0 )  ? "" : className.substring ( 0 ) ;^86^^^^^84^87^return  ( idx < 0 )  ? "" : className.substring ( 0, idx ) ;^[CLASS] TypeUtils  [METHOD] getPackageName [RETURN_TYPE] String   String className [VARIABLES] String  className  boolean  Map  rtransforms  transforms  int  idx  
[buglab_swap_variables]^return  ( String ) type.get ( rtransforms.getDescriptor (  )  ) ;^98^^^^^96^104^return  ( String ) rtransforms.get ( type.getDescriptor (  )  ) ;^[CLASS] TypeUtils  [METHOD] getClassName [RETURN_TYPE] String   Type type [VARIABLES] Map  rtransforms  transforms  Type  type  boolean  
[buglab_swap_variables]^if  ( extra.contains ( list )  )  {^111^^^^^106^119^if  ( list.contains ( extra )  )  {^[CLASS] TypeUtils  [METHOD] add [RETURN_TYPE] Type[]   Type[] types Type extra [VARIABLES] Type[]  copy  types  Type  extra  List  list  boolean  Map  rtransforms  transforms  
[buglab_swap_variables]^for  ( names.lengthnt i = 0; i < i; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^for  ( namesnt i = 0; i < i.length; i++ )  {^139^^^^^134^143^for  ( int i = 0; i < names.length; i++ )  {^[CLASS] TypeUtils  [METHOD] fromInternalNames [RETURN_TYPE] Type[]   String[] names [VARIABLES] Type[]  types  String[]  names  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^int lparen = space.indexOf ( ' ( ', s ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^int lparen = s.indexOf ( ' ( 'pace ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^int lparen = s.indexOf ( ' ( ' ) ;^166^^^^^164^178^int lparen = s.indexOf ( ' ( ', space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^int rparen = lparen.indexOf ( ' ) ', s ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^int rparen = s.indexOf ( ' ) ' ) ;^167^^^^^164^178^int rparen = s.indexOf ( ' ) ', lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String returnType = space.substring ( 0, s ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String returnType = s.substring ( 0pace ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String returnType = s.substring ( 0 ) ;^168^^^^^164^178^String returnType = s.substring ( 0, space ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String methodName = space.substring ( s + 1, lparen ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String methodName = s.substring ( lparen + 1, space ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String methodName = s.substring ( space + 1 ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^String methodName = lparen.substring ( space + 1, s ) ;^169^^^^^164^178^String methodName = s.substring ( space + 1, lparen ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator s = parseTypes ( it, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator it = parseTypes (  lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator it = parseTypes ( s + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator it = parseTypes ( rparen, lparen + 1, s ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator it = parseTypes ( s, lparen + 1 ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^for  ( Iterator it = parseTypes ( s, rparen + 1, lparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^172^^^^^164^178^for  ( Iterator it = parseTypes ( s, lparen + 1, rparen ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^return new Signature ( sb, methodName.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^return new Signature (  sb.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^return new Signature ( methodName.toString (  )  ) ;^177^^^^^164^178^return new Signature ( methodName, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseSignature [RETURN_TYPE] Signature   String s [VARIABLES] Iterator  it  StringBuffer  sb  String  methodName  returnType  s  boolean  Map  rtransforms  transforms  int  lparen  rparen  space  
[buglab_swap_variables]^types[i] = Type.getType (  ( String ) i.get ( names )  ) ;^188^^^^^184^191^types[i] = Type.getType (  ( String ) names.get ( i )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] Type[]   String s [VARIABLES] Type[]  types  List  names  String  s  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^return new Signature ( sb, Constants.CONSTRUCTOR_NAME.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^return new Signature ( Constants.CONSTRUCTOR_NAME.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^return new Signature (  sb.toString (  )  ) ;^201^^^^^193^202^return new Signature ( Constants.CONSTRUCTOR_NAME, sb.toString (  )  ) ;^[CLASS] TypeUtils  [METHOD] parseConstructor [RETURN_TYPE] Signature   Type[] types [VARIABLES] Type[]  types  StringBuffer  sb  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^int next = mark.indexOf ( ',', s ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^int next = s.indexOf ( ',' ) ;^211^^^^^208^220^int next = s.indexOf ( ',', mark ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring ( next, mark ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring (  next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring ( mark ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( next.substring ( mark, s ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( mark.substring ( s, next ) .trim (  )  )  ) ;^215^^^^^208^220^types.add ( map ( s.substring ( mark, next ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( mark.substring ( s, end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring (  end ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring ( end, mark ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( s.substring ( mark ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^types.add ( map ( end.substring ( mark, s ) .trim (  )  )  ) ;^218^^^^^208^220^types.add ( map ( s.substring ( mark, end ) .trim (  )  )  ) ;^[CLASS] TypeUtils  [METHOD] parseTypes [RETURN_TYPE] List   String s int mark int end [VARIABLES] List  types  String  s  boolean  Map  rtransforms  transforms  int  end  mark  next  
[buglab_swap_variables]^String t =  ( String ) type.get ( transforms ) ;^226^^^^^222^241^String t =  ( String ) transforms.get ( type ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[buglab_swap_variables]^while  (  ( index = type.indexOf ( "[]" )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[buglab_swap_variables]^while  (  ( type = index.indexOf ( "[]", index )  + 1 )  > 0 )  {^234^^^^^222^241^while  (  ( index = type.indexOf ( "[]", index )  + 1 )  > 0 )  {^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[buglab_swap_variables]^type = sb.substring ( 0, type.length (  )  - type.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[buglab_swap_variables]^type = type.substring ( 0.length (  )  - sb.length (  )  * 2 ) ;^237^^^^^222^241^type = type.substring ( 0, type.length (  )  - sb.length (  )  * 2 ) ;^[CLASS] TypeUtils  [METHOD] map [RETURN_TYPE] String   String type [VARIABLES] StringBuffer  sb  String  t  type  boolean  Map  rtransforms  transforms  int  index  
[buglab_swap_variables]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < classes.length.length; i++ )  {^326^^^^^321^330^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] TypeUtils  [METHOD] getTypes [RETURN_TYPE] Type[]   Class[] classes [VARIABLES] Type[]  types  Class[]  classes  boolean  Map  rtransforms  transforms  int  i  
[buglab_swap_variables]^for  ( snt i = 0, len = i.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[buglab_swap_variables]^for  ( lennt i = 0, i = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[buglab_swap_variables]^for  ( int i = 0 = s.length (  ) ; i < len; i++ )  {^402^^^^^400^417^for  ( int i = 0, len = s.length (  ) ; i < len; i++ )  {^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
[buglab_swap_variables]^char c = i.charAt ( s ) ;^403^^^^^400^417^char c = s.charAt ( i ) ;^[CLASS] TypeUtils  [METHOD] escapeType [RETURN_TYPE] String   String s [VARIABLES] char  c  StringBuffer  sb  String  s  boolean  Map  rtransforms  transforms  int  i  len  
