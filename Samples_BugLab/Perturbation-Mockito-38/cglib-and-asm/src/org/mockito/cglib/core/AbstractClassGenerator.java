[BugLab_Wrong_Literal]^private boolean useCache = false;^45^^^^^40^50^private boolean useCache = true;^[CLASS] AbstractClassGenerator Source 1   [VARIABLES] 
[BugLab_Variable_Misuse]^this.name = namePrefix;^53^^^^^52^54^this.name = name;^[CLASS] AbstractClassGenerator Source 1  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  Object  NAME_KEY  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^this.namePrefix = name;^62^^^^^61^63^this.namePrefix = namePrefix;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setNamePrefix [RETURN_TYPE] void   String namePrefix [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  Object  NAME_KEY  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( namePrefix == null ) className = getClassName ( getClassLoader (  )  ) ;^66^67^^^^65^69^if  ( className == null ) className = getClassName ( getClassLoader (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  Object  NAME_KEY  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( className != null ) className = getClassName ( getClassLoader (  )  ) ;^66^67^^^^65^69^if  ( className == null ) className = getClassName ( getClassLoader (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  Object  NAME_KEY  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return namePrefix;^68^^^^^65^69^return className;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  Object  NAME_KEY  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^final Set nameCache = getClassNameCache ( classLoader ) ;^72^^^^^71^78^final Set nameCache = getClassNameCache ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return namingPolicy.getClassName ( name, source.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return namingPolicy.getClassName ( namePrefix, name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return namingPolicy.getClassName ( namePrefix, source.name, NAME_KEY, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return source.name.getClassName ( namePrefix, namingPolicy, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return namingPolicy.getClassName ( source.name, namePrefix, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return namingPolicy.getClassName ( source, namePrefix.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return nameCache.contains ( key ) ;^75^^^^^71^78^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return arg.contains ( nameCache ) ;^75^^^^^71^78^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return namingPolicy.getClassName ( namePrefix, source.name.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return nameCache.contains ( key ) ;^75^^^^^74^76^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] evaluate [RETURN_TYPE] boolean   Object arg [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return arg.contains ( nameCache ) ;^75^^^^^74^76^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] evaluate [RETURN_TYPE] boolean   Object arg [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return  ( Set )  (  ( Map ) source.cache.get ( classLoader )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return  ( Set )  (  ( Map ) cache.get ( loader )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( key ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) loader.get ( source.cache )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) source.get ( loader )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) source.cache.cache.get ( loader )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) NAME_KEY.cache.get ( loader )  ) .get ( source ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) loader.cache.get ( source )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^return  ( Set )  (  ( Map ) NAME_KEY.get ( loader )  ) .get ( source.cache ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^this.classLoader = loader;^94^^^^^93^95^this.classLoader = classLoader;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setClassLoader [RETURN_TYPE] void   ClassLoader classLoader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^if  ( DefaultNamingPolicy.INSTANCE == null ) namingPolicy = namingPolicy;^103^104^^^^102^106^if  ( namingPolicy == null ) namingPolicy = DefaultNamingPolicy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setNamingPolicy [RETURN_TYPE] void   NamingPolicy namingPolicy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( namingPolicy != null ) namingPolicy = DefaultNamingPolicy.INSTANCE;^103^104^^^^102^106^if  ( namingPolicy == null ) namingPolicy = DefaultNamingPolicy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setNamingPolicy [RETURN_TYPE] void   NamingPolicy namingPolicy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^this.useCache = attemptLoad;^120^^^^^119^121^this.useCache = useCache;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setUseCache [RETURN_TYPE] void   boolean useCache [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return attemptLoad;^127^^^^^126^128^return useCache;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getUseCache [RETURN_TYPE] boolean   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^this.attemptLoad = useCache;^136^^^^^135^137^this.attemptLoad = attemptLoad;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setAttemptLoad [RETURN_TYPE] void   boolean attemptLoad [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return useCache;^140^^^^^139^141^return attemptLoad;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getAttemptLoad [RETURN_TYPE] boolean   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Argument_Swapping]^if  ( DefaultGeneratorStrategy.INSTANCE == null ) strategy = strategy;^148^149^^^^147^151^if  ( strategy == null ) strategy = DefaultGeneratorStrategy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setStrategy [RETURN_TYPE] void   GeneratorStrategy strategy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( strategy != null ) strategy = DefaultGeneratorStrategy.INSTANCE;^148^149^^^^147^151^if  ( strategy == null ) strategy = DefaultGeneratorStrategy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setStrategy [RETURN_TYPE] void   GeneratorStrategy strategy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^ClassLoader t = loader;^169^^^^^168^183^ClassLoader t = classLoader;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( loader == null )  {^170^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( t != null )  {^170^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( loader == null )  {^173^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( t != null )  {^173^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( loader == null )  {^176^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( t != null )  {^176^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( loader == null )  {^179^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Wrong_Operator]^if  ( t != null )  {^179^^^^^168^183^if  ( t == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^return loader;^182^^^^^168^183^return t;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[BugLab_Variable_Misuse]^if  ( cache == null )  {^195^^^^^180^210^if  ( cache2 == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^if  ( cache2 != null )  {^195^^^^^180^210^if  ( cache2 == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^gen =  ( Class )   (  (  ref != null  )  ? null : ref.get (  )  ) ;^201^^^^^186^216^gen =  ( Class )   (  (  ref == null  )  ? null : ref.get (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^Reference ref =  ( Reference ) cache.get ( key ) ;^200^^^^^185^215^Reference ref =  ( Reference ) cache2.get ( key ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^Reference ref =  ( Reference ) cache2.get ( save ) ;^200^^^^^185^215^Reference ref =  ( Reference ) cache2.get ( key ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^Reference ref =  ( Reference ) key.get ( cache2 ) ;^200^^^^^185^215^Reference ref =  ( Reference ) cache2.get ( key ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^source.cache.put ( t, cache2 ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^source.cache.put ( loader, cache ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^} else if  ( attemptLoad )  {^199^^^^^184^214^} else if  ( useCache )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^if  ( gen != null )  {^203^^^^^188^218^if  ( gen == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^if  ( useCache )  {^209^^^^^194^224^if  ( attemptLoad )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^gen = t.loadClass ( getClassName (  )  ) ;^211^^^^^196^226^gen = loader.loadClass ( getClassName (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^if  ( gen != null )  {^216^^^^^201^231^if  ( gen == null )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^gen = ReflectUtils.defineClass ( namePrefix, b, loader ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^gen = ReflectUtils.defineClass ( className, b, t ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^gen = ReflectUtils.defineClass ( loader, b, className ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^gen = ReflectUtils.defineClass ( b, className, loader ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^gen = ReflectUtils.defineClass ( className, loader, b ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^getClassNameCache ( t ) .add ( className ) ;^219^^^^^204^234^getClassNameCache ( loader ) .add ( className ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^getClassNameCache ( loader ) .add ( namePrefix ) ;^219^^^^^204^234^getClassNameCache ( loader ) .add ( className ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^getClassNameCache ( className ) .add ( loader ) ;^219^^^^^204^234^getClassNameCache ( loader ) .add ( className ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^if  ( attemptLoad )  {^223^^^^^208^238^if  ( useCache )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^cache2.put ( save, new WeakReference ( gen )  ) ;^224^^^^^209^239^cache2.put ( key, new WeakReference ( gen )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^cache2.put ( gen, new WeakReference ( key )  ) ;^224^^^^^209^239^cache2.put ( key, new WeakReference ( gen )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^this.key = save;^207^^^^^192^222^this.key = key;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^CURRENT.set ( key ) ;^228^^^^^213^243^CURRENT.set ( save ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^cache2.put ( save, new HashSet (  )  ) ;^197^^^^^182^212^cache2.put ( NAME_KEY, new HashSet (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^source.cache.put ( cache2, loader ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^cache2 =  ( Map ) source.cache.get ( t ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^cache2 =  ( Map ) cache2.get ( loader ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^cache2 =  ( Map ) loader.cache.get ( source ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^cache2 =  ( Map ) loader.get ( source.cache ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^cache2 =  ( Map ) source.get ( loader ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^cache2 =  ( Map ) source.cache.cache.get ( loader ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[BugLab_Argument_Swapping]^return arg.contains ( nameCache ) ;^75^^^^^74^76^return nameCache.contains ( arg ) ;^[CLASS] 1  [METHOD] evaluate [RETURN_TYPE] boolean   Object arg [VARIABLES] boolean  Object  arg  
