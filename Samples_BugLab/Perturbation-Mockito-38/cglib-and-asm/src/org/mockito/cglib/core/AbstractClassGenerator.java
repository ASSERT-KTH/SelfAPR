[buglab_swap_variables]^return source.getClassName ( namePrefix, namingPolicy.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( source.name, namePrefix, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName (  source.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( namePrefix,  key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( namePrefix, source.name.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( namePrefix.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( namePrefix, source.name,  new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return arg.contains ( nameCache ) ;^75^^^^^71^78^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return namingPolicy.getClassName ( source, namePrefix.name, key, new Predicate (  )  {^73^^^^^71^78^return namingPolicy.getClassName ( namePrefix, source.name, key, new Predicate (  )  {^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassName [RETURN_TYPE] String   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  Set  nameCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return arg.contains ( nameCache ) ;^75^^^^^74^76^return nameCache.contains ( arg ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] evaluate [RETURN_TYPE] boolean   Object arg [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return  ( Set )  (  ( Map ) source.cache.get ( NAME_KEY )  ) .get ( loader ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return  ( Set )  (  ( Map ) source.get ( loader )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return  ( Set )  (  ( Map ) loader.cache.get ( source )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return  ( Set )  (  ( Map ) NAME_KEY.get ( loader )  ) .get ( source.cache ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^return  ( Set )  (  ( Map ) loader.get ( source.cache )  ) .get ( NAME_KEY ) ;^81^^^^^80^82^return  ( Set )  (  ( Map ) source.cache.get ( loader )  ) .get ( NAME_KEY ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] getClassNameCache [RETURN_TYPE] Set   ClassLoader loader [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^if  ( DefaultNamingPolicy.INSTANCE == null ) namingPolicy = namingPolicy;^103^104^^^^102^106^if  ( namingPolicy == null ) namingPolicy = DefaultNamingPolicy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setNamingPolicy [RETURN_TYPE] void   NamingPolicy namingPolicy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^if  ( DefaultGeneratorStrategy.INSTANCE == null ) strategy = strategy;^148^149^^^^147^151^if  ( strategy == null ) strategy = DefaultGeneratorStrategy.INSTANCE;^[CLASS] AbstractClassGenerator Source 1  [METHOD] setStrategy [RETURN_TYPE] void   GeneratorStrategy strategy [VARIABLES] GeneratorStrategy  strategy  boolean  attemptLoad  useCache  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  Object  NAME_KEY  arg  key  String  className  name  namePrefix  Map  cache  NamingPolicy  namingPolicy  Source  source  
[buglab_swap_variables]^Reference ref =  ( Reference ) key.get ( cache2 ) ;^200^^^^^185^215^Reference ref =  ( Reference ) cache2.get ( key ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2.put (  new HashSet (  )  ) ;^197^^^^^182^212^cache2.put ( NAME_KEY, new HashSet (  )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^source.cache.put ( cache2, loader ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^source.cache.put (  cache2 ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^source.cache.put ( loader ) ;^198^^^^^183^213^source.cache.put ( loader, cache2 ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass ( b, className, loader ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass (  b, loader ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass ( className,  loader ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass ( loader, b, className ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass ( className, b ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^getClassNameCache ( className ) .add ( loader ) ;^219^^^^^204^234^getClassNameCache ( loader ) .add ( className ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^gen = ReflectUtils.defineClass ( className, loader, b ) ;^220^^^^^205^235^gen = ReflectUtils.defineClass ( className, b, loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2.put (  new WeakReference ( gen )  ) ;^224^^^^^209^239^cache2.put ( key, new WeakReference ( gen )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2.put ( gen, new WeakReference ( key )  ) ;^224^^^^^209^239^cache2.put ( key, new WeakReference ( gen )  ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2 =  ( Map ) loader.get ( source.cache ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2 =  ( Map ) source.get ( loader ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2 =  ( Map ) source.cache.cache.get ( loader ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^cache2 =  ( Map ) loader.cache.get ( source ) ;^194^^^^^179^209^cache2 =  ( Map ) source.cache.get ( loader ) ;^[CLASS] AbstractClassGenerator Source 1  [METHOD] create [RETURN_TYPE] Object   Object key [VARIABLES] Reference  ref  Error  e  String  className  name  namePrefix  NamingPolicy  namingPolicy  Source  source  Exception  e  GeneratorStrategy  strategy  byte[]  b  boolean  attemptLoad  useCache  RuntimeException  e  ThreadLocal  CURRENT  ClassLoader  classLoader  loader  t  Object  NAME_KEY  arg  key  save  Class  gen  Map  cache  cache2  ClassNotFoundException  e  
[buglab_swap_variables]^return arg.contains ( nameCache ) ;^75^^^^^74^76^return nameCache.contains ( arg ) ;^[CLASS] 1  [METHOD] evaluate [RETURN_TYPE] boolean   Object arg [VARIABLES] boolean  Object  arg  
