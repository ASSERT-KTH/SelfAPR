[buglab_swap_variables]^super ( sig, access.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^super (  sig.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^super ( access, mv.getDescriptor (  ) , sig ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^super ( access.getDescriptor (  ) , mv ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^super ( mv, sig.getDescriptor (  ) , access ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^super ( access, sig.getDescriptor (  )  ) ;^107^^^^^106^110^super ( access, sig.getDescriptor (  ) , mv ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( sig.getClassInfo (  ) , access, ce, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) , exceptionTypes, sig, access ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) ,  sig, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) , access, exceptionTypes, sig ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) , access,  exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( exceptionTypes.getClassInfo (  ) , access, sig, ce ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) , access, sig ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^state = new State ( ce.getClassInfo (  ) , sig, access, exceptionTypes ) ;^109^^^^^106^110^state = new State ( ce.getClassInfo (  ) , access, sig, exceptionTypes ) ;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] Type[])   ClassEmitter ce MethodVisitor mv int access Signature sig Type[] exceptionTypes [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  MethodVisitor  mv  
[buglab_swap_variables]^this.ce = wrap.ce.ce;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^this.ce = wrap;^114^^^^^112^116^this.ce = wrap.ce;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^this.state = wrap.state.state;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^this.state = wrap;^115^^^^^112^116^this.state = wrap.state;^[CLASS] CodeEmitter State  [METHOD] <init> [RETURN_TYPE] CodeEmitter)   CodeEmitter wrap [VARIABLES] CodeEmitter  wrap  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^return state;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^return state.sig.sig;^123^^^^^122^124^return state.sig;^[CLASS] CodeEmitter State  [METHOD] getSignature [RETURN_TYPE] Signature   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^return state.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^return state.sig.sig.getReturnType (  ) ;^127^^^^^126^128^return state.sig.getReturnType (  ) ;^[CLASS] CodeEmitter State  [METHOD] getReturnType [RETURN_TYPE] Type   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTryCatchBlock ( exception.getStart (  ) , block.getEnd (  ) , mark (  ) , block.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTryCatchBlock ( block.getStart (  ) .getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) .getInternalName (  )  ) ;^150^151^152^153^^146^154^mv.visitTryCatchBlock ( block.getStart (  ) , block.getEnd (  ) , mark (  ) , exception.getInternalName (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] catch_exception [RETURN_TYPE] void   Block block Type exception [VARIABLES] Type  exception  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Block  block  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void goTo ( Label mv )  { label.visitJumpInsn ( Constants.GOTO, label ) ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO ) ; }^156^^^^^151^161^public void goTo ( Label label )  { mv.visitJumpInsn ( Constants.GOTO, label ) ; }^[CLASS] CodeEmitter State  [METHOD] goTo [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void ifnull ( Label mv )  { label.visitJumpInsn ( Constants.IFNULL, label ) ; }^157^^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL ) ; }^157^^^^^152^162^public void ifnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void ifnonnull ( Label mv )  { label.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL ) ; }^158^^^^^153^163^public void ifnonnull ( Label label )  { mv.visitJumpInsn ( Constants.IFNONNULL, label ) ; }^[CLASS] CodeEmitter State  [METHOD] ifnonnull [RETURN_TYPE] void   Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn (  label ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( label, mode ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( mode ) ;^161^^^^^160^162^mv.visitJumpInsn ( mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_jump [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_cmp ( Type.INT_TYPE, label, mode ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_cmp ( Type.INT_TYPE,  label ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_cmp ( Type.INT_TYPE, mode ) ;^165^^^^^164^166^if_cmp ( Type.INT_TYPE, mode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_icmp [RETURN_TYPE] void   int mode Label label [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( Constants.IF_ACMPEQ ) ;^189^^^^^174^204^mv.visitJumpInsn ( Constants.IF_ACMPEQ, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( Constants.IF_ACMPNE ) ;^192^^^^^177^207^mv.visitJumpInsn ( Constants.IF_ACMPNE, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn (  label ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( label, intOp ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitJumpInsn ( intOp ) ;^205^^^^^190^220^mv.visitJumpInsn ( intOp, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_jump ( label, jumpmode ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_jump (  label ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^if_jump ( jumpmode ) ;^208^^^^^193^223^if_jump ( jumpmode, label ) ;^[CLASS] CodeEmitter State  [METHOD] if_cmp [RETURN_TYPE] void   Type type int mode Label label [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  label  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  ClassInfo  classInfo  
[buglab_swap_variables]^public void math ( int type, Type op )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^public void math ( int mv, Type type )  { op.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^public void math ( int  Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^public void math ( int op, Type mv )  { type.visitInsn ( type.getOpcode ( op )  ) ; }^244^^^^^239^249^public void math ( int op, Type type )  { mv.visitInsn ( type.getOpcode ( op )  ) ; }^[CLASS] CodeEmitter State  [METHOD] math [RETURN_TYPE] void   int op Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^public void array_load ( Type mv )  { type.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^246^^^^^241^251^public void array_load ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IALOAD )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_load [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^public void array_store ( Type mv )  { type.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^247^^^^^242^252^public void array_store ( Type type )  { mv.visitInsn ( type.getOpcode ( Constants.IASTORE )  ) ; }^[CLASS] CodeEmitter State  [METHOD] array_store [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( to != from )  {^253^^^^^238^268^if  ( from != to )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.CHAR_TYPE == to )  {^284^^^^^272^295^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.SHORT_TYPE == to )  {^292^^^^^272^295^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.LONG_TYPE == to )  {^290^^^^^272^295^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.FLOAT_TYPE == to )  {^288^^^^^272^295^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.FLOAT_TYPE == to )  {^275^^^^^260^290^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.BYTE_TYPE == to )  {^282^^^^^267^297^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.FLOAT_TYPE == to )  {^288^^^^^273^303^} else if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.SHORT_TYPE == to )  {^292^^^^^277^307^} else if  ( to == Type.SHORT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.LONG_TYPE == to )  {^290^^^^^275^305^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.LONG_TYPE == to )  {^266^^^^^251^281^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.BYTE_TYPE == to )  {^282^^^^^272^295^if  ( to == Type.BYTE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.DOUBLE_TYPE == to )  {^286^^^^^272^295^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.DOUBLE_TYPE == to )  {^273^^^^^258^288^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.FLOAT_TYPE == to )  {^255^^^^^240^270^if  ( to == Type.FLOAT_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.LONG_TYPE == to )  {^257^^^^^242^272^} else if  ( to == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.CHAR_TYPE == to )  {^284^^^^^269^299^} else if  ( to == Type.CHAR_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.DOUBLE_TYPE == to )  {^286^^^^^271^301^} else if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^} else if  ( Type.LONG_TYPE == from )  {^272^^^^^257^287^} else if  ( from == Type.LONG_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.DOUBLE_TYPE == to )  {^264^^^^^249^279^if  ( to == Type.DOUBLE_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] cast_numeric [RETURN_TYPE] void   Type from Type to [VARIABLES] Type  from  to  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitIntInsn ( Constants.SIPUSH ) ;^307^^^^^299^311^mv.visitIntInsn ( Constants.SIPUSH, i ) ;^[CLASS] CodeEmitter State  [METHOD] push [RETURN_TYPE] void   int i [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitIntInsn ( Constants.BIPUSH ) ;^305^^^^^299^311^mv.visitIntInsn ( Constants.BIPUSH, i ) ;^[CLASS] CodeEmitter State  [METHOD] push [RETURN_TYPE] void   int i [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( TypeUtils.isStatic ( state )  )  {^357^^^^^356^361^if  ( TypeUtils.isStatic ( state.access )  )  {^[CLASS] CodeEmitter State  [METHOD] load_this [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( TypeUtils.isStatic ( state.access.access )  )  {^357^^^^^356^361^if  ( TypeUtils.isStatic ( state.access )  )  {^[CLASS] CodeEmitter State  [METHOD] load_this [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state.argumentTypes[index], index + skipArgs ( state.localOffset )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state[index], state.argumentTypes.localOffset + skipArgs ( index )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state.argumentTypes.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state.argumentTypes[index].localOffset + skipArgs ( index )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state.localOffset.argumentTypes[index], state + skipArgs ( index )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( state.argumentTypes[index] + skipArgs ( index )  ) ;^375^376^^^^374^377^load_local ( state.argumentTypes[index], state.localOffset + skipArgs ( index )  ) ;^[CLASS] CodeEmitter State  [METHOD] load_arg [RETURN_TYPE] void   int index [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  i  index  intOp  jumpmode  localOffset  mode  op  ClassInfo  classInfo  
[buglab_swap_variables]^int pos = fromArg + skipArgs ( state.localOffset ) ;^381^^^^^380^387^int pos = state.localOffset + skipArgs ( fromArg ) ;^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^int pos = fromArg.localOffset + skipArgs ( state ) ;^381^^^^^380^387^int pos = state.localOffset + skipArgs ( fromArg ) ;^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( countnt i = 0; i < i; i++ )  {^382^^^^^380^387^for  ( int i = 0; i < count; i++ )  {^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^Type t = i[fromArg + state.argumentTypes];^383^^^^^380^387^Type t = state.argumentTypes[fromArg + i];^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^Type t = i.argumentTypes[fromArg + state];^383^^^^^380^387^Type t = state.argumentTypes[fromArg + i];^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( pos, t ) ;^384^^^^^380^387^load_local ( t, pos ) ;^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^load_local (  pos ) ;^384^^^^^380^387^load_local ( t, pos ) ;^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^load_local ( t ) ;^384^^^^^380^387^load_local ( t, pos ) ;^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^Type t = state.argumentTypes.argumentTypes[fromArg + i];^383^^^^^380^387^Type t = state.argumentTypes[fromArg + i];^[CLASS] CodeEmitter State  [METHOD] load_args [RETURN_TYPE] void   int fromArg int count [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( numArgsnt i = 0; i < i; i++ )  {^391^^^^^389^395^for  ( int i = 0; i < numArgs; i++ )  {^[CLASS] CodeEmitter State  [METHOD] skipArgs [RETURN_TYPE] int   int numArgs [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^amount += state.argumentTypes.argumentTypes[i].getSize (  ) ;^392^^^^^389^395^amount += state.argumentTypes[i].getSize (  ) ;^[CLASS] CodeEmitter State  [METHOD] skipArgs [RETURN_TYPE] int   int numArgs [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitVarInsn ( pos.getOpcode ( Constants.ILOAD ) , t ) ;^399^^^^^397^400^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;^[CLASS] CodeEmitter State  [METHOD] load_local [RETURN_TYPE] void   Type t int pos [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD )  ) ;^399^^^^^397^400^mv.visitVarInsn ( t.getOpcode ( Constants.ILOAD ) , pos ) ;^[CLASS] CodeEmitter State  [METHOD] load_local [RETURN_TYPE] void   Type t int pos [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitVarInsn ( pos.getOpcode ( Constants.ISTORE ) , t ) ;^404^^^^^402^405^mv.visitVarInsn ( t.getOpcode ( Constants.ISTORE ) , pos ) ;^[CLASS] CodeEmitter State  [METHOD] store_local [RETURN_TYPE] void   Type t int pos [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitVarInsn ( t.getOpcode ( Constants.ISTORE )  ) ;^404^^^^^402^405^mv.visitVarInsn ( t.getOpcode ( Constants.ISTORE ) , pos ) ;^[CLASS] CodeEmitter State  [METHOD] store_local [RETURN_TYPE] void   Type t int pos [VARIABLES] Type  t  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitIincInsn ( amount.getIndex (  ) , local ) ;^408^^^^^407^409^mv.visitIincInsn ( local.getIndex (  ) , amount ) ;^[CLASS] CodeEmitter State  [METHOD] iinc [RETURN_TYPE] void   Local local int amount [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Local  local  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitIincInsn ( local.getIndex (  )  ) ;^408^^^^^407^409^mv.visitIincInsn ( local.getIndex (  ) , amount ) ;^[CLASS] CodeEmitter State  [METHOD] iinc [RETURN_TYPE] void   Local local int amount [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Local  local  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitInsn ( state.getReturnType (  ) .getOpcode ( Constants.IRETURN )  ) ;^420^^^^^419^421^mv.visitInsn ( state.sig.getReturnType (  ) .getOpcode ( Constants.IRETURN )  ) ;^[CLASS] CodeEmitter State  [METHOD] return_value [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitInsn ( state.sig.sig.getReturnType (  ) .getOpcode ( Constants.IRETURN )  ) ;^420^^^^^419^421^mv.visitInsn ( state.sig.getReturnType (  ) .getOpcode ( Constants.IRETURN )  ) ;^[CLASS] CodeEmitter State  [METHOD] return_value [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  pos  ClassInfo  classInfo  
[buglab_swap_variables]^ClassEmitter.FieldInfo info = name.getFieldInfo ( ce ) ;^424^^^^^423^427^ClassEmitter.FieldInfo info = ce.getFieldInfo ( name ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   String name [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  FieldInfo  info  ClassInfo  classInfo  
[buglab_swap_variables]^ClassEmitter.FieldInfo info = name.getFieldInfo ( ce ) ;^430^^^^^429^433^ClassEmitter.FieldInfo info = ce.getFieldInfo ( name ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   String name [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  FieldInfo  info  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , type, name ) ;^436^^^^^435^437^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) ,  type ) ;^436^^^^^435^437^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name ) ;^436^^^^^435^437^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, name.getSuperType (  ) , ce, type ) ;^436^^^^^435^437^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD.getSuperType (  ) , name, type ) ;^436^^^^^435^437^emit_field ( Constants.GETFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , type, name ) ;^440^^^^^439^441^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) ,  type ) ;^440^^^^^439^441^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name ) ;^440^^^^^439^441^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, name.getSuperType (  ) , ce, type ) ;^440^^^^^439^441^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD.getSuperType (  ) , name, type ) ;^440^^^^^439^441^emit_field ( Constants.PUTFIELD, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putfield [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , type, name ) ;^444^^^^^443^445^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) ,  type ) ;^444^^^^^443^445^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name ) ;^444^^^^^443^445^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, type.getSuperType (  ) , name, ce ) ;^444^^^^^443^445^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC.getSuperType (  ) , name, type ) ;^444^^^^^443^445^emit_field ( Constants.GETSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_getstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, name.getSuperType (  ) , ce, type ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) ,  type ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , type, name ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, type.getSuperType (  ) , name, ce ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC.getSuperType (  ) , name, type ) ;^448^^^^^447^449^emit_field ( Constants.PUTSTATIC, ce.getSuperType (  ) , name, type ) ;^[CLASS] CodeEmitter State  [METHOD] super_putstatic [RETURN_TYPE] void   String name Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, name, owner, type ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD,  name, type ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, owner, type, name ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, owner,  type ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, type, name, owner ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETFIELD, owner, name ) ;^452^^^^^451^453^emit_field ( Constants.GETFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, type, name, owner ) ;^456^^^^^455^457^emit_field ( Constants.PUTFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD,  name, type ) ;^456^^^^^455^457^emit_field ( Constants.PUTFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, name, owner, type ) ;^456^^^^^455^457^emit_field ( Constants.PUTFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, owner,  type ) ;^456^^^^^455^457^emit_field ( Constants.PUTFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTFIELD, owner, name ) ;^456^^^^^455^457^emit_field ( Constants.PUTFIELD, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putfield [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, type, name, owner ) ;^460^^^^^459^461^emit_field ( Constants.GETSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC,  name, type ) ;^460^^^^^459^461^emit_field ( Constants.GETSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, owner, type, name ) ;^460^^^^^459^461^emit_field ( Constants.GETSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, owner,  type ) ;^460^^^^^459^461^emit_field ( Constants.GETSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.GETSTATIC, owner, name ) ;^460^^^^^459^461^emit_field ( Constants.GETSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] getstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, type, name, owner ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC,  name, type ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, name, owner, type ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, owner,  type ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, owner, type, name ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_field ( Constants.PUTSTATIC, owner, name ) ;^464^^^^^463^465^emit_field ( Constants.PUTSTATIC, owner, name, type ) ;^[CLASS] CodeEmitter State  [METHOD] putstatic [RETURN_TYPE] void   Type owner String name Type type [VARIABLES] Type  owner  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( ftype, ctype.getInternalName (  ) , name, opcode.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn (  ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , ftype, name.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) ,  ftype.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, ftype.getInternalName (  ) , name, ctype.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name.getDescriptor (  )  ) ;^469^470^471^472^^468^473^mv.visitFieldInsn ( opcode, ctype.getInternalName (  ) , name, ftype.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_field [RETURN_TYPE] void   int opcode Type ctype String name Type ftype [VARIABLES] Type  ctype  ftype  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  name  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^super_invoke ( state ) ;^476^^^^^475^477^super_invoke ( state.sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^super_invoke ( state.sig.sig ) ;^476^^^^^475^477^super_invoke ( state.sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL, sig.getSuperType (  ) , ce ) ;^480^^^^^479^481^emit_invoke ( Constants.INVOKESPECIAL, ce.getSuperType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL, ce.getSuperType (  )  ) ;^480^^^^^479^481^emit_invoke ( Constants.INVOKESPECIAL, ce.getSuperType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL.getSuperType (  ) , sig ) ;^480^^^^^479^481^emit_invoke ( Constants.INVOKESPECIAL, ce.getSuperType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( CSTRUCT_NULL, type ) ;^484^^^^^483^485^invoke_constructor ( type, CSTRUCT_NULL ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor (  CSTRUCT_NULL ) ;^484^^^^^483^485^invoke_constructor ( type, CSTRUCT_NULL ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( type ) ;^484^^^^^483^485^invoke_constructor ( type, CSTRUCT_NULL ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Constants.INVOKEVIRTUAL.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( opcode == sig )  || ( opcode == Constants.INVOKESTATIC )  )  )  {^496^497^498^^^495^505^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( opcode == Constants.INVOKEVIRTUAL )  || ( opcode == Constants.INVOKESTATIC )  )  )  {^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( Constants.INVOKESTATIC == Constants.INVOKEVIRTUAL )  || ( opcode == opcode )  )  )  {^496^497^498^^^495^505^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( opcode == Constants.INVOKEVIRTUAL )  || ( opcode == Constants.INVOKESTATIC )  )  )  {^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( opcode == Constants.INVOKESTATIC )  || ( opcode == Constants.INVOKEVIRTUAL )  )  )  {^496^497^498^^^495^505^if  ( sig.getName (  ) .equals ( Constants.CONSTRUCTOR_NAME )  && (  ( opcode == Constants.INVOKEVIRTUAL )  || ( opcode == Constants.INVOKESTATIC )  )  )  {^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitMethodInsn ( type, opcode.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^501^502^503^504^^495^505^mv.visitMethodInsn ( opcode, type.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitMethodInsn (  type.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^501^502^503^504^^495^505^mv.visitMethodInsn ( opcode, type.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^501^502^503^504^^495^505^mv.visitMethodInsn ( opcode, type.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode, type.getInternalName (  ) .getName (  ) , sig.getDescriptor (  )  ) ;^501^502^503^504^^495^505^mv.visitMethodInsn ( opcode, type.getInternalName (  ) , sig.getName (  ) , sig.getDescriptor (  )  ) ;^[CLASS] CodeEmitter State  [METHOD] emit_invoke [RETURN_TYPE] void   int opcode Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEINTERFACE, sig, owner ) ;^508^^^^^507^509^emit_invoke ( Constants.INVOKEINTERFACE, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_interface [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEINTERFACE,  sig ) ;^508^^^^^507^509^emit_invoke ( Constants.INVOKEINTERFACE, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_interface [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEINTERFACE, owner ) ;^508^^^^^507^509^emit_invoke ( Constants.INVOKEINTERFACE, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_interface [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEVIRTUAL, sig, owner ) ;^512^^^^^511^513^emit_invoke ( Constants.INVOKEVIRTUAL, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_virtual [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEVIRTUAL,  sig ) ;^512^^^^^511^513^emit_invoke ( Constants.INVOKEVIRTUAL, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_virtual [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKEVIRTUAL, owner ) ;^512^^^^^511^513^emit_invoke ( Constants.INVOKEVIRTUAL, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_virtual [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESTATIC, sig, owner ) ;^516^^^^^515^517^emit_invoke ( Constants.INVOKESTATIC, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_static [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESTATIC,  sig ) ;^516^^^^^515^517^emit_invoke ( Constants.INVOKESTATIC, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_static [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESTATIC, owner ) ;^516^^^^^515^517^emit_invoke ( Constants.INVOKESTATIC, owner, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_static [RETURN_TYPE] void   Type owner Signature sig [VARIABLES] Type  owner  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( sig.getClassType (  ) , ce ) ;^520^^^^^519^521^invoke_virtual ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_virtual_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( ce.getClassType (  )  ) ;^520^^^^^519^521^invoke_virtual ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_virtual_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_static ( sig.getClassType (  ) , ce ) ;^524^^^^^523^525^invoke_static ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_static_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_static ( ce.getClassType (  )  ) ;^524^^^^^523^525^invoke_static ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_static_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL, sig, type ) ;^528^^^^^527^529^emit_invoke ( Constants.INVOKESPECIAL, type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL,  sig ) ;^528^^^^^527^529^emit_invoke ( Constants.INVOKESPECIAL, type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^emit_invoke ( Constants.INVOKESPECIAL, type ) ;^528^^^^^527^529^emit_invoke ( Constants.INVOKESPECIAL, type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor [RETURN_TYPE] void   Type type Signature sig [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( sig.getClassType (  ) , ce ) ;^532^^^^^531^533^invoke_constructor ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( ce.getClassType (  )  ) ;^532^^^^^531^533^invoke_constructor ( ce.getClassType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke_constructor_this [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( sig.getSuperType (  ) , ce ) ;^536^^^^^535^537^invoke_constructor ( ce.getSuperType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke_constructor [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( ce.getSuperType (  )  ) ;^536^^^^^535^537^invoke_constructor ( ce.getSuperType (  ) , sig ) ;^[CLASS] CodeEmitter State  [METHOD] super_invoke_constructor [RETURN_TYPE] void   Signature sig [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTypeInsn ( desc, opcode ) ;^554^^^^^547^555^mv.visitTypeInsn ( opcode, desc ) ;^[CLASS] CodeEmitter State  [METHOD] emit_type [RETURN_TYPE] void   int opcode Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  desc  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTypeInsn (  desc ) ;^554^^^^^547^555^mv.visitTypeInsn ( opcode, desc ) ;^[CLASS] CodeEmitter State  [METHOD] emit_type [RETURN_TYPE] void   int opcode Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  desc  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTypeInsn ( opcode ) ;^554^^^^^547^555^mv.visitTypeInsn ( opcode, desc ) ;^[CLASS] CodeEmitter State  [METHOD] emit_type [RETURN_TYPE] void   int opcode Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  desc  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( keys == 0 )  {^598^^^^^596^604^if  ( keys.length == 0 )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^density =  ( float ) keys.length.length /  ( keys[keys.length - 1] - keys[0] + 1 ) ;^601^^^^^596^604^density =  ( float ) keys.length /  ( keys[keys.length - 1] - keys[0] + 1 ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^density =  ( float ) keys /  ( keys.length[keys.length - 1] - keys[0] + 1 ) ;^601^^^^^596^604^density =  ( float ) keys.length /  ( keys[keys.length - 1] - keys[0] + 1 ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^process_switch ( callback, keys, density >= 0.5f ) ;^603^^^^^596^604^process_switch ( keys, callback, density >= 0.5f ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^process_switch (  callback, density >= 0.5f ) ;^603^^^^^596^604^process_switch ( keys, callback, density >= 0.5f ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^process_switch ( keys,  density >= 0.5f ) ;^603^^^^^596^604^process_switch ( keys, callback, density >= 0.5f ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^process_switch ( keys, density, callback >= 0.5f ) ;^603^^^^^596^604^process_switch ( keys, callback, density >= 0.5f ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^process_switch ( keys, callback >= 0.5f ) ;^603^^^^^596^604^process_switch ( keys, callback, density >= 0.5f ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback [VARIABLES] boolean  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  float  density  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  localOffset  mode  numArgs  op  opcode  pos  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^635^^^^^619^643^for  ( int i = 0; i < len; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^639^^^^^619^643^for  ( int i = 0; i < len; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( keys[i] ) ;^641^^^^^619^643^callback.processCase ( keys[i], end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( labels, keys, def ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn (  keys, labels ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def, labels, keys ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def,  labels ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def, keys ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( def != label )  {^628^^^^^613^643^if  ( label != def )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( min + i, end ) ;^630^^^^^615^645^callback.processCase ( i + min, end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( i +  end ) ;^630^^^^^615^645^callback.processCase ( i + min, end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( i + end, min ) ;^630^^^^^615^645^callback.processCase ( i + min, end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( i + min ) ;^630^^^^^615^645^callback.processCase ( i + min, end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( rangent i = 0; i < i; i++ )  {^626^^^^^611^641^for  ( int i = 0; i < range; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^Arrays.fill ( def, labels ) ;^621^^^^^606^636^Arrays.fill ( labels, def ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^Arrays.fill (  def ) ;^621^^^^^606^636^Arrays.fill ( labels, def ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^Arrays.fill ( labels ) ;^621^^^^^606^636^Arrays.fill ( labels, def ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn (  max, def, labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( max, min, def, labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min,  def, labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, max, labels, def ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, max,  labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, labels, def, max ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, max, def ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( end + min, i ) ;^630^^^^^615^645^callback.processCase ( i + min, end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^622^^^^^607^637^for  ( int i = 0; i < len; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^635^^^^^620^650^for  ( int i = 0; i < len; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^639^^^^^624^654^for  ( int i = 0; i < len; i++ )  {^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( end[i], keys ) ;^641^^^^^626^656^callback.processCase ( keys[i], end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( keys[i] ) ;^641^^^^^626^656^callback.processCase ( keys[i], end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^int len = keys.length.length;^614^^^^^599^629^int len = keys.length;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^int len = keys;^614^^^^^599^629^int len = keys.length;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^int range = min - max + 1;^617^^^^^602^632^int range = max - min + 1;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( def, max, min, labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( keys, def, labels ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn (  keys, labels ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def, labels, keys ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def,  labels ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( def, keys ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^callback.processCase ( end[i], keys ) ;^641^^^^^619^643^callback.processCase ( keys[i], end ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( keys, def, labels ) ;^638^^^^^619^643^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( labels, max, def, min ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( labels, keys, def ) ;^638^^^^^623^653^mv.visitLookupSwitchInsn ( def, keys, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, def, max, labels ) ;^625^^^^^610^640^mv.visitTableSwitchInsn ( min, max, def, labels ) ;^[CLASS] CodeEmitter State  [METHOD] process_switch [RETURN_TYPE] void   int[] keys ProcessSwitchCallback callback boolean useTable [VARIABLES] Label[]  labels  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  def  end  label  Error  e  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  Exception  e  boolean  useTable  RuntimeException  e  ProcessSwitchCallback  callback  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( keys.lengthnt i = 1; i < i; i++ )  {^660^^^^^659^665^for  ( int i = 1; i < keys.length; i++ )  {^[CLASS] CodeEmitter State  [METHOD] isSorted [RETURN_TYPE] boolean   int[] keys [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( keysnt i = 1; i < i.length; i++ )  {^660^^^^^659^665^for  ( int i = 1; i < keys.length; i++ )  {^[CLASS] CodeEmitter State  [METHOD] isSorted [RETURN_TYPE] boolean   int[] keys [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^for  ( int i = 1; i < keys; i++ )  {^660^^^^^659^665^for  ( int i = 1; i < keys.length; i++ )  {^[CLASS] CodeEmitter State  [METHOD] isSorted [RETURN_TYPE] boolean   int[] keys [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int[]  keys  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( CSTRUCT_STRING, type ) ;^693^^^^^689^695^invoke_constructor ( type, CSTRUCT_STRING ) ;^[CLASS] CodeEmitter State  [METHOD] throw_exception [RETURN_TYPE] void   Type type String msg [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  msg  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor (  CSTRUCT_STRING ) ;^693^^^^^689^695^invoke_constructor ( type, CSTRUCT_STRING ) ;^[CLASS] CodeEmitter State  [METHOD] throw_exception [RETURN_TYPE] void   Type type String msg [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  msg  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( type ) ;^693^^^^^689^695^invoke_constructor ( type, CSTRUCT_STRING ) ;^[CLASS] CodeEmitter State  [METHOD] throw_exception [RETURN_TYPE] void   Type type String msg [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  String  msg  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.VOID_TYPE == type )  {^706^^^^^704^724^if  ( type == Type.VOID_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, type, new Type[]{ Type.VOID_TYPE } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( boxed, new Signature ( type, Type.VOID_TYPE, new Type[]{ Constants.CONSTRUCTOR_NAME } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( boxed, new Signature (  Type.VOID_TYPE, new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME,  new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( Type.VOID_TYPE, new Signature ( Constants.CONSTRUCTOR_NAME, boxed, new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor (  new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( type, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ boxed } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( boxed, new Signature ( Type.VOID_TYPE, Constants.CONSTRUCTOR_NAME, new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( Constants.CONSTRUCTOR_NAME, new Signature ( boxed, Type.VOID_TYPE, new Type[]{ type } )  ) ;^721^^^^^704^724^invoke_constructor ( boxed, new Signature ( Constants.CONSTRUCTOR_NAME, Type.VOID_TYPE, new Type[]{ type } )  ) ;^[CLASS] CodeEmitter State  [METHOD] box [RETURN_TYPE] void   Type type [VARIABLES] Type  boxed  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( sig, t ) ;^766^^^^^762^767^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual (  sig ) ;^766^^^^^762^767^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( t ) ;^766^^^^^762^767^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( sig, t ) ;^766^^^^^751^781^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual (  sig ) ;^766^^^^^751^781^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( t ) ;^766^^^^^751^781^invoke_virtual ( t, sig ) ;^[CLASS] CodeEmitter State  [METHOD] unbox [RETURN_TYPE] void   Type type [VARIABLES] Type  t  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^box ( state.argumentTypes.argumentTypes[i] ) ;^786^^^^^775^789^box ( state.argumentTypes[i] ) ;^[CLASS] CodeEmitter State  [METHOD] create_arg_array [RETURN_TYPE] void   [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( Type.VOID_TYPE != type )  {^823^^^^^821^838^if  ( type != Type.VOID_TYPE )  {^[CLASS] CodeEmitter State  [METHOD] unbox_or_zero [RETURN_TYPE] void   Type type [VARIABLES] Type  type  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  Label  end  nonNull  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( !TypeUtils.isAbstract ( state )  )  {^841^^^^^840^844^if  ( !TypeUtils.isAbstract ( state.access )  )  {^[CLASS] CodeEmitter State  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^if  ( !TypeUtils.isAbstract ( state.access.access )  )  {^841^^^^^840^844^if  ( !TypeUtils.isAbstract ( state.access )  )  {^[CLASS] CodeEmitter State  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( sig, virtualType ) ;^857^^^^^846^859^invoke_virtual ( virtualType, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual (  sig ) ;^857^^^^^846^859^invoke_virtual ( virtualType, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_virtual ( virtualType ) ;^857^^^^^846^859^invoke_virtual ( virtualType, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_static ( sig, type ) ;^855^^^^^846^859^invoke_static ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_static (  sig ) ;^855^^^^^846^859^invoke_static ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_static ( type ) ;^855^^^^^846^859^invoke_static ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_interface ( sig, type ) ;^853^^^^^846^859^invoke_interface ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_interface (  sig ) ;^853^^^^^846^859^invoke_interface ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_interface ( type ) ;^853^^^^^846^859^invoke_interface ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( sig, type ) ;^851^^^^^846^859^invoke_constructor ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor (  sig ) ;^851^^^^^846^859^invoke_constructor ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
[buglab_swap_variables]^invoke_constructor ( type ) ;^851^^^^^846^859^invoke_constructor ( type, sig ) ;^[CLASS] CodeEmitter State  [METHOD] invoke [RETURN_TYPE] void   MethodInfo method Type virtualType [VARIABLES] Type  type  virtualType  boolean  State  state  Signature  BOOLEAN_VALUE  CHAR_VALUE  CSTRUCT_NULL  CSTRUCT_STRING  DOUBLE_VALUE  FLOAT_VALUE  INT_VALUE  LONG_VALUE  sig  ClassEmitter  ce  Type[]  argumentTypes  exceptionTypes  MethodInfo  method  int  ADD  AND  DIV  EQ  GE  GT  LE  LT  MUL  NE  NEG  OR  REM  SUB  USHR  XOR  access  amount  count  fromArg  i  index  intOp  jumpmode  len  localOffset  max  maxLocals  maxStack  min  mode  numArgs  op  opcode  pos  range  ClassInfo  classInfo  
