[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", Constants.TYPE_OBJECT, new Type[]{ METHOD_DELEGATE } ) ;^154^155^^^^154^155^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", METHOD_DELEGATE, new Type[]{ Constants.TYPE_OBJECT } ) ;^[CLASS] MethodDelegate Generator   [VARIABLES] 
[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance",  new Type[]{ Constants.TYPE_OBJECT } ) ;^154^155^^^^154^155^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", METHOD_DELEGATE, new Type[]{ Constants.TYPE_OBJECT } ) ;^[CLASS] MethodDelegate Generator   [VARIABLES] 
[buglab_swap_variables]^return target == other.eqMethod.target && eqMethod.equals ( other ) ;^137^^^^^135^138^return target == other.target && eqMethod.equals ( other.eqMethod ) ;^[CLASS] MethodDelegate Generator  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  METHOD_DELEGATE  boolean  MethodDelegate  other  Signature  NEW_INSTANCE  Object  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^return eqMethod == other.target && target.equals ( other.eqMethod ) ;^137^^^^^135^138^return target == other.target && eqMethod.equals ( other.eqMethod ) ;^[CLASS] MethodDelegate Generator  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  METHOD_DELEGATE  boolean  MethodDelegate  other  Signature  NEW_INSTANCE  Object  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^return target == eqMethod && other.target.equals ( other.eqMethod ) ;^137^^^^^135^138^return target == other.target && eqMethod.equals ( other.eqMethod ) ;^[CLASS] MethodDelegate Generator  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  METHOD_DELEGATE  boolean  MethodDelegate  other  Signature  NEW_INSTANCE  Object  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^return target == other.target && other.eqMethod.equals ( eqMethod ) ;^137^^^^^135^138^return target == other.target && eqMethod.equals ( other.eqMethod ) ;^[CLASS] MethodDelegate Generator  [METHOD] equals [RETURN_TYPE] boolean   Object obj [VARIABLES] Type  METHOD_DELEGATE  boolean  MethodDelegate  other  Signature  NEW_INSTANCE  Object  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^return eqMethod.hashCode (  )  ^ target.hashCode (  ) ;^141^^^^^140^142^return target.hashCode (  )  ^ eqMethod.hashCode (  ) ;^[CLASS] MethodDelegate Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = iface.newInstance ( targetClass, methodName, KEY_FACTORY ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( iface, methodName, targetClass ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance (  methodName, iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass, iface, methodName ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass,  iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass, methodName ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = methodName.newInstance ( targetClass, KEY_FACTORY, iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] MethodDelegate Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^return  (  ( MethodDelegate ) ReflectUtils.newInstance ( target )  ) .newInstance ( type ) ;^194^^^^^193^195^return  (  ( MethodDelegate ) ReflectUtils.newInstance ( type )  ) .newInstance ( target ) ;^[CLASS] MethodDelegate Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  obj  target  Class  delegateClass  iface  targetClass  type  String  eqMethod  methodName  MethodDelegateKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^final Method method = targetClass.getMethod ( proxy, methodName.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^final Method method = targetClass.getMethod ( methodName.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^final Method method = proxy.getMethod ( methodName, targetClass.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^final Method method = methodName.getMethod ( targetClass, proxy.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^final Method method = targetClass.getMethod (  proxy.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^if  (  ( isStatic == null )  ^ target )  {^211^^^^^196^226^if  (  ( target == null )  ^ isStatic )  {^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) ,^217^218^219^220^^202^232^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , METHOD_DELEGATE,^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^e = EmitUtils.begin_method ( proxied, ce, Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^e = EmitUtils.begin_method (  proxied, Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^e = EmitUtils.begin_method ( ce,  Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^e = NEW_INSTANCE.begin_method ( Constants.ACC_PUBLIC, ce, null ) ;^238^^^^^223^253^e = ce.begin_method ( Constants.ACC_PUBLIC, NEW_INSTANCE, null ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^e = ce.begin_method ( Constants.ACC_PUBLIC,  null ) ;^238^^^^^223^253^e = ce.begin_method ( Constants.ACC_PUBLIC, NEW_INSTANCE, null ) ;^[CLASS] MethodDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", Constants.TYPE_OBJECT, new Type[]{ METHOD_DELEGATE } ) ;^154^155^^^^154^155^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", METHOD_DELEGATE, new Type[]{ Constants.TYPE_OBJECT } ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance",  new Type[]{ Constants.TYPE_OBJECT } ) ;^154^155^^^^154^155^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", METHOD_DELEGATE, new Type[]{ Constants.TYPE_OBJECT } ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  String  eqMethod  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  Object  instance  key  obj  target  Class  delegateClass  iface  targetClass  type  MethodInfo  methodInfo  proxied  MethodDelegateKey  KEY_FACTORY  
[buglab_swap_variables]^Object key = targetClass.newInstance ( KEY_FACTORY, methodName, iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( iface, methodName, targetClass ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance (  methodName, iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass, iface, methodName ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass,  iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = iface.newInstance ( targetClass, methodName, KEY_FACTORY ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass, methodName ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( methodName, targetClass, iface ) ;^189^^^^^187^191^Object key = KEY_FACTORY.newInstance ( targetClass, methodName, iface ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] MethodDelegate   [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  String  methodName  Source  SOURCE  
[buglab_swap_variables]^return  (  ( MethodDelegate ) ReflectUtils.newInstance ( target )  ) .newInstance ( type ) ;^194^^^^^193^195^return  (  ( MethodDelegate ) ReflectUtils.newInstance ( type )  ) .newInstance ( target ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Type  METHOD_DELEGATE  boolean  Signature  NEW_INSTANCE  Object  key  target  Class  iface  targetClass  type  String  methodName  Source  SOURCE  
[buglab_swap_variables]^final Method method = proxy.getMethod ( methodName, targetClass.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^final Method method = targetClass.getMethod ( methodName.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^final Method method = targetClass.getMethod ( proxy, methodName.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^final Method method = targetClass.getMethod (  proxy.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^final Method method = methodName.getMethod ( targetClass, proxy.getParameterTypes (  )  ) ;^203^^^^^188^218^final Method method = targetClass.getMethod ( methodName, proxy.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^if  (  ( isStatic == null )  ^ target )  {^211^^^^^196^226^if  (  ( target == null )  ^ isStatic )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) ,^217^218^219^220^^202^232^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , METHOD_DELEGATE,^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^e = EmitUtils.begin_method ( proxied, ce, Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^e = EmitUtils.begin_method (  proxied, Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^e = EmitUtils.begin_method ( ce,  Constants.ACC_PUBLIC ) ;^228^^^^^213^243^e = EmitUtils.begin_method ( ce, proxied, Constants.ACC_PUBLIC ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^e = NEW_INSTANCE.begin_method ( Constants.ACC_PUBLIC, ce, null ) ;^238^^^^^223^253^e = ce.begin_method ( Constants.ACC_PUBLIC, NEW_INSTANCE, null ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
[buglab_swap_variables]^e = ce.begin_method ( Constants.ACC_PUBLIC,  null ) ;^238^^^^^223^253^e = ce.begin_method ( Constants.ACC_PUBLIC, NEW_INSTANCE, null ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  METHOD_DELEGATE  boolean  isStatic  Signature  NEW_INSTANCE  ClassEmitter  ce  Object  instance  key  target  Class  iface  targetClass  type  MethodInfo  methodInfo  proxied  String  methodName  ClassVisitor  v  Method  method  proxy  Source  SOURCE  
