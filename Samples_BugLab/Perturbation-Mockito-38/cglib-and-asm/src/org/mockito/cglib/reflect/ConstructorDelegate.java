[buglab_swap_variables]^Object key = iface.newInstance ( KEY_FACTORY.getName (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) .getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[buglab_swap_variables]^constructor = newInstance.getDeclaredConstructor ( targetClass.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) ,^91^92^93^94^^76^106^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , CONSTRUCTOR_DELEGATE,^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^CodeEmitter e = newInstance.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( ce ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^99^100^101^^^84^114^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^e.invoke_constructor ( constructor, ReflectUtils.getSignature ( declaring )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^e.invoke_constructor (  ReflectUtils.getSignature ( constructor )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^Object key = targetClass.newInstance ( iface.getName (  ) , KEY_FACTORY.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[buglab_swap_variables]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) .getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[buglab_swap_variables]^constructor = newInstance.getDeclaredConstructor ( targetClass.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) ,^91^92^93^94^^76^106^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , CONSTRUCTOR_DELEGATE,^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^CodeEmitter e = newInstance.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( ce ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^99^100^101^^^84^114^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^e.invoke_constructor (  ReflectUtils.getSignature ( constructor )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[buglab_swap_variables]^e.invoke_constructor ( constructor, ReflectUtils.getSignature ( declaring )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
