[BugLab_Variable_Misuse]^gen.setTargetClass ( iface ) ;^41^^^^^39^44^gen.setTargetClass ( targetClass ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   Class targetClass Class iface [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  Generator  gen  
[BugLab_Variable_Misuse]^gen.setInterface ( targetClass ) ;^42^^^^^39^44^gen.setInterface ( iface ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   Class targetClass Class iface [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  Generator  gen  
[BugLab_Variable_Misuse]^this.iface = targetClass;^59^^^^^58^60^this.iface = iface;^[CLASS] ConstructorDelegate Generator  [METHOD] setInterface [RETURN_TYPE] void   Class iface [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^this.targetClass = iface;^63^^^^^62^64^this.targetClass = targetClass;^[CLASS] ConstructorDelegate Generator  [METHOD] setTargetClass [RETURN_TYPE] void   Class targetClass [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^setNamePrefix ( iface.getName (  )  ) ;^67^^^^^66^70^setNamePrefix ( targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = targetClass.newInstance ( iface.getName (  ) , KEY_FACTORY.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = iface.newInstance ( KEY_FACTORY.getName (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^return iface.getClassLoader (  ) ;^73^^^^^72^74^return targetClass.getClassLoader (  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^setNamePrefix ( iface.getName (  )  ) ;^77^^^^^62^92^setNamePrefix ( targetClass.getName (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^final Method newInstance = ReflectUtils.findNewInstance ( targetClass ) ;^79^^^^^64^94^final Method newInstance = ReflectUtils.findNewInstance ( iface ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( iface )  )  {^80^^^^^65^95^if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( targetClass )  )  {^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^constructor = iface.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^constructor = newInstance.getDeclaredConstructor ( targetClass.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , declaring,^91^92^93^94^^76^106^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , CONSTRUCTOR_DELEGATE,^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^new Type[]{ Type.getType ( targetClass )  }, Constants.SOURCE_FILE ) ;^95^96^^^^80^110^new Type[]{ Type.getType ( iface )  }, Constants.SOURCE_FILE ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^CodeEmitter e = newInstance.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( ce ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^99^100^101^^^84^114^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^e.new_instance ( CONSTRUCTOR_DELEGATE ) ;^102^^^^^87^117^e.new_instance ( declaring ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^e.invoke_constructor ( CONSTRUCTOR_DELEGATE, ReflectUtils.getSignature ( constructor )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^e.invoke_constructor ( constructor, ReflectUtils.getSignature ( declaring )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  ConstructorKey  KEY_FACTORY  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( targetClass ) ;^112^^^^^111^113^return ReflectUtils.newInstance ( type ) ;^[CLASS] ConstructorDelegate Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Type  CONSTRUCTOR_DELEGATE  declaring  Class  iface  targetClass  type  boolean  ConstructorKey  KEY_FACTORY  Source  SOURCE  
[BugLab_Variable_Misuse]^this.iface = targetClass;^59^^^^^58^60^this.iface = iface;^[CLASS] Generator  [METHOD] setInterface [RETURN_TYPE] void   Class iface [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^this.targetClass = iface;^63^^^^^62^64^this.targetClass = targetClass;^[CLASS] Generator  [METHOD] setTargetClass [RETURN_TYPE] void   Class targetClass [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^setNamePrefix ( iface.getName (  )  ) ;^67^^^^^66^70^setNamePrefix ( targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = targetClass.newInstance ( iface.getName (  ) , KEY_FACTORY.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = KEY_FACTORY.newInstance ( targetClass.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = iface.newInstance ( KEY_FACTORY.getName (  ) , targetClass.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , iface.getName (  )  ) ;^68^^^^^66^70^Object key = KEY_FACTORY.newInstance ( iface.getName (  ) , targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] ConstructorDelegate   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  Object  key  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^return iface.getClassLoader (  ) ;^73^^^^^72^74^return targetClass.getClassLoader (  ) ;^[CLASS] Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Type  CONSTRUCTOR_DELEGATE  Class  iface  targetClass  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^setNamePrefix ( iface.getName (  )  ) ;^77^^^^^62^92^setNamePrefix ( targetClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^final Method newInstance = ReflectUtils.findNewInstance ( targetClass ) ;^79^^^^^64^94^final Method newInstance = ReflectUtils.findNewInstance ( iface ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( iface )  )  {^80^^^^^65^95^if  ( !newInstance.getReturnType (  ) .isAssignableFrom ( targetClass )  )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^constructor = iface.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^constructor = newInstance.getDeclaredConstructor ( targetClass.getParameterTypes (  )  ) ;^85^^^^^70^100^constructor = targetClass.getDeclaredConstructor ( newInstance.getParameterTypes (  )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , declaring,^91^92^93^94^^76^106^ce.begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, getClassName (  ) , CONSTRUCTOR_DELEGATE,^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^new Type[]{ Type.getType ( targetClass )  }, Constants.SOURCE_FILE ) ;^95^96^^^^80^110^new Type[]{ Type.getType ( iface )  }, Constants.SOURCE_FILE ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^CodeEmitter e = newInstance.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( ce ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^99^100^101^^^84^114^CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, ReflectUtils.getSignature ( newInstance ) , ReflectUtils.getExceptionTypes ( newInstance )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^e.new_instance ( CONSTRUCTOR_DELEGATE ) ;^102^^^^^87^117^e.new_instance ( declaring ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^e.invoke_constructor ( CONSTRUCTOR_DELEGATE, ReflectUtils.getSignature ( constructor )  ) ;^105^^^^^90^120^e.invoke_constructor ( declaring, ReflectUtils.getSignature ( constructor )  ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  Type  CONSTRUCTOR_DELEGATE  declaring  boolean  Constructor  constructor  ClassEmitter  ce  Class  iface  targetClass  ClassVisitor  v  Method  newInstance  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( targetClass ) ;^112^^^^^111^113^return ReflectUtils.newInstance ( type ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Type  CONSTRUCTOR_DELEGATE  declaring  Class  iface  targetClass  type  boolean  Source  SOURCE  
