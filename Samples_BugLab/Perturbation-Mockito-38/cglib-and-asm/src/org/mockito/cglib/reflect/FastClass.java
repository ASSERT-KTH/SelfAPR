[BugLab_Argument_Swapping]^new FastClassEmitter ( type, getClassName (  ) , v ) ;^73^^^^^72^74^new FastClassEmitter ( v, getClassName (  ) , type ) ;^[CLASS] FastClass Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class  type  ClassVisitor  v  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( type, new Class[]{ Class.type }, new Object[]{ this.type } ) ;^77^78^79^^^76^80^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[CLASS] FastClass Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  Source  SOURCE  boolean  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ type } ) ;^77^78^79^^^76^80^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[CLASS] FastClass Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  Source  SOURCE  boolean  
[BugLab_Argument_Swapping]^return ReflectUtils.newInstance ( this.type, new Class[]{ Class.class }, new Object[]{ type } ) ;^77^78^79^^^76^80^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[CLASS] FastClass Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  Source  SOURCE  boolean  
[BugLab_Argument_Swapping]^return invoke ( getIndex ( args, parameterTypes ) , obj, name ) ;^88^^^^^87^89^return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[CLASS] FastClass Generator  [METHOD] invoke [RETURN_TYPE] Object   String name Class[] parameterTypes Object obj Object[] args [VARIABLES] Class[]  parameterTypes  boolean  Class  type  Object  obj  String  name  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return invoke ( getIndex ( name, args ) , obj, parameterTypes ) ;^88^^^^^87^89^return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[CLASS] FastClass Generator  [METHOD] invoke [RETURN_TYPE] Object   String name Class[] parameterTypes Object obj Object[] args [VARIABLES] Class[]  parameterTypes  boolean  Class  type  Object  obj  String  name  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return invoke ( getIndex ( obj, parameterTypes ) , name, args ) ;^88^^^^^87^89^return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[CLASS] FastClass Generator  [METHOD] invoke [RETURN_TYPE] Object   String name Class[] parameterTypes Object obj Object[] args [VARIABLES] Class[]  parameterTypes  boolean  Class  type  Object  obj  String  name  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return invoke ( getIndex ( name, parameterTypes ) , args, obj ) ;^88^^^^^87^89^return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[CLASS] FastClass Generator  [METHOD] invoke [RETURN_TYPE] Object   String name Class[] parameterTypes Object obj Object[] args [VARIABLES] Class[]  parameterTypes  boolean  Class  type  Object  obj  String  name  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return invoke ( getIndex ( parameterTypes, name ) , obj, args ) ;^88^^^^^87^89^return invoke ( getIndex ( name, parameterTypes ) , obj, args ) ;^[CLASS] FastClass Generator  [METHOD] invoke [RETURN_TYPE] Object   String name Class[] parameterTypes Object obj Object[] args [VARIABLES] Class[]  parameterTypes  boolean  Class  type  Object  obj  String  name  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return newInstance ( getIndex ( args ) , parameterTypes ) ;^96^^^^^95^97^return newInstance ( getIndex ( parameterTypes ) , args ) ;^[CLASS] FastClass Generator  [METHOD] newInstance [RETURN_TYPE] Object   Class[] parameterTypes Object[] args [VARIABLES] Class  type  Class[]  parameterTypes  boolean  Source  SOURCE  Object[]  args  
[BugLab_Argument_Swapping]^return getMethod ( type.getMethod ( parameterTypes, name )  ) ;^109^^^^^107^113^return getMethod ( type.getMethod ( name, parameterTypes )  ) ;^[CLASS] FastClass Generator  [METHOD] getMethod [RETURN_TYPE] FastMethod   String name Class[] parameterTypes [VARIABLES] Class  type  String  name  Class[]  parameterTypes  boolean  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^return getMethod ( parameterTypes.getMethod ( name, type )  ) ;^109^^^^^107^113^return getMethod ( type.getMethod ( name, parameterTypes )  ) ;^[CLASS] FastClass Generator  [METHOD] getMethod [RETURN_TYPE] FastMethod   String name Class[] parameterTypes [VARIABLES] Class  type  String  name  Class[]  parameterTypes  boolean  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^return getMethod ( name.getMethod ( type, parameterTypes )  ) ;^109^^^^^107^113^return getMethod ( type.getMethod ( name, parameterTypes )  ) ;^[CLASS] FastClass Generator  [METHOD] getMethod [RETURN_TYPE] FastMethod   String name Class[] parameterTypes [VARIABLES] Class  type  String  name  Class[]  parameterTypes  boolean  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Argument_Swapping]^return getConstructor ( parameterTypes.getConstructor ( type )  ) ;^117^^^^^115^121^return getConstructor ( type.getConstructor ( parameterTypes )  ) ;^[CLASS] FastClass Generator  [METHOD] getConstructor [RETURN_TYPE] FastConstructor   Class[] parameterTypes [VARIABLES] Class  type  Class[]  parameterTypes  boolean  Source  SOURCE  NoSuchMethodException  e  
[BugLab_Wrong_Operator]^if  ( o == null && ! ( o instanceof FastClass )  )  {^140^^^^^139^144^if  ( o == null || ! ( o instanceof FastClass )  )  {^[CLASS] FastClass Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Class  type  Object  o  boolean  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( o != null || ! ( o instanceof FastClass )  )  {^140^^^^^139^144^if  ( o == null || ! ( o instanceof FastClass )  )  {^[CLASS] FastClass Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Class  type  Object  o  boolean  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( o == null || ! ( o  >>  FastClass )  )  {^140^^^^^139^144^if  ( o == null || ! ( o instanceof FastClass )  )  {^[CLASS] FastClass Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Class  type  Object  o  boolean  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^141^^^^^139^144^return false;^[CLASS] FastClass Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Class  type  Object  o  boolean  Source  SOURCE  
[BugLab_Argument_Swapping]^for  ( parameterTypes.lengthnt i = 0; i < i; i++ )  {^197^^^^^193^202^for  ( int i = 0; i < parameterTypes.length; i++ )  {^[CLASS] FastClass Generator  [METHOD] getSignatureWithoutReturnType [RETURN_TYPE] String   String name Class[] parameterTypes [VARIABLES] StringBuffer  sb  Class[]  parameterTypes  boolean  Class  type  String  name  Source  SOURCE  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == parameterTypes.length; i++ )  {^197^^^^^193^202^for  ( int i = 0; i < parameterTypes.length; i++ )  {^[CLASS] FastClass Generator  [METHOD] getSignatureWithoutReturnType [RETURN_TYPE] String   String name Class[] parameterTypes [VARIABLES] StringBuffer  sb  Class[]  parameterTypes  boolean  Class  type  String  name  Source  SOURCE  int  i  
[BugLab_Wrong_Literal]^for  ( int i = ; i < parameterTypes.length; i++ )  {^197^^^^^193^202^for  ( int i = 0; i < parameterTypes.length; i++ )  {^[CLASS] FastClass Generator  [METHOD] getSignatureWithoutReturnType [RETURN_TYPE] String   String name Class[] parameterTypes [VARIABLES] StringBuffer  sb  Class[]  parameterTypes  boolean  Class  type  String  name  Source  SOURCE  int  i  
[BugLab_Argument_Swapping]^new FastClassEmitter ( type, getClassName (  ) , v ) ;^73^^^^^72^74^new FastClassEmitter ( v, getClassName (  ) , type ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] Class  type  ClassVisitor  v  boolean  Source  SOURCE  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( type, new Class[]{ Class.type }, new Object[]{ this.type } ) ;^77^78^79^^^76^80^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  Source  SOURCE  boolean  
[BugLab_Variable_Misuse]^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ type } ) ;^77^78^79^^^76^80^return ReflectUtils.newInstance ( type, new Class[]{ Class.class }, new Object[]{ this.type } ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  Source  SOURCE  boolean  
