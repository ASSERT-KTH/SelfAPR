[BugLab_Wrong_Literal]^public static final int REQUIRE_GETTER = 0;^40^^^^^35^45^public static final int REQUIRE_GETTER = 1;^[CLASS] BeanMap Generator   [VARIABLES] 
[BugLab_Wrong_Literal]^public static final int REQUIRE_SETTER = ;^47^^^^^42^52^public static final int REQUIRE_SETTER = 2;^[CLASS] BeanMap Generator   [VARIABLES] 
[BugLab_Wrong_Operator]^if  ( bean == null ) beanClass = bean.getClass (  ) ;^89^90^^^^87^91^if  ( bean != null ) beanClass = bean.getClass (  ) ;^[CLASS] BeanMap Generator  [METHOD] setBean [RETURN_TYPE] void   Object bean [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^this.beanClass = type;^99^^^^^98^100^this.beanClass = beanClass;^[CLASS] BeanMap Generator  [METHOD] setBeanClass [RETURN_TYPE] void   Class beanClass [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^this.require = REQUIRE_SETTER;^108^^^^^107^109^this.require = require;^[CLASS] BeanMap Generator  [METHOD] setRequire [RETURN_TYPE] void   int require [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return type.getClassLoader (  ) ;^112^^^^^111^113^return beanClass.getClassLoader (  ) ;^[CLASS] BeanMap Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( type == null ) throw new IllegalArgumentException  (" ")  ;^120^121^^^^119^124^if  ( beanClass == null ) throw new IllegalArgumentException  (" ")  ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( beanClass != null ) throw new IllegalArgumentException  (" ")  ;^120^121^^^^119^124^if  ( beanClass == null ) throw new IllegalArgumentException  (" ")  ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^setNamePrefix ( type.getName (  )  ) ;^122^^^^^119^124^setNamePrefix ( beanClass.getName (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( type, require )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, REQUIRE_SETTER )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return  ( BeanMap ) super.create ( require.newInstance ( beanClass, KEY_FACTORY )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return  ( BeanMap ) super.create ( beanClass.newInstance ( KEY_FACTORY, require )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( require, beanClass )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] BeanMap Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^new BeanMapEmitter ( v, getClassName (  ) , type, require ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] BeanMap Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^new BeanMapEmitter ( v, getClassName (  ) , beanClass, REQUIRE_SETTER ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] BeanMap Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^new BeanMapEmitter ( require, getClassName (  ) , beanClass, v ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] BeanMap Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^new BeanMapEmitter ( beanClass, getClassName (  ) , v, require ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] BeanMap Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return  (  ( BeanMap ) ReflectUtils.newInstance ( beanClass )  ) .newInstance ( bean ) ;^131^^^^^130^132^return  (  ( BeanMap ) ReflectUtils.newInstance ( type )  ) .newInstance ( bean ) ;^[CLASS] BeanMap Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return  (  ( BeanMap ) ReflectUtils.newInstance ( bean )  ) .newInstance ( type ) ;^131^^^^^130^132^return  (  ( BeanMap ) ReflectUtils.newInstance ( type )  ) .newInstance ( bean ) ;^[CLASS] BeanMap Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return  (  ( BeanMap ) instance ) .newInstance ( instance ) ;^135^^^^^134^136^return  (  ( BeanMap ) instance ) .newInstance ( bean ) ;^[CLASS] BeanMap Generator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Object  bean  instance  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return get ( instance, key ) ;^164^^^^^163^165^return get ( bean, key ) ;^[CLASS] BeanMap Generator  [METHOD] get [RETURN_TYPE] Object   Object key [VARIABLES] Object  bean  instance  key  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return get ( key, bean ) ;^164^^^^^163^165^return get ( bean, key ) ;^[CLASS] BeanMap Generator  [METHOD] get [RETURN_TYPE] Object   Object key [VARIABLES] Object  bean  instance  key  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return get ( bean, instance ) ;^164^^^^^163^165^return get ( bean, key ) ;^[CLASS] BeanMap Generator  [METHOD] get [RETURN_TYPE] Object   Object key [VARIABLES] Object  bean  instance  key  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return put ( bean, instance, value ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return put ( bean, value, key ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return put ( value, key, bean ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^return put ( key, bean, value ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return put ( bean, value, value ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return put ( bean, key, key ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return put ( value, key, value ) ;^168^^^^^167^169^return put ( bean, key, value ) ;^[CLASS] BeanMap Generator  [METHOD] put [RETURN_TYPE] Object   Object key Object value [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return value;^206^^^^^205^207^return bean;^[CLASS] BeanMap Generator  [METHOD] getBean [RETURN_TYPE] Object   [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return valueSet (  ) .contains ( key ) ;^214^^^^^213^215^return keySet (  ) .contains ( key ) ;^[CLASS] BeanMap Generator  [METHOD] containsKey [RETURN_TYPE] boolean   Object key [VARIABLES] Object  bean  instance  key  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  (  (  ( key == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  (  (  ( keyalue == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^if  (  (  ( v == null )  &&  ( value == null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^if  (  (  ( valuealue == null )  &&  ( v == null )  )  || v.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  (  (  ( value == null )  &&  ( v == null )  )  && value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  (  (  ( value == null )  ||  ( v == null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  (  (  ( value != null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  (  (  ( value == null )  &&  ( v != null )  )  || value.equals ( v )  ) return true;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return false;^220^221^^^^217^224^if  (  (  ( value == null )  &&  ( v == null )  )  || value.equals ( v )  ) return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return false;^221^^^^^217^224^return true;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^223^^^^^217^224^return false;^[CLASS] BeanMap Generator  [METHOD] containsValue [RETURN_TYPE] boolean   Object value [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^return size (  )  >= 0;^231^^^^^230^232^return size (  )  == 0;^[CLASS] BeanMap Generator  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  bean  instance  key  v  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return size (  )  == 1;^231^^^^^230^232^return size (  )  == 0;^[CLASS] BeanMap Generator  [METHOD] isEmpty [RETURN_TYPE] boolean   [VARIABLES] Object  bean  instance  key  v  value  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^put ( t, key.get ( key )  ) ;^241^^^^^238^243^put ( key, t.get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] putAll [RETURN_TYPE] void   Map t [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  t  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^put ( value, t.get ( key )  ) ;^241^^^^^238^243^put ( key, t.get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] putAll [RETURN_TYPE] void   Map t [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  t  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^put ( v, t.get ( key )  ) ;^241^^^^^238^243^put ( key, t.get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] putAll [RETURN_TYPE] void   Map t [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  v  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  t  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( o == null && ! ( o instanceof Map )  )  {^246^^^^^245^265^if  ( o == null || ! ( o instanceof Map )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( o != null || ! ( o instanceof Map )  )  {^246^^^^^245^265^if  ( o == null || ! ( o instanceof Map )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( o == null || ! ( o  >=  Map )  )  {^246^^^^^245^265^if  ( o == null || ! ( o instanceof Map )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^247^^^^^245^265^return false;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( size (  )  == other.size (  )  )  {^250^^^^^245^265^if  ( size (  )  != other.size (  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^251^^^^^245^265^return false;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( !other.containsKey ( v1 )  )  {^255^^^^^245^265^if  ( !other.containsKey ( key )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^256^^^^^245^265^return false;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( ! (  ( value == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( ! (  ( v1 == null )  ? value == null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^if  ( ! (  ( v2 == null )  ? v1 == null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( ! (  ( v1 != null )  ? v2 == null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( ! (  ( v1 == null )  ? v2 != null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return true;^261^^^^^245^265^return false;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^for  ( Iterator it = v1Set (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^253^^^^^245^265^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^for  ( Iterator key = itSet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^253^^^^^245^265^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( ! (  ( v == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^260^^^^^245^265^if  ( ! (  ( v1 == null )  ? v2 == null : v1.equals ( v2 )  )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object v1 = get ( value ) ;^258^^^^^245^265^Object v1 = get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object v2 = other.get ( value ) ;^259^^^^^245^265^Object v2 = other.get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Argument_Swapping]^Object v2 = key.get ( other ) ;^259^^^^^245^265^Object v2 = other.get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^if  ( !other.containsKey ( value )  )  {^255^^^^^245^265^if  ( !other.containsKey ( key )  )  {^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object v1 = get ( v2 ) ;^258^^^^^245^265^Object v1 = get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object v2 = other.get ( v1 ) ;^259^^^^^245^265^Object v2 = other.get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object v2 = other.get ( v2 ) ;^259^^^^^245^265^Object v2 = other.get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^return false;^264^^^^^245^265^return true;^[CLASS] BeanMap Generator  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  Map  other  int  REQUIRE_GETTER  REQUIRE_SETTER  require  Source  SOURCE  
[BugLab_Wrong_Literal]^int code = REQUIRE_GETTER;^268^^^^^267^276^int code = 0;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^for  ( Iterator it = valueSet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^269^^^^^267^276^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Argument_Swapping]^for  ( Iterator key = itSet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^269^^^^^267^276^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^code +=  (  ( v2 == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( v2 == null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Argument_Swapping]^code +=  (  ( value == null )  ? 0 : key.hashCode (  )  )  ^ (  ( key == null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Wrong_Operator]^code +=  (  ( key != null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Wrong_Operator]^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value != null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Wrong_Literal]^code +=  (  ( key == null )  ? REQUIRE_GETTER : key.hashCode (  )  )  ^ (  ( value == null )  ? REQUIRE_GETTER : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Wrong_Literal]^code +=  (  ( key == null )  ? 1 : key.hashCode (  )  )  ^ (  ( value == null )  ? 1 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object value = get ( v2 ) ;^271^^^^^267^276^Object value = get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^code +=  (  ( value == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^272^273^^^^267^276^code +=  (  ( key == null )  ? 0 : key.hashCode (  )  )  ^ (  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^Object value = get ( value ) ;^271^^^^^267^276^Object value = get ( key ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^(  ( v2 == null )  ? 0 : value.hashCode (  )  ) ;^273^^^^^267^276^(  ( value == null )  ? 0 : value.hashCode (  )  ) ;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^return require;^275^^^^^267^276^return code;^[CLASS] BeanMap Generator  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^for  ( Iterator it = v1Set (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^281^^^^^279^286^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] boolean  HashMap  copy  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Argument_Swapping]^for  ( Iterator key = itSet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^281^^^^^279^286^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] boolean  HashMap  copy  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^copy.put ( v1, get ( key )  ) ;^283^^^^^279^286^copy.put ( key, get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] boolean  HashMap  copy  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^copy.put ( value, get ( key )  ) ;^283^^^^^279^286^copy.put ( key, get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] entrySet [RETURN_TYPE] Set   [VARIABLES] boolean  HashMap  copy  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^for  ( Iterator it = v1Set (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^304^^^^^300^315^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Argument_Swapping]^for  ( Iterator key = itSet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^304^^^^^300^315^for  ( Iterator it = keySet (  ) .iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^sb.append ( get ( value )  ) ;^308^^^^^300^315^sb.append ( get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^sb.append ( get ( v1 )  ) ;^308^^^^^300^315^sb.append ( get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^sb.append ( value ) ;^306^^^^^300^315^sb.append ( key ) ;^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Variable_Misuse]^sb.append ( get ( v2 )  ) ;^308^^^^^300^315^sb.append ( get ( key )  ) ;^[CLASS] BeanMap Generator  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  sb  boolean  Iterator  it  Object  bean  instance  key  o  v  v1  v2  value  Class  beanClass  type  BeanMapKey  KEY_FACTORY  int  REQUIRE_GETTER  REQUIRE_SETTER  code  require  Source  SOURCE  
[BugLab_Wrong_Operator]^if  ( bean == null ) beanClass = bean.getClass (  ) ;^89^90^^^^87^91^if  ( bean != null ) beanClass = bean.getClass (  ) ;^[CLASS] Generator  [METHOD] setBean [RETURN_TYPE] void   Object bean [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^this.beanClass = type;^99^^^^^98^100^this.beanClass = beanClass;^[CLASS] Generator  [METHOD] setBeanClass [RETURN_TYPE] void   Class beanClass [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^return type.getClassLoader (  ) ;^112^^^^^111^113^return beanClass.getClassLoader (  ) ;^[CLASS] Generator  [METHOD] getDefaultClassLoader [RETURN_TYPE] ClassLoader   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^if  ( type == null ) throw new IllegalArgumentException  (" ")  ;^120^121^^^^119^124^if  ( beanClass == null ) throw new IllegalArgumentException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Wrong_Operator]^if  ( beanClass != null ) throw new IllegalArgumentException  (" ")  ;^120^121^^^^119^124^if  ( beanClass == null ) throw new IllegalArgumentException  (" ")  ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^setNamePrefix ( type.getName (  )  ) ;^122^^^^^119^124^setNamePrefix ( beanClass.getName (  )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( type, require )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Argument_Swapping]^return  ( BeanMap ) super.create ( require.newInstance ( beanClass, KEY_FACTORY )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Argument_Swapping]^return  ( BeanMap ) super.create ( beanClass.newInstance ( KEY_FACTORY, require )  ) ;^123^^^^^119^124^return  ( BeanMap ) super.create ( KEY_FACTORY.newInstance ( beanClass, require )  ) ;^[CLASS] Generator  [METHOD] create [RETURN_TYPE] BeanMap   [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^new BeanMapEmitter ( v, getClassName (  ) , type, require ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Argument_Swapping]^new BeanMapEmitter ( beanClass, getClassName (  ) , v, require ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Argument_Swapping]^new BeanMapEmitter ( require, getClassName (  ) , beanClass, v ) ;^127^^^^^126^128^new BeanMapEmitter ( v, getClassName (  ) , beanClass, require ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] boolean  Object  bean  Class  beanClass  type  ClassVisitor  v  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^return  (  ( BeanMap ) ReflectUtils.newInstance ( beanClass )  ) .newInstance ( bean ) ;^131^^^^^130^132^return  (  ( BeanMap ) ReflectUtils.newInstance ( type )  ) .newInstance ( bean ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Argument_Swapping]^return  (  ( BeanMap ) ReflectUtils.newInstance ( bean )  ) .newInstance ( type ) ;^131^^^^^130^132^return  (  ( BeanMap ) ReflectUtils.newInstance ( type )  ) .newInstance ( bean ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Object  bean  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
[BugLab_Variable_Misuse]^return  (  ( BeanMap ) instance ) .newInstance ( instance ) ;^135^^^^^134^136^return  (  ( BeanMap ) instance ) .newInstance ( bean ) ;^[CLASS] Generator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] Object  bean  instance  Class  beanClass  type  boolean  BeanMapKey  KEY_FACTORY  Source  SOURCE  int  require  
