[buglab_swap_variables]^for  ( Iterator it = method.iterator (  ) ; it.hasNext (  ) ; )  {^38^^^^^37^56^for  ( Iterator it = methods.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^Signature impl = method.getImplSignature ( context ) ;^40^^^^^37^56^Signature impl = context.getImplSignature ( method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^CodeEmitter e = method.beginMethod ( ce, context ) ;^43^^^^^37^56^CodeEmitter e = context.beginMethod ( ce, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^CodeEmitter e = ce.beginMethod ( context, method ) ;^43^^^^^37^56^CodeEmitter e = context.beginMethod ( ce, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^CodeEmitter e = context.beginMethod (  method ) ;^43^^^^^37^56^CodeEmitter e = context.beginMethod ( ce, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^CodeEmitter e = context.beginMethod ( method, ce ) ;^43^^^^^37^56^CodeEmitter e = context.beginMethod ( ce, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^CodeEmitter e = context.beginMethod ( ce ) ;^43^^^^^37^56^CodeEmitter e = context.beginMethod ( ce, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, METHOD.getName (  ) , impl, null ) ;^41^^^^^37^56^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, impl.getName (  ) , METHOD, null ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC.getName (  ) , METHOD, null ) ;^41^^^^^37^56^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, impl.getName (  ) , METHOD, null ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, impl.getName (  ) ,  null ) ;^41^^^^^37^56^ce.declare_field ( Constants.PRIVATE_FINAL_STATIC, impl.getName (  ) , METHOD, null ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^context.emitCallback ( e, method.getIndex ( context )  ) ;^45^^^^^37^56^context.emitCallback ( e, context.getIndex ( method )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^context.emitCallback ( e.getIndex ( method )  ) ;^45^^^^^37^56^context.emitCallback ( e, context.getIndex ( method )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^context.emitCallback ( context, e.getIndex ( method )  ) ;^45^^^^^37^56^context.emitCallback ( e, context.getIndex ( method )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^context.emitCallback (  context.getIndex ( method )  ) ;^45^^^^^37^56^context.emitCallback ( e, context.getIndex ( method )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^context.emitCallback ( method, context.getIndex ( e )  ) ;^45^^^^^37^56^context.emitCallback ( e, context.getIndex ( method )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^e.invoke_interface ( INVOKE, INVOCATION_HANDLER ) ;^49^^^^^37^56^e.invoke_interface ( INVOCATION_HANDLER, INVOKE ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^e.invoke_interface (  INVOKE ) ;^49^^^^^37^56^e.invoke_interface ( INVOCATION_HANDLER, INVOKE ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^e.invoke_interface ( INVOCATION_HANDLER ) ;^49^^^^^37^56^e.invoke_interface ( INVOCATION_HANDLER, INVOKE ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( handler, e, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable (  handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e,  method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( method, handler, e.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e, handler.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e, handler, UNDECLARED_THROWABLE_EXCEPTION.getExceptionTypes (  ) , method ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  )  ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e, UNDECLARED_THROWABLE_EXCEPTION, method.getExceptionTypes (  ) , handler ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.wrap_undeclared_throwable ( e, method, handler.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^53^^^^^37^56^EmitUtils.wrap_undeclared_throwable ( e, handler, method.getExceptionTypes (  ) , UNDECLARED_THROWABLE_EXCEPTION ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  ClassEmitter  ce  Iterator  it  Block  handler  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.load_method ( method, e ) ;^61^^^^^58^64^EmitUtils.load_method ( e, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generateStatic [RETURN_TYPE] void   CodeEmitter e Context context List methods [VARIABLES] CodeEmitter  e  Context  context  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  Iterator  it  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.load_method (  method ) ;^61^^^^^58^64^EmitUtils.load_method ( e, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generateStatic [RETURN_TYPE] void   CodeEmitter e Context context List methods [VARIABLES] CodeEmitter  e  Context  context  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  Iterator  it  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^EmitUtils.load_method ( e ) ;^61^^^^^58^64^EmitUtils.load_method ( e, method ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generateStatic [RETURN_TYPE] void   CodeEmitter e Context context List methods [VARIABLES] CodeEmitter  e  Context  context  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  Iterator  it  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
[buglab_swap_variables]^e.putfield ( method.getImplSignature ( context ) .getName (  )  ) ;^62^^^^^58^64^e.putfield ( context.getImplSignature ( method ) .getName (  )  ) ;^[CLASS] InvocationHandlerGenerator  [METHOD] generateStatic [RETURN_TYPE] void   CodeEmitter e Context context List methods [VARIABLES] CodeEmitter  e  Context  context  Type  INVOCATION_HANDLER  METHOD  UNDECLARED_THROWABLE_EXCEPTION  boolean  Signature  INVOKE  impl  Iterator  it  List  methods  MethodInfo  method  InvocationHandlerGenerator  INSTANCE  
