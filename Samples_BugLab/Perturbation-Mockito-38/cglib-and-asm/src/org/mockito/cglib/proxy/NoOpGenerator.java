[buglab_swap_variables]^CodeEmitter e = EmitUtils.begin_method ( method, ce ) ;^33^^^^^28^41^CodeEmitter e = EmitUtils.begin_method ( ce, method ) ;^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
[buglab_swap_variables]^CodeEmitter e = EmitUtils.begin_method (  method ) ;^33^^^^^28^41^CodeEmitter e = EmitUtils.begin_method ( ce, method ) ;^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
[buglab_swap_variables]^CodeEmitter e = EmitUtils.begin_method ( ce ) ;^33^^^^^28^41^CodeEmitter e = EmitUtils.begin_method ( ce, method ) ;^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
[buglab_swap_variables]^for  ( Iterator methods = it.iterator (  ) ; it.hasNext (  ) ; )  {^29^^^^^28^41^for  ( Iterator it = methods.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
[buglab_swap_variables]^for  ( Iterator it = methodss.iterator (  ) ; it.hasNext (  ) ; )  {^29^^^^^28^41^for  ( Iterator it = methods.iterator (  ) ; it.hasNext (  ) ; )  {^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
[buglab_swap_variables]^if  ( TypeUtils.isProtected ( method.getOriginalModifiers ( context )  )  && TypeUtils.isPublic ( method.getModifiers (  )  )  )  {^31^32^^^^28^41^if  ( TypeUtils.isProtected ( context.getOriginalModifiers ( method )  )  && TypeUtils.isPublic ( method.getModifiers (  )  )  )  {^[CLASS] NoOpGenerator  [METHOD] generate [RETURN_TYPE] void   ClassEmitter ce Context context List methods [VARIABLES] Context  context  CodeEmitter  e  boolean  NoOpGenerator  INSTANCE  ClassEmitter  ce  Iterator  it  List  methods  MethodInfo  method  
