[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", Constants.TYPE_OBJECT_ARRAY, new Type[]{ MIXIN } ) ;^35^36^^^^35^36^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", MIXIN, new Type[]{ Constants.TYPE_OBJECT_ARRAY } ) ;^[CLASS] MixinEmitter   [VARIABLES] 
[buglab_swap_variables]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance",  new Type[]{ Constants.TYPE_OBJECT_ARRAY } ) ;^35^36^^^^35^36^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", MIXIN, new Type[]{ Constants.TYPE_OBJECT_ARRAY } ) ;^[CLASS] MixinEmitter   [VARIABLES] 
[buglab_swap_variables]^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, MIXIN, className,^41^42^43^44^^26^56^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className, MIXIN,^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC,  MIXIN,^41^42^43^44^^26^56^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className, MIXIN,^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className,^41^42^43^44^^26^56^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className, MIXIN,^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^if  ( method.add ( MethodWrapper.create ( uniques[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^if  ( methods.add ( MethodWrapper.create ( unique[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( classesnt i = 0; i < i.length; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( jnt i = 0; j < methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( methods.lengthnt j = 0; j < i; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^if  ( unique.add ( MethodWrapper.create ( method[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^e.aaload (  ( i != null )  ? route[i] : route ) ;^70^^^^^55^85^e.aaload (  ( route != null )  ? route[i] : i ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( int j = 0; j < method.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( int j = 0; j < methods.lengths.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[buglab_swap_variables]^for  ( int methods.length = 0; j < j; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
