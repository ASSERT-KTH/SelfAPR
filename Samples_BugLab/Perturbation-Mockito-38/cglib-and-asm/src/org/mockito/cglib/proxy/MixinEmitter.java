[BugLab_Argument_Swapping]^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", Constants.TYPE_OBJECT_ARRAY, new Type[]{ MIXIN } ) ;^35^36^^^^35^36^private static final Signature NEW_INSTANCE = new Signature ( "newInstance", MIXIN, new Type[]{ Constants.TYPE_OBJECT_ARRAY } ) ;^[CLASS] MixinEmitter   [VARIABLES] 
[BugLab_Variable_Misuse]^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, FIELD_NAME, MIXIN,^41^42^43^44^^26^56^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className, MIXIN,^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, MIXIN, className,^41^42^43^44^^26^56^begin_class ( Constants.V1_2, Constants.ACC_PUBLIC, className, MIXIN,^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^EmitUtils.factory_method ( this, CSTRUCT_OBJECT_ARRAY ) ;^48^^^^^33^63^EmitUtils.factory_method ( this, NEW_INSTANCE ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^declare_field ( Constants.ACC_PRIVATE, className, Constants.TYPE_OBJECT_ARRAY, null ) ;^50^^^^^35^65^declare_field ( Constants.ACC_PRIVATE, FIELD_NAME, Constants.TYPE_OBJECT_ARRAY, null ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Literal]^e.load_arg ( i ) ;^56^^^^^41^71^e.load_arg ( 0 ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^e.putfield ( className ) ;^57^^^^^42^72^e.putfield ( FIELD_NAME ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^if  ( methods.add ( MethodWrapper.create ( unique[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^e.getfield ( className ) ;^69^^^^^54^84^e.getfield ( FIELD_NAME ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^e.aaload (  ( route != null )  ? route[i] : j ) ;^70^^^^^55^85^e.aaload (  ( route != null )  ? route[i] : i ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^e.aaload (  ( i != null )  ? route[i] : route ) ;^70^^^^^55^85^e.aaload (  ( route != null )  ? route[i] : i ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Operator]^e.aaload (  ( route == null )  ? route[i] : i ) ;^70^^^^^55^85^e.aaload (  ( route != null )  ? route[i] : i ) ;^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < classes.length; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < j; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^for  ( classes.lengthnt i = 0; i < i; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= classes.length; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > classes.length; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^if  ( unique.add ( MethodWrapper.create ( method[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^for  ( int j = 0; j < methods.length.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^for  ( methodnt j = 0; j < is.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^for  ( int methods.length = 0; j < j; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^if  ( unique.add ( MethodWrapper.create ( methodss[j] )  )  )  {^65^^^^^50^80^if  ( unique.add ( MethodWrapper.create ( methods[j] )  )  )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Argument_Swapping]^for  ( methods.lengthnt j = 0; j < i; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = j; j < methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Literal]^for  ( int i = i; i < classes.length; i++ )  {^62^^^^^47^77^for  ( int i = 0; i < classes.length; i++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < methods.length; j++ )  {^64^^^^^49^79^for  ( int j = 0; j < methods.length; j++ )  {^[CLASS] MixinEmitter  [METHOD] <init> [RETURN_TYPE] Class[],int[])   ClassVisitor v String className Class[] classes int[] route [VARIABLES] CodeEmitter  e  Type  MIXIN  Class[]  classes  Set  unique  boolean  Signature  CSTRUCT_OBJECT_ARRAY  NEW_INSTANCE  int[]  route  MethodInfo  method  String  FIELD_NAME  className  ClassVisitor  v  Method[]  methods  int  i  j  
