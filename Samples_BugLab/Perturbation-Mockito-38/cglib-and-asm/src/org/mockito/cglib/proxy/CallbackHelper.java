[buglab_swap_variables]^Enhancer.getMethods ( methods, interfaces, superclass ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Enhancer.getMethods (  interfaces, methods ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Enhancer.getMethods ( superclass, methods, interfaces ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Enhancer.getMethods ( superclass,  methods ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Enhancer.getMethods ( superclass, interfaces ) ;^35^^^^^32^55^Enhancer.getMethods ( superclass, interfaces, methods ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^if  ( ! ( callback ||  ( isCallback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^43^44^^^^32^55^if  ( ! ( isCallback ||  ( callback instanceof Class )  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^if  ( callbacks > 0 &&  (  ( i.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^if  ( isCallback > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ i )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^indexes.put (  index ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^indexes.put ( callback ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^for  ( sizent i = 0, i = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^for  ( int i = 0 = methods.size (  ) ; i < size; i++ )  {^37^^^^^32^55^for  ( int i = 0, size = methods.size (  ) ; i < size; i++ )  {^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^if  ( i > 0 &&  (  ( isCallback.get ( i - 1 )  instanceof Callback )  ^ callbacks )  ) throw new IllegalStateException  (" ")  ;^45^46^^^^32^55^if  ( i > 0 &&  (  ( callbacks.get ( i - 1 )  instanceof Callback )  ^ isCallback )  ) throw new IllegalStateException  (" ")  ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^indexes.put ( index, callback ) ;^50^^^^^32^55^indexes.put ( callback, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Method method =  ( Method ) i.get ( methods ) ;^38^^^^^32^55^Method method =  ( Method ) methods.get ( i ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^Integer index =  ( Integer ) callback.get ( indexes ) ;^47^^^^^32^55^Integer index =  ( Integer ) indexes.get ( callback ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^methodMap.put (  index ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^methodMap.put ( index, method ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^methodMap.put ( method ) ;^52^^^^^32^55^methodMap.put ( method, index ) ;^[CLASS] CallbackHelper  [METHOD] <init> [RETURN_TYPE] Class[])   Class superclass Class[] interfaces [VARIABLES] Integer  index  Class[]  interfaces  boolean  isCallback  List  callbacks  methods  Class  superclass  Object  callback  Method  method  Map  indexes  methodMap  int  i  size  
[buglab_swap_variables]^return  (  ( Integer ) methodMapMap.get ( method )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
[buglab_swap_variables]^return  (  ( Integer ) method.get ( methodMap )  ) .intValue (  ) ;^83^^^^^81^84^return  (  ( Integer ) methodMap.get ( method )  ) .intValue (  ) ;^[CLASS] CallbackHelper  [METHOD] accept [RETURN_TYPE] int   Method method [VARIABLES] List  callbacks  methods  Method  method  boolean  Map  indexes  methodMap  
