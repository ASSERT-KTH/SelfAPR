[BugLab_Variable_Misuse]^this.a = arrays;^189^^^^^188^191^this.a = a;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] <init> [RETURN_TYPE] Comparator)   Object[] a Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^public ObjectComparer ( Object[] arrays )  { this.a = a; }^200^^^^^195^205^public ObjectComparer ( Object[] a )  { this.a = a; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] <init> [RETURN_TYPE] Object[])   Object[] a [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^gen.setArrays ( a ) ;^68^^^^^66^70^gen.setArrays ( arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] create [RETURN_TYPE] ParallelSorter   Object[] arrays [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  Generator  gen  
[BugLab_Variable_Misuse]^return  (  ( Object[] ) arrays[0] ) .length;^73^^^^^72^74^return  (  ( Object[] ) a[0] ) .length;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] len [RETURN_TYPE] int   [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^return  (  ( Object[] ) a[-1] ) .length;^73^^^^^72^74^return  (  ( Object[] ) a[0] ) .length;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] len [RETURN_TYPE] int   [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^quickSort ( index, index, len (  ) , null ) ;^81^^^^^80^82^quickSort ( index, 0, len (  ) , null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^quickSort ( lo, lo, hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^quickSort ( index, hi, hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^quickSort ( index, lo, lo, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^quickSort ( hi, lo, index, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^quickSort ( lo, index, hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^quickSort ( cmp, 0, len (  ) , index ) ;^100^^^^^99^101^quickSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^quickSort ( index, index, len (  ) , cmp ) ;^100^^^^^99^101^quickSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^chooseComparer ( lo, cmp ) ;^111^^^^^110^113^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^chooseComparer ( cmp, index ) ;^111^^^^^110^113^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Wrong_Operator]^super.quickSort ( lo, hi  ==  1 ) ;^112^^^^^110^113^super.quickSort ( lo, hi - 1 ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^super.quickSort ( lo, hi  ) ;^112^^^^^110^113^super.quickSort ( lo, hi - 1 ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^mergeSort ( index, -1, len (  ) , null ) ;^119^^^^^118^120^mergeSort ( index, 0, len (  ) , null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^mergeSort ( hi, lo, hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^mergeSort ( index, index, hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^mergeSort ( index, lo, index, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^mergeSort ( lo, index, hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^mergeSort ( index, hi, lo, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^mergeSort ( cmp, 0, len (  ) , index ) ;^139^^^^^138^140^mergeSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^chooseComparer ( cmp, index ) ;^150^^^^^149^152^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Wrong_Operator]^super.mergeSort ( lo, hi  >=  1 ) ;^151^^^^^149^152^super.mergeSort ( lo, hi - 1 ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Wrong_Literal]^super.mergeSort ( lo, hi  ) ;^151^^^^^149^152^super.mergeSort ( lo, hi - 1 ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^Object arraysrray = a[index];^155^^^^^154^174^Object array = a[index];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^if  ( type.equals ( Integer.null )  )  {^157^^^^^154^174^if  ( type.equals ( Integer.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Wrong_Operator]^} else if  ( cmp == null )  {^169^^^^^154^174^} else if  ( cmp != null )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Byte.null )  )  {^167^^^^^154^174^} else if  ( type.equals ( Byte.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Double.null )  )  {^161^^^^^154^174^} else if  ( type.equals ( Double.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Short.4 )  )  {^165^^^^^154^174^} else if  ( type.equals ( Short.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Byte.4 )  )  {^167^^^^^154^174^} else if  ( type.equals ( Byte.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Byte.2 )  )  {^167^^^^^154^174^} else if  ( type.equals ( Byte.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Short.this )  )  {^165^^^^^154^174^} else if  ( type.equals ( Short.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Byte.1 )  )  {^167^^^^^154^174^} else if  ( type.equals ( Byte.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Float.null )  )  {^163^^^^^154^174^} else if  ( type.equals ( Float.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Float.2 )  )  {^163^^^^^154^174^} else if  ( type.equals ( Float.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Variable_Misuse]^} else if  ( type.equals ( Byte.3 )  )  {^167^^^^^154^174^} else if  ( type.equals ( Byte.TYPE )  )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[BugLab_Argument_Swapping]^return comparer.compare ( j, i ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^return j.compare ( i, comparer ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^return i.compare ( comparer, j ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return comparer.compare ( i, i ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return cmp.compare ( arrays[i], a[j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^return a.compare ( cmp[i], a[j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return  (  ( Comparable ) arrays[i] ) .compareTo ( a[j] ) ;^202^^^^^201^203^return  (  ( Comparable ) a[i] ) .compareTo ( a[j] ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^public jnt compare ( int i, int j )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^public int compare ( int i, int i )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]   instanceof   a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^long vj = a[i];^216^^^^^215^219^long vi = a[i];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi <= vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi < vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 1 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 0 : -0;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^float vj = a[i];^226^^^^^225^229^float vi = a[i];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^float vi = a[j];^227^^^^^225^229^float vj = a[j];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi != vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi >= vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? -1 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? j : -j;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^double vj = a[i];^236^^^^^235^239^double vi = a[i];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^double vi = a[j];^237^^^^^235^239^double vj = a[j];^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi >= vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi >= vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? -1 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? i : -i;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? j : -j;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]  ^  a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]  ||  a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^this.arrays = a;^268^^^^^267^269^this.arrays = arrays;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] setArrays [RETURN_TYPE] void   Object[] arrays [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return  ( ParallelSorter ) super.create ( ClassesKey.create ( a )  ) ;^272^^^^^271^273^return  ( ParallelSorter ) super.create ( ClassesKey.create ( arrays )  ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] create [RETURN_TYPE] ParallelSorter   [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^if  ( a.length == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^if  ( arrays == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^if  ( arrays.length.length == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^if  ( arrays.length != 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^if  ( arrays.length == i )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < a.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^for  ( arrays.lengthnt i = 0; i < i; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < arrays; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < arrays.length.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= arrays.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < arrays.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < arrays.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^new ParallelSorterEmitter ( arrays, getClassName (  ) , v ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[BugLab_Argument_Swapping]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( arrays )  ) .newInstance ( type ) ;^288^^^^^287^289^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Class  type  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( a ) ;^288^^^^^287^289^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Class  type  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Variable_Misuse]^return  (  ( ParallelSorter ) instance ) .newInstance ( a ) ;^292^^^^^291^293^return  (  ( ParallelSorter ) instance ) .newInstance ( arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] nextInstance [RETURN_TYPE] Object   Object instance [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object  instance  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[BugLab_Argument_Swapping]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]  >  a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[BugLab_Variable_Misuse]^long vj = a[i];^216^^^^^215^219^long vi = a[i];^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Variable_Misuse]^long vi = a[j];^217^^^^^215^219^long vj = a[j];^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Wrong_Operator]^return  ( vi <= vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi >= vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? i : -i;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[BugLab_Variable_Misuse]^float vj = a[i];^226^^^^^225^229^float vi = a[i];^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Variable_Misuse]^float vi = a[j];^227^^^^^225^229^float vj = a[j];^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Wrong_Operator]^return  ( vi != vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi == vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? i :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? j : -j;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 0 : -0;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[BugLab_Variable_Misuse]^double vj = a[i];^236^^^^^235^239^double vi = a[i];^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Argument_Swapping]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Wrong_Operator]^return  ( vi != vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Wrong_Operator]^return  ( vi == vj )  ? 0 :  ( vi >= vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? j :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? j : -j;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Wrong_Literal]^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 2 : -2;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[BugLab_Argument_Swapping]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]  ^  a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[BugLab_Argument_Swapping]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[BugLab_Argument_Swapping]^public int compare ( int i, int a )  { return j[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[BugLab_Wrong_Operator]^public int compare ( int i, int j )  { return a[i]   instanceof   a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[BugLab_Variable_Misuse]^if  ( i == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^if  ( arrays == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^if  ( arrays.length.length == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Wrong_Operator]^if  ( arrays.length != 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Wrong_Literal]^if  ( arrays.length == -1 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^for  ( arrays.lengthnt i = 0; i < i; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < arrays.length.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > arrays.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < arrays.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^new ParallelSorterEmitter ( arrays, getClassName (  ) , v ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[BugLab_Argument_Swapping]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( arrays )  ) .newInstance ( type ) ;^288^^^^^287^289^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  boolean  Source  SOURCE  Object[]  arrays  
