[buglab_swap_variables]^quickSort ( lo, index, hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort (  lo, hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( index, hi, lo, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( index,  hi, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( hi, lo, index, null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( index, lo,  null ) ;^91^^^^^90^92^quickSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( cmp, 0, len (  ) , index ) ;^100^^^^^99^101^quickSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort (  0, len (  ) , cmp ) ;^100^^^^^99^101^quickSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^quickSort ( index, 0, len (  )  ) ;^100^^^^^99^101^quickSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer ( cmp, index ) ;^111^^^^^110^113^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer (  cmp ) ;^111^^^^^110^113^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer ( index ) ;^111^^^^^110^113^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] quickSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( lo, index, hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort (  lo, hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( index,  hi, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( hi, lo, index, null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( index, lo,  null ) ;^129^^^^^128^130^mergeSort ( index, lo, hi, null ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( cmp, 0, len (  ) , index ) ;^139^^^^^138^140^mergeSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort (  0, len (  ) , cmp ) ;^139^^^^^138^140^mergeSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^mergeSort ( index, 0, len (  )  ) ;^139^^^^^138^140^mergeSort ( index, 0, len (  ) , cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  index  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer ( cmp, index ) ;^150^^^^^149^152^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer (  cmp ) ;^150^^^^^149^152^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^chooseComparer ( index ) ;^150^^^^^149^152^chooseComparer ( index, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] mergeSort [RETURN_TYPE] void   int index int lo int hi Comparator cmp [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  hi  index  lo  Comparator  cmp  float[]  a  
[buglab_swap_variables]^comparer = new ComparatorComparer (  ( Object[] ) array ) ;^170^^^^^154^174^comparer = new ComparatorComparer (  ( Object[] ) array, cmp ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] chooseComparer [RETURN_TYPE] void   int index Comparator cmp [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  index  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object  array  Class  type  Object[]  a  arrays  
[buglab_swap_variables]^return comparer.compare ( j, i ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return comparer.compare (  j ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return j.compare ( i, comparer ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return comparer.compare ( i ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return i.compare ( comparer, j ) ;^177^^^^^176^178^return comparer.compare ( i, j ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return cmp.compare ( a[i][j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return a.compare ( cmp[i], a[j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  Source  SOURCE  int  i  j  long  vi  vj  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  short[]  a  int[]  a  float  vi  vj  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] long[]  a  double  vi  vj  short[]  a  int[]  a  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Object[]  a  arrays  Source  SOURCE  int  i  j  Comparator  cmp  float[]  a  
[buglab_swap_variables]^if  ( arrays == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^if  ( arrays.length.length == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^for  ( arrays.lengthnt i = 0; i < i; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^for  ( int i = 0; i < arrays.length.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^new ParallelSorterEmitter ( arrays, getClassName (  ) , v ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^new ParallelSorterEmitter (  getClassName (  ) , arrays ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^new ParallelSorterEmitter ( v, getClassName (  )  ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] long[]  a  short[]  a  int[]  a  ClassVisitor  v  Source  SOURCE  int  i  Comparator  cmp  float[]  a  byte[]  a  boolean  double[]  a  Comparer  comparer  Object[]  a  arrays  
[buglab_swap_variables]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( arrays )  ) .newInstance ( type ) ;^288^^^^^287^289^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[CLASS] ParallelSorter ComparatorComparer ObjectComparer IntComparer LongComparer FloatComparer DoubleComparer ShortComparer ByteComparer Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] byte[]  a  boolean  double[]  a  long[]  a  Comparer  comparer  short[]  a  int[]  a  Class  type  Object[]  a  arrays  Source  SOURCE  Comparator  cmp  float[]  a  
[buglab_swap_variables]^return cmp.compare ( a[i][j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ComparatorComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  Object[]  a  int  i  j  Comparator  cmp  
[buglab_swap_variables]^return a.compare ( cmp[i], a[j] ) ;^194^^^^^193^195^return cmp.compare ( a[i], a[j] ) ;^[CLASS] ComparatorComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  Object[]  a  int  i  j  Comparator  cmp  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[buglab_swap_variables]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^209^^^^^204^214^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] IntComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] int[]  a  int  i  j  boolean  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^218^^^^^215^219^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] LongComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  long[]  a  int  i  j  long  vi  vj  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^228^^^^^225^229^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] FloatComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  float  vi  vj  int  i  j  float[]  a  
[buglab_swap_variables]^return  ( vj == vi )  ? 0 :  ( vi > vj )  ? 1 : -1;^238^^^^^235^239^return  ( vi == vj )  ? 0 :  ( vi > vj )  ? 1 : -1;^[CLASS] DoubleComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] boolean  double[]  a  int  i  j  double  vi  vj  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[buglab_swap_variables]^public int compare ( int i, int a )  { return j[i] - a[j]; }^245^^^^^240^250^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ShortComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] short[]  a  int  i  j  boolean  
[buglab_swap_variables]^public jnt compare ( int i, int i )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[buglab_swap_variables]^public int compare ( int  int j )  { return a[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[buglab_swap_variables]^public int compare ( int i, int a )  { return j[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[buglab_swap_variables]^public ant compare ( int i, int j )  { return i[i] - a[j]; }^251^^^^^246^256^public int compare ( int i, int j )  { return a[i] - a[j]; }^[CLASS] ByteComparer  [METHOD] compare [RETURN_TYPE] int   int i int j [VARIABLES] byte[]  a  int  i  j  boolean  
[buglab_swap_variables]^if  ( arrays == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^if  ( arrays.length.length == 0 )  {^276^^^^^275^285^if  ( arrays.length == 0 )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^for  ( arrays.lengthnt i = 0; i < i; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < arrays.length.length; i++ )  {^279^^^^^275^285^for  ( int i = 0; i < arrays.length; i++ )  {^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^new ParallelSorterEmitter ( arrays, getClassName (  ) , v ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^new ParallelSorterEmitter (  getClassName (  ) , arrays ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^new ParallelSorterEmitter ( v, getClassName (  )  ) ;^284^^^^^275^285^new ParallelSorterEmitter ( v, getClassName (  ) , arrays ) ;^[CLASS] Generator  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassVisitor  v  boolean  Source  SOURCE  Object[]  arrays  int  i  
[buglab_swap_variables]^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( arrays )  ) .newInstance ( type ) ;^288^^^^^287^289^return  (  ( ParallelSorter ) ReflectUtils.newInstance ( type )  ) .newInstance ( arrays ) ;^[CLASS] Generator  [METHOD] firstInstance [RETURN_TYPE] Object   Class type [VARIABLES] Class  type  boolean  Source  SOURCE  Object[]  arrays  
