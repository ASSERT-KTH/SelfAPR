[buglab_swap_variables]^quickSortHelper ( hi, lo ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^quickSortHelper (  hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^quickSortHelper ( lo ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^insertionSort ( hi, lo ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^insertionSort (  hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^insertionSort ( lo ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[buglab_swap_variables]^if  ( QUICKSORT_THRESHOLD <= diff )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( i, lo )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare (  i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( lo )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( i, lo ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( lo ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( hi, lo )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare (  hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( lo )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( hi, lo ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( lo ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( hi, i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare (  hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( compare ( i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( hi, i ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( i ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( i < j )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( i - lo <= hi - j + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( lo - j <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( j - hi <= lo - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( j - lo <= i - hi + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( hi + 1, i ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( i + 1 ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( j, lo ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper (  j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( lo ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^if  ( j - i <= hi - lo + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( j, i ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( i ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^int diff = lo - hi;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^int i =  ( lo + hi )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( j, i ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( i ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( hi, i - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap (  hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^swap ( i - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( hi + 1, i ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^quickSortHelper ( i + 1 ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^for  ( int i = hi + 1 ; i <= lo; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^for  ( lont j = i; j > i; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^for  ( int lo = i; j > j; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^for  ( jnt i = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[buglab_swap_variables]^int diff = lo - hi;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^insertionSort ( hi, lo ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^insertionSort (  hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^insertionSort ( lo ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^int mid = diff + lo / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort ( mid, lo ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort (  mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort ( lo ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort ( hi, mid ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort (  hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^mergeSort ( mid ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^merge ( hi, mid, lo, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^merge (  mid, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^merge ( lo, hi, mid, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^merge ( lo,  hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^merge ( lo, mid,  mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[buglab_swap_variables]^if  ( len2 == 0 || len1 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^if  ( len2 + len1 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^if  ( compare ( lo, pivot )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^if  ( compare (  lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^if  ( compare ( pivot )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^swap ( lo, pivot ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^swap (  lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^swap ( pivot ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^if  ( len2 > len1 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = len22 + pivot;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper (  pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo, second_cut, pivot ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo,  second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo, pivot ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^len11 = lo - first_cut;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = len11 + lo;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower ( hi, pivot, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower (  hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower ( pivot, first_cut, hi ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower ( pivot,  first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower ( pivot, hi ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^len22 = pivot - second_cut;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = lower ( first_cut, hi, pivot ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^second_cut = len22 + pivot;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper (  pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo,  second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^len11 = lo - first_cut;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^first_cut = upper ( lo, second_cut, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^rotate ( pivot, first_cut, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^rotate (  pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^rotate ( first_cut,  second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^rotate ( first_cut, second_cut, pivot ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^rotate ( first_cut, pivot ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^int new_mid = len22 + first_cut;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( first_cut, lo, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge (  first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, new_mid, first_cut, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo,  new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, first_cut, len22, len11, new_mid ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, first_cut,  len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, first_cut, len11, new_mid, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, first_cut, new_mid,  len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( lo, first_cut, new_mid, len11 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( second_cut, new_mid, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge (  second_cut, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, len1, hi, second_cut - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid,  hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, len2, len1 - len11, hi - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut,  len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( len1, second_cut, hi, new_mid - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, hi - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, hi, len1 - len2, len11 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, hi, len1 -  len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, hi, len1 - len11, len22 - len2 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, second_cut, hi, len1 - len11 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^merge ( new_mid, len22, hi, len1 - len11, len2 - second_cut ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^while  ( hit < lot )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^while  ( hit < lot )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^while  ( hit < lot )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[buglab_swap_variables]^int len = lo - hi;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare ( val, mid )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare (  val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare ( mid )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^len = half - len -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^int mid= half + lo;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^int len = lo - hi;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare (  mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare ( val )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^len = half - len -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^int mid = half + lo;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[buglab_swap_variables]^if  ( compare ( mid, val )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
