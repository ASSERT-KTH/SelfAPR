[BugLab_Wrong_Literal]^private static final int MERGESORT_THRESHOLD = 11;^21^^^^^16^26^private static final int MERGESORT_THRESHOLD = 12;^[CLASS] SorterTemplate   [VARIABLES] 
[BugLab_Variable_Misuse]^quickSortHelper ( j, hi ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( lo, j ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Argument_Swapping]^quickSortHelper ( hi, lo ) ;^28^^^^^27^30^quickSortHelper ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Variable_Misuse]^insertionSort ( j, hi ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Variable_Misuse]^insertionSort ( lo, j ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Argument_Swapping]^insertionSort ( hi, lo ) ;^29^^^^^27^30^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  hi  i  j  lo  boolean  
[BugLab_Variable_Misuse]^while  ( compare ( ++i, lo )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^while  ( compare ( ++i, v )  <= 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( ++i, v )  < hi )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^while  ( compare ( --j, j )  > 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^while  ( compare ( --j, v )  == 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( --j, v )  > lo )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( v <= QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( diff <= v )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( QUICKSORT_THRESHOLD <= diff )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( diff > QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( v, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo, v )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( i, lo )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( lo, i )  < 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( lo, i )  > diff )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( lo, v ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( i, lo ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( v, hi )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( hi, lo )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( lo, hi )  >= 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( lo, v ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( hi, lo ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( v, hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( i, v )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( hi, i )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( i, hi )  >= 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( i, hi )  > -1 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( lo, hi ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i, v ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( hi, i ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( lo < i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j < lo )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( i < j )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j > i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( lo - lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j - v <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j - lo <= v - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j - lo <= hi - v + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( hi - lo <= j - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( j - i <= hi - lo + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( j - lo <= i - hi + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo > hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j  <  lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi - i  >  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi  <=  i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi - i  ^  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi - i  >=  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( j - lo <= hi - i + diff )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( j - lo <= hi - i  )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( j - lo <= hi - i + i )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^hi = i;^70^^^^^65^71^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( lo + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( i + 1, lo ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^quickSortHelper ( hi + 1, i ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^quickSortHelper ( i + hi, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^lo = lo + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^lo = i + i;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( v, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( lo, i ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^quickSortHelper ( j, lo ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^while  ( compare ( ++i, i )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^while  ( compare ( ++i, v )  == 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^while  ( compare ( --j, v )  >= 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( --j, v )  > 1 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( diff <= lo )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( diff < QUICKSORT_THRESHOLD )  {^35^^^^^20^50^if  ( diff <= QUICKSORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo, j )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( lo, i )  >= 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( lo, i )  >  )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo, j )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( lo, hi )  > -1 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo, hi )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i, lo ) ;^46^^^^^31^61^swap ( i, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( v < i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j == i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( v - lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j - i <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j - lo <= lo - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( lo - j <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( j - hi <= lo - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^if  ( i - lo <= hi - j + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo < hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j  >>  lo <= hi - i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi - i  ==  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi  ||  i + 1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j - lo <= hi - i  ||  1 )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( j - lo <= hi - i +  )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( j - lo <= hi - i + lo )  {^65^^^^^50^80^if  ( j - lo <= hi - i + 1 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( v + 1, hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^quickSortHelper ( i , hi ) ;^69^^^^^65^71^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^lo = v + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^lo = i + MERGESORT_THRESHOLD;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( i, j ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( lo, v ) ;^66^^^^^51^81^quickSortHelper ( lo, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( ++i, v )  < i )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( --j, v )  > diff )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( j < v )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i, lo ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( j, i ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^i = v;^50^^^^^35^65^i = lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^lo = j + 1;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^lo = i ;^67^^^^^52^82^lo = i + 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^hi = lo;^70^^^^^55^85^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int diff = v - lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int diff = hi - v;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^int diff = lo - hi;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int diff = hi  ^  lo;^34^^^^^19^49^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int i =  ( v + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int i =  ( hi + v )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^int i =  ( lo + hi )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int i =  ( hi + lo )  * 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int i =  ( hi  !=  lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^int i =  ( hi + lo )  / v;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int j = v - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int j = hi  <=  1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^int j = hi ;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( j, i )  > 0 )  {^39^^^^^24^54^if  ( compare ( lo, i )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( j, i ) ;^40^^^^^25^55^swap ( lo, i ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo, v )  > 0 )  {^42^^^^^27^57^if  ( compare ( lo, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v, j ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i, v ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( j, i ) ;^49^^^^^34^64^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^while  ( compare ( ++i, j )  < 0 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^while  ( compare ( --j, i )  > 0 )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( lo, j ) ;^62^^^^^47^77^swap ( i, j ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v, hi - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i, v - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^swap ( hi, i - 1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( i, hi  <<  1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( i, hi - v ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( v + 1, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( i + 1, lo ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^quickSortHelper ( hi + 1, i ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^quickSortHelper ( i + v, hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( ++i, v )  < 1 )  {^53^^^^^38^68^while  ( compare ( ++i, v )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^while  ( compare ( --j, v )  > j )  {^56^^^^^41^71^while  ( compare ( --j, v )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( j <= i )  {^59^^^^^44^74^if  ( j < i )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^hi = v;^70^^^^^55^85^hi = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int i =  ( lo + lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int i =  ( hi + j )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int i =  ( hi + lo )  - 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int i =  ( hi   instanceof   lo )  / 2;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^int i =  ( hi + lo )  / hi;^38^^^^^23^53^int i =  ( hi + lo )  / 2;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int j = lo - 1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^int j = hi  >  1;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^int j = hi - v;^48^^^^^33^63^int j = hi - 1;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int v = lo;^51^^^^^36^66^int v = j;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( j, hi ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( lo, j ) ;^43^^^^^28^58^swap ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( i, lo )  > 0 )  {^45^^^^^30^60^if  ( compare ( i, hi )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( i, hi  |  1 ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( i, hi - i ) ;^64^^^^^49^79^swap ( i, hi - 1 ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^quickSortHelper ( i + 1, v ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^quickSortHelper ( i , hi ) ;^69^^^^^54^84^quickSortHelper ( i + 1, hi ) ;^[CLASS] SorterTemplate  [METHOD] quickSortHelper [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lo - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j - 1, j )  == 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  &  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  >>  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j , j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j - 1, j )  > QUICKSORT_THRESHOLD )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j - QUICKSORT_THRESHOLD, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j  &  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( j - lo, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( int i = v + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( lont i = lo + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( int i = lo + 1 ; i <= v; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( lont i = i + 1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( hint i = lo + 1 ; i <= i; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( int i = hi + 1 ; i <= lo; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^for  ( int i = lo  >  1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^for  ( int i = lo + 1 ; i > hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^for  ( int i = lo + MERGESORT_THRESHOLD ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^for  ( int i = lo + v ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^for  ( int i = lo  ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( v - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j - 1, j )  >= 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  >  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j - lo, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( v - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j  <  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( j , j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( vnt j = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( int v = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( int j = i; j > v; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( jnt i = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( lont j = i; j > i; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^for  ( int j = i; j >= lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( i - 1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  ^  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j - j, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^swap ( i - 1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j  <<  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( j - MERGESORT_THRESHOLD, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j  |  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  |  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j   instanceof   1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^swap ( j - diff, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( int i = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Argument_Swapping]^for  ( int lo = i; j > j; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^for  ( int j = i; j < lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j - 1, j )  < 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  !=  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  >=  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( j - 1, j )  > hi )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( j  &&  1, j )  > 0 )  {^78^^^^^75^85^if  ( compare ( j - 1, j )  > 0 )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^for  ( int i = lo  <=  1 ; i <= hi; i++ )  {^76^^^^^75^85^for  ( int i = lo + 1 ; i <= hi; i++ )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^for  ( lont j = i; j > lo; j-- )  {^77^^^^^75^85^for  ( int j = i; j > lo; j-- )  {^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Wrong_Operator]^swap ( j  >=  1, j ) ;^79^^^^^75^85^swap ( j - 1, j ) ;^[CLASS] SorterTemplate  [METHOD] insertionSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  v  boolean  
[BugLab_Variable_Misuse]^int diff = lo - lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^int diff = hi - v;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^int diff = lo - hi;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Operator]^int diff = hi   instanceof   lo;^88^^^^^87^97^int diff = hi - lo;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^if  ( v <= MERGESORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^if  ( diff <= v )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Operator]^if  ( diff > MERGESORT_THRESHOLD )  {^89^^^^^87^97^if  ( diff <= MERGESORT_THRESHOLD )  {^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^insertionSort ( mid, hi ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^insertionSort ( lo, v ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^insertionSort ( hi, lo ) ;^90^^^^^87^97^insertionSort ( lo, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^int mid = v + diff / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^int mid = lo + j / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^int mid = diff + lo / 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Operator]^int mid = lo + diff * 2;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Literal]^int mid = lo + diff / ;^93^^^^^87^97^int mid = lo + diff / 2;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^mergeSort ( v, mid ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^mergeSort ( lo, i ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^mergeSort ( mid, lo ) ;^94^^^^^87^97^mergeSort ( lo, mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^mergeSort ( j, hi ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^mergeSort ( mid, v ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^mergeSort ( hi, mid ) ;^95^^^^^87^97^mergeSort ( mid, hi ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^merge ( v, mid, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^merge ( lo, v, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^merge ( lo, mid, j, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^merge ( mid, lo, hi, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Argument_Swapping]^merge ( lo, hi, mid, mid - lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Operator]^merge ( lo, mid, hi, mid  ^  lo, hi - mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Wrong_Operator]^merge ( lo, mid, hi, mid - lo, hi  >=  mid ) ;^96^^^^^87^97^merge ( lo, mid, hi, mid - lo, hi - mid ) ;^[CLASS] SorterTemplate  [METHOD] mergeSort [RETURN_TYPE] void   int lo int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  hi  i  j  lo  mid  v  boolean  
[BugLab_Variable_Misuse]^if  ( lo == 0 || len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( len1 == 0 || lo == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^if  ( len2 == 0 || len1 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1 == 0 && len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1 <= 0 || len2 == 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1 == 0 || len2 <= 0 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( len1 ==  || len2 ==  )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( len1 == -1 || len2 == -1 )  {^100^^^^^99^126^if  ( len1 == 0 || len2 == 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( len22 + len2 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( len1 + len22 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^if  ( len2 + len1 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1 + len2 <= 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1  >=  len2 == 2 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( len1 + len3 == 3 )  {^103^^^^^99^126^if  ( len1 + len2 == 2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( len11, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( pivot, mid )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( lo, pivot )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( pivot, lo )  <= 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( pivot, lo )  < j )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^swap ( pivot, len11 ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^swap ( lo, pivot ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( pivot, v )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^swap ( len11, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^swap ( second_cut, lo ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^swap ( pivot, mid ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( mid, lo )  < 0 )  {^104^^^^^99^126^if  ( compare ( pivot, lo )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^swap ( pivot, second_cut ) ;^105^^^^^99^126^swap ( pivot, lo ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( mid > len2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^if  ( len1 > lo )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^if  ( len1 >= len2 )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( len1 > lenQUICKSORT_THRESHOLD )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^if  ( len1 > len )  {^111^^^^^99^126^if  ( len1 > len2 )  {^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len22 = lo / 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len22 = len2 + 2;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^lensecond_cutsecond_cut = lensecond_cut / second_cut;^117^^^^^111^121^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = len11 + len22;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = pivot + len11;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^second_cut = len22 + pivot;^118^^^^^111^121^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( new_mid, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, len11, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, pivot, v ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( lo, second_cut, pivot ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len11 = len2 - lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^len11 = lo - first_cut;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len11 = first_cut  ==  lo;^120^^^^^111^121^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( len11, pivot, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, len2, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, pivot, len11 ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^111^121^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len11 = mid / 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len11 = len1 - 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^len11 = len1 / QUICKSORT_THRESHOLD;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = len2 + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = lo + v;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = len11 + lo;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( new_mid, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, lo, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, hi, len22 ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^second_cut = lower ( first_cut, hi, pivot ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^second_cut = lower ( hi, pivot, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^second_cut = lower ( pivot, first_cut, hi ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len22 = second_cut - len11;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^len22 = pivot - second_cut;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len22 = second_cut  <<  pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( len2, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, hi, second_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len11 = len1 + 2;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^len11 = len1 / len1;^112^^^^^99^126^len11 = len1 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = len22 + len11;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = lo + new_mid;^113^^^^^99^126^first_cut = lo + len11;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( len22, hi, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, len2, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, hi, new_mid ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len22 = len11 - pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len22 = second_cut  !=  pivot;^115^^^^^99^126^len22 = second_cut - pivot;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len22 = v / 2;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len22 = len2 + 2;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^lenlolo = lenlo / lo;^117^^^^^99^126^len22 = len2 / 2;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = len2 + len22;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = pivot + len11;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^second_cut = len22 + pivot;^118^^^^^99^126^second_cut = pivot + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( mid, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, len22, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, pivot, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( second_cut, pivot, lo ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( lo, second_cut, pivot ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len11 = len2 - lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^len11 = first_cut - v;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^len11 = lo - first_cut;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^len11 = first_cut  <<  lo;^120^^^^^99^126^len11 = first_cut - lo;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, new_mid, first_cut ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^second_cut = lower ( pivot, hi, len2 ) ;^114^^^^^99^126^second_cut = lower ( pivot, hi, first_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( v, pivot, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, v, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^first_cut = upper ( lo, pivot, len2 ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^first_cut = upper ( pivot, lo, second_cut ) ;^119^^^^^99^126^first_cut = upper ( lo, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^rotate ( v, pivot, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^rotate ( first_cut, len2, second_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^rotate ( first_cut, pivot, len11 ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^rotate ( second_cut, pivot, first_cut ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^rotate ( first_cut, second_cut, pivot ) ;^122^^^^^99^126^rotate ( first_cut, pivot, second_cut ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^int new_mid = lo + len22;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^int new_mid = first_cut + v;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^int new_mid = len22 + first_cut;^123^^^^^99^126^int new_mid = first_cut + len22;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( len2, first_cut, new_mid, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( lo, first_cut, v, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( lo, first_cut, new_mid, second_cut, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( lo, first_cut, new_mid, len11, len2 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, first_cut, lo, len11, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( lo, len11, new_mid, first_cut, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( lo, first_cut, len22, len11, new_mid ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( lo, first_cut, len11, new_mid, len22 ) ;^124^^^^^99^126^merge ( lo, first_cut, new_mid, len11, len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, len22, hi, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, second_cut, len2, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, second_cut, hi, lo - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, second_cut, hi, len1 - len22, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, second_cut, hi, len1 - len11, len11 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len2 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( len1, second_cut, hi, new_mid - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, hi, second_cut, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( hi, second_cut, new_mid, len1 - len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, second_cut, hi, len11 - len1, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, second_cut, hi, len1 - len22, len2 - len11 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, len2, hi, len1 - len11, second_cut - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^merge ( new_mid, second_cut, hi, len22 - len11, len2 - len1 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^merge ( new_mid, second_cut, hi, len1  >=  len11, len2 - len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^merge ( new_mid, second_cut, hi, len1 - len11, len2  >>  len22 ) ;^125^^^^^99^126^merge ( new_mid, second_cut, hi, len1 - len11, len2 - len22 ) ;^[CLASS] SorterTemplate  [METHOD] merge [RETURN_TYPE] void   int lo int pivot int hi int len1 int len2 [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  i  j  len1  len11  len2  len22  lo  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^int new_midt = lo;^129^^^^^128^142^int lot = lo;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^int hit = mid  ^  1;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^int hit = mid - new_mid;^130^^^^^128^142^int hit = mid - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( new_mid < hit )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( lot < pivot )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^while  ( hit < lot )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^while  ( lot <= hit )  {^131^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^lot = mid; len22t = hi - 1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^lot = mid; hit = hi  ^  1;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^lot = mid; hit = hi - hi;^134^^^^^128^142^lot = mid; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( len2 < hit )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( lot < pivot )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^while  ( hit < lot )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^while  ( lot <= hit )  {^135^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^lot = len22; hit = hi - 1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^lot = lo; midt = hi - 1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^lot = lo; hit = hi  &  1;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Literal]^lot = lo; hit = hi - hi;^138^^^^^128^142^lot = lo; hit = hi - 1;^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( mid < hit )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^while  ( lot < len2 )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Argument_Swapping]^while  ( hit < lot )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Wrong_Operator]^while  ( lot <= hit )  {^139^^^^^128^142^while  ( lot < hit )  {^[CLASS] SorterTemplate  [METHOD] rotate [RETURN_TYPE] void   int lo int mid int hi [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  hi  hit  i  j  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  boolean  
[BugLab_Variable_Misuse]^int len = len22 - lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int len = hi - mid;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^int len = lo - hi;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int len = hi  &&  lo;^145^^^^^144^157^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^while  ( len22 > 0 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^while  ( len >= 0 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^while  ( len > 1 )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^while  ( len > v )  {^146^^^^^144^157^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( len2, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( mid, len11 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( val, mid )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( mid, val )  == 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lo;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = len2 + 1;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid ;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lot - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - mid -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^len = half - len -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  ==  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = len11 + 1;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid + len22;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = new_mid - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len   instanceof   half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  <  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = second_cut;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int half = mid / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int half = len + 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^int half = len / new_mid;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid= len22 + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid= lo + len2;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^int mid= half + lo;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( len22, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( pivot, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( mid, len2 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( mid, val )  < 1 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len2;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid + new_mid;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len22 - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  &  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = lo + 1;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid + i;^150^^^^^144^157^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lo - half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - lo -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  ||  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  <=  half -1;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^len = len - half -first_cut;^151^^^^^144^157^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lot;^153^^^^^144^157^len = half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int half = lot / 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int half = len - 2;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^int half = len / 3;^147^^^^^144^157^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid= len11 + half;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid= lo + len22;^148^^^^^144^157^int mid= lo + half;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( len11, val )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( mid, len22 )  < 0 )  {^149^^^^^144^157^if  ( compare ( mid, val )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^return len11;^156^^^^^144^157^return lo;^[CLASS] SorterTemplate  [METHOD] lower [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int len = lo - lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int len = hi - len2;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^int len = lo - hi;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int len = hi  &&  lo;^160^^^^^159^172^int len = hi - lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^while  ( val > 0 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^while  ( len < 0 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^while  ( len >  )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^while  ( len > -1 )  {^161^^^^^159^172^while  ( len > 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( mid, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( val, len2 )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^if  ( compare ( val, mid )  <= 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^if  ( compare ( val, mid )  < 1 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = len2 + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid ;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lo - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - second_cut -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^len = half - len -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  <<  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  ==  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^len = len - half -0;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len22;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = len11 + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - val -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  >>  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^len = len - half -QUICKSORT_THRESHOLD;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int half = second_cut / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int half = len + 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid = len22 + half;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid = lo + lo;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^int mid = half + lo;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( len2, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Argument_Swapping]^if  ( compare ( mid, val )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^lo = pivot + 1;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^lo = mid + MERGESORT_THRESHOLD;^167^^^^^159^172^lo = mid + 1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = new_mid - half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - mid -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  ^  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  >  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^len = len - half -i;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = lo;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len2;^165^^^^^159^172^len = half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^len = len - lo -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^len = len  !=  half -1;^168^^^^^159^172^len = len - half -1;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int half = lot / 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Operator]^int half = len - 2;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Wrong_Literal]^int half = len / half;^162^^^^^159^172^int half = len / 2;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^int mid = lo + len22;^163^^^^^159^172^int mid = lo + half;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( lot, mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^if  ( compare ( val, new_mid )  < 0 )  {^164^^^^^159^172^if  ( compare ( val, mid )  < 0 )  {^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
[BugLab_Variable_Misuse]^return second_cut;^171^^^^^159^172^return lo;^[CLASS] SorterTemplate  [METHOD] upper [RETURN_TYPE] int   int lo int hi int val [VARIABLES] int  MERGESORT_THRESHOLD  QUICKSORT_THRESHOLD  diff  first_cut  half  hi  hit  i  j  len  len1  len11  len2  len22  lo  lot  mid  new_mid  pivot  second_cut  v  val  boolean  
