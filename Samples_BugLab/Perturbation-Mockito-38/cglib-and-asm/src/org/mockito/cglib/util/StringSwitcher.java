[BugLab_Argument_Swapping]^Object key = fixedInput.newInstance ( strings, ints, KEY_FACTORY ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  StringSwitcherKey  KEY_FACTORY  int[]  ints  Object  key  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = KEY_FACTORY.newInstance ( ints, strings, fixedInput ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  StringSwitcherKey  KEY_FACTORY  int[]  ints  Object  key  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = ints.newInstance ( strings, KEY_FACTORY, fixedInput ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  StringSwitcherKey  KEY_FACTORY  int[]  ints  Object  key  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^final CodeEmitter e = INT_VALUE.begin_method ( Constants.ACC_PUBLIC, ce, null ) ;^129^^^^^120^145^final CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, INT_VALUE, null ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Wrong_Literal]^e.load_arg ( 1 ) ;^130^^^^^120^145^e.load_arg ( 0 ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Argument_Swapping]^int style = Constants.SWITCH_STYLE_HASH ? fixedInputONLY : Constants.SWITCH_STYLE_HASH;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Argument_Swapping]^int style = fixedInput ? Constants.SWITCH_STYLE_HASH : Constants.SWITCH_STYLE_HASHONLY;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Argument_Swapping]^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLYONLY : Constants.SWITCH_STYLE_HASH;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Wrong_Literal]^e.push ( -style ) ;^139^^^^^120^145^e.push ( -1 ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] ClassEmitter  ce  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  CodeEmitter  e  Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  List  stringList  Object  key  
[BugLab_Argument_Swapping]^e.push ( key[stringList.indexOf ( ints ) ] ) ;^135^^^^^134^137^e.push ( ints[stringList.indexOf ( key ) ] ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  Label  end  StringSwitcherKey  KEY_FACTORY  int[]  ints  Object  key  String[]  strings  Source  SOURCE  
[BugLab_Wrong_Literal]^e.push ( -2 ) ;^139^^^^^138^141^e.push ( -1 ) ;^[CLASS] StringSwitcher Generator 1  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] Type  STRING_SWITCHER  boolean  fixedInput  Signature  INT_VALUE  StringSwitcherKey  KEY_FACTORY  int[]  ints  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = fixedInput.newInstance ( strings, ints, KEY_FACTORY ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] int[]  ints  Object  key  boolean  fixedInput  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = KEY_FACTORY.newInstance ( ints, strings, fixedInput ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] int[]  ints  Object  key  boolean  fixedInput  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = KEY_FACTORY.newInstance ( strings, fixedInput, ints ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] int[]  ints  Object  key  boolean  fixedInput  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^Object key = strings.newInstance ( KEY_FACTORY, ints, fixedInput ) ;^116^^^^^114^118^Object key = KEY_FACTORY.newInstance ( strings, ints, fixedInput ) ;^[CLASS] Generator 1  [METHOD] create [RETURN_TYPE] StringSwitcher   [VARIABLES] int[]  ints  Object  key  boolean  fixedInput  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^final CodeEmitter e = INT_VALUE.begin_method ( Constants.ACC_PUBLIC, ce, null ) ;^129^^^^^120^145^final CodeEmitter e = ce.begin_method ( Constants.ACC_PUBLIC, INT_VALUE, null ) ;^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Argument_Swapping]^int style = Constants.SWITCH_STYLE_HASHONLY ? fixedInput : Constants.SWITCH_STYLE_HASH;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Argument_Swapping]^int style = fixedInput ? Constants.SWITCH_STYLE_HASH : Constants.SWITCH_STYLE_HASHONLY;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Argument_Swapping]^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLYONLY : Constants.SWITCH_STYLE_HASH;^132^^^^^120^145^int style = fixedInput ? Constants.SWITCH_STYLE_HASHONLY : Constants.SWITCH_STYLE_HASH;^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Argument_Swapping]^EmitUtils.string_switch ( style, strings, e, new ObjectSwitchCallback (  )  {^133^^^^^120^145^EmitUtils.string_switch ( e, strings, style, new ObjectSwitchCallback (  )  {^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Argument_Swapping]^e.push ( key[stringList.indexOf ( ints ) ] ) ;^135^^^^^120^145^e.push ( ints[stringList.indexOf ( key ) ] ) ;^[CLASS] Generator 1  [METHOD] generateClass [RETURN_TYPE] void   ClassVisitor v [VARIABLES] CodeEmitter  e  boolean  fixedInput  ClassEmitter  ce  Label  end  int[]  ints  List  stringList  Object  key  String[]  strings  ClassVisitor  v  Source  SOURCE  int  style  
[BugLab_Wrong_Literal]^e.push ( -2 ) ;^139^^^^^138^141^e.push ( -1 ) ;^[CLASS] Generator 1  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] int[]  ints  boolean  fixedInput  String[]  strings  Source  SOURCE  
[BugLab_Argument_Swapping]^e.push ( key[stringList.indexOf ( ints ) ] ) ;^135^^^^^134^137^e.push ( ints[stringList.indexOf ( key ) ] ) ;^[CLASS] 1  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] boolean  Label  end  Object  key  
[BugLab_Variable_Misuse]^e.return_valunull (  ) ;^140^^^^^138^141^e.return_value (  ) ;^[CLASS] 1  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] boolean  
