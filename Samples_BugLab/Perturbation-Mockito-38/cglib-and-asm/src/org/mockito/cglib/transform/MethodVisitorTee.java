[BugLab_Variable_Misuse]^mv1.visitFrame ( nStack, nLocal, local, nStack, stack ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitFrame ( type, nStack, local, nStack, stack ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitFrame ( type, nLocal, local, type, stack ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFrame ( nStack, nLocal, local, type, stack ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFrame ( nLocal, type, local, nStack, stack ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFrame ( type, nLocal, stack, nStack, local ) ;^30^^^^^29^32^mv1.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitFrame ( nLocal, nLocal, local, nStack, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitFrame ( type, type, local, nStack, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitFrame ( type, nLocal, local, nLocal, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFrame ( nLocal, type, local, nStack, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFrame ( type, local, nLocal, nStack, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFrame ( nStack, nLocal, local, type, stack ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFrame ( type, stack, local, nStack, nLocal ) ;^31^^^^^29^32^mv2.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFrame [RETURN_TYPE] void   int type int nLocal Object[] local int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv2.visitAnnotationDefault (  ) , mv1.visitAnnotationDefault (  )  ) ;^35^36^^^^34^37^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotationDefault (  ) , mv2.visitAnnotationDefault (  )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotationDefault [RETURN_TYPE] AnnotationVisitor   [VARIABLES] MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( mv2.visitAnnotationDefault (  ) , mv2.visitAnnotationDefault (  )  ) ;^35^36^^^^34^37^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotationDefault (  ) , mv2.visitAnnotationDefault (  )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotationDefault [RETURN_TYPE] AnnotationVisitor   [VARIABLES] MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( mv2.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv1.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( visible, desc ) , mv2.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( visible.visitAnnotation ( desc, mv1 ) , mv2.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( desc.visitAnnotation ( mv1, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv2.visitAnnotation ( desc, visible ) , mv1.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, mv2 ) , visible.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( mv2, visible ) , desc.visitAnnotation ( desc, visible )  ) ;^40^41^^^^39^42^return AnnotationVisitorTee.getInstance ( mv1.visitAnnotation ( desc, visible ) , mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^mv2.visitAnnotation ( visible, desc )  ) ;^41^^^^^39^42^mv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] MethodVisitor  mv1  mv2  String  desc  boolean  visible  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( mv2.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( desc, parameter, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, mv2 ) , visible.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv2.visitParameterAnnotation ( parameter, desc, visible ) , mv1.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( visible, desc, parameter ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, visible, desc ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( visible.visitParameterAnnotation ( parameter, desc, mv1 ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^47^48^^^^44^49^return AnnotationVisitorTee.getInstance ( mv1.visitParameterAnnotation ( parameter, desc, visible ) , mv2.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] MethodVisitorTee  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   int parameter String desc boolean visible [VARIABLES] String  desc  boolean  visible  int  parameter  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitIntInsn ( operand, operand ) ;^67^^^^^66^69^mv1.visitIntInsn ( opcode, operand ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIntInsn [RETURN_TYPE] void   int opcode int operand [VARIABLES] int  opcode  operand  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv1.visitIntInsn ( operand, opcode ) ;^67^^^^^66^69^mv1.visitIntInsn ( opcode, operand ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIntInsn [RETURN_TYPE] void   int opcode int operand [VARIABLES] int  opcode  operand  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv2.visitIntInsn ( operand, opcode ) ;^68^^^^^66^69^mv2.visitIntInsn ( opcode, operand ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIntInsn [RETURN_TYPE] void   int opcode int operand [VARIABLES] int  opcode  operand  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv1.visitVarInsn ( var, opcode ) ;^72^^^^^71^74^mv1.visitVarInsn ( opcode, var ) ;^[CLASS] MethodVisitorTee  [METHOD] visitVarInsn [RETURN_TYPE] void   int opcode int var [VARIABLES] int  opcode  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^mv2.visitVarInsn ( opcode, opcode ) ;^73^^^^^71^74^mv2.visitVarInsn ( opcode, var ) ;^[CLASS] MethodVisitorTee  [METHOD] visitVarInsn [RETURN_TYPE] void   int opcode int var [VARIABLES] int  opcode  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv2.visitVarInsn ( var, opcode ) ;^73^^^^^71^74^mv2.visitVarInsn ( opcode, var ) ;^[CLASS] MethodVisitorTee  [METHOD] visitVarInsn [RETURN_TYPE] void   int opcode int var [VARIABLES] int  opcode  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv1.visitTypeInsn ( desc, opcode ) ;^77^^^^^76^79^mv1.visitTypeInsn ( opcode, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTypeInsn [RETURN_TYPE] void   int opcode String desc [VARIABLES] String  desc  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTypeInsn ( desc, opcode ) ;^78^^^^^76^79^mv2.visitTypeInsn ( opcode, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTypeInsn [RETURN_TYPE] void   int opcode String desc [VARIABLES] String  desc  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitFieldInsn ( opcode, desc, name, desc ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitFieldInsn ( opcode, owner, owner, desc ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitFieldInsn ( opcode, owner, name, owner ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFieldInsn ( owner, opcode, name, desc ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFieldInsn ( opcode, name, owner, desc ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitFieldInsn ( opcode, desc, name, owner ) ;^82^^^^^81^84^mv1.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitFieldInsn ( opcode, desc, name, desc ) ;^83^^^^^81^84^mv2.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitFieldInsn ( opcode, owner, name, name ) ;^83^^^^^81^84^mv2.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFieldInsn ( desc, owner, name, opcode ) ;^83^^^^^81^84^mv2.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFieldInsn ( opcode, name, owner, desc ) ;^83^^^^^81^84^mv2.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitFieldInsn ( opcode, desc, name, owner ) ;^83^^^^^81^84^mv2.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitFieldInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitMethodInsn ( opcode, name, name, desc ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitMethodInsn ( opcode, owner, desc, desc ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitMethodInsn ( opcode, owner, name, owner ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitMethodInsn ( desc, owner, name, opcode ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitMethodInsn ( opcode, desc, name, owner ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitMethodInsn ( opcode, name, owner, desc ) ;^87^^^^^86^89^mv1.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitMethodInsn ( opcode, desc, name, desc ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitMethodInsn ( opcode, owner, desc, desc ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitMethodInsn ( opcode, owner, name, name ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitMethodInsn ( name, owner, opcode, desc ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitMethodInsn ( opcode, name, owner, desc ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitMethodInsn ( opcode, owner, desc, name ) ;^88^^^^^86^89^mv2.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMethodInsn [RETURN_TYPE] void   int opcode String owner String name String desc [VARIABLES] String  desc  name  owner  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitJumpInsn ( label, opcode ) ;^92^^^^^91^94^mv1.visitJumpInsn ( opcode, label ) ;^[CLASS] MethodVisitorTee  [METHOD] visitJumpInsn [RETURN_TYPE] void   int opcode Label label [VARIABLES] Label  label  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitJumpInsn ( label, opcode ) ;^93^^^^^91^94^mv2.visitJumpInsn ( opcode, label ) ;^[CLASS] MethodVisitorTee  [METHOD] visitJumpInsn [RETURN_TYPE] void   int opcode Label label [VARIABLES] Label  label  boolean  int  opcode  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitIincInsn ( var, var ) ;^107^^^^^106^109^mv1.visitIincInsn ( var, increment ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIincInsn [RETURN_TYPE] void   int var int increment [VARIABLES] int  increment  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv1.visitIincInsn ( increment, var ) ;^107^^^^^106^109^mv1.visitIincInsn ( var, increment ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIincInsn [RETURN_TYPE] void   int var int increment [VARIABLES] int  increment  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^mv2.visitIincInsn ( var, var ) ;^108^^^^^106^109^mv2.visitIincInsn ( var, increment ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIincInsn [RETURN_TYPE] void   int var int increment [VARIABLES] int  increment  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv2.visitIincInsn ( increment, var ) ;^108^^^^^106^109^mv2.visitIincInsn ( var, increment ) ;^[CLASS] MethodVisitorTee  [METHOD] visitIincInsn [RETURN_TYPE] void   int var int increment [VARIABLES] int  increment  var  MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^mv1.visitTableSwitchInsn ( max, max, dflt, labels ) ;^112^^^^^111^114^mv1.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTableSwitchInsn ( dflt, max, min, labels ) ;^112^^^^^111^114^mv1.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTableSwitchInsn ( max, min, dflt, labels ) ;^112^^^^^111^114^mv1.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTableSwitchInsn ( labels, max, dflt, min ) ;^112^^^^^111^114^mv1.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitTableSwitchInsn ( min, min, dflt, labels ) ;^113^^^^^111^114^mv2.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTableSwitchInsn ( max, min, dflt, labels ) ;^113^^^^^111^114^mv2.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTableSwitchInsn ( dflt, max, min, labels ) ;^113^^^^^111^114^mv2.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTableSwitchInsn ( labels, max, dflt, min ) ;^113^^^^^111^114^mv2.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   int min int max Label dflt Label[] labels [VARIABLES] Label  dflt  Label[]  labels  boolean  int  max  min  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLookupSwitchInsn ( dflt, labels, keys ) ;^117^^^^^116^119^mv1.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  keys  Label[]  labels  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLookupSwitchInsn ( labels, keys, dflt ) ;^117^^^^^116^119^mv1.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  keys  Label[]  labels  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLookupSwitchInsn ( labels, keys, dflt ) ;^118^^^^^116^119^mv2.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  keys  Label[]  labels  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLookupSwitchInsn ( keys, dflt, labels ) ;^118^^^^^116^119^mv2.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  keys  Label[]  labels  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitMultiANewArrayInsn ( dims, desc ) ;^122^^^^^121^124^mv1.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc int dims [VARIABLES] String  desc  boolean  int  dims  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitMultiANewArrayInsn ( dims, desc ) ;^123^^^^^121^124^mv2.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc int dims [VARIABLES] String  desc  boolean  int  dims  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitTryCatchBlock ( end, end, handler, type ) ;^127^^^^^126^129^mv1.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitTryCatchBlock ( start, end, end, type ) ;^127^^^^^126^129^mv1.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTryCatchBlock ( end, start, handler, type ) ;^127^^^^^126^129^mv1.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTryCatchBlock ( start, handler, end, type ) ;^127^^^^^126^129^mv1.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitTryCatchBlock ( start, type, handler, end ) ;^127^^^^^126^129^mv1.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitTryCatchBlock ( start, start, handler, type ) ;^128^^^^^126^129^mv2.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitTryCatchBlock ( start, end, start, type ) ;^128^^^^^126^129^mv2.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTryCatchBlock ( handler, end, start, type ) ;^128^^^^^126^129^mv2.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTryCatchBlock ( end, start, handler, type ) ;^128^^^^^126^129^mv2.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitTryCatchBlock ( start, handler, end, type ) ;^128^^^^^126^129^mv2.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] MethodVisitorTee  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  type  boolean  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitLocalVariable ( signature, desc, signature, start, end, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitLocalVariable ( name, name, signature, start, end, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitLocalVariable ( name, desc, name, start, end, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv1.visitLocalVariable ( name, desc, signature, start, start, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLocalVariable ( signature, desc, name, start, end, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLocalVariable ( desc, name, signature, start, end, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLocalVariable ( name, desc, signature, end, start, index ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitLocalVariable ( name, desc, signature, start, index, end ) ;^132^^^^^131^134^mv1.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitLocalVariable ( desc, desc, signature, start, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitLocalVariable ( name, name, signature, start, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitLocalVariable ( name, desc, name, start, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitLocalVariable ( name, desc, signature, end, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^mv2.visitLocalVariable ( name, desc, signature, start, start, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLocalVariable ( desc, name, signature, start, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLocalVariable ( signature, desc, name, start, end, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLocalVariable ( name, desc, signature, end, start, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLocalVariable ( name, end, signature, start, desc, index ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLocalVariable ( index, desc, signature, start, end, name ) ;^133^^^^^131^134^mv2.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end int index [VARIABLES] Label  end  start  String  desc  name  signature  boolean  int  index  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv2.visitLineNumber ( start, line ) ;^138^^^^^136^139^mv2.visitLineNumber ( line, start ) ;^[CLASS] MethodVisitorTee  [METHOD] visitLineNumber [RETURN_TYPE] void   int line Label start [VARIABLES] Label  start  boolean  int  line  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^mv1.visitMaxs ( maxLocals, maxStack ) ;^142^^^^^141^144^mv1.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] int  maxLocals  maxStack  MethodVisitor  mv1  mv2  boolean  
[BugLab_Variable_Misuse]^mv2.visitMaxs ( maxLocals, maxLocals ) ;^143^^^^^141^144^mv2.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] int  maxLocals  maxStack  MethodVisitor  mv1  mv2  boolean  
[BugLab_Argument_Swapping]^mv2.visitMaxs ( maxLocals, maxStack ) ;^143^^^^^141^144^mv2.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] MethodVisitorTee  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] int  maxLocals  maxStack  MethodVisitor  mv1  mv2  boolean  
