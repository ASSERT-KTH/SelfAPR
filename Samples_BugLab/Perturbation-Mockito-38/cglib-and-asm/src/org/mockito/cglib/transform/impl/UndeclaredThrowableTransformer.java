[BugLab_Wrong_Literal]^boolean found = true;^31^^^^^29^42^boolean found = false;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Variable_Misuse]^if  ( i == 1 && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Variable_Misuse]^if  ( types.length == 1 && types[0].equals ( Throwable.wrapper )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Argument_Swapping]^if  ( types.length.length == 1 && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Operator]^if  ( types.length == 1 || types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Operator]^if  ( types.length != 1 && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^if  ( types.length == 2 && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^if  ( types.length == 1 && types[i].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^found = false;^36^^^^^29^42^found = true;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= cstructs.length; i++ )  {^33^^^^^29^42^for  ( int i = 0; i < cstructs.length; i++ )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < cstructs.length; i++ )  {^33^^^^^29^42^for  ( int i = 0; i < cstructs.length; i++ )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Operator]^if  ( types.length > 1 && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^if  ( types.length == i && types[0].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Wrong_Literal]^if  ( types.length == 1 && types[].equals ( Throwable.class )  )  {^35^^^^^29^42^if  ( types.length == 1 && types[0].equals ( Throwable.class )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] <init> [RETURN_TYPE] Class)   Class wrapper [VARIABLES] Type  wrapper  boolean  found  Class[]  types  Constructor[]  cstructs  Block  handler  Class  wrapper  int  i  
[BugLab_Variable_Misuse]^if  ( TypeUtils.isAbstract ( maxStack )  || sig.equals ( Constants.SIG_STATIC )  )  {^46^^^^^44^60^if  ( TypeUtils.isAbstract ( access )  || sig.equals ( Constants.SIG_STATIC )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] CodeEmitter  e  Type  wrapper  boolean  Signature  sig  Type[]  exceptions  Block  handler  int  access  maxLocals  maxStack  
[BugLab_Argument_Swapping]^if  ( TypeUtils.isAbstract ( sig )  || access.equals ( Constants.SIG_STATIC )  )  {^46^^^^^44^60^if  ( TypeUtils.isAbstract ( access )  || sig.equals ( Constants.SIG_STATIC )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] CodeEmitter  e  Type  wrapper  boolean  Signature  sig  Type[]  exceptions  Block  handler  int  access  maxLocals  maxStack  
[BugLab_Wrong_Operator]^if  ( TypeUtils.isAbstract ( access )  && sig.equals ( Constants.SIG_STATIC )  )  {^46^^^^^44^60^if  ( TypeUtils.isAbstract ( access )  || sig.equals ( Constants.SIG_STATIC )  )  {^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] CodeEmitter  e  Type  wrapper  boolean  Signature  sig  Type[]  exceptions  Block  handler  int  access  maxLocals  maxStack  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, exceptions, handler, wrapper ) ;^56^^^^^44^60^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] CodeEmitter  e  Type  wrapper  boolean  Signature  sig  Type[]  exceptions  Block  handler  int  access  maxLocals  maxStack  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, wrapper, exceptions, handler ) ;^56^^^^^44^60^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] begin_method [RETURN_TYPE] CodeEmitter   int access Signature sig Type[] exceptions [VARIABLES] CodeEmitter  e  Type  wrapper  boolean  Signature  sig  Type[]  exceptions  Block  handler  int  access  maxLocals  maxStack  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, handler, wrapper, exceptions ) ;^56^^^^^54^58^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] Block  handler  Type  wrapper  boolean  int  maxLocals  maxStack  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, wrapper, exceptions, handler ) ;^56^^^^^54^58^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] UndeclaredThrowableTransformer 1  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] Block  handler  Type  wrapper  boolean  int  maxLocals  maxStack  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, exceptions, handler, wrapper ) ;^56^^^^^54^58^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] 1  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] Block  handler  int  maxLocals  maxStack  boolean  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, wrapper, exceptions, handler ) ;^56^^^^^54^58^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] 1  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] Block  handler  int  maxLocals  maxStack  boolean  
[BugLab_Argument_Swapping]^EmitUtils.wrap_undeclared_throwable ( this, handler, wrapper, exceptions ) ;^56^^^^^54^58^EmitUtils.wrap_undeclared_throwable ( this, handler, exceptions, wrapper ) ;^[CLASS] 1  [METHOD] visitMaxs [RETURN_TYPE] void   int maxStack int maxLocals [VARIABLES] Block  handler  int  maxLocals  maxStack  boolean  
