[BugLab_Variable_Misuse]^for  ( jnt i = 0; i < filesets.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^for  ( filesetsnt i = 0; i < i.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == filesets.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= filesets.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Literal]^for  ( int i = j; i < filesets.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < filesets.size (  ) ; i++ )  {^36^^^^^33^47^for  ( int i = 0; i < filesets.size (  ) ; i++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^for  ( int i = 0; j < srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < dirFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < i; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^for  ( int j = 0; j < srcFiles; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = i; j < srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^File src = new File ( src, srcFiles[j] ) ;^42^^^^^33^47^File src = new File ( dir, srcFiles[j] ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^File src = new File ( srcFiles, dir[j] ) ;^42^^^^^33^47^File src = new File ( dir, srcFiles[j] ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^fileMap.put ( dir.getAbsolutePath (  ) , src ) ;^43^^^^^33^47^fileMap.put ( src.getAbsolutePath (  ) , src ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Variable_Misuse]^FileSet fs =  ( FileSet ) filesets.elementAt ( j ) ;^37^^^^^33^47^FileSet fs =  ( FileSet ) filesets.elementAt ( i ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^FileSet fs =  ( FileSet ) i.elementAt ( filesets ) ;^37^^^^^33^47^FileSet fs =  ( FileSet ) filesets.elementAt ( i ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^DirectoryScanner ds = p.getDirectoryScanner ( fs ) ;^38^^^^^33^47^DirectoryScanner ds = fs.getDirectoryScanner ( p ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^File dir = p.getDir ( fs ) ;^40^^^^^33^47^File dir = fs.getDir ( p ) ;^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Argument_Swapping]^for  ( int srcFiles.length = 0; j < j; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
[BugLab_Wrong_Literal]^for  ( int j = j; j < srcFiles.length; j++ )  {^41^^^^^33^47^for  ( int j = 0; j < srcFiles.length; j++ )  {^[CLASS] AbstractProcessTask  [METHOD] getFiles [RETURN_TYPE] Collection   [VARIABLES] Project  p  boolean  FileSet  fs  DirectoryScanner  ds  String[]  srcFiles  Vector  filesets  Map  fileMap  File  dir  src  int  i  j  
