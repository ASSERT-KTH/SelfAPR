[buglab_swap_variables]^interfaces = TypeUtils.add ( FIELD_PROVIDER, interfaces ) ;^53^^^^^51^58^interfaces = TypeUtils.add ( interfaces, FIELD_PROVIDER ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] begin_class [RETURN_TYPE] void   int version int access String className Type superType Type[] interfaces String sourceFile [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Type[]  interfaces  String  FIELD_NAMES  FIELD_TYPES  className  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^interfaces = TypeUtils.add (  FIELD_PROVIDER ) ;^53^^^^^51^58^interfaces = TypeUtils.add ( interfaces, FIELD_PROVIDER ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] begin_class [RETURN_TYPE] void   int version int access String className Type superType Type[] interfaces String sourceFile [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Type[]  interfaces  String  FIELD_NAMES  FIELD_TYPES  className  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^interfaces = TypeUtils.add ( interfaces ) ;^53^^^^^51^58^interfaces = TypeUtils.add ( interfaces, FIELD_PROVIDER ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] begin_class [RETURN_TYPE] void   int version int access String className Type superType Type[] interfaces String sourceFile [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Type[]  interfaces  String  FIELD_NAMES  FIELD_TYPES  className  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^fields.put ( type, name ) ;^64^^^^^60^66^fields.put ( name, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] declare_field [RETURN_TYPE] void   int access String name Type type Object value [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Object  value  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^fields.put (  type ) ;^64^^^^^60^66^fields.put ( name, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] declare_field [RETURN_TYPE] void   int access String name Type type Object value [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Object  value  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^fields.put ( name ) ;^64^^^^^60^66^fields.put ( name, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] declare_field [RETURN_TYPE] void   int access String name Type type Object value [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Object  value  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  version  
[buglab_swap_variables]^for  ( indexes.lengthnt i = 0; i < i; i++ )  {^85^^^^^81^100^for  ( int i = 0; i < indexes.length; i++ )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^for  ( indexesnt i = 0; i < i.length; i++ )  {^85^^^^^81^100^for  ( int i = 0; i < indexes.length; i++ )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^setByIndex ( indexes, names ) ;^98^^^^^81^100^setByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^setByIndex (  indexes ) ;^98^^^^^81^100^setByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^setByIndex ( names ) ;^98^^^^^81^100^setByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^getByIndex ( indexes, names ) ;^99^^^^^81^100^getByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^getByIndex (  indexes ) ;^99^^^^^81^100^getByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^getByIndex ( names ) ;^99^^^^^81^100^getByIndex ( names, indexes ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] generate [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.push_object ( names, e ) ;^104^^^^^102^118^EmitUtils.push_object ( e, names ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.push_object (  names ) ;^104^^^^^102^118^EmitUtils.push_object ( e, names ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.push_object ( e ) ;^104^^^^^102^118^EmitUtils.push_object ( e, names ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^e.putstatic ( getClassType (  ) ,  Constants.TYPE_STRING_ARRAY ) ;^105^^^^^102^118^e.putstatic ( getClassType (  ) , FIELD_NAMES, Constants.TYPE_STRING_ARRAY ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^for ( names.lengthnt i = 0; i < i; i++  ) {^110^^^^^102^118^for ( int i = 0; i < names.length; i++  ) {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^for ( int i = 0; i < names.length.length; i++  ) {^110^^^^^102^118^for ( int i = 0; i < names.length; i++  ) {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[i] ) ;^113^^^^^102^118^Type type =  ( Type ) fields.get ( names[i] ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.load_class ( type, e ) ;^114^^^^^102^118^EmitUtils.load_class ( e, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.load_class (  type ) ;^114^^^^^102^118^EmitUtils.load_class ( e, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^EmitUtils.load_class ( e ) ;^114^^^^^102^118^EmitUtils.load_class ( e, type ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^e.putstatic ( getClassType (  ) ,  Constants.TYPE_CLASS_ARRAY ) ;^117^^^^^102^118^e.putstatic ( getClassType (  ) , FIELD_TYPES, Constants.TYPE_CLASS_ARRAY ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] initFieldProvider [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  version  
[buglab_swap_variables]^e.getstatic ( getClassType (  ) ,  Constants.TYPE_STRING_ARRAY ) ;^122^^^^^120^125^e.getstatic ( getClassType (  ) , FIELD_NAMES, Constants.TYPE_STRING_ARRAY ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getNames [RETURN_TYPE] void   [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  version  
[buglab_swap_variables]^e.getstatic ( getClassType (  ) ,  Constants.TYPE_CLASS_ARRAY ) ;^129^^^^^127^132^e.getstatic ( getClassType (  ) , FIELD_TYPES, Constants.TYPE_CLASS_ARRAY ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getTypes [RETURN_TYPE] void   [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  version  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[key] ) ;^141^^^^^134^151^Type type =  ( Type ) fields.get ( names[key] ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.process_switch (  new ProcessSwitchCallback (  )  {^139^^^^^134^151^e.process_switch ( indexes, new ProcessSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^147^^^^^134^151^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[key] ) ;^141^^^^^140^145^Type type =  ( Type ) fields.get ( names[key] ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processCase [RETURN_TYPE] void   int key Label end [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^147^^^^^146^148^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  boolean  Map  fields  int  access  i  key  version  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[key] ) ;^159^^^^^153^169^Type type =  ( Type ) fields.get ( names[key] ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.process_switch (  new ProcessSwitchCallback (  )  {^157^^^^^153^169^e.process_switch ( indexes, new ProcessSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^165^^^^^153^169^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getByIndex [RETURN_TYPE] void   String[] names final int[] indexes [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  int[]  indexes  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[key] ) ;^159^^^^^158^163^Type type =  ( Type ) fields.get ( names[key] ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processCase [RETURN_TYPE] void   int key Label end [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^165^^^^^164^166^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  boolean  Map  fields  int  access  i  key  version  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  
[buglab_swap_variables]^EmitUtils.string_switch (  names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^177^^^^^173^189^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^179^^^^^173^189^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^EmitUtils.string_switch ( names, e, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^177^^^^^173^189^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^EmitUtils.string_switch ( e,  Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^177^^^^^173^189^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^185^^^^^173^189^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] getField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^179^^^^^178^183^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^185^^^^^184^186^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  boolean  Map  fields  int  access  i  key  version  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  
[buglab_swap_variables]^EmitUtils.string_switch (  names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^196^^^^^191^208^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^198^^^^^191^208^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^EmitUtils.string_switch ( names, e, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^196^^^^^191^208^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^EmitUtils.string_switch ( e,  Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^196^^^^^191^208^EmitUtils.string_switch ( e, names, Constants.SWITCH_STYLE_HASH, new ObjectSwitchCallback (  )  {^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^204^^^^^191^208^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] setField [RETURN_TYPE] void   String[] names [VARIABLES] CodeEmitter  e  Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  String[]  names  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^198^^^^^197^202^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  boolean  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  Label  end  Object  key  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  Map  fields  int  access  i  key  version  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^204^^^^^203^205^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] FieldProviderTransformer 1 2 3 4  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] Type  FIELD_PROVIDER  ILLEGAL_ARGUMENT_EXCEPTION  superType  type  String  FIELD_NAMES  FIELD_TYPES  className  name  sourceFile  boolean  Map  fields  int  access  i  key  version  Signature  PROVIDER_GET  PROVIDER_GET_BY_INDEX  PROVIDER_GET_NAMES  PROVIDER_GET_TYPES  PROVIDER_SET  PROVIDER_SET_BY_INDEX  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^147^^^^^146^148^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] 1  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^Type type =  ( Type ) names.get ( fields[key] ) ;^159^^^^^158^163^Type type =  ( Type ) fields.get ( names[key] ) ;^[CLASS] 2  [METHOD] processCase [RETURN_TYPE] void   int key Label end [VARIABLES] Type  type  boolean  Label  end  int  key  
[buglab_swap_variables]^e.throw_exception (  "Unknown field index" ) ;^165^^^^^164^166^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field index" ) ;^[CLASS] 2  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^179^^^^^178^183^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] 3  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] Type  type  boolean  Label  end  Object  key  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^185^^^^^184^186^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] 3  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] boolean  
[buglab_swap_variables]^Type type =  ( Type ) key.get ( fields ) ;^198^^^^^197^202^Type type =  ( Type ) fields.get ( key ) ;^[CLASS] 4  [METHOD] processCase [RETURN_TYPE] void   Object key Label end [VARIABLES] Type  type  boolean  Label  end  Object  key  
[buglab_swap_variables]^e.throw_exception (  "Unknown field name" ) ;^204^^^^^203^205^e.throw_exception ( ILLEGAL_ARGUMENT_EXCEPTION, "Unknown field name" ) ;^[CLASS] 4  [METHOD] processDefault [RETURN_TYPE] void   [VARIABLES] boolean  
