[BugLab_Variable_Misuse]^target = accept ( version, version, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, signature, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, name, name, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, name, signature, name, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( signature, access, name, version, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( access, version, name, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, access, signature, name, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, access, name, superName, signature, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, access, name, interfaces, superName, signature )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( pass, access, name, signature, superName, interfaces )  ? version : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, access, cv, signature, superName, interfaces )  ? pass : name;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, superName, signature, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, name, superName, superName, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target = accept ( version, access, name, signature, signature, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( superName, access, name, signature, version, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, access, superName, signature, name, interfaces )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target = accept ( version, interfaces, name, signature, superName, access )  ? pass : cv;^41^^^^^35^43^target = accept ( version, access, name, signature, superName, interfaces )  ? pass : cv;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target.visit ( access, access, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target.visit ( version, version, name, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target.visit ( version, access, signature, signature, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target.visit ( version, access, name, superName, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^target.visit ( version, access, name, signature, name, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visit ( version, superName, name, signature, access, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visit ( version, access, signature, name, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visit ( version, signature, name, access, superName, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visit ( version, access, superName, signature, name, interfaces ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visit ( interfaces, access, name, signature, superName, version ) ;^42^^^^^35^43^target.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^target.visitSource ( debug, source ) ;^46^^^^^45^47^target.visitSource ( source, debug ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  debug  source  boolean  
[BugLab_Variable_Misuse]^target.visitOuterClass ( name, name, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^target.visitOuterClass ( owner, owner, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^target.visitOuterClass ( owner, name, name ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^target.visitOuterClass ( name, owner, desc ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^target.visitOuterClass ( owner, desc, name ) ;^50^^^^^49^51^target.visitOuterClass ( owner, name, desc ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^return desc.visitAnnotation ( target, visible ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return visible.visitAnnotation ( desc, target ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return target.visitAnnotation ( visible, desc ) ;^54^^^^^53^55^return target.visitAnnotation ( desc, visible ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  boolean  visible  
[BugLab_Variable_Misuse]^target.visitInnerClass ( outerName, outerName, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^target.visitInnerClass ( name, name, innerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^target.visitInnerClass ( name, outerName, outerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^target.visitInnerClass ( innerName, outerName, name, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^target.visitInnerClass ( name, innerName, outerName, access ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^target.visitInnerClass ( name, outerName, access, innerName ) ;^62^^^^^61^63^target.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitField ( access, signature, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitField ( access, name, name, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitField ( access, name, desc, name, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return access.visitField ( target, name, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitField ( access, desc, name, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitField ( access, signature, desc, name, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitField ( value, name, desc, signature, access ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitField ( access, name, signature, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitField ( access, name, desc, desc, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitField ( name, access, desc, signature, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return signature.visitField ( access, name, desc, target, value ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitField ( access, name, desc, value, signature ) ;^70^^^^^65^71^return target.visitField ( access, name, desc, signature, value ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] ClassTransformer  pass  Object  value  ClassVisitor  target  String  desc  name  signature  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitMethod ( access, signature, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitMethod ( access, name, signature, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitMethod ( access, name, desc, name, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( desc, name, access, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( access, signature, desc, name, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( access, desc, name, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return signature.visitMethod ( access, name, desc, target, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( exceptions, name, desc, signature, access ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitMethod ( access, desc, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Variable_Misuse]^return target.visitMethod ( access, name, desc, desc, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return access.visitMethod ( target, name, desc, signature, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( access, name, signature, desc, exceptions ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return target.visitMethod ( access, name, exceptions, signature, desc ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
[BugLab_Argument_Swapping]^return exceptions.visitMethod ( access, name, desc, signature, target ) ;^78^^^^^73^79^return target.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] AbstractClassFilterTransformer  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassTransformer  pass  ClassVisitor  target  String  desc  name  signature  String[]  exceptions  boolean  int  access  
