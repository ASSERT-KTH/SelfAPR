[BugLab_Variable_Misuse]^this.cv1 = cv2;^24^^^^^23^26^this.cv1 = cv1;^[CLASS] ClassVisitorTee  [METHOD] <init> [RETURN_TYPE] ClassVisitor)   ClassVisitor cv1 ClassVisitor cv2 [VARIABLES] ClassVisitor  cv1  cv2  boolean  
[BugLab_Variable_Misuse]^this.cv2 = cv1;^25^^^^^23^26^this.cv2 = cv2;^[CLASS] ClassVisitorTee  [METHOD] <init> [RETURN_TYPE] ClassVisitor)   ClassVisitor cv1 ClassVisitor cv2 [VARIABLES] ClassVisitor  cv1  cv2  boolean  
[BugLab_Variable_Misuse]^cv1.visit ( version, access, superName, signature, superName, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv1.visit ( version, access, name, superName, superName, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv1.visit ( version, access, name, signature, name, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv1.visit ( signature, access, name, version, superName, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv1.visit ( version, superName, name, signature, access, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv1.visit ( version, access, signature, name, superName, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv1.visit ( version, access, superName, signature, name, interfaces ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv1.visit ( interfaces, access, name, signature, superName, version ) ;^34^^^^^28^36^cv1.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv2.visit ( access, access, name, signature, superName, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv2.visit ( version, access, name, superName, superName, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv2.visit ( version, access, name, signature, name, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv2.visit ( access, version, name, signature, superName, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv2.visit ( version, access, superName, signature, name, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv2.visit ( version, access, signature, name, superName, interfaces ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Argument_Swapping]^cv2.visit ( version, access, interfaces, signature, superName, name ) ;^35^^^^^28^36^cv2.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] ClassVisitorTee  [METHOD] visit [RETURN_TYPE] void   int version int access String name String signature String superName String[] interfaces [VARIABLES] ClassVisitor  cv1  cv2  String  name  signature  superName  String[]  interfaces  boolean  int  access  version  
[BugLab_Variable_Misuse]^cv1.visitInnerClass ( innerName, outerName, innerName, access ) ;^45^^^^^44^47^cv1.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv1.visitInnerClass ( name, access, innerName, outerName ) ;^45^^^^^44^47^cv1.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv1.visitInnerClass ( innerName, outerName, name, access ) ;^45^^^^^44^47^cv1.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^cv2.visitInnerClass ( innerName, outerName, innerName, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^cv2.visitInnerClass ( name, name, innerName, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^cv2.visitInnerClass ( name, outerName, name, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv2.visitInnerClass ( outerName, name, innerName, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv2.visitInnerClass ( name, innerName, outerName, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv2.visitInnerClass ( innerName, outerName, name, access ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Argument_Swapping]^cv2.visitInnerClass ( name, access, innerName, outerName ) ;^46^^^^^44^47^cv2.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] ClassVisitorTee  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName int access [VARIABLES] ClassVisitor  cv1  cv2  String  innerName  name  outerName  boolean  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv1 = cv1.visitField ( access, signature, desc, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv1 = cv1.visitField ( access, name, signature, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv1 = cv1.visitField ( access, name, desc, name, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv1 = cv2.visitField ( access, name, desc, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = access.visitField ( cv1, name, desc, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( access, signature, desc, name, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( access, desc, name, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( access, name, signature, desc, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( access, name, desc, value, signature ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = value.visitField ( access, name, desc, signature, cv1 ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv1 = cv1.visitField ( access, name, desc, desc, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( signature, name, desc, access, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( name, access, desc, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = cv1.visitField ( access, name, value, signature, desc ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv1 = name.visitField ( access, cv1, desc, signature, value ) ;^54^^^^^49^61^FieldVisitor fv1 = cv1.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv2.visitField ( access, signature, desc, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv2.visitField ( access, name, signature, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv2.visitField ( access, name, desc, name, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv1.visitField ( access, name, desc, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = access.visitField ( cv2, name, desc, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( access, value, desc, signature, name ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( access, desc, name, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( access, signature, desc, name, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( access, name, value, signature, desc ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = desc.visitField ( access, name, cv2, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv2.visitField ( access, name, name, signature, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^FieldVisitor fv2 = cv2.visitField ( access, name, desc, desc, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( signature, name, desc, access, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^FieldVisitor fv2 = cv2.visitField ( access, name, signature, desc, value ) ;^55^^^^^49^61^FieldVisitor fv2 = cv2.visitField ( access, name, desc, signature, value ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^if  ( fv2 == null ) return fv1;^56^57^^^^49^61^if  ( fv1 == null ) return fv2;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Wrong_Operator]^if  ( fv1 != null ) return fv2;^56^57^^^^49^61^if  ( fv1 == null ) return fv2;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^return fv1;^57^^^^^49^61^return fv2;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^if  ( fv1 == null ) return fv2;^58^59^^^^49^61^if  ( fv2 == null ) return fv1;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Wrong_Operator]^if  ( fv2 != null ) return fv1;^58^59^^^^49^61^if  ( fv2 == null ) return fv1;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^return fv2;^59^^^^^49^61^return fv1;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Argument_Swapping]^return new FieldVisitorTee ( fv2, fv1 ) ;^60^^^^^49^61^return new FieldVisitorTee ( fv1, fv2 ) ;^[CLASS] ClassVisitorTee  [METHOD] visitField [RETURN_TYPE] FieldVisitor   int access String name String desc String signature Object value [VARIABLES] Object  value  ClassVisitor  cv1  cv2  String  desc  name  signature  boolean  FieldVisitor  fv1  fv2  int  access  
[BugLab_Variable_Misuse]^MethodVisitor mv1 = cv1.visitMethod ( access, signature, desc, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv1 = cv1.visitMethod ( access, name, signature, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, name, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv1 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = access.visitMethod ( cv1, name, desc, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( access, signature, desc, name, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( access, name, signature, desc, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( exceptions, name, desc, signature, access ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = exceptions.visitMethod ( access, name, desc, signature, cv1 ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv1 = cv1.visitMethod ( access, name, name, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( name, access, desc, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( access, desc, name, signature, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, exceptions, signature ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv1 = signature.visitMethod ( access, name, desc, cv1, exceptions ) ;^69^^^^^64^76^MethodVisitor mv1 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv2 = cv2.visitMethod ( access, signature, desc, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv2 = cv2.visitMethod ( access, name, signature, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, name, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv2 = cv1.visitMethod ( access, name, desc, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = access.visitMethod ( cv2, name, desc, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = cv2.visitMethod ( access, signature, desc, name, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = cv2.visitMethod ( access, name, signature, desc, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = cv2.visitMethod ( signature, name, desc, access, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, exceptions, signature ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = desc.visitMethod ( access, name, cv2, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^MethodVisitor mv2 = cv2.visitMethod ( access, desc, desc, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = cv2.visitMethod ( access, desc, name, signature, exceptions ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^MethodVisitor mv2 = exceptions.visitMethod ( access, name, desc, signature, cv2 ) ;^70^^^^^64^76^MethodVisitor mv2 = cv2.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^if  ( mv2 == null ) return mv1;^71^72^^^^64^76^if  ( mv1 == null ) return mv2;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Wrong_Operator]^if  ( mv1 != null ) return mv2;^71^72^^^^64^76^if  ( mv1 == null ) return mv2;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^return mv1;^72^^^^^64^76^return mv2;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^if  ( mv1 == null ) return mv2;^73^74^^^^64^76^if  ( mv2 == null ) return mv1;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Wrong_Operator]^if  ( mv2 != null ) return mv1;^73^74^^^^64^76^if  ( mv2 == null ) return mv1;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Variable_Misuse]^return mv2;^74^^^^^64^76^return mv1;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^return new MethodVisitorTee ( mv2, mv1 ) ;^75^^^^^64^76^return new MethodVisitorTee ( mv1, mv2 ) ;^[CLASS] ClassVisitorTee  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   int access String name String desc String signature String[] exceptions [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  signature  String[]  exceptions  boolean  int  access  MethodVisitor  mv1  mv2  
[BugLab_Argument_Swapping]^cv1.visitSource ( debug, source ) ;^79^^^^^78^81^cv1.visitSource ( source, debug ) ;^[CLASS] ClassVisitorTee  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassVisitor  cv1  cv2  String  debug  source  boolean  
[BugLab_Variable_Misuse]^cv2.visitSource ( debug, debug ) ;^80^^^^^78^81^cv2.visitSource ( source, debug ) ;^[CLASS] ClassVisitorTee  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassVisitor  cv1  cv2  String  debug  source  boolean  
[BugLab_Argument_Swapping]^cv2.visitSource ( debug, source ) ;^80^^^^^78^81^cv2.visitSource ( source, debug ) ;^[CLASS] ClassVisitorTee  [METHOD] visitSource [RETURN_TYPE] void   String source String debug [VARIABLES] ClassVisitor  cv1  cv2  String  debug  source  boolean  
[BugLab_Variable_Misuse]^cv1.visitOuterClass ( desc, name, desc ) ;^84^^^^^83^86^cv1.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^cv1.visitOuterClass ( owner, desc, desc ) ;^84^^^^^83^86^cv1.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^cv1.visitOuterClass ( owner, name, name ) ;^84^^^^^83^86^cv1.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^cv1.visitOuterClass ( desc, name, owner ) ;^84^^^^^83^86^cv1.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^cv1.visitOuterClass ( owner, desc, name ) ;^84^^^^^83^86^cv1.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^cv2.visitOuterClass ( desc, name, desc ) ;^85^^^^^83^86^cv2.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^cv2.visitOuterClass ( owner, owner, desc ) ;^85^^^^^83^86^cv2.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Variable_Misuse]^cv2.visitOuterClass ( owner, name, name ) ;^85^^^^^83^86^cv2.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^cv2.visitOuterClass ( name, owner, desc ) ;^85^^^^^83^86^cv2.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^cv2.visitOuterClass ( owner, desc, name ) ;^85^^^^^83^86^cv2.visitOuterClass ( owner, name, desc ) ;^[CLASS] ClassVisitorTee  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv1  cv2  String  desc  name  owner  boolean  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( desc.visitAnnotation ( cv1, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( visible, desc ) , cv2.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( cv2.visitAnnotation ( desc, visible ) , cv1.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv1.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
[BugLab_Argument_Swapping]^return AnnotationVisitorTee.getInstance ( visible.visitAnnotation ( desc, cv1 ) , cv2.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
[BugLab_Variable_Misuse]^return AnnotationVisitorTee.getInstance ( cv2.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^89^90^^^^88^91^return AnnotationVisitorTee.getInstance ( cv1.visitAnnotation ( desc, visible ) , cv2.visitAnnotation ( desc, visible )  ) ;^[CLASS] ClassVisitorTee  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc boolean visible [VARIABLES] ClassVisitor  cv1  cv2  String  desc  boolean  visible  
