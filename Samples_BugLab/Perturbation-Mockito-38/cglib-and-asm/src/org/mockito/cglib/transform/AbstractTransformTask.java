[BugLab_Wrong_Operator]^log ( "ignoring "  <<  file.toURL (  ) , Project.MSG_WARN ) ;^65^^^^^53^68^log ( "ignoring " + file.toURL (  ) , Project.MSG_WARN ) ;^[CLASS] AbstractTransformTask  [METHOD] processFile [RETURN_TYPE] void   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Wrong_Operator]^log ( "ignoring "   instanceof   file.toURL (  ) , Project.MSG_WARN ) ;^65^^^^^53^68^log ( "ignoring " + file.toURL (  ) , Project.MSG_WARN ) ;^[CLASS] AbstractTransformTask  [METHOD] processFile [RETURN_TYPE] void   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Wrong_Operator]^log ( "ignoring "  !=  file.toURL (  ) , Project.MSG_WARN ) ;^65^^^^^53^68^log ( "ignoring " + file.toURL (  ) , Project.MSG_WARN ) ;^[CLASS] AbstractTransformTask  [METHOD] processFile [RETURN_TYPE] void   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Wrong_Operator]^log ( "ignoring "  &&  file.toURL (  ) , Project.MSG_WARN ) ;^65^^^^^53^68^log ( "ignoring " + file.toURL (  ) , Project.MSG_WARN ) ;^[CLASS] AbstractTransformTask  [METHOD] processFile [RETURN_TYPE] void   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Wrong_Operator]^if  ( t == null )  {^84^^^^^77^101^if  ( t != null )  {^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  <=  file.toURL (  )  ) ;^87^^^^^77^101^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( t ) , attributes (  ) , getFlags (  )  ) , file ) .generateClass ( w ) ;^89^90^91^^^77^101^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( file ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  <<  file.toURL (  )  ) ;^87^^^^^77^101^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( w ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( file ) ;^89^90^91^^^77^101^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( file ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  >  file.toURL (  )  ) ;^87^^^^^77^101^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  >>  file.toURL (  )  ) ;^87^^^^^77^101^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( file ) , attributes (  ) , getFlags (  )  ) , w ) .generateClass ( t ) ;^89^90^91^^^77^101^new TransformingClassGenerator ( new ClassReaderGenerator ( getClassReader ( file ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] processClassFile [RETURN_TYPE] void   File file [VARIABLES] boolean  verbose  FileOutputStream  fos  ClassReader  reader  ClassTransformer  t  String[]  name  File  file  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Literal]^return CLASS_MAGIC;^104^^^^^103^105^return 0;^[CLASS] AbstractTransformTask  [METHOD] getFlags [RETURN_TYPE] int   [VARIABLES] int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Argument_Swapping]^return checkMagic ( CLASS_MAGIC, file ) ;^120^^^^^118^122^return checkMagic ( file, CLASS_MAGIC ) ;^[CLASS] AbstractTransformTask  [METHOD] isClassFile [RETURN_TYPE] boolean   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Variable_Misuse]^return checkMagic ( file, ZIP_MAGIC ) ;^120^^^^^118^122^return checkMagic ( file, CLASS_MAGIC ) ;^[CLASS] AbstractTransformTask  [METHOD] isClassFile [RETURN_TYPE] boolean   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  boolean  verbose  
[BugLab_Variable_Misuse]^log ( "processing " + tempFile.toURL (  )  ) ;^127^^^^^112^142^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "processing "  >  file.toURL (  )  ) ;^127^^^^^112^142^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "processing "  ||  file.toURL (  )  ) ;^127^^^^^112^142^log ( "processing " + file.toURL (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^File tempFile = File.createTempFile ( tempFile.getName (  ) , null, new File ( file .getAbsoluteFile (  ) .getParent (  )  )  ) ;^130^131^^^^115^145^File tempFile = File.createTempFile ( file.getName (  ) , null, new File ( file .getAbsoluteFile (  ) .getParent (  )  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^while  (  ( outEntry = zip.getNextEntry (  )  )  != null )  {^141^^^^^126^156^while  (  ( entry = zip.getNextEntry (  )  )  != null )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^while  (  ( entry = zip.getNextEntry (  )  )  == null )  {^141^^^^^126^156^while  (  ( entry = zip.getNextEntry (  )  )  != null )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if  ( din.readInt (  )  == ZIP_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^if  ( CLASS_MAGIC.readInt (  )  == din )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( din.readInt (  )  >= CLASS_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^log ( "ignoring " + outEntry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  &&  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^log ( "ignoring " + outEntry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >=  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  |  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ||  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  &  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ==  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if ( entry.getMethod (  )  == ZipEntry.STORED ) {^169^^^^^154^184^if ( outEntry.getMethod (  )  == ZipEntry.STORED ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if ( outEntry.getMethod (  )  == ZipEntry.ZIP_MAGIC ) {^169^^^^^154^184^if ( outEntry.getMethod (  )  == ZipEntry.STORED ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if ( outEntry.getMethod (  )  != ZipEntry.STORED ) {^169^^^^^154^184^if ( outEntry.getMethod (  )  == ZipEntry.STORED ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^outEntry.setCompressedSize ( ZIP_MAGIC ) ;^173^^^^^158^188^outEntry.setCompressedSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^outEntry.setCompressedSize ( bytes.length.length ) ;^173^^^^^158^188^outEntry.setCompressedSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^ZipEntry outEntry = new ZipEntry ( outEntry.getName (  )  ) ;^163^^^^^148^178^ZipEntry outEntry = new ZipEntry ( entry.getName (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "   instanceof   entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^outEntry.setMethod ( outEntry.getMethod (  )  ) ;^164^^^^^149^179^outEntry.setMethod ( entry.getMethod (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^outEntry.setComment ( outEntry.getComment (  )  ) ;^165^^^^^150^180^outEntry.setComment ( entry.getComment (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^outEntry.setSize ( bytes.length.length ) ;^166^^^^^151^181^outEntry.setSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^outEntry.setSize ( bytes ) ;^166^^^^^151^181^outEntry.setSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^outEntry.setCompressedSize ( bytes ) ;^173^^^^^158^188^outEntry.setCompressedSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^out.putNextEntry ( entry ) ;^175^^^^^160^190^out.putNextEntry ( outEntry ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^out.putNextEntry ( outEntryEntry ) ;^175^^^^^160^190^out.putNextEntry ( outEntry ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^out.putNextEntry ( out ) ;^175^^^^^160^190^out.putNextEntry ( outEntry ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( din.readInt (  )  != CLASS_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <=  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "   instanceof   entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <=  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  &  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if ( outEntry.getMethod (  )  <= ZipEntry.STORED ) {^169^^^^^154^184^if ( outEntry.getMethod (  )  == ZipEntry.STORED ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if ( tempFile.delete (  )  ) {^190^^^^^175^205^if ( file.delete (  )  ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if ( !newFile.renameTo ( tempFile )  ) {^194^^^^^179^209^if ( !newFile.renameTo ( file )  ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^File newFile = new File ( newFile.getAbsolutePath (  )  ) ;^192^^^^^177^207^File newFile = new File ( tempFile.getAbsolutePath (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^File newFile = new File ( file.getAbsolutePath (  )  ) ;^192^^^^^177^207^File newFile = new File ( tempFile.getAbsolutePath (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^if ( !newFile.renameTo ( newFile )  ) {^194^^^^^179^209^if ( !newFile.renameTo ( file )  ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Argument_Swapping]^while  (  ( zip = entry.getNextEntry (  )  )  != null )  {^141^^^^^126^156^while  (  ( entry = zip.getNextEntry (  )  )  != null )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( din.readInt (  )  > CLASS_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ^  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( din.readInt (  )  <= CLASS_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >>  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ||  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if ( outEntry.getMethod (  )  >= ZipEntry.STORED ) {^169^^^^^154^184^if ( outEntry.getMethod (  )  == ZipEntry.STORED ) {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^outEntry.setSize ( ZIP_MAGIC ) ;^166^^^^^151^181^outEntry.setSize ( bytes.length ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >=  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  >>  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ==  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  &&  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  ^  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  !=  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  |  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  !=  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^FileOutputStream fout = new FileOutputStream ( newFile, false ) ;^136^^^^^121^151^FileOutputStream fout = new FileOutputStream ( tempFile, false ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Literal]^FileOutputStream fout = new FileOutputStream ( tempFile, true ) ;^136^^^^^121^151^FileOutputStream fout = new FileOutputStream ( tempFile, false ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Variable_Misuse]^ZipInputStream zip = new ZipInputStream ( new FileInputStream ( tempFile )  ) ;^134^^^^^119^149^ZipInputStream zip = new ZipInputStream ( new FileInputStream ( file )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <<  entry.toString (  )  ) ;^158^^^^^152^160^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^log ( "ignoring "  <<  entry.toString (  )  ) ;^158^^^^^143^173^log ( "ignoring " + entry.toString (  )  ) ;^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( din.readInt (  )  < CLASS_MAGIC )  {^152^^^^^137^167^if  ( din.readInt (  )  == CLASS_MAGIC )  {^[CLASS] AbstractTransformTask  [METHOD] processJarFile [RETURN_TYPE] void   File file [VARIABLES] byte[]  bytes  ZipInputStream  zip  boolean  verbose  CRC32  crc  ZipOutputStream  out  FileOutputStream  fout  ZipEntry  entry  outEntry  DataInputStream  din  File  file  newFile  tempFile  int  CLASS_MAGIC  ZIP_MAGIC  
[BugLab_Wrong_Operator]^if  ( t == null )  {^222^^^^^216^234^if  ( t != null )  {^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  >>  name[0] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Literal]^log ( "processing " + name[1] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( t )  ) , attributes (  ) , getFlags (  )  ) , bytes ) .generateClass ( w ) ;^226^227^228^^^216^234^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( bytes )  ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  |  name[0] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( w )  ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( bytes ) ;^226^227^228^^^216^234^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( bytes )  ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Argument_Swapping]^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( bytes )  ) , attributes (  ) , getFlags (  )  ) , w ) .generateClass ( t ) ;^226^227^228^^^216^234^new TransformingClassGenerator ( new ClassReaderGenerator ( new ClassReader ( new ByteArrayInputStream ( bytes )  ) , attributes (  ) , getFlags (  )  ) , t ) .generateClass ( w ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  &  name[0] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Operator]^log ( "processing "  >=  name[0] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Wrong_Literal]^log ( "processing " + name[CLASS_MAGIC] ) ;^224^^^^^216^234^log ( "processing " + name[0] ) ;^[CLASS] AbstractTransformTask  [METHOD] process [RETURN_TYPE] byte[]   byte[] bytes [VARIABLES] byte[]  bytes  boolean  verbose  ClassReader  reader  ClassTransformer  t  String[]  name  ByteArrayOutputStream  out  int  CLASS_MAGIC  ZIP_MAGIC  ClassWriter  w  
[BugLab_Variable_Misuse]^while  (  ( ZIP_MAGIC = in.read (  )  )  != -1 )  {^246^^^^^241^250^while  (  ( b = in.read (  )  )  != -1 )  {^[CLASS] AbstractTransformTask  [METHOD] getBytes [RETURN_TYPE] byte[]   ZipInputStream zip [VARIABLES] ZipInputStream  zip  boolean  verbose  ByteArrayOutputStream  bout  int  CLASS_MAGIC  ZIP_MAGIC  b  InputStream  in  
[BugLab_Argument_Swapping]^while  (  ( in = b.read (  )  )  != -1 )  {^246^^^^^241^250^while  (  ( b = in.read (  )  )  != -1 )  {^[CLASS] AbstractTransformTask  [METHOD] getBytes [RETURN_TYPE] byte[]   ZipInputStream zip [VARIABLES] ZipInputStream  zip  boolean  verbose  ByteArrayOutputStream  bout  int  CLASS_MAGIC  ZIP_MAGIC  b  InputStream  in  
[BugLab_Wrong_Operator]^while  (  ( b = in.read (  )  )  < -1 )  {^246^^^^^241^250^while  (  ( b = in.read (  )  )  != -1 )  {^[CLASS] AbstractTransformTask  [METHOD] getBytes [RETURN_TYPE] byte[]   ZipInputStream zip [VARIABLES] ZipInputStream  zip  boolean  verbose  ByteArrayOutputStream  bout  int  CLASS_MAGIC  ZIP_MAGIC  b  InputStream  in  
[BugLab_Wrong_Literal]^while  (  ( b = in.read (  )  )  != -CLASS_MAGIC )  {^246^^^^^241^250^while  (  ( b = in.read (  )  )  != -1 )  {^[CLASS] AbstractTransformTask  [METHOD] getBytes [RETURN_TYPE] byte[]   ZipInputStream zip [VARIABLES] ZipInputStream  zip  boolean  verbose  ByteArrayOutputStream  bout  int  CLASS_MAGIC  ZIP_MAGIC  b  InputStream  in  
[BugLab_Variable_Misuse]^bout.write ( ZIP_MAGIC ) ;^247^^^^^241^250^bout.write ( b ) ;^[CLASS] AbstractTransformTask  [METHOD] getBytes [RETURN_TYPE] byte[]   ZipInputStream zip [VARIABLES] ZipInputStream  zip  boolean  verbose  ByteArrayOutputStream  bout  int  CLASS_MAGIC  ZIP_MAGIC  b  InputStream  in  
[BugLab_Variable_Misuse]^return bagic == m;^256^^^^^252^260^return magic == m;^[CLASS] AbstractTransformTask  [METHOD] checkMagic [RETURN_TYPE] boolean   File file long magic [VARIABLES] boolean  verbose  DataInputStream  in  File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  long  magic  
[BugLab_Argument_Swapping]^return m == magic;^256^^^^^252^260^return magic == m;^[CLASS] AbstractTransformTask  [METHOD] checkMagic [RETURN_TYPE] boolean   File file long magic [VARIABLES] boolean  verbose  DataInputStream  in  File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  long  magic  
[BugLab_Argument_Swapping]^return magicagic == m;^256^^^^^252^260^return magic == m;^[CLASS] AbstractTransformTask  [METHOD] checkMagic [RETURN_TYPE] boolean   File file long magic [VARIABLES] boolean  verbose  DataInputStream  in  File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  long  magic  
[BugLab_Wrong_Operator]^return magic >= m;^256^^^^^252^260^return magic == m;^[CLASS] AbstractTransformTask  [METHOD] checkMagic [RETURN_TYPE] boolean   File file long magic [VARIABLES] boolean  verbose  DataInputStream  in  File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  long  magic  
[BugLab_Variable_Misuse]^return checkMagic ( file, m ) ;^263^^^^^262^264^return checkMagic ( file, ZIP_MAGIC ) ;^[CLASS] AbstractTransformTask  [METHOD] isJarFile [RETURN_TYPE] boolean   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  boolean  verbose  
[BugLab_Argument_Swapping]^return checkMagic ( ZIP_MAGIC, file ) ;^263^^^^^262^264^return checkMagic ( file, ZIP_MAGIC ) ;^[CLASS] AbstractTransformTask  [METHOD] isJarFile [RETURN_TYPE] boolean   File file [VARIABLES] File  file  int  CLASS_MAGIC  ZIP_MAGIC  b  m  boolean  verbose  
