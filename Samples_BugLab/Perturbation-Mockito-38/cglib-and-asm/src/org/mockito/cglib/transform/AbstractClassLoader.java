[BugLab_Variable_Misuse]^super ( classPath ) ;^45^^^^^44^48^super ( parent ) ;^[CLASS] AbstractClassLoader 1  [METHOD] <init> [RETURN_TYPE] ClassFilter)   ClassLoader parent ClassLoader classPath ClassFilter filter [VARIABLES] ProtectionDomain  DOMAIN  ClassLoader  classPath  parent  boolean  ClassFilter  filter  
[BugLab_Variable_Misuse]^this.classPath = parent;^47^^^^^44^48^this.classPath = classPath;^[CLASS] AbstractClassLoader 1  [METHOD] <init> [RETURN_TYPE] ClassFilter)   ClassLoader parent ClassLoader classPath ClassFilter filter [VARIABLES] ProtectionDomain  DOMAIN  ClassLoader  classPath  parent  boolean  ClassFilter  filter  
[BugLab_Variable_Misuse]^if (  c != null  ) {^54^^^^^39^69^if (  loaded != null  ) {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^if (  loaded == null  ) {^54^^^^^39^69^if (  loaded != null  ) {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Variable_Misuse]^if (  c.getClassLoader (  )  == this  ) {^55^^^^^40^70^if (  loaded.getClassLoader (  )  == this  ) {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^if (  loaded.getClassLoader (  )  != this  ) {^55^^^^^40^70^if (  loaded.getClassLoader (  )  == this  ) {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Variable_Misuse]^return c;^56^^^^^41^71^return loaded;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^if (  loaded.getClassLoader (  )  >= this  ) {^55^^^^^40^70^if (  loaded.getClassLoader (  )  == this  ) {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^if  ( is != null )  {^70^^^^^55^85^if  ( is == null )  {^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Variable_Misuse]^java.io.InputStream is = parent.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Argument_Swapping]^java.io.InputStream is = name.getResourceAsStream ( classPath.replace ( '.','/' )  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  <  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  |  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  &  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Wrong_Operator]^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  >=  + ".class" ) ;^66^67^68^^^51^81^java.io.InputStream is = classPath.getResourceAsStream ( name.replace ( '.','/' )  + ".class" ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Variable_Misuse]^return loaded;^94^^^^^79^109^return c;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Argument_Swapping]^getGenerator ( w ) .generateClass ( r ) ;^90^^^^^75^105^getGenerator ( r ) .generateClass ( w ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
[BugLab_Variable_Misuse]^postProcess ( loaded ) ;^93^^^^^78^108^postProcess ( c ) ;^[CLASS] AbstractClassLoader 1  [METHOD] loadClass [RETURN_TYPE] Class   String name [VARIABLES] ProtectionDomain  DOMAIN  InputStream  is  Error  e  String  name  IOException  e  ClassWriter  w  Exception  e  byte[]  b  RuntimeException  e  boolean  ClassFilter  filter  ClassLoader  classPath  parent  ClassReader  r  Class  c  loaded  
