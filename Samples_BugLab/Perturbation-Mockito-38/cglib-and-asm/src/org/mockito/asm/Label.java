[buglab_swap_variables]^if  (  ( RESOLVED & status )  == 0 )  {^261^^^^^260^265^if  (  ( status & RESOLVED )  == 0 )  {^[CLASS] Label  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  status  
[buglab_swap_variables]^out.putShort ( source - position ) ;^300^^^^^282^303^out.putShort ( position - source ) ;^[CLASS] Label  [METHOD] put [RETURN_TYPE] void   MethodWriter owner ByteVector out final int source final boolean wideOffset [VARIABLES] Frame  frame  boolean  wideOffset  Label  next  successor  MethodWriter  owner  Object  info  int[]  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  source  status  ByteVector  out  
[buglab_swap_variables]^out.putInt ( source - position ) ;^298^^^^^282^303^out.putInt ( position - source ) ;^[CLASS] Label  [METHOD] put [RETURN_TYPE] void   MethodWriter owner ByteVector out final int source final boolean wideOffset [VARIABLES] Frame  frame  boolean  wideOffset  Label  next  successor  MethodWriter  owner  Object  info  int[]  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  source  status  ByteVector  out  
[buglab_swap_variables]^if  ( srcAndRefPositions.length >= referenceCount )  {^324^^^^^317^335^if  ( referenceCount >= srcAndRefPositions.length )  {^[CLASS] Label  [METHOD] addReference [RETURN_TYPE] void   final int sourcePosition final int referencePosition [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^System.arraycopy ( a, 0, srcAndRefPositions, 0,^326^327^328^329^^317^335^System.arraycopy ( srcAndRefPositions, 0, a, 0,^[CLASS] Label  [METHOD] addReference [RETURN_TYPE] void   final int sourcePosition final int referencePosition [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^System.arraycopy ( srcAndRefPositions, 0,  0,^326^327^328^329^^317^335^System.arraycopy ( srcAndRefPositions, 0, a, 0,^[CLASS] Label  [METHOD] addReference [RETURN_TYPE] void   final int sourcePosition final int referencePosition [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^System.arraycopy (  0, a, 0,^326^327^328^329^^317^335^System.arraycopy ( srcAndRefPositions, 0, a, 0,^[CLASS] Label  [METHOD] addReference [RETURN_TYPE] void   final int sourcePosition final int referencePosition [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  inputStackTop  line  outputStackMax  position  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^while  ( referenceCount < i )  {^365^^^^^350^380^while  ( i < referenceCount )  {^[CLASS] Label  [METHOD] resolve [RETURN_TYPE] boolean   MethodWriter owner final int position final byte[] data [VARIABLES] byte[]  data  Frame  frame  boolean  needUpdate  Label  next  successor  MethodWriter  owner  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^offset = source + position + 1;^394^^^^^369^399^offset = position + source + 1;^[CLASS] Label  [METHOD] resolve [RETURN_TYPE] boolean   MethodWriter owner final int position final byte[] data [VARIABLES] byte[]  data  Frame  frame  boolean  needUpdate  Label  next  successor  MethodWriter  owner  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^if  ( Opcodes.JSR <= opcode )  {^382^^^^^367^397^if  ( opcode <= Opcodes.JSR )  {^[CLASS] Label  [METHOD] resolve [RETURN_TYPE] boolean   MethodWriter owner final int position final byte[] data [VARIABLES] byte[]  data  Frame  frame  boolean  needUpdate  Label  next  successor  MethodWriter  owner  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^offset = source - position;^370^^^^^355^385^offset = position - source;^[CLASS] Label  [METHOD] resolve [RETURN_TYPE] boolean   MethodWriter owner final int position final byte[] data [VARIABLES] byte[]  data  Frame  frame  boolean  needUpdate  Label  next  successor  MethodWriter  owner  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^offset = source + position + 1;^394^^^^^379^409^offset = position + source + 1;^[CLASS] Label  [METHOD] resolve [RETURN_TYPE] boolean   MethodWriter owner final int position final byte[] data [VARIABLES] byte[]  data  Frame  frame  boolean  needUpdate  Label  next  successor  MethodWriter  owner  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^return  ( id[ ( int )   ( srcAndRefPositions >>> 32 ) ] &  ( int )  id )  != 0;^428^^^^^426^431^return  ( srcAndRefPositions[ ( int )   ( id >>> 32 ) ] &  ( int )  id )  != 0;^[CLASS] Label  [METHOD] inSubroutine [RETURN_TYPE] boolean   final long id [VARIABLES] Frame  frame  boolean  Label  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^if  (  ( block.srcAndRefPositions[i] & srcAndRefPositions[i] )  != 0 )  {^443^^^^^441^448^if  (  ( srcAndRefPositions[i] & block.srcAndRefPositions[i] )  != 0 )  {^[CLASS] Label  [METHOD] inSameSubroutine [RETURN_TYPE] boolean   Label block [VARIABLES] Frame  frame  boolean  Label  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^for  ( srcAndRefPositions.lengthnt i = 0; i < i; ++i )  {^442^^^^^441^448^for  ( int i = 0; i < srcAndRefPositions.length; ++i )  {^[CLASS] Label  [METHOD] inSameSubroutine [RETURN_TYPE] boolean   Label block [VARIABLES] Frame  frame  boolean  Label  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^if  (  ( block[i] & srcAndRefPositions.srcAndRefPositions[i] )  != 0 )  {^443^^^^^441^448^if  (  ( srcAndRefPositions[i] & block.srcAndRefPositions[i] )  != 0 )  {^[CLASS] Label  [METHOD] inSameSubroutine [RETURN_TYPE] boolean   Label block [VARIABLES] Frame  frame  boolean  Label  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  
[buglab_swap_variables]^addToSubroutine ( nbSubroutines, id ) ;^499^^^^^478^500^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^addToSubroutine (  nbSubroutines ) ;^499^^^^^478^500^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^addToSubroutine ( id ) ;^499^^^^^478^500^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^if  (  ( VISITED & status )  != 0 )  {^479^^^^^464^494^if  (  ( status & VISITED )  != 0 )  {^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^addToSubroutine ( nbSubroutines, id ) ;^499^^^^^484^514^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^addToSubroutine (  nbSubroutines ) ;^499^^^^^484^514^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
[buglab_swap_variables]^addToSubroutine ( id ) ;^499^^^^^484^514^addToSubroutine ( id, nbSubroutines ) ;^[CLASS] Label  [METHOD] visitSubroutine [RETURN_TYPE] void   Label JSR final long id final int nbSubroutines [VARIABLES] Frame  frame  boolean  Label  JSR  block  next  successor  Object  info  int[]  a  srcAndRefPositions  Edge  e  successors  int  DEBUG  JSR  PUSHED  REACHABLE  RESIZED  RESOLVED  RET  STORE  SUBROUTINE  TARGET  VISITED  i  inputStackTop  line  nbSubroutines  offset  opcode  outputStackMax  position  reference  referenceCount  referencePosition  source  sourcePosition  status  long  id  
