[BugLab_Variable_Misuse]^this.bv = parent;^109^^^^^100^112^this.bv = bv;^[CLASS] AnnotationWriter  [METHOD] <init> [RETURN_TYPE] ByteVector,int)   ClassWriter cw final boolean named ByteVector bv ByteVector parent final int offset [VARIABLES] AnnotationWriter  next  prev  boolean  named  ClassWriter  cw  int  offset  size  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^this.parent = bv;^110^^^^^100^112^this.parent = parent;^[CLASS] AnnotationWriter  [METHOD] <init> [RETURN_TYPE] ByteVector,int)   ClassWriter cw final boolean named ByteVector bv ByteVector parent final int offset [VARIABLES] AnnotationWriter  next  prev  boolean  named  ClassWriter  cw  int  offset  size  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^this.offset = size;^111^^^^^100^112^this.offset = offset;^[CLASS] AnnotationWriter  [METHOD] <init> [RETURN_TYPE] ByteVector,int)   ClassWriter cw final boolean named ByteVector bv ByteVector parent final int offset [VARIABLES] AnnotationWriter  next  prev  boolean  named  ClassWriter  cw  int  offset  size  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^if  ( namedd )  {^120^^^^^105^135^if  ( named )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.putShort ( name.newUTF8 ( cw )  ) ;^121^^^^^106^136^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  !=  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  <<  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  >=  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  >>  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  &  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  &&  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  <=  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^if  ( value  >  String )  {^123^^^^^108^138^if  ( value instanceof String )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^Item i = value.newConstItem ( cw ) ;^185^^^^^178^187^Item i = cw.newConstItem ( value ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^180^^^^^165^195^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'D', v.newDouble ( cw[i] ) .index ) ;^182^^^^^167^197^bv.put12 ( 'D', cw.newDouble ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^Item i = value.newConstItem ( cw ) ;^185^^^^^170^200^Item i = cw.newConstItem ( value ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^180^^^^^165^195^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v ) ;^180^^^^^165^195^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^174^^^^^159^189^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^174^^^^^159^189^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'F', v.newFloat ( cw[i] ) .index ) ;^176^^^^^161^191^bv.put12 ( 'F', cw.newFloat ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', v ) ;^174^^^^^159^189^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'J', v.newLong ( cw[i] ) .index ) ;^170^^^^^155^185^bv.put12 ( 'J', cw.newLong ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', v ) ;^168^^^^^153^183^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^168^^^^^153^183^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^162^^^^^147^177^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^162^^^^^147^177^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v ) ;^162^^^^^147^177^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'I', v.newInteger ( cw[i] ) .index ) ;^164^^^^^149^179^bv.put12 ( 'I', cw.newInteger ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^168^^^^^153^183^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'C', v.newInteger ( cw[i] ) .index ) ;^158^^^^^143^173^bv.put12 ( 'C', cw.newInteger ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^156^^^^^141^171^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v ) ;^156^^^^^141^171^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^181^^^^^166^196^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^156^^^^^141^171^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^150^^^^^135^165^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^150^^^^^135^165^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v ) ;^150^^^^^135^165^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^175^^^^^160^190^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'S', v.newInteger ( cw[i] ) .index ) ;^152^^^^^137^167^bv.put12 ( 'S', cw.newInteger ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.puti2 ( 'Z', cw.newInteger ( v[i] ? i : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'Z', v.newInteger ( cw[i] ? 1 : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : offset ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^144^^^^^129^159^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : i ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put22 ( 'Z', cw.newInteger ( v[i] ? 2 : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : v ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  float[] )  {^172^^^^^157^187^} else if  ( value instanceof float[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^169^^^^^154^184^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  long[] )  {^166^^^^^151^181^} else if  ( value instanceof long[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  int[] )  {^160^^^^^145^175^} else if  ( value instanceof int[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.putv2 ( 'Z', cw.newInteger ( v[i] ? v : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : -1 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', v ) ;^144^^^^^129^159^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^144^^^^^129^159^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'B', v.newInteger ( cw[i] ) .index ) ;^140^^^^^125^155^bv.put12 ( 'B', cw.newInteger ( v[i] ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v.length.length ) ;^138^^^^^123^153^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  char[] )  {^154^^^^^139^169^} else if  ( value instanceof char[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^163^^^^^148^178^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  double[] )  {^178^^^^^163^193^} else if  ( value instanceof double[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 :  ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put02 ( 'Z', cw.newInteger ( v[i] ? 0 : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.putoffset2 ( 'Z', cw.newInteger ( v[i] ? offset : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  short[] )  {^148^^^^^133^163^} else if  ( value instanceof short[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^157^^^^^142^172^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : size ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( '[', size ) ;^138^^^^^123^153^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( '[', v ) ;^138^^^^^123^153^bv.put12 ( '[', v.length ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.putsize2 ( 'Z', cw.newInteger ( v[i] ? size : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 1 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^151^^^^^136^166^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = i; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^bv.put2 ( 'Z', cw.newInteger ( v[i] ?  : 0 ) .index ) ;^146^^^^^131^161^bv.put12 ( 'Z', cw.newInteger ( v[i] ? 1 : 0 ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = offset; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  byte[] )  {^136^^^^^121^151^} else if  ( value instanceof byte[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  boolean[] )  {^142^^^^^127^157^} else if  ( value instanceof boolean[] )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = v; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = size; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <<  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > v.length; i++ )  {^145^^^^^130^160^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? v : 0;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : i;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^bv.put12 ( 'Z', cw.newInteger ( size ) .index ) ;^129^^^^^114^144^bv.put12 ( 'Z', cw.newInteger ( v ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Argument_Swapping]^bv.put12 ( 'Z', v.newInteger ( cw ) .index ) ;^129^^^^^114^144^bv.put12 ( 'Z', cw.newInteger ( v ) .index ) ;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >=  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <=  Type )  {^134^^^^^119^149^} else if  ( value instanceof Type )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^for  ( int i = ; i < v.length; i++ )  {^139^^^^^124^154^for  ( int i = 0; i < v.length; i++ )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  Short )  {^132^^^^^117^147^} else if  ( value instanceof Short )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 1;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ^  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >>  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  |  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : -1;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ||  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  &&  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  ==  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  <  Byte )  {^125^^^^^110^140^} else if  ( value instanceof Byte )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  >  Boolean )  {^127^^^^^112^142^} else if  ( value instanceof Boolean )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Operator]^} else if  ( value  !=  Character )  {^130^^^^^115^145^} else if  ( value instanceof Character )  {^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? i : 0;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Wrong_Literal]^int v =  (  ( Boolean )  value ) .booleanValue (  )  ?  : 0;^128^^^^^113^143^int v =  (  ( Boolean )  value ) .booleanValue (  )  ? 1 : 0;^[CLASS] AnnotationWriter  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] long[]  v  AnnotationWriter  next  prev  short[]  v  int[]  v  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  char[]  v  float[]  v  byte[]  v  Item  i  boolean  named  double[]  v  Object  value  boolean[]  v  
[BugLab_Variable_Misuse]^if  ( valued )  {^196^^^^^190^200^if  ( named )  {^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^bv.putShort ( cw.newUTF8 ( value )  ) ;^197^^^^^190^200^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.putShort ( name.newUTF8 ( cw )  ) ;^197^^^^^190^200^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^bv.put12 ( 'e', cw.newUTF8 ( value )  ) .putShort ( cw.newUTF8 ( value )  ) ;^199^^^^^190^200^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( value )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( name )  ) ;^199^^^^^190^200^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( value )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.put12 ( 'e', cw.newUTF8 ( value )  ) .putShort ( cw.newUTF8 ( desc )  ) ;^199^^^^^190^200^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( value )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.put12 ( 'e', value.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( cw )  ) ;^199^^^^^190^200^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( value )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.put12 ( 'e', desc.newUTF8 ( cw )  ) .putShort ( cw.newUTF8 ( value )  ) ;^199^^^^^190^200^bv.put12 ( 'e', cw.newUTF8 ( desc )  ) .putShort ( cw.newUTF8 ( value )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  value  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^if  ( descd )  {^207^^^^^202^213^if  ( named )  {^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^bv.putShort ( cw.newUTF8 ( desc )  ) ;^208^^^^^202^213^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.putShort ( name.newUTF8 ( cw )  ) ;^208^^^^^202^213^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^bv.put12 ( '@', cw.newUTF8 ( name )  ) .putShort ( 0 ) ;^211^^^^^202^213^bv.put12 ( '@', cw.newUTF8 ( desc )  ) .putShort ( 0 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.put12 ( '@', desc.newUTF8 ( cw )  ) .putShort ( 0 ) ;^211^^^^^202^213^bv.put12 ( '@', cw.newUTF8 ( desc )  ) .putShort ( 0 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^return new AnnotationWriter ( cw, true, bv, bv, bv.length  >=  2 ) ;^212^^^^^202^213^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^return new AnnotationWriter ( cw, false, bv, bv, bv.length - 2 ) ;^212^^^^^202^213^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^return new AnnotationWriter ( cw, true, bv, bv, bv.length - v ) ;^212^^^^^202^213^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^return new AnnotationWriter ( cw, true, bv, bv, bv.length  >  2 ) ;^212^^^^^202^213^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^return new AnnotationWriter ( cw, true, bv, bv, bv.length  ) ;^212^^^^^202^213^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  desc  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^bv.putShort ( name.newUTF8 ( cw )  ) ;^218^^^^^215^223^bv.putShort ( cw.newUTF8 ( name )  ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^bv.put12 ( '[', v ) ;^221^^^^^215^223^bv.put12 ( '[', 0 ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^return new AnnotationWriter ( cw, false, bv, bv, bv.length  <  2 ) ;^222^^^^^215^223^return new AnnotationWriter ( cw, false, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^return new AnnotationWriter ( cw, true, bv, bv, bv.length - 2 ) ;^222^^^^^215^223^return new AnnotationWriter ( cw, false, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^return new AnnotationWriter ( cw, false, bv, bv, bv.length - i ) ;^222^^^^^215^223^return new AnnotationWriter ( cw, false, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^return new AnnotationWriter ( cw, false, bv, bv, bv.length  >  2 ) ;^222^^^^^215^223^return new AnnotationWriter ( cw, false, bv, bv, bv.length - 2 ) ;^[CLASS] AnnotationWriter  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] AnnotationWriter  next  prev  boolean  named  String  name  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^if  ( parent == null )  {^226^^^^^225^231^if  ( parent != null )  {^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^data[offset] =  ( byte )   ( size  ^  8 ) ;^228^^^^^225^231^data[offset] =  ( byte )   ( size >>> 8 ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^data[v + 1] =  ( byte )  size;^229^^^^^225^231^data[offset + 1] =  ( byte )  size;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^data[offset + 1] =  ^  ( byte )  size;^229^^^^^225^231^data[offset + 1] =  ( byte )  size;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^data[offset + size] =  ( byte )  size;^229^^^^^225^231^data[offset + 1] =  ( byte )  size;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^data[offset] =  ( byte )   ( v >>> 8 ) ;^228^^^^^225^231^data[offset] =  ( byte )   ( size >>> 8 ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^data[offset] =  ( byte )   ( size  ==  8 ) ;^228^^^^^225^231^data[offset] =  ( byte )   ( size >>> 8 ) ;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^data[offset + 1] =  !=  ( byte )  size;^229^^^^^225^231^data[offset + 1] =  ( byte )  size;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^data[offset + v] =  ( byte )  size;^229^^^^^225^231^data[offset + 1] =  ( byte )  size;^[CLASS] AnnotationWriter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] AnnotationWriter  next  prev  byte[]  data  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^int size = -1;^243^^^^^242^250^int size = 0;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Operator]^while  ( aw == null )  {^245^^^^^242^250^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^aw = prev;^247^^^^^242^250^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^aw = aw.next.next;^247^^^^^242^250^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Argument_Swapping]^aw = aw;^247^^^^^242^250^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^aw = prev.next;^247^^^^^242^250^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Variable_Misuse]^return v;^249^^^^^242^250^return size;^[CLASS] AnnotationWriter  [METHOD] getSize [RETURN_TYPE] int   [VARIABLES] AnnotationWriter  aw  next  prev  boolean  named  ClassWriter  cw  int  i  offset  size  v  ByteVector  bv  parent  
[BugLab_Wrong_Literal]^int n = 1;^259^^^^^258^278^int n = 0;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^int size = ;^260^^^^^258^278^int size = 2;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^while  ( aw == null )  {^263^^^^^258^278^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw.prev = prev;^267^^^^^258^278^aw.prev = last;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev.next;^269^^^^^258^278^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^269^^^^^258^278^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw.next.next;^269^^^^^258^278^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw;^269^^^^^258^278^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^last = prev;^268^^^^^258^278^last = aw;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putInt ( v ) ;^271^^^^^258^278^out.putInt ( size ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putShort ( size ) ;^272^^^^^258^278^out.putShort ( n ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^273^^^^^258^278^aw = last;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^while  ( aw == null )  {^274^^^^^258^278^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev.prev;^276^^^^^258^278^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^276^^^^^258^278^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw.prev.prev;^276^^^^^258^278^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw;^276^^^^^258^278^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  boolean  named  ClassWriter  cw  int  i  n  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^int size = 1 + 2 *  ( panns.length - v ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^int size = 1 + 2 *  ( v - off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^int size = 1 + 2 *  ( off.length - panns ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^int size = 1 + 2 *  ( off - panns.length ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^int size = 1 + 2 *  <<  ( panns.length - off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^int + size = 1 + 2 *  ( panns.length - off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^int size = 1 + 2 *  ( panns.length  &&  off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^int size = 0 + 2 *  ( panns.length - off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^int size = 1 +  *  ( panns.length - off ) ;^292^^^^^291^315^int size = 1 + 2 *  ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^for  ( vnt i = off; i < panns.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^for  ( int i = off; i < v; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^for  ( int i = panns.length; i < off; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^for  ( pannsnt i = off; i < i.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^for  ( int i = off; i < panns.length.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^for  ( int i = off; i <= panns.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^for  ||  ( int i = off; i < panns.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^size += panns[i] != null ? 0 : panns[i].getSize (  ) ;^294^^^^^291^315^size += panns[i] == null ? 0 : panns[i].getSize (  ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^size += panns[i] == null ? 1 : panns[i].getSize (  ) ;^294^^^^^291^315^size += panns[i] == null ? 0 : panns[i].getSize (  ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^size += panns[i] == null ? n : panns[i].getSize (  ) ;^294^^^^^291^315^size += panns[i] == null ? 0 : panns[i].getSize (  ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^for  ( int i = v; i < panns.length; ++i )  {^293^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putInt ( v ) .putByte ( panns.length - off ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putInt ( size ) .putByte ( panns.length - v ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putInt ( size ) .putByte ( size - off ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^out.putInt ( panns ) .putByte ( size.length - off ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^out.putInt ( size ) .putByte ( off.length - panns ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^out.putInt ( size ) .putByte ( panns.length  ||  off ) ;^296^^^^^291^315^out.putInt ( size ) .putByte ( panns.length - off ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^while  ( prev != null )  {^301^^^^^291^315^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^while  ( aw == null )  {^301^^^^^291^315^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw.prev = prev;^304^^^^^291^315^aw.prev = last;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^last = prev;^305^^^^^291^315^last = aw;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev.next;^306^^^^^291^315^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^306^^^^^291^315^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw.next.next;^306^^^^^291^315^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw;^306^^^^^291^315^aw = aw.next;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^while  ( aw == null )  {^310^^^^^291^315^while  ( aw != null )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev.prev;^312^^^^^291^315^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^312^^^^^291^315^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw.prev.prev;^312^^^^^291^315^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Argument_Swapping]^aw = aw;^312^^^^^291^315^aw = aw.prev;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Operator]^for  ( int i = off; i == panns.length; ++i )  {^297^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^out.putByteArray ( aw.bv.data, off, aw.bv.length ) ;^311^^^^^291^315^out.putByteArray ( aw.bv.data, 0, aw.bv.length ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^aw = prev;^309^^^^^291^315^aw = last;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putShort ( v ) ;^308^^^^^291^315^out.putShort ( n ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^for  ( int i = v; i < panns.length; ++i )  {^297^^^^^291^315^for  ( int i = off; i < panns.length; ++i )  {^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^int n = ;^300^^^^^291^315^int n = 0;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Variable_Misuse]^out.putShort ( size ) ;^308^^^^^291^315^out.putShort ( n ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
[BugLab_Wrong_Literal]^out.putByteArray ( aw.bv.data, -1, aw.bv.length ) ;^311^^^^^291^315^out.putByteArray ( aw.bv.data, 0, aw.bv.length ) ;^[CLASS] AnnotationWriter  [METHOD] put [RETURN_TYPE] void   AnnotationWriter[] panns final int off ByteVector out [VARIABLES] AnnotationWriter  aw  last  next  prev  AnnotationWriter[]  panns  boolean  named  ClassWriter  cw  int  i  n  off  offset  size  v  ByteVector  bv  out  parent  
