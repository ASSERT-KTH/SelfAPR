[BugLab_Wrong_Operator]^if  ( mv == null )  {^106^^^^^101^110^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  av  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( tab3, visible ) ;^107^^^^^101^110^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  av  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( visible, desc ) ;^107^^^^^101^110^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  av  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  av ) .av = desc.visitAnnotation ( mv, visible ) ;^107^^^^^101^110^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  av  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  av ) .av = visible.visitAnnotation ( desc, mv ) ;^107^^^^^101^110^(  ( TraceAnnotationVisitor )  av ) .av = mv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  av  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( null ) .append ( "ATTRIBUTE " ) ;^114^^^^^112^127^buf.append ( tab ) .append ( "ATTRIBUTE " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Wrong_Literal]^appendDescriptor ( -2, attr.type ) ;^115^^^^^112^127^appendDescriptor ( -1, attr.type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( attr  >=  Traceable )  {^117^^^^^112^127^if  ( attr instanceof Traceable )  {^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Argument_Swapping]^(  ( Traceable )  attr ) .trace ( labelNames, buf ) ;^118^^^^^112^127^(  ( Traceable )  attr ) .trace ( buf, labelNames ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Variable_Misuse]^text.add ( null.toString (  )  ) ;^123^^^^^112^127^text.add ( buf.toString (  )  ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^124^^^^^112^127^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  Attribute  attr  MethodVisitor  mv  
[BugLab_Variable_Misuse]^text.add ( tab3 + "default=" ) ;^130^^^^^129^138^text.add ( tab2 + "default=" ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotationDefault [RETURN_TYPE] AnnotationVisitor   [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^text.add ( tab2  !=  "default=" ) ;^130^^^^^129^138^text.add ( tab2 + "default=" ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotationDefault [RETURN_TYPE] AnnotationVisitor   [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^134^^^^^129^138^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitAnnotationDefault [RETURN_TYPE] AnnotationVisitor   [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( parameter ) ;^145^^^^^140^159^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( '@' ) ;^146^^^^^140^159^buf.append ( tab2 ) .append ( '@' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab3 ) ;^147^^^^^140^159^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^text.add ( text ? " ) visible.add ( new Integer ( parameter )  ) ;^152^153^^^^140^159^text.add ( visible ? " ) text.add ( new Integer ( parameter )  ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^155^^^^^140^159^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Variable_Misuse]^tav.av = mv.visitParameterAnnotation ( parameter, tab3, visible ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^tav.av = mv.visitParameterAnnotation ( visible, desc, parameter ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^tav.av = desc.visitParameterAnnotation ( parameter, mv, visible ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^tav.av = visible.visitParameterAnnotation ( parameter, desc, mv ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^tav.av = mv.visitParameterAnnotation ( parameter, visible, desc ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Argument_Swapping]^tav.av = parameter.visitParameterAnnotation ( mv, desc, visible ) ;^156^^^^^140^159^tav.av = mv.visitParameterAnnotation ( parameter, desc, visible ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] TraceAnnotationVisitor  tav  String  desc  ltab  tab2  tab3  boolean  visible  Map  labelNames  int  parameter  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^162^^^^^161^165^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitCode [RETURN_TYPE] void   [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( type ) ;^174^^^^^159^189^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( type, local ) ;^181^^^^^166^196^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( nLocal, stack ) ;^181^^^^^166^196^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^appendFrameTypes ( local, nLocal ) ;^181^^^^^166^196^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( type, stack ) ;^183^^^^^168^198^appendFrameTypes ( nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( nStack, local ) ;^183^^^^^168^198^appendFrameTypes ( nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^appendFrameTypes ( stack, nStack ) ;^183^^^^^168^198^appendFrameTypes ( nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( type, local ) ;^188^^^^^173^203^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( nLocal, stack ) ;^188^^^^^173^203^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^appendFrameTypes ( local, nLocal ) ;^188^^^^^173^203^appendFrameTypes ( nLocal, local ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( "CHOP " ) .append ( type ) ;^192^^^^^177^207^buf.append ( "CHOP " ) .append ( nLocal ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendFrameTypes ( 1, local ) ;^199^^^^^184^214^appendFrameTypes ( 1, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Wrong_Literal]^appendFrameTypes ( , stack ) ;^199^^^^^184^214^appendFrameTypes ( 1, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^205^^^^^190^220^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFrame ( nStack, nLocal, local, nStack, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFrame ( type, type, local, nStack, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFrame ( type, nLocal, local, type, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( nLocal, type, local, nStack, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( type, nLocal, stack, nStack, local ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( type, nLocal, nStack, local, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( type, stack, local, nStack, nLocal ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFrame ( type, nLocal, local, nLocal, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFrame ( type, nLocal, local, nStack, local ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( nStack, nLocal, local, type, stack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFrame ( type, nLocal, local, stack, nStack ) ;^206^^^^^191^221^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  nLocal  nStack  type  Object[]  local  stack  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( 1 ) ;^211^^^^^210^218^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitInsn [RETURN_TYPE] void   final int opcode [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( OPCODES[opcode] ) .append ( '\n' ) ;^212^^^^^210^218^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitInsn [RETURN_TYPE] void   final int opcode [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( OPCODES ) .append ( tab2[opcode] ) .append ( '\n' ) ;^212^^^^^210^218^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitInsn [RETURN_TYPE] void   final int opcode [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^215^^^^^210^218^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitInsn [RETURN_TYPE] void   final int opcode [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( null[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Wrong_Operator]^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode >= Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( operand == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( tab2 ) .append ( opcode[opcode] ) .append ( ' ' ) .append ( OPCODES == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Wrong_Operator]^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode != Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( opcode ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( tab2 == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( OPCODES ) .append ( tab2[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^222^223^224^225^^220^234^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Variable_Misuse]^: Integer.toString ( opcode )  ) .append ( '\n' ) ;^227^228^^^^220^234^: Integer.toString ( operand )  ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^231^^^^^220^234^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitIntInsn ( opcode, opcode ) ;^232^^^^^220^234^mv.visitIntInsn ( opcode, operand ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitIntInsn ( operand, opcode ) ;^232^^^^^220^234^mv.visitIntInsn ( opcode, operand ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  operand  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( var ) ;^237^^^^^236^248^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( var )^238^239^240^241^^236^248^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( var )^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( OPCODES ) .append ( tab2[opcode] ) .append ( ' ' ) .append ( var )^238^239^240^241^^236^248^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) .append ( var )^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^245^^^^^236^248^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitVarInsn ( var, opcode ) ;^246^^^^^236^248^mv.visitVarInsn ( opcode, var ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitVarInsn ( var, var ) ;^246^^^^^236^248^mv.visitVarInsn ( opcode, var ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] String  desc  ltab  tab2  tab3  boolean  Map  labelNames  int  opcode  var  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( 1 ) ;^251^^^^^250^260^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( null[opcode] ) .append ( ' ' ) ;^252^^^^^250^260^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^252^^^^^250^260^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( OPCODES ) .append ( tab2[opcode] ) .append ( ' ' ) ;^252^^^^^250^260^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, tab3 ) ;^253^^^^^250^260^appendDescriptor ( INTERNAL_NAME, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^257^^^^^250^260^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTypeInsn ( opcode, tab2 ) ;^258^^^^^250^260^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTypeInsn ( type, opcode ) ;^258^^^^^250^260^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTypeInsn ( opcode, tab3 ) ;^258^^^^^250^260^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] String  desc  ltab  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^269^^^^^262^279^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( 1[opcode] ) .append ( ' ' ) ;^269^^^^^262^279^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^269^^^^^262^279^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, type ) ;^270^^^^^262^279^appendDescriptor ( INTERNAL_NAME, owner ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( '.' ) .append ( tab3 ) .append ( " : " ) ;^271^^^^^262^279^buf.append ( '.' ) .append ( name ) .append ( " : " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab3 ) ;^272^^^^^262^279^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^276^^^^^262^279^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFieldInsn ( opcode, type, name, desc ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFieldInsn ( opcode, owner, type, desc ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitFieldInsn ( opcode, owner, name, type ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFieldInsn ( owner, opcode, name, desc ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFieldInsn ( opcode, desc, name, owner ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFieldInsn ( opcode, owner, desc, name ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitFieldInsn ( name, owner, opcode, desc ) ;^277^^^^^262^279^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^287^^^^^281^298^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^288^^^^^281^298^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( OPCODES ) .append ( tab2[opcode] ) .append ( ' ' ) ;^288^^^^^281^298^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^288^^^^^281^298^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, tab2 ) ;^289^^^^^281^298^appendDescriptor ( INTERNAL_NAME, owner ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( '.' ) .append ( tab2 ) .append ( ' ' ) ;^290^^^^^281^298^buf.append ( '.' ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( '.' ) .append ( type ) .append ( ' ' ) ;^290^^^^^281^298^buf.append ( '.' ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^295^^^^^281^298^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitMethodInsn ( opcode, type, name, desc ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitMethodInsn ( opcode, owner, tab3, desc ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitMethodInsn ( opcode, owner, name, tab3 ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMethodInsn ( owner, opcode, name, desc ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMethodInsn ( opcode, desc, name, owner ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitMethodInsn ( opcode, owner, name, type ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMethodInsn ( opcode, name, owner, desc ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMethodInsn ( opcode, owner, desc, name ) ;^296^^^^^281^298^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^301^^^^^300^310^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^302^^^^^300^310^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( 2[opcode] ) .append ( ' ' ) ;^302^^^^^300^310^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^302^^^^^300^310^buf.append ( tab2 ) .append ( OPCODES[opcode] ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^307^^^^^300^310^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitJumpInsn ( label, opcode ) ;^308^^^^^300^310^mv.visitJumpInsn ( opcode, label ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  opcode  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) ;^314^^^^^312^322^buf.append ( ltab ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^319^^^^^312^322^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( 1 ) ;^325^^^^^324^340^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "LDC " ) ;^326^^^^^324^340^buf.append ( tab2 ) .append ( "LDC " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( "LDC " ) ;^326^^^^^324^340^buf.append ( tab2 ) .append ( "LDC " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( cst  &  String )  {^327^^^^^324^340^if  ( cst instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( cst  <<  String )  {^327^^^^^324^340^if  ( cst instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( cst  ||  Type )  {^329^^^^^324^340^} else if  ( cst instanceof Type )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( cst  >  Type )  {^329^^^^^324^340^} else if  ( cst instanceof Type )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^text.add ( this.toString (  )  ) ;^335^^^^^324^340^text.add ( buf.toString (  )  ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^337^^^^^324^340^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLdcInsn [RETURN_TYPE] void   Object cst [VARIABLES] Object  cst  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( "IINC " ) .append ( increment ) .append ( ' ' )^344^345^346^347^^342^355^buf.append ( tab2 ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^344^345^346^347^^342^355^buf.append ( tab2 ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( var ) .append ( "IINC " ) .append ( tab2 ) .append ( ' ' )^344^345^346^347^^342^355^buf.append ( tab2 ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^344^345^346^347^^342^355^buf.append ( tab2 ) .append ( "IINC " ) .append ( var ) .append ( ' ' )^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^352^^^^^342^355^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitIincInsn ( increment, increment ) ;^353^^^^^342^355^mv.visitIincInsn ( var, increment ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitIincInsn ( increment, var ) ;^353^^^^^342^355^mv.visitIincInsn ( var, increment ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  increment  var  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( min ) ;^363^^^^^357^378^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "TABLESWITCH\n" ) ;^364^^^^^357^378^buf.append ( tab2 ) .append ( "TABLESWITCH\n" ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= labels.length; ++i )  {^365^^^^^357^378^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < labels.length; ++i )  {^365^^^^^357^378^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = i; i < labels.length; ++i )  {^365^^^^^357^378^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( max + i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( min + i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( tab3 ) .append ( i + min ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( min ) .append ( tab3 + i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^buf.append ( tab3 ) .append ( min  |  i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( min + min ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( min + i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( i ) .append ( min + tab3 ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^buf.append ( tab3 ) .append ( min   instanceof   i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( min + i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^buf.append ( tab3 ) .append ( min  <=  i ) .append ( ": " ) ;^366^^^^^357^378^buf.append ( tab3 ) .append ( min + i ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( "default: " ) ;^370^^^^^357^378^buf.append ( tab3 ) .append ( "default: " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "default: " ) ;^370^^^^^357^378^buf.append ( tab3 ) .append ( "default: " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^375^^^^^357^378^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTableSwitchInsn ( max, max, dflt, labels ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTableSwitchInsn ( min, min, dflt, labels ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( max, min, dflt, labels ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( min, labels, dflt, max ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTableSwitchInsn ( min, i, dflt, labels ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( labels, max, dflt, min ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( min, dflt, max, labels ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( min, max, labels, dflt ) ;^376^^^^^357^378^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( i ) ;^385^^^^^380^400^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "LOOKUPSWITCH\n" ) ;^386^^^^^380^400^buf.append ( tab2 ) .append ( "LOOKUPSWITCH\n" ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= labels.length; ++i )  {^387^^^^^380^400^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = i; i < labels.length; ++i )  {^387^^^^^380^400^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( keys[i] ) .append ( ": " ) ;^388^^^^^380^400^buf.append ( tab3 ) .append ( keys[i] ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( keys[i] ) .append ( ": " ) ;^388^^^^^380^400^buf.append ( tab3 ) .append ( keys[i] ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( keys[i] ) .append ( ": " ) ;^388^^^^^380^400^buf.append ( tab3 ) .append ( keys[i] ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( keys ) .append ( tab3[i] ) .append ( ": " ) ;^388^^^^^380^400^buf.append ( tab3 ) .append ( keys[i] ) .append ( ": " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "default: " ) ;^392^^^^^380^400^buf.append ( tab3 ) .append ( "default: " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "default: " ) ;^392^^^^^380^400^buf.append ( tab3 ) .append ( "default: " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^397^^^^^380^400^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLookupSwitchInsn ( keys, dflt, labels ) ;^398^^^^^380^400^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLookupSwitchInsn ( labels, keys, dflt ) ;^398^^^^^380^400^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLookupSwitchInsn ( dflt, labels, keys ) ;^398^^^^^380^400^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  String  desc  ltab  name  owner  tab2  tab3  type  Map  labelNames  int  i  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( dims ) ;^403^^^^^402^412^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "MULTIANEWARRAY " ) ;^404^^^^^402^412^buf.append ( tab2 ) .append ( "MULTIANEWARRAY " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "MULTIANEWARRAY " ) ;^404^^^^^402^412^buf.append ( tab2 ) .append ( "MULTIANEWARRAY " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab2 ) ;^405^^^^^402^412^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^409^^^^^402^412^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitMultiANewArrayInsn ( type, dims ) ;^410^^^^^402^412^mv.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMultiANewArrayInsn ( dims, desc ) ;^410^^^^^402^412^mv.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  int  dims  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( "TRYCATCHBLOCK " ) ;^421^^^^^414^435^buf.append ( tab2 ) .append ( "TRYCATCHBLOCK " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "TRYCATCHBLOCK " ) ;^421^^^^^414^435^buf.append ( tab2 ) .append ( "TRYCATCHBLOCK " ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendLabel ( handler ) ;^422^^^^^414^435^appendLabel ( start ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendLabel ( start ) ;^424^^^^^414^435^appendLabel ( end ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, owner ) ;^428^^^^^414^435^appendDescriptor ( INTERNAL_NAME, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^432^^^^^414^435^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( end, end, handler, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( start, start, handler, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( start, end, start, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( start, end, handler, tab3 ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTryCatchBlock ( end, start, handler, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTryCatchBlock ( start, handler, end, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTryCatchBlock ( type, end, handler, start ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( handler, end, handler, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTryCatchBlock ( start, end, end, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTryCatchBlock ( handler, end, start, type ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTryCatchBlock ( start, end, type, handler ) ;^433^^^^^414^435^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  String  desc  ltab  name  owner  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( "LOCALVARIABLE " ) .append ( tab3 ) .append ( ' ' ) ;^446^^^^^444^471^buf.append ( tab2 ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^446^^^^^444^471^buf.append ( tab2 ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( name ) .append ( "LOCALVARIABLE " ) .append ( tab2 ) .append ( ' ' ) ;^446^^^^^444^471^buf.append ( tab2 ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^446^^^^^444^471^buf.append ( tab2 ) .append ( "LOCALVARIABLE " ) .append ( name ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab2 ) ;^447^^^^^444^471^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendLabel ( end ) ;^449^^^^^444^471^appendLabel ( start ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendLabel ( start ) ;^451^^^^^444^471^appendLabel ( end ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( type != null )  {^454^^^^^444^471^if  ( signature != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^454^^^^^444^471^if  ( signature != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( tab2 ) ;^459^^^^^444^471^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Wrong_Literal]^TraceSignatureVisitor sv = new TraceSignatureVisitor (  ) ;^458^^^^^444^471^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( type ) ;^459^^^^^444^471^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) ;^455^^^^^444^471^buf.append ( tab2 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_SIGNATURE, type ) ;^456^^^^^444^471^appendDescriptor ( FIELD_SIGNATURE, signature ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^461^462^463^464^^444^471^buf.append ( tab2 ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( sv ) .append ( " .append ( tab2.getDeclaration (  )  ) .append ( '\n' ) ;^461^462^463^464^^444^471^buf.append ( tab2 ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( signature ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^461^462^463^464^^444^471^buf.append ( tab2 ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( tab3 ) ;^459^^^^^444^471^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Wrong_Literal]^TraceSignatureVisitor sv = new TraceSignatureVisitor ( index ) ;^458^^^^^444^471^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( signature ) ;^455^^^^^444^471^buf.append ( tab2 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^461^462^463^464^^444^471^buf.append ( tab2 ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^468^^^^^444^471^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( type, desc, signature, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, type, signature, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, desc, type, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( desc, name, signature, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, signature, desc, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( signature, desc, name, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, signature, index, end, start ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, signature, end, start, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( index, desc, signature, start, end, name ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitLocalVariable ( name, tab3, signature, start, end, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, end, start, signature, index ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLocalVariable ( name, desc, index, start, end, signature ) ;^469^^^^^444^471^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] boolean  TraceSignatureVisitor  sv  Label  end  start  SignatureReader  r  String  desc  ltab  name  owner  signature  tab2  tab3  type  Map  labelNames  int  index  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^474^^^^^473^483^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab3 ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^475^^^^^473^483^buf.append ( tab2 ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( line ) .append ( "LINENUMBER " ) .append ( tab2 ) .append ( ' ' ) ;^475^^^^^473^483^buf.append ( tab2 ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^475^^^^^473^483^buf.append ( tab2 ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( signature ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^475^^^^^473^483^buf.append ( tab2 ) .append ( "LINENUMBER " ) .append ( line ) .append ( ' ' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Variable_Misuse]^text.add ( null.toString (  )  ) ;^478^^^^^473^483^text.add ( buf.toString (  )  ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^480^^^^^473^483^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitLineNumber ( start, line ) ;^481^^^^^473^483^mv.visitLineNumber ( line, start ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  line  MethodVisitor  mv  
[BugLab_Wrong_Literal]^buf.setLength ( maxLocals ) ;^486^^^^^485^497^buf.setLength ( 0 ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( "MAXSTACK = " ) .append ( maxLocals ) .append ( '\n' ) ;^487^^^^^485^497^buf.append ( tab2 ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( signature ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^487^^^^^485^497^buf.append ( tab2 ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( maxStack ) .append ( "MAXSTACK = " ) .append ( tab2 ) .append ( '\n' ) ;^487^^^^^485^497^buf.append ( tab2 ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( type ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^487^^^^^485^497^buf.append ( tab2 ) .append ( "MAXSTACK = " ) .append ( maxStack ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( tab2 ) .append ( "MAXLOCALS = " ) .append ( maxStack ) .append ( '\n' ) ;^491^^^^^485^497^buf.append ( tab2 ) .append ( "MAXLOCALS = " ) .append ( maxLocals ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^buf.append ( maxLocals ) .append ( "MAXLOCALS = " ) .append ( tab2 ) .append ( '\n' ) ;^491^^^^^485^497^buf.append ( tab2 ) .append ( "MAXLOCALS = " ) .append ( maxLocals ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Variable_Misuse]^buf.append ( signature ) .append ( "MAXLOCALS = " ) .append ( maxLocals ) .append ( '\n' ) ;^491^^^^^485^497^buf.append ( tab2 ) .append ( "MAXLOCALS = " ) .append ( maxLocals ) .append ( '\n' ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^494^^^^^485^497^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitMaxs ( maxLocals, maxStack ) ;^495^^^^^485^497^mv.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] TraceMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  maxLocals  maxStack  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( mv == null )  {^502^^^^^499^505^if  ( mv != null )  {^[CLASS] TraceMethodVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( i >= 0 )  {^513^^^^^498^528^if  ( i > 0 )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( o[i] nnstanceof String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Argument_Swapping]^if  ( i[i] onstanceof String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( o[i]  >=  String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( o[i]  &  String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^} else nf  ( o[i] instanceof Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Argument_Swapping]^} else of  ( i[i] instanceof Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( o[i]  <  Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( tab2.startsWith ( "[" )  )  {^518^^^^^503^533^if  ( desc.startsWith ( "[" )  )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, type ) ;^521^^^^^518^522^appendDescriptor ( INTERNAL_NAME, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, type ) ;^519^^^^^504^534^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab2 ) ;^519^^^^^504^534^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, type ) ;^521^^^^^506^536^appendDescriptor ( INTERNAL_NAME, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( tab3.startsWith ( "[" )  )  {^518^^^^^503^533^if  ( desc.startsWith ( "[" )  )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, tab3 ) ;^519^^^^^504^534^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( o[i]  >=  Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^for  ( nnt i = 0; i < n; ++i )  {^512^^^^^497^527^for  ( int i = 0; i < n; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Argument_Swapping]^for  ( nnt i = 0; i < i; ++i )  {^512^^^^^497^527^for  ( int i = 0; i < n; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= n; ++i )  {^512^^^^^497^527^for  ( int i = 0; i < n; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = n; i < n; ++i )  {^512^^^^^497^527^for  ( int i = 0; i < n; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = i; i < n; ++i )  {^512^^^^^497^527^for  ( int i = 0; i < n; ++i )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( n > 0 )  {^513^^^^^498^528^if  ( i > 0 )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( i < 0 )  {^513^^^^^498^528^if  ( i > 0 )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Literal]^if  ( i > -1 )  {^513^^^^^498^528^if  ( i > 0 )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( o[i]  ==  String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( o[i]  <  String )  {^516^^^^^501^531^if  ( o[i] instanceof String )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( o[i]  ||  Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, tab2 ) ;^521^^^^^506^536^appendDescriptor ( INTERNAL_NAME, desc ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( type.startsWith ( "[" )  )  {^518^^^^^503^533^if  ( desc.startsWith ( "[" )  )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Wrong_Operator]^} else if  ( o[i]  ^  Integer )  {^523^^^^^508^538^} else if  ( o[i] instanceof Integer )  {^[CLASS] TraceMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  int  i  n  Object[]  o  MethodVisitor  mv  
[BugLab_Argument_Swapping]^String name =  ( String )  labelNamesabelNames.get ( l ) ;^560^^^^^559^566^String name =  ( String )  labelNames.get ( l ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^String name =  ( String )  l.get ( labelNames ) ;^560^^^^^559^566^String name =  ( String )  labelNames.get ( l ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^if  ( type == null )  {^561^^^^^559^566^if  ( name == null )  {^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^if  ( name != null )  {^561^^^^^559^566^if  ( name == null )  {^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^name = "L" + labelNames.size (  &&  ) ;^562^^^^^559^566^name = "L" + labelNames.size (  ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^labelNames.put ( l, tab3 ) ;^563^^^^^559^566^labelNames.put ( l, name ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Argument_Swapping]^labelNames.put ( name, l ) ;^563^^^^^559^566^labelNames.put ( l, name ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Wrong_Operator]^name = "L" + labelNames.size (  >  ) ;^562^^^^^559^566^name = "L" + labelNames.size (  ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
[BugLab_Variable_Misuse]^labelNames.put ( l, tab2 ) ;^563^^^^^559^566^labelNames.put ( l, name ) ;^[CLASS] TraceMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] Label  l  String  desc  ltab  name  owner  signature  tab2  tab3  type  boolean  Map  labelNames  MethodVisitor  mv  
