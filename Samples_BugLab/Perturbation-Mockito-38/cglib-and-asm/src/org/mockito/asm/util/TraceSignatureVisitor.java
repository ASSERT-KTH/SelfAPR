[BugLab_Variable_Misuse]^isInterface =  ( arrayStack & Opcodes.ACC_INTERFACE )  != 0;^78^^^^^77^80^isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[CLASS] TraceSignatureVisitor  [METHOD] <init> [RETURN_TYPE] TraceSignatureVisitor(int)   final int access [VARIABLES] StringBuffer  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^isInterface =  ( access & Opcodes.ACC_INTERFACE )  > 0;^78^^^^^77^80^isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[CLASS] TraceSignatureVisitor  [METHOD] <init> [RETURN_TYPE] TraceSignatureVisitor(int)   final int access [VARIABLES] StringBuffer  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^isInterface =  ( access  >>  Opcodes.ACC_INTERFACE )  != 0;^78^^^^^77^80^isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[CLASS] TraceSignatureVisitor  [METHOD] <init> [RETURN_TYPE] TraceSignatureVisitor(int)   final int access [VARIABLES] StringBuffer  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^isInterface =  ( access & Opcodes.ACC_INTERFACE )  != arrayStack;^78^^^^^77^80^isInterface =  ( access & Opcodes.ACC_INTERFACE )  != 0;^[CLASS] TraceSignatureVisitor  [METHOD] <init> [RETURN_TYPE] TraceSignatureVisitor(int)   final int access [VARIABLES] StringBuffer  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^this.declaration = returnType;^83^^^^^82^84^this.declaration = buf;^[CLASS] TraceSignatureVisitor  [METHOD] <init> [RETURN_TYPE] StringBuffer)   StringBuffer buf [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( separator ) ;^87^^^^^86^90^declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( seenParameter ? ", " : "<" ) .append ( name ) ;^87^^^^^86^90^declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^declaration.append ( name ? ", " : "<" ) .append ( seenFormalParameter ) ;^87^^^^^86^90^declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( seenInterfaceBound ? ", " : "<" ) .append ( name ) ;^87^^^^^86^90^declaration.append ( seenFormalParameter ? ", " : "<" ) .append ( name ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenFormalParameter = false;^88^^^^^86^90^seenFormalParameter = true;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenInterfaceBound = true;^89^^^^^86^90^seenInterfaceBound = false;^[CLASS] TraceSignatureVisitor  [METHOD] visitFormalTypeParameter [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^separator = seenParameter ? ", " : " extends ";^99^^^^^98^103^separator = seenInterfaceBound ? ", " : " extends ";^[CLASS] TraceSignatureVisitor  [METHOD] visitInterfaceBound [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenInterfaceBound = false;^100^^^^^98^103^seenInterfaceBound = true;^[CLASS] TraceSignatureVisitor  [METHOD] visitInterfaceBound [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^separator = seenInterface ? ", " : seenParameter ? " extends " : " implements ";^113^114^115^^^112^119^separator = seenInterface ? ", " : isInterface ? " extends " : " implements ";^[CLASS] TraceSignatureVisitor  [METHOD] visitInterface [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^separator = isInterface ? ", " : seenInterface ? " extends " : " implements ";^113^114^115^^^112^119^separator = seenInterface ? ", " : isInterface ? " extends " : " implements ";^[CLASS] TraceSignatureVisitor  [METHOD] visitInterface [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenInterface = false;^116^^^^^112^119^seenInterface = true;^[CLASS] TraceSignatureVisitor  [METHOD] visitInterface [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( seenInterfaceBound )  {^123^^^^^121^131^if  ( seenParameter )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitParameterType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenParameter = false;^126^^^^^121^131^seenParameter = true;^[CLASS] TraceSignatureVisitor  [METHOD] visitParameterType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( seenInterfaceBound )  {^135^^^^^133^143^if  ( seenParameter )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitReturnType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenParameter = true;^136^^^^^133^143^seenParameter = false;^[CLASS] TraceSignatureVisitor  [METHOD] visitReturnType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^return new TraceSignatureVisitor ( exceptions ) ;^142^^^^^133^143^return new TraceSignatureVisitor ( returnType ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitReturnType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( returnType == null )  {^146^^^^^145^153^if  ( exceptions == null )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitExceptionType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( exceptions != null )  {^146^^^^^145^153^if  ( exceptions == null )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitExceptionType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^return new TraceSignatureVisitor ( returnType ) ;^152^^^^^145^153^return new TraceSignatureVisitor ( exceptions ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitExceptionType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( separator ) ;^190^^^^^189^192^declaration.append ( name ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeVariable [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack |= 2;^196^^^^^194^198^arrayStack |= 1;^[CLASS] TraceSignatureVisitor  [METHOD] visitArrayType [RETURN_TYPE] SignatureVisitor   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( "java/lang/Object".equals ( separator )  )  {^201^^^^^200^216^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^declaration.append ( name ) .append ( separator.replace ( '/', '.' )  ) ;^212^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( name ) .append ( name.replace ( '/', '.' )  ) ;^212^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^212^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( seenParameter )  {^208^^^^^200^216^if  ( needObjectClass )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( name ) .append ( name.replace ( '/', '.' )  ) ;^209^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^declaration.append ( name ) .append ( separator.replace ( '/', '.' )  ) ;^209^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( separator ) .append ( separator.replace ( '/', '.' )  ) ;^209^^^^^200^216^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^boolean needObjectClass = argumentStack % 2 != 0 || seenInterfaceBound;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^boolean needObjectClass = seenParameter % 2 != 0 || argumentStack;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^boolean needObjectClass = argumentStack % 2 != 0 && seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^boolean needObjectClass = argumentStack % 2 == 0 || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^boolean needObjectClass = argumentStack  <=  2 != 0 || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^boolean needObjectClass = argumentStack % access != 0 || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^boolean needObjectClass = argumentStack % 2 !=  || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^boolean needObjectClass = arrayStack % 2 != 0 || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^boolean needObjectClass = argumentStack  |  2 != 0 || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^boolean needObjectClass = argumentStack % 2 != arrayStack || seenParameter;^207^^^^^200^216^boolean needObjectClass = argumentStack % 2 != 0 || seenParameter;^[CLASS] TraceSignatureVisitor  [METHOD] visitClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( arrayStack % 2 != 0 )  {^219^^^^^218^227^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack % 2 <= 0 )  {^219^^^^^218^227^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack  ==  2 != 0 )  {^219^^^^^218^227^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 1 != 0 )  {^219^^^^^218^227^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 2 != arrayStack )  {^219^^^^^218^227^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^declaration.append ( name ) .append ( separator.replace ( '/', '.' )  ) ;^224^^^^^218^227^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^declaration.append ( name ) .append ( name.replace ( '/', '.' )  ) ;^224^^^^^218^227^declaration.append ( separator ) .append ( name.replace ( '/', '.' )  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^argumentStack *= argumentStack;^226^^^^^218^227^argumentStack *= 2;^[CLASS] TraceSignatureVisitor  [METHOD] visitInnerClassType [RETURN_TYPE] void   String name [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( arrayStack % 2 == 0 )  {^230^^^^^229^237^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack % 2 != 0 )  {^230^^^^^229^237^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack  &&  2 == 0 )  {^230^^^^^229^237^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % access == 0 )  {^230^^^^^229^237^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 2 == arrayStack )  {^230^^^^^229^237^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( arrayStack % 2 == 0 )  {^240^^^^^239^255^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack % 2 != 0 )  {^240^^^^^239^255^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack  <=  2 == 0 )  {^240^^^^^239^255^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 2 == argumentStack )  {^240^^^^^239^255^if  ( argumentStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^if  ( EXTENDS == tag )  {^247^^^^^239^255^if  ( tag == EXTENDS )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( tag >= EXTENDS )  {^247^^^^^239^255^if  ( tag == EXTENDS )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( tag != EXTENDS )  {^247^^^^^239^255^if  ( tag == EXTENDS )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^} else if  ( tag >= SUPER )  {^249^^^^^239^255^} else if  ( tag == SUPER )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Argument_Swapping]^} else if  ( SUPER == tag )  {^249^^^^^239^255^} else if  ( tag == SUPER )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^} else if  ( tag <= SUPER )  {^249^^^^^239^255^} else if  ( tag == SUPER )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitTypeArgument [RETURN_TYPE] SignatureVisitor   final char tag [VARIABLES] char  tag  StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( arrayStack % 2 != 0 )  {^258^^^^^257^263^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack % 2 <= 0 )  {^258^^^^^257^263^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( argumentStack  ^  2 != 0 )  {^258^^^^^257^263^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 3 != 0 )  {^258^^^^^257^263^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( argumentStack % 2 != 1 )  {^258^^^^^257^263^if  ( argumentStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^return returnType.toString (  ) ;^266^^^^^265^267^return declaration.toString (  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] getDeclaration [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^return exceptions == null ? null : returnType.toString (  ) ;^270^^^^^269^271^return returnType == null ? null : returnType.toString (  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] getReturnType [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^return returnType != null ? null : returnType.toString (  ) ;^270^^^^^269^271^return returnType == null ? null : returnType.toString (  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] getReturnType [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^return returnType == null ? null : exceptions.toString (  ) ;^274^^^^^273^275^return exceptions == null ? null : exceptions.toString (  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] getExceptions [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^return exceptions != null ? null : exceptions.toString (  ) ;^274^^^^^273^275^return exceptions == null ? null : exceptions.toString (  ) ;^[CLASS] TraceSignatureVisitor  [METHOD] getExceptions [RETURN_TYPE] String   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^if  ( seenInterfaceBound )  {^280^^^^^279^284^if  ( seenFormalParameter )  {^[CLASS] TraceSignatureVisitor  [METHOD] endFormals [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^seenFormalParameter = true;^282^^^^^279^284^seenFormalParameter = false;^[CLASS] TraceSignatureVisitor  [METHOD] endFormals [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack *= argumentStack;^287^^^^^286^288^arrayStack *= 2;^[CLASS] TraceSignatureVisitor  [METHOD] startType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Variable_Misuse]^while  ( argumentStack % 2 != 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^while  ( arrayStack % 2 >= 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^while  ( arrayStack  <<  2 != 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^while  ( arrayStack % 3 != 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack /= access;^295^^^^^290^299^arrayStack /= 2;^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( arrayStack % 2 != 0 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( arrayStack  <=  2 == 0 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^if  ( arrayStack  <<  2 == 0 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( arrayStack % 1 == 0 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( arrayStack % 2 == access )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( arrayStack % 2 == 1 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^if  ( arrayStack % 3 == 0 )  {^291^^^^^290^299^if  ( arrayStack % 2 == 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^while  ( arrayStack % 2 <= 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Operator]^while  ( arrayStack  ||  2 != 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^while  ( arrayStack % argumentStack != 0 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^while  ( arrayStack % 2 != 1 )  {^294^^^^^290^299^while  ( arrayStack % 2 != 0 )  {^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack /= ;^295^^^^^290^299^arrayStack /= 2;^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack /= 3;^295^^^^^290^299^arrayStack /= 2;^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack /= argumentStack;^292^^^^^290^299^arrayStack /= 2;^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
[BugLab_Wrong_Literal]^arrayStack /= arrayStack;^292^^^^^290^299^arrayStack /= 2;^[CLASS] TraceSignatureVisitor  [METHOD] endType [RETURN_TYPE] void   [VARIABLES] StringBuffer  buf  declaration  exceptions  returnType  boolean  isInterface  needObjectClass  seenFormalParameter  seenInterface  seenInterfaceBound  seenParameter  String  name  separator  int  access  argumentStack  arrayStack  
