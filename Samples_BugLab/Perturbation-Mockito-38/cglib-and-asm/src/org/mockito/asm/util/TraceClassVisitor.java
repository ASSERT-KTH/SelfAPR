[BugLab_Wrong_Literal]^int i = flags;^120^^^^^105^135^int i = 0;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^boolean ok = false;^123^^^^^108^138^boolean ok = true;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( i < 1 || args.length > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( args.length.length < 1 || args > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( args < 1 || args.length.length > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args.length < 1 && args.length > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args.length <= 1 || args.length > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args.length < 1 || args.length >= 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( args.length < flags || args.length > 2 )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( args.length < 1 || args.length > flags )  {^124^^^^^109^139^if  ( args.length < 1 || args.length > 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^ok = true;^125^^^^^110^140^ok = false;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( args && "-debug".equals ( ok[0] )  )  {^127^^^^^112^142^if  ( ok && "-debug".equals ( args[0] )  )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( ok || "-debug".equals ( args[0] )  )  {^127^^^^^112^142^if  ( ok && "-debug".equals ( args[0] )  )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( ok && "-debug".equals ( args[-1] )  )  {^127^^^^^112^142^if  ( ok && "-debug".equals ( args[0] )  )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( ok && "-debug".equals ( args[i] )  )  {^127^^^^^112^142^if  ( ok && "-debug".equals ( args[0] )  )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( i != 2 )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( args.length.length != 2 )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( args != 2 )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args.length == 2 )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( args.length != i )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^ok = true;^131^^^^^116^146^ok = false;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^i = 2;^128^^^^^113^143^i = 1;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^flags = i;^129^^^^^114^144^flags = 0;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args.length > 2 )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( args.length !=  )  {^130^^^^^115^145^if  ( args.length != 2 )  {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^i = i;^128^^^^^113^143^i = 1;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^System.err.println ( "Usage: TraceClassVisitor [-debug] "  >>  "<fully qualified class name or class file name>" ) ;^136^137^^^^121^151^System.err.println ( "Usage: TraceClassVisitor [-debug] " + "<fully qualified class name or class file name>" ) ;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^System.err.println ( "Usage: TraceClassVisitor [-debug] "  ^  "<fully qualified class name or class file name>" ) ;^136^137^^^^121^151^System.err.println ( "Usage: TraceClassVisitor [-debug] " + "<fully qualified class name or class file name>" ) ;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args[i].endsWith ( ".class" )  && args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  > -1 ) {^141^142^143^^^126^156^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  > -1 ) {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  >= -1 || args[i].indexOf ( '/' )  > -1 ) {^141^142^143^^^126^156^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  > -1 ) {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  >= -1 ) {^141^142^143^^^126^156^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  > -1 ) {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -2 || args[i].indexOf ( '/' )  > -2 ) {^141^142^143^^^126^156^if  ( args[i].endsWith ( ".class" )  || args[i].indexOf ( '\\' )  > -1 || args[i].indexOf ( '/' )  > -1 ) {^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^cr.accept ( new TraceClassVisitor ( new PrintWriter ( System.out )  ) , getDefaultAttributes (  ) , i ) ;^148^149^150^^^133^163^cr.accept ( new TraceClassVisitor ( new PrintWriter ( System.out )  ) , getDefaultAttributes (  ) , flags ) ;^[CLASS] TraceClassVisitor  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  ClassVisitor  cv  String[]  args  boolean  ok  int  flags  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^int major = minor & 0xFFFF;^186^^^^^171^201^int major = version & 0xFFFF;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^int major = version  >=  0xFFFF;^186^^^^^171^201^int major = version & 0xFFFF;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^int minor = major >>> 16;^187^^^^^172^202^int minor = version >>> 16;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^int minor = version  ==  16;^187^^^^^172^202^int minor = version >>> 16;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^int minor = version >>> access;^187^^^^^172^202^int minor = version >>> 16;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " .append ( version ) .append ( '.' ) .append ( minor )^189^190^191^192^^174^204^buf.append ( " .append ( major ) .append ( '.' ) .append ( minor )^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " .append ( major ) .append ( '.' ) .append ( major )^189^190^191^192^^174^204^buf.append ( " .append ( major ) .append ( '.' ) .append ( minor )^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( " .append ( minor ) .append ( '.' ) .append ( major )^189^190^191^192^^174^204^buf.append ( " .append ( major ) .append ( '.' ) .append ( minor )^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " .append ( minor ) .append ( '.' ) .append ( minor )^189^190^191^192^^174^204^buf.append ( " .append ( major ) .append ( '.' ) .append ( minor )^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " .append ( major ) .append ( '.' ) .append ( version )^189^190^191^192^^174^204^buf.append ( " .append ( major ) .append ( '.' ) .append ( minor )^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( version & Opcodes.ACC_DEPRECATED )  != 0 )  {^196^^^^^181^211^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_DEPRECATED )  <= 0 )  {^196^^^^^181^211^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  |  Opcodes.ACC_DEPRECATED )  != 0 )  {^196^^^^^181^211^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( CLASS_SIGNATURE, superName ) ;^201^^^^^186^216^appendDescriptor ( CLASS_SIGNATURE, signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( superName != null )  {^202^^^^^187^217^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^202^^^^^187^217^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^TraceSignatureVisitor sv = new TraceSignatureVisitor ( version ) ;^203^^^^^188^218^TraceSignatureVisitor sv = new TraceSignatureVisitor ( access ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( superName ) ;^204^^^^^189^219^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( " .append ( sv ) .append ( name.getDeclaration (  )  ) .append ( '\n' ) ;^206^207^208^209^^191^221^buf.append ( " .append ( name ) .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " .append ( superName ) .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^206^207^208^209^^191^221^buf.append ( " .append ( name ) .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendAccess ( version & ~Opcodes.ACC_SUPER ) ;^212^^^^^197^227^appendAccess ( access & ~Opcodes.ACC_SUPER ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^appendAccess ( access  !=  ~Opcodes.ACC_SUPER ) ;^212^^^^^197^227^appendAccess ( access & ~Opcodes.ACC_SUPER ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( version & Opcodes.ACC_ANNOTATION )  != 0 )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_ANNOTATION )  == 0 )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  <<  Opcodes.ACC_ANNOTATION )  != 0 )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_ANNOTATION )  != 0 )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  >>  Opcodes.ACC_ANNOTATION )  != 0 )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_ANNOTATION )  != access )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_ANNOTATION )  !=  )  {^213^^^^^198^228^if  (  ( access & Opcodes.ACC_ANNOTATION )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^} else if  (  ( minor & Opcodes.ACC_INTERFACE )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access & Opcodes.ACC_INTERFACE )  == 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access   instanceof   Opcodes.ACC_INTERFACE )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  <  Opcodes.ACC_INTERFACE )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != -1 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 1 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^} else if  (  ( version & Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access & Opcodes.ACC_ENUM )  != 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  <<  Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^} else if  (  ( access & Opcodes.ACC_ENUM )  ==  )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  ^  Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^} else if  (  ( access & Opcodes.ACC_ENUM )  == 1 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^} else if  (  ( access & Opcodes.1 )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  >  Opcodes.ACC_INTERFACE )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  !=  Opcodes.ACC_INTERFACE )  != 0 )  {^215^^^^^200^230^} else if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  <  Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^} else if  (  ( minor & Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access & Opcodes.ACC_ENUM )  < 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^} else if  (  ( access  >>  Opcodes.ACC_ENUM )  == 0 )  {^217^^^^^202^232^} else if  (  ( access & Opcodes.ACC_ENUM )  == 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, superName ) ;^220^^^^^205^235^appendDescriptor ( INTERNAL_NAME, name ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( signature != null && !"java/lang/Object".equals ( superName )  )  {^222^^^^^207^237^if  ( superName != null && !"java/lang/Object".equals ( superName )  )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( superName != null || !"java/lang/Object".equals ( superName )  )  {^222^^^^^207^237^if  ( superName != null && !"java/lang/Object".equals ( superName )  )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( superName == null && !"java/lang/Object".equals ( superName )  )  {^222^^^^^207^237^if  ( superName != null && !"java/lang/Object".equals ( superName )  )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, signature ) ;^224^^^^^209^239^appendDescriptor ( INTERNAL_NAME, superName ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( versionnterfaces != null && interfaces.length > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( interfaces != null && version > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( interfaces.length != null && interfaces > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^if  ( interfaces.lengthnterfaces != null && i > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( interfaces != null || interfaces.length > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( interfaces == null && interfaces.length > 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( interfaces != null && interfaces.length >= 0 )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( interfaces != null && interfaces.length > access )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( interfaces != null && interfaces.length > i )  {^227^^^^^212^242^if  ( interfaces != null && interfaces.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( versionnt i = 0; i < interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < minor; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( interfaces.lengthnt i = 0; i < i; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = major; i < interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, versionnterfaces[i] ) ;^230^^^^^215^245^appendDescriptor ( INTERNAL_NAME, interfaces[i] ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^appendDescriptor ( INTERNAL_NAME, i[i] ) ;^230^^^^^215^245^appendDescriptor ( INTERNAL_NAME, interfaces[i] ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^appendDescriptor ( INTERNAL_NAME, interfacesnterfaces[i] ) ;^230^^^^^215^245^appendDescriptor ( INTERNAL_NAME, interfaces[i] ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = access; i < interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( minornt i = 0; i < interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( interfacesnt i = 0; i < i.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < interfaces.length; ++i )  {^229^^^^^214^244^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^text.add ( this.toString (  )  ) ;^236^^^^^221^251^text.add ( buf.toString (  )  ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^text.add ( 2.toString (  )  ) ;^236^^^^^221^251^text.add ( buf.toString (  )  ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^238^^^^^223^253^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( minor, access, name, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, version, name, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, access, signature, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, access, name, superName, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, access, name, signature, name, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( access, version, name, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( version, access, superName, signature, name, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( signature, access, name, version, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( version, access, name, superName, signature, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, minor, name, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visit ( version, access, superName, signature, superName, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( version, superName, name, signature, access, interfaces ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visit ( version, interfaces, name, signature, superName, access ) ;^239^^^^^224^254^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] TraceClassVisitor  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  ClassVisitor  cv  String  name  signature  superName  String[]  interfaces  int  access  i  major  minor  version  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( debug != null )  {^245^^^^^243^264^if  ( file != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( file == null )  {^245^^^^^243^264^if  ( file != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( tab ) .append ( " .append ( debug ) .append ( '\n' ) ;^246^247^248^249^^243^264^buf.append ( tab ) .append ( " .append ( file ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( file ) .append ( " .append ( tab ) .append ( '\n' ) ;^246^247^248^249^^243^264^buf.append ( tab ) .append ( " .append ( file ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( 3 ) .append ( " .append ( file ) .append ( '\n' ) ;^246^247^248^249^^243^264^buf.append ( tab ) .append ( " .append ( file ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( file != null )  {^251^^^^^243^264^if  ( debug != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( debug == null )  {^251^^^^^243^264^if  ( debug != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( tab ) .append ( " .append ( file ) .append ( '\n' ) ;^252^253^254^255^^243^264^buf.append ( tab ) .append ( " .append ( debug ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( debug ) .append ( " .append ( tab ) .append ( '\n' ) ;^252^253^254^255^^243^264^buf.append ( tab ) .append ( " .append ( debug ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( buf.length (  )  == 0 )  {^257^^^^^243^264^if  ( buf.length (  )  > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^261^^^^^243^264^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitSource ( file, file ) ;^262^^^^^243^264^cv.visitSource ( file, debug ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitSource ( debug, file ) ;^262^^^^^243^264^cv.visitSource ( file, debug ) ;^[CLASS] TraceClassVisitor  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] ClassVisitor  cv  String  debug  file  boolean  PrintWriter  pw  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^271^^^^^266^285^buf.setLength ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( name == null )  {^275^^^^^266^285^if  ( name != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( owner ) .append ( ' ' ) ;^276^^^^^266^285^buf.append ( name ) .append ( ' ' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^282^^^^^266^285^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( name, name, desc ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( owner, desc, desc ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( owner, name, owner ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitOuterClass ( name, owner, desc ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitOuterClass ( desc, name, owner ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( owner, owner, desc ) ;^283^^^^^266^285^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] ClassVisitor  cv  String  desc  name  owner  boolean  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^293^^^^^287^298^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  tav  ClassVisitor  cv  String  desc  boolean  visible  PrintWriter  pw  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  tav ) .av = cv.visitAnnotation ( visible, desc ) ;^294^295^^^^287^298^(  ( TraceAnnotationVisitor )  tav ) .av = cv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceClassVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  tav  ClassVisitor  cv  String  desc  boolean  visible  PrintWriter  pw  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  tav ) .av = desc.visitAnnotation ( cv, visible ) ;^294^295^^^^287^298^(  ( TraceAnnotationVisitor )  tav ) .av = cv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceClassVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  tav  ClassVisitor  cv  String  desc  boolean  visible  PrintWriter  pw  
[BugLab_Argument_Swapping]^(  ( TraceAnnotationVisitor )  tav ) .av = visible.visitAnnotation ( desc, cv ) ;^294^295^^^^287^298^(  ( TraceAnnotationVisitor )  tav ) .av = cv.visitAnnotation ( desc, visible ) ;^[CLASS] TraceClassVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] AnnotationVisitor  tav  ClassVisitor  cv  String  desc  boolean  visible  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^304^^^^^300^307^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] ClassVisitor  cv  boolean  Attribute  attr  PrintWriter  pw  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^315^^^^^309^332^buf.setLength ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( buf ) .append ( " tab.append ( access & ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^316^317^^^^309^332^buf.append ( tab ) .append ( " buf.append ( access & ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^buf.append ( access  >=  ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^317^^^^^309^332^buf.append ( access & ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^buf.append ( access  >  ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^317^^^^^309^332^buf.append ( access & ~Opcodes.ACC_SUPER ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, outerName ) ;^321^^^^^309^332^appendDescriptor ( INTERNAL_NAME, name ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, name ) ;^323^^^^^309^332^appendDescriptor ( INTERNAL_NAME, outerName ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( INTERNAL_NAME, outerName ) ;^325^^^^^309^332^appendDescriptor ( INTERNAL_NAME, innerName ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^329^^^^^309^332^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( outerName, outerName, innerName, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( innerName, outerName, name, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( outerName, name, innerName, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( name, outerName, access, innerName ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( name, innerName, innerName, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( name, outerName, outerName, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( name, innerName, outerName, access ) ;^330^^^^^309^332^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] ClassVisitor  cv  String  innerName  name  outerName  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^buf.setLength ( 1 ) ;^341^^^^^326^356^buf.setLength ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_DEPRECATED )  == 0 )  {^343^^^^^328^358^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  >  Opcodes.ACC_DEPRECATED )  != 0 )  {^343^^^^^328^358^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( this ) .append ( " if  ( signature != null )  {^346^347^^^^331^361^buf.append ( tab ) .append ( " if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( name != null )  {^347^^^^^332^362^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^347^^^^^332^362^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor sv = new TraceSignatureVisitor ( access ) ;^351^^^^^336^366^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_SIGNATURE, name ) ;^349^^^^^334^364^appendDescriptor ( FIELD_SIGNATURE, signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( sv ) .append ( " .append ( tab.getDeclaration (  )  ) .append ( '\n' ) ;^354^355^356^357^^339^369^buf.append ( tab ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( null ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^354^355^356^357^^339^369^buf.append ( tab ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( this ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^354^355^356^357^^339^369^buf.append ( tab ) .append ( " .append ( sv.getDeclaration (  )  ) .append ( '\n' ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor sv = new TraceSignatureVisitor ( -1 ) ;^351^^^^^336^366^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( name ) ;^352^^^^^337^367^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 1 ) ;^351^^^^^336^366^TraceSignatureVisitor sv = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( 1 ) ;^348^^^^^333^363^buf.append ( tab ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( FIELD_DESCRIPTOR, signature ) ;^363^^^^^348^378^appendDescriptor ( FIELD_DESCRIPTOR, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( ' ' ) .append ( signature ) ;^364^^^^^349^379^buf.append ( ' ' ) .append ( name ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( value == null )  {^365^^^^^350^380^if  ( value != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( value  >>  String )  {^367^^^^^352^382^if  ( value instanceof String )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( value  &&  String )  {^367^^^^^352^382^if  ( value instanceof String )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^380^^^^^365^395^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, signature, desc, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, name, signature, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, name, desc, name, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( desc, name, access, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( access, signature, desc, name, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( access, desc, name, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = signature.visitField ( access, name, desc, cv, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( value, name, desc, signature, access ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = name.visitField ( access, cv, desc, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, desc, desc, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, name, desc, desc, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( access, name, desc, value, signature ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( signature, name, desc, access, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( access, name, signature, desc, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = access.visitField ( cv, name, desc, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^tav.fv = cv.visitField ( access, name, name, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( name, access, desc, signature, value ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Argument_Swapping]^tav.fv = cv.visitField ( access, value, desc, signature, name ) ;^381^^^^^366^396^tav.fv = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] TraceClassVisitor  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] boolean  TraceSignatureVisitor  sv  SignatureReader  r  Object  value  ClassVisitor  cv  String  desc  name  signature  TraceFieldVisitor  tav  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^394^^^^^379^409^buf.setLength ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_DEPRECATED )  == 0 )  {^396^^^^^381^411^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  |  Opcodes.ACC_DEPRECATED )  != 0 )  {^396^^^^^381^411^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 1 )  {^396^^^^^381^411^if  (  ( access & Opcodes.ACC_DEPRECATED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( null ) .append ( " }^397^398^^^^382^412^buf.append ( tab ) .append ( " }^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( genericReturn != null )  {^401^^^^^386^416^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^401^^^^^386^416^if  ( signature != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( name != null )  {^418^^^^^403^433^if  ( genericExceptions != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( genericExceptions == null )  {^418^^^^^403^433^if  ( genericExceptions != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " throws " ) .append ( name ) ;^419^^^^^404^434^buf.append ( " throws " ) .append ( genericExceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor v = new TraceSignatureVisitor ( access ) ;^405^^^^^390^420^TraceSignatureVisitor v = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( name ) ;^406^^^^^391^421^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor v = new TraceSignatureVisitor ( -1 ) ;^405^^^^^390^420^TraceSignatureVisitor v = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^SignatureReader r = new SignatureReader ( genericReturn ) ;^406^^^^^391^421^SignatureReader r = new SignatureReader ( signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( METHOD_SIGNATURE, name ) ;^403^^^^^388^418^appendDescriptor ( METHOD_SIGNATURE, signature ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( tab ) .append ( " .append ( signature ) .append ( ' ' )^412^413^414^415^^397^427^buf.append ( tab ) .append ( " .append ( genericReturn ) .append ( ' ' )^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^buf.append ( genericReturn ) .append ( " .append ( tab ) .append ( ' ' )^412^413^414^415^^397^427^buf.append ( tab ) .append ( " .append ( genericReturn ) .append ( ' ' )^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^buf.append ( " throws " ) .append ( signature ) ;^419^^^^^404^434^buf.append ( " throws " ) .append ( genericExceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( signature != null )  {^418^^^^^403^433^if  ( genericExceptions != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor v = new TraceSignatureVisitor ( i ) ;^405^^^^^390^420^TraceSignatureVisitor v = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^TraceSignatureVisitor v = new TraceSignatureVisitor ( 1 ) ;^405^^^^^390^420^TraceSignatureVisitor v = new TraceSignatureVisitor ( 0 ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendAccess ( i ) ;^425^^^^^410^440^appendAccess ( access ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( i & Opcodes.ACC_NATIVE )  != 0 )  {^426^^^^^411^441^if  (  ( access & Opcodes.ACC_NATIVE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_NATIVE )  == 0 )  {^426^^^^^411^441^if  (  ( access & Opcodes.ACC_NATIVE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ==  Opcodes.ACC_NATIVE )  != 0 )  {^426^^^^^411^441^if  (  ( access & Opcodes.ACC_NATIVE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( i & Opcodes.ACC_VARARGS )  != 0 )  {^429^^^^^414^444^if  (  ( access & Opcodes.ACC_VARARGS )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_VARARGS )  < 0 )  {^429^^^^^414^444^if  (  ( access & Opcodes.ACC_VARARGS )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  >=  Opcodes.ACC_VARARGS )  != 0 )  {^429^^^^^414^444^if  (  ( access & Opcodes.ACC_VARARGS )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_VARARGS )  != -1 )  {^429^^^^^414^444^if  (  ( access & Opcodes.ACC_VARARGS )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( i & Opcodes.ACC_BRIDGE )  != 0 )  {^432^^^^^417^447^if  (  ( access & Opcodes.ACC_BRIDGE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_BRIDGE )  <= 0 )  {^432^^^^^417^447^if  (  ( access & Opcodes.ACC_BRIDGE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  |  Opcodes.ACC_BRIDGE )  != 0 )  {^432^^^^^417^447^if  (  ( access & Opcodes.ACC_BRIDGE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^appendDescriptor ( METHOD_DESCRIPTOR, signature ) ;^437^^^^^422^452^appendDescriptor ( METHOD_DESCRIPTOR, desc ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( exceptions != null && access > 0 )  {^438^^^^^423^453^if  ( exceptions != null && exceptions.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( exceptions != null || exceptions.length > 0 )  {^438^^^^^423^453^if  ( exceptions != null && exceptions.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( exceptions == null && exceptions.length > 0 )  {^438^^^^^423^453^if  ( exceptions != null && exceptions.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( exceptions != null && exceptions.length >= 0 )  {^438^^^^^423^453^if  ( exceptions != null && exceptions.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  ( exceptions != null && exceptions.length > i )  {^438^^^^^423^453^if  ( exceptions != null && exceptions.length > 0 )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( accessnt i = 0; i < exceptions.length; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < access; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( exceptions.lengthnt i = 0; i < i; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= exceptions.length; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < exceptions.length; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = access; i < exceptions.length; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < exceptions.length.length; ++i )  {^440^^^^^425^455^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^452^^^^^437^467^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( i, name, desc, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( access, signature, desc, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( access, name, signature, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( access, name, desc, name, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( name, access, desc, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( access, desc, name, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( access, name, signature, desc, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( access, name, desc, exceptions, signature ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = name.visitMethod ( access, cv, desc, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( access, name, name, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Variable_Misuse]^tcv.mv = cv.visitMethod ( access, name, desc, genericReturn, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = access.visitMethod ( cv, name, desc, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = desc.visitMethod ( access, name, cv, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( signature, name, desc, access, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( access, signature, desc, name, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( desc, name, access, signature, exceptions ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( access, name, exceptions, signature, desc ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Argument_Swapping]^tcv.mv = cv.visitMethod ( exceptions, name, desc, signature, access ) ;^453^^^^^438^468^tcv.mv = cv.visitMethod ( access, name, desc, signature, exceptions ) ;^[CLASS] TraceClassVisitor  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  TraceSignatureVisitor  v  SignatureReader  r  ClassVisitor  cv  String  desc  genericDecl  genericExceptions  genericReturn  name  signature  String[]  exceptions  TraceMethodVisitor  tcv  int  access  i  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( cv == null )  {^465^^^^^459^468^if  ( cv != null )  {^[CLASS] TraceClassVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] ClassVisitor  cv  PrintWriter  pw  boolean  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_PUBLIC )  >= 0 )  {^489^^^^^474^504^if  (  ( access & Opcodes.ACC_PUBLIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_PUBLIC )  != 0 )  {^489^^^^^474^504^if  (  ( access & Opcodes.ACC_PUBLIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_PUBLIC )  != access )  {^489^^^^^474^504^if  (  ( access & Opcodes.ACC_PUBLIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_PRIVATE )  < 0 )  {^492^^^^^477^507^if  (  ( access & Opcodes.ACC_PRIVATE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  <  Opcodes.ACC_PRIVATE )  != 0 )  {^492^^^^^477^507^if  (  ( access & Opcodes.ACC_PRIVATE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_PRIVATE )  != access )  {^492^^^^^477^507^if  (  ( access & Opcodes.ACC_PRIVATE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_PROTECTED )  == 0 )  {^495^^^^^480^510^if  (  ( access & Opcodes.ACC_PROTECTED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_PROTECTED )  != 0 )  {^495^^^^^480^510^if  (  ( access & Opcodes.ACC_PROTECTED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_PROTECTED )  != access )  {^495^^^^^480^510^if  (  ( access & Opcodes.ACC_PROTECTED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_FINAL )  <= 0 )  {^498^^^^^483^513^if  (  ( access & Opcodes.ACC_FINAL )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  !=  Opcodes.ACC_FINAL )  != 0 )  {^498^^^^^483^513^if  (  ( access & Opcodes.ACC_FINAL )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_STATIC )  == 0 )  {^501^^^^^486^516^if  (  ( access & Opcodes.ACC_STATIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access   instanceof   Opcodes.ACC_STATIC )  != 0 )  {^501^^^^^486^516^if  (  ( access & Opcodes.ACC_STATIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_STATIC )  != access )  {^501^^^^^486^516^if  (  ( access & Opcodes.ACC_STATIC )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_SYNCHRONIZED )  == 0 )  {^504^^^^^489^519^if  (  ( access & Opcodes.ACC_SYNCHRONIZED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ||  Opcodes.ACC_SYNCHRONIZED )  != 0 )  {^504^^^^^489^519^if  (  ( access & Opcodes.ACC_SYNCHRONIZED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_SYNCHRONIZED )  != access )  {^504^^^^^489^519^if  (  ( access & Opcodes.ACC_SYNCHRONIZED )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  (  ( access & Opcodes.0 )  != 0 )  {^507^^^^^492^522^if  (  ( access & Opcodes.ACC_VOLATILE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_VOLATILE )  < 0 )  {^507^^^^^492^522^if  (  ( access & Opcodes.ACC_VOLATILE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  !=  Opcodes.ACC_VOLATILE )  != 0 )  {^507^^^^^492^522^if  (  ( access & Opcodes.ACC_VOLATILE )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_TRANSIENT )  >= 0 )  {^510^^^^^495^525^if  (  ( access & Opcodes.ACC_TRANSIENT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_TRANSIENT )  != 0 )  {^510^^^^^495^525^if  (  ( access & Opcodes.ACC_TRANSIENT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_TRANSIENT )  != 1 )  {^510^^^^^495^525^if  (  ( access & Opcodes.ACC_TRANSIENT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_ABSTRACT )  == 0 )  {^513^^^^^498^528^if  (  ( access & Opcodes.ACC_ABSTRACT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_ABSTRACT )  != 0 )  {^513^^^^^498^528^if  (  ( access & Opcodes.ACC_ABSTRACT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_STRICT )  == 0 )  {^516^^^^^501^531^if  (  ( access & Opcodes.ACC_STRICT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ||  Opcodes.ACC_STRICT )  != 0 )  {^516^^^^^501^531^if  (  ( access & Opcodes.ACC_STRICT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_STRICT )  != access )  {^516^^^^^501^531^if  (  ( access & Opcodes.ACC_STRICT )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_ENUM )  >= 0 )  {^519^^^^^504^534^if  (  ( access & Opcodes.ACC_ENUM )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  (  ( access  ^  Opcodes.ACC_ENUM )  != 0 )  {^519^^^^^504^534^if  (  ( access & Opcodes.ACC_ENUM )  != 0 )  {^[CLASS] TraceClassVisitor  [METHOD] appendAccess [RETURN_TYPE] void   final int access [VARIABLES] ClassVisitor  cv  boolean  int  access  PrintWriter  pw  
