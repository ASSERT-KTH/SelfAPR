[BugLab_Argument_Swapping]^if  ( args != 1 )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Operator]^if  ( args.length == 1 )  {^151^^^^^150^165^if  ( args.length != 1 )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Operator]^System.err.println ( "Usage: CheckClassAdapter "  <=  "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Operator]^System.err.println ( "Usage: CheckClassAdapter "  >=  "<fully qualified class name or class file name>" ) ;^153^154^^^^150^165^System.err.println ( "Usage: CheckClassAdapter " + "<fully qualified class name or class file name>" ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^if  ( args[1].endsWith ( ".class" )  )  {^158^^^^^150^165^if  ( args[0].endsWith ( ".class" )  )  {^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^cr = new ClassReader ( args[-1] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^cr = new ClassReader ( new FileInputStream ( args[1] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^cr = new ClassReader ( new FileInputStream ( args[-1] )  ) ;^159^^^^^150^165^cr = new ClassReader ( new FileInputStream ( args[0] )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^cr = new ClassReader ( args[1] ) ;^161^^^^^150^165^cr = new ClassReader ( args[0] ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Literal]^verify ( cr, true, new PrintWriter ( System.err )  ) ;^164^^^^^150^165^verify ( cr, false, new PrintWriter ( System.err )  ) ;^[CLASS] CheckClassAdapter  [METHOD] main [RETURN_TYPE] void   String[] args [VARIABLES] ClassReader  cr  boolean  end  outer  source  start  String[]  args  
[BugLab_Wrong_Operator]^Type syperType = cn.superName != null ? null : Type.getObjectType ( cn.superName ) ;^184^185^186^^^169^199^Type syperType = cn.superName == null ? null : Type.getObjectType ( cn.superName ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  ( s.length (  )  <= method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  <  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  ( s.length (  )  < method.maxStack  <=  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^while  ( s.length (  )  < method.maxStack + method.maxLocals  )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( !source )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^if  ( f != null )  {^211^^^^^196^226^if  ( f == null )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int j = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( int f = 0; k < k.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k <= f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = k; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^s.append ( getShortName ( f.getLocal ( j ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^s.append ( getShortName ( k.getLocal ( f ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^211^223^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int j = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( int f = 0; k < k.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k <= f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = 1; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^s.append ( getShortName ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^s.append ( getShortName ( k.getStack ( f ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^211^223^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = 1; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = j; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = i; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < methods.size (  ) ; ++i )  {^188^^^^^173^203^for  ( int i = 0; i < methods.size (  ) ; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while   instanceof   ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  ( s.length (  )  < method.maxStack  >=  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^while  ( s.length (  )  < method.maxStack + method.maxLocals + k )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( !start )  {^195^^^^^180^210^if  ( !dump )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = -1; k < f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ==  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  |  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  <=  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >>  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = i; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  >  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  ( s.length (  )  < method.maxStack  &  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int j = 0; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k <= f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = j; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^s.append ( getShortName ( k.getLocal ( f ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^s.append ( getShortName ( f.getLocal ( j ) .toString (  )  )  ) .append ( ' ' ) ;^215^216^^^^200^230^s.append ( getShortName ( f.getLocal ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^for  ( int j = 0; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( int f = 0; k < k.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k > f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = k; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^s.append ( getShortName ( f.getStack ( j ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^s.append ( getShortName ( k.getStack ( f ) .toString (  )  )  ) .append ( ' ' ) ;^220^221^^^^205^235^s.append ( getShortName ( f.getStack ( k ) .toString (  )  )  ) .append ( ' ' ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = k; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = 1; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^pw.print ( Integer.toString ( k + 100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  &&  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j  ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j 00000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  ||  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  |  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j +  ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ==  s  ==  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ==  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^for  ( int f = 0; k < k.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k == f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = -1; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k == f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = -1; k < f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for   instanceof   ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = i; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ||  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, true )  ) ;^190^191^192^^^175^205^Analyzer a = new Analyzer ( new SimpleVerifier ( Type.getObjectType ( cn.name ) , syperType, false )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^MethodNode method =  ( MethodNode )  methods.get ( k ) ;^189^^^^^174^204^MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Argument_Swapping]^MethodNode method =  ( MethodNode )  i.get ( methods ) ;^189^^^^^174^204^MethodNode method =  ( MethodNode )  methods.get ( i ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = k; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.println ( method.name  <  method.desc ) ;^205^^^^^190^220^pw.println ( method.name + method.desc ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  <  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + i ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + j00000 ) .substring ( j )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j   instanceof   100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  <=  s  <=  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  >>  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  <<  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  !=  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  <  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >=  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = ; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  <<  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^while  ( s.length (  )  < method.maxStack  >  method.maxLocals + 1 )  {^224^^^^^209^239^while  ( s.length (  )  < method.maxStack + method.maxLocals + 1 )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k > f.getLocals (  ) ; ++k )  {^214^^^^^211^223^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k > f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = k; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = i; k < f.getStackSize (  ) ; ++k )  {^219^^^^^211^223^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  ( int k = 0; k <= f.getStackSize (  ) ; ++k )  {^219^^^^^204^234^for  ( int k = 0; k < f.getStackSize (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int k = ; k < f.getLocals (  ) ; ++k )  {^214^^^^^199^229^for  ( int k = 0; k < f.getLocals (  ) ; ++k )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + 00000 ) .substring (  )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  !=  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  &&  s  &&  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ||  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^for  >  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ==  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = j; j < method.instructions.size (  ) ; ++j )  {^206^^^^^191^221^for  ( int j = 0; j < method.instructions.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^for  ( int j = j; j < method.tryCatchBlocks.size (  ) ; ++j )  {^230^^^^^215^245^for  ( int j = 0; j < method.tryCatchBlocks.size (  ) ; ++j )  {^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.println ( method.name  &  method.desc ) ;^205^^^^^190^220^pw.println ( method.name + method.desc ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  ==  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + k00000 ) .substring ( k )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( Integer.toString ( j  &  100000 ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + i00000 ) .substring ( i )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Literal]^pw.print ( Integer.toString ( j + k ) .substring ( 1 )  ) ;^227^^^^^212^242^pw.print ( Integer.toString ( j + 100000 ) .substring ( 1 )  ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  !=  s  !=  " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  ^  s + " : " + mv.buf ) ;^228^^^^^213^243^pw.print ( " " + s + " : " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Wrong_Operator]^pw.print ( " "  >=  mv.buf ) ;^232^^^^^217^247^pw.print ( " " + mv.buf ) ;^[CLASS] CheckClassAdapter  [METHOD] verify [RETURN_TYPE] void   ClassReader cr final boolean dump PrintWriter pw [VARIABLES] ClassNode  cn  Frame  f  Frame[]  frames  Analyzer  a  TraceMethodVisitor  mv  int  i  j  k  Exception  e  Type  syperType  StringBuffer  s  boolean  dump  end  outer  source  start  MethodNode  method  ClassReader  cr  List  methods  PrintWriter  pw  
[BugLab_Variable_Misuse]^if  ( name.charAt ( n - 1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Argument_Swapping]^if  ( k.charAt ( name - 1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Operator]^if  ( name.charAt ( k - 1 )  != ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Operator]^if  ( name.charAt ( k  >=  1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Literal]^if  ( name.charAt ( k - k )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Operator]^if  ( name.charAt ( k   instanceof   1 )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Literal]^if  ( name.charAt ( k  )  == ';' )  {^242^^^^^239^246^if  ( name.charAt ( k - 1 )  == ';' )  {^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Variable_Misuse]^return k == -1 ? name : name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Argument_Swapping]^return k == -1 ? name : name.substring ( n + 1, n ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Argument_Swapping]^return name == -1 ? n : name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Operator]^return n < -1 ? name : name.substring ( n + 1, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Literal]^return n == -k ? name : name.substring ( n + k, k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Wrong_Literal]^return n == -1 ? name : name.substring ( n , k ) ;^245^^^^^239^246^return n == -1 ? name : name.substring ( n + 1, k ) ;^[CLASS] CheckClassAdapter  [METHOD] getShortName [RETURN_TYPE] String   String name [VARIABLES] int  k  n  boolean  dump  end  outer  source  start  String  name  
[BugLab_Variable_Misuse]^if  ( source )  {^269^^^^^254^284^if  ( start )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Literal]^start = false;^272^^^^^257^287^start = true;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^checkAccess ( version, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^274^275^276^277^^259^289^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_FINAL + Opcodes.ACC_SUPER + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC + Opcodes.ACC_ANNOTATION + Opcodes.ACC_ENUM^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  ( name == null && !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  ( name != null || !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( superName, "class name" ) ;^280^^^^^265^295^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( superName == null || !name.endsWith ( "package-info" )  )  {^279^^^^^264^294^if  ( name == null || !name.endsWith ( "package-info" )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( "java/lang/Object".equals ( signature )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  ( superName == null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( signature != null )  {^283^^^^^268^298^if  ( superName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( "java/lang/Object".equals ( superName )  )  {^282^^^^^267^297^if  ( "java/lang/Object".equals ( name )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( signature, "super class name" ) ;^287^^^^^272^302^CheckMethodAdapter.checkInternalName ( superName, "super class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^289^^^^^274^304^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkClassSignature ( superName ) ;^290^^^^^275^305^CheckMethodAdapter.checkClassSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  (  ( version & Opcodes.ACC_INTERFACE )  != 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  (  ( access & Opcodes.ACC_INTERFACE )  == 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  (  ( access  >=  Opcodes.ACC_INTERFACE )  != 0 )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Literal]^if  (  ( access & Opcodes.ACC_INTERFACE )  !=  )  {^292^^^^^277^307^if  (  ( access & Opcodes.ACC_INTERFACE )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( !"java/lang/Object".equals ( signature )  )  {^293^^^^^278^308^if  ( !"java/lang/Object".equals ( superName )  )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^if  ( versionnterfaces != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^if  ( i != null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^if  ( interfaces == null )  {^297^^^^^282^312^if  ( interfaces != null )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^for  ( versionnt i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < version; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^for  ( interfaces.lengthnt i = 0; i < i; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^for  ( interfacesnt i = 0; i < i.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( versionnterfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^CheckMethodAdapter.checkInternalName ( i[i], "interface name at interfacesndex " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^CheckMethodAdapter.checkInternalName ( interfacesnterfaces[i], "interface name at index " + i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  |  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Literal]^for  ( int i = i; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  &&  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < interfaces.length; ++i )  {^298^^^^^283^313^for  ( int i = 0; i < interfaces.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  ^  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index "  <  i ) ;^299^300^^^^284^314^CheckMethodAdapter.checkInternalName ( interfaces[i], "interface name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^cv.visit ( i, access, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^cv.visit ( version, i, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^cv.visit ( version, access, superName, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^cv.visit ( version, access, name, name, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Variable_Misuse]^cv.visit ( version, access, name, signature, signature, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^cv.visit ( signature, access, name, version, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^cv.visit ( access, version, name, signature, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^cv.visit ( version, access, signature, name, superName, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Argument_Swapping]^cv.visit ( superName, access, name, signature, version, interfaces ) ;^303^^^^^288^318^cv.visit ( version, access, name, signature, superName, interfaces ) ;^[CLASS] CheckClassAdapter  [METHOD] visit [RETURN_TYPE] void   final int version final int access String name String signature String superName String[] interfaces [VARIABLES] boolean  dump  end  outer  source  start  String  name  signature  superName  String[]  interfaces  int  access  i  version  
[BugLab_Wrong_Literal]^source = false;^311^^^^^306^313^source = true;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[BugLab_Argument_Swapping]^cv.visitSource ( debug, file ) ;^312^^^^^306^313^cv.visitSource ( file, debug ) ;^[CLASS] CheckClassAdapter  [METHOD] visitSource [RETURN_TYPE] void   String file String debug [VARIABLES] boolean  dump  end  outer  source  start  String  debug  file  
[BugLab_Variable_Misuse]^if  ( start )  {^321^^^^^315^332^if  ( outer )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Wrong_Literal]^outer = false;^324^^^^^315^332^outer = true;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^if  ( name == null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Wrong_Operator]^if  ( owner != null )  {^325^^^^^315^332^if  ( owner == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^if  ( owner != null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Wrong_Operator]^if  ( desc == null )  {^328^^^^^315^332^if  ( desc != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkMethodDesc ( owner ) ;^329^^^^^315^332^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( name, name, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( owner, owner, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^cv.visitOuterClass ( owner, name, owner ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Argument_Swapping]^cv.visitOuterClass ( name, owner, desc ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Argument_Swapping]^cv.visitOuterClass ( owner, desc, name ) ;^331^^^^^315^332^cv.visitOuterClass ( owner, name, desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitOuterClass [RETURN_TYPE] void   String owner String name String desc [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  owner  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( outerName, "class name" ) ;^341^^^^^334^354^CheckMethodAdapter.checkInternalName ( name, "class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^if  ( name != null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Wrong_Operator]^if  ( outerName == null )  {^342^^^^^334^354^if  ( outerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( name, "outer class name" ) ;^343^^^^^334^354^CheckMethodAdapter.checkInternalName ( outerName, "outer class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^if  ( outerName != null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Wrong_Operator]^if  ( innerName == null )  {^345^^^^^334^354^if  ( innerName != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkIdentifier ( outerName, "inner class name" ) ;^346^^^^^334^354^CheckMethodAdapter.checkIdentifier ( innerName, "inner class name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.1 + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^348^349^350^351^^334^354^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_INTERFACE + Opcodes.ACC_ABSTRACT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( outerName, outerName, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( name, name, innerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^cv.visitInnerClass ( name, outerName, name, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( access, outerName, innerName, name ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( name, innerName, outerName, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( innerName, outerName, name, access ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Argument_Swapping]^cv.visitInnerClass ( name, access, innerName, outerName ) ;^353^^^^^334^354^cv.visitInnerClass ( name, outerName, innerName, access ) ;^[CLASS] CheckClassAdapter  [METHOD] visitInnerClass [RETURN_TYPE] void   String name String outerName String innerName final int access [VARIABLES] int  access  boolean  dump  end  outer  source  start  String  innerName  name  outerName  
[BugLab_Variable_Misuse]^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.4 + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^364^365^366^367^^356^379^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_VOLATILE + Opcodes.ACC_TRANSIENT + Opcodes.ACC_SYNTHETIC^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkIdentifier ( signature, "field name" ) ;^369^^^^^356^379^CheckMethodAdapter.checkIdentifier ( name, "field name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkDesc ( signature, false ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Wrong_Literal]^CheckMethodAdapter.checkDesc ( desc, true ) ;^370^^^^^356^379^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^if  ( name != null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^371^^^^^356^379^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkFieldSignature ( name ) ;^372^^^^^356^379^CheckMethodAdapter.checkFieldSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Wrong_Operator]^if  ( value == null )  {^374^^^^^356^379^if  ( value != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^FieldVisitor av = cv.visitField ( access, signature, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^FieldVisitor av = cv.visitField ( access, name, signature, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^FieldVisitor av = cv.visitField ( access, name, desc, name, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( name, access, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( access, desc, name, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = desc.visitField ( access, name, cv, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( access, name, signature, desc, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( access, name, value, signature, desc ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = signature.visitField ( access, name, desc, cv, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^FieldVisitor av = cv.visitField ( access, desc, desc, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^FieldVisitor av = cv.visitField ( access, name, name, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( desc, name, access, signature, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( access, signature, desc, name, value ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Argument_Swapping]^FieldVisitor av = cv.visitField ( value, name, desc, signature, access ) ;^377^^^^^356^379^FieldVisitor av = cv.visitField ( access, name, desc, signature, value ) ;^[CLASS] CheckClassAdapter  [METHOD] visitField [RETURN_TYPE] FieldVisitor   final int access String name String desc String signature Object value [VARIABLES] Object  value  boolean  dump  end  outer  source  start  String  desc  name  signature  FieldVisitor  av  int  access  
[BugLab_Variable_Misuse]^checkAccess ( i, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.this + Opcodes.ACC_NATIVE^389^390^391^392^^387^411^checkAccess ( access, Opcodes.ACC_PUBLIC + Opcodes.ACC_PRIVATE + Opcodes.ACC_PROTECTED + Opcodes.ACC_STATIC + Opcodes.ACC_FINAL + Opcodes.ACC_SYNCHRONIZED + Opcodes.ACC_BRIDGE + Opcodes.ACC_VARARGS + Opcodes.ACC_NATIVE^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkMethodIdentifier ( signature, "method name" ) ;^395^^^^^387^411^CheckMethodAdapter.checkMethodIdentifier ( name, "method name" ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkMethodDesc ( signature ) ;^396^^^^^387^411^CheckMethodAdapter.checkMethodDesc ( desc ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^if  ( name != null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^if  ( signature == null )  {^397^^^^^387^411^if  ( signature != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkMethodSignature ( name ) ;^398^^^^^387^411^CheckMethodAdapter.checkMethodSignature ( signature ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^if  ( exceptions == null )  {^400^^^^^387^411^if  ( exceptions != null )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^for  ( accessnt i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < access; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^for  ( exceptions.lengthnt i = 0; i < i; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^for  ( exceptionsnt i = 0; i < i.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at accessndex " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^CheckMethodAdapter.checkInternalName ( i[i], "exception name at exceptionsndex " + i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  ||  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  ^  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Operator]^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index "  &&  i ) ;^402^403^^^^387^411^CheckMethodAdapter.checkInternalName ( exceptions[i], "exception name at index " + i ) ;^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < exceptions.length; ++i )  {^401^^^^^387^411^for  ( int i = 0; i < exceptions.length; ++i )  {^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( i, name, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( access, desc, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, name, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, name,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( cv.visitMethod ( access, signature, desc, name,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( name.visitMethod ( access, cv, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( cv.visitMethod ( access, desc, name, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, signature, desc,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( desc.visitMethod ( access, name, cv, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( access, signature, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Variable_Misuse]^return new CheckMethodAdapter ( cv.visitMethod ( access, name, signature, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Argument_Swapping]^return new CheckMethodAdapter ( cv.visitMethod ( name, access, desc, signature,^406^407^408^409^^387^411^return new CheckMethodAdapter ( cv.visitMethod ( access, name, desc, signature,^[CLASS] CheckClassAdapter  [METHOD] visitMethod [RETURN_TYPE] MethodVisitor   final int access String name String desc String signature String[] exceptions [VARIABLES] boolean  dump  end  outer  source  start  String  desc  name  signature  String[]  exceptions  int  access  i  
[BugLab_Wrong_Literal]^CheckMethodAdapter.checkDesc ( desc, true ) ;^418^^^^^413^420^CheckMethodAdapter.checkDesc ( desc, false ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Variable_Misuse]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, start )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Argument_Swapping]^return new CheckAnnotationAdapter ( desc.visitAnnotation ( cv, visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Argument_Swapping]^return new CheckAnnotationAdapter ( visible.visitAnnotation ( desc, cv )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Variable_Misuse]^return new CheckAnnotationAdapter ( 1.visitAnnotation ( desc, visible )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Argument_Swapping]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( visible, desc )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Variable_Misuse]^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, source )  ) ;^419^^^^^413^420^return new CheckAnnotationAdapter ( cv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckClassAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] boolean  dump  end  outer  source  start  visible  String  desc  
[BugLab_Wrong_Operator]^if  ( attr != null )  {^424^^^^^422^428^if  ( attr == null )  {^[CLASS] CheckClassAdapter  [METHOD] visitAttribute [RETURN_TYPE] void   Attribute attr [VARIABLES] Attribute  attr  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^end = false;^432^^^^^430^434^end = true;^[CLASS] CheckClassAdapter  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( !source )  {^445^^^^^444^451^if  ( !start )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( visible )  {^448^^^^^444^451^if  ( end )  {^[CLASS] CheckClassAdapter  [METHOD] checkState [RETURN_TYPE] void   [VARIABLES] boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  (  ( pro & ~possibleAccess )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  (  ( access & ~possibleAccess )  <= 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  (  ( access  ==  ~possibleAccess )  != 0 )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^if  (  ( access & ~possibleAccess )  != pro )  {^462^^^^^461^479^if  (  ( access & ~possibleAccess )  != 0 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "Invalid pub flags: " + access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  ^  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  >=  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Invalid access flags: "  &&  access ) ;^463^464^^^^461^479^throw new IllegalArgumentException ( "Invalid access flags: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pub =  ( access & Opcodes.ACC_PUBLIC )  > 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pub =  ( access  ==  Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == access ? access : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pub =  ( access & Opcodes.ACC_PUBLIC )  == fin ? fin : 1;^466^^^^^461^479^int pub =  ( access & Opcodes.ACC_PUBLIC )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^int pri =  ( pub & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pri =  ( access & Opcodes.ACC_PRIVATE )  >= 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pri =  ( access   instanceof   Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == pub ? pub : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == -1 ? -1 : 1;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : possibleAccess;^467^^^^^461^479^int pri =  ( access & Opcodes.ACC_PRIVATE )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^int pro =  ( pub & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pro =  ( access & Opcodes.ACC_PROTECTED )  != 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int pro =  ( access  >=  Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == pro ? pro : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  ==  ?  : 1;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 2;^468^^^^^461^479^int pro =  ( access & Opcodes.ACC_PROTECTED )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( pri + pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( pub + pub + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( pub + pri + pub > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Argument_Swapping]^if  ( pri + pub + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Argument_Swapping]^if  ( pub + pro + pri > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  ( pub + pri + pro >= 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  ( pub  &&  pri  &&  pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  ( pub  &  pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  &  ( pub + pri + pro > 1 )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^if  ( pub + pri + pro > abs )  {^469^^^^^461^479^if  ( pub + pri + pro > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + pri ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  >>  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  <=  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  <  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + pub ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: "  ^  access ) ;^470^471^^^^461^479^throw new IllegalArgumentException ( "public private and protected are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^int fin =  ( pub & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int fin =  ( access & Opcodes.ACC_FINAL )  != 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int fin =  ( access  !=  Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int fin =  ( access & Opcodes.ACC_FINAL )  == pro ? pro : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int fin =  ( access & Opcodes.ACC_FINAL )  == -1 ? -1 : 1;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : pro;^473^^^^^461^479^int fin =  ( access & Opcodes.ACC_FINAL )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^int abs =  ( pub & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  <= 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^int abs =  ( access  <<  Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == possibleAccess ? possibleAccess : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == -1 ? -1 : 1;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 0;^474^^^^^461^479^int abs =  ( access & Opcodes.ACC_ABSTRACT )  == 0 ? 0 : 1;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( pub + abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^if  ( fin + pro > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Argument_Swapping]^if  ( abs + fin > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  ( fin + abs == 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  ( fin  ^  abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^if  <  ( fin + abs > 1 )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Literal]^if  ( fin + abs > possibleAccess )  {^475^^^^^461^479^if  ( fin + abs > 1 )  {^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + pro ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  ^  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + pub ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  ==  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  &&  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: "  >  access ) ;^476^477^^^^461^479^throw new IllegalArgumentException ( "final and abstract are mutually exclusive: " + access ) ;^[CLASS] CheckClassAdapter  [METHOD] checkAccess [RETURN_TYPE] void   final int access final int possibleAccess [VARIABLES] int  abs  access  fin  possibleAccess  pri  pro  pub  boolean  dump  end  outer  source  start  visible  
