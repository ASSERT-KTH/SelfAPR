[buglab_swap_variables]^return new CheckAnnotationAdapter ( desc.visitAnnotation ( mv, visible )  ) ;^322^^^^^316^323^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitAnnotation (  visible )  ) ;^322^^^^^316^323^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( visible.visitAnnotation ( desc, mv )  ) ;^322^^^^^316^323^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc )  ) ;^322^^^^^316^323^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitAnnotation ( visible, desc )  ) ;^322^^^^^316^323^return new CheckAnnotationAdapter ( mv.visitAnnotation ( desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( parameter.visitParameterAnnotation ( mv, desc, visible )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation (  desc, visible )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( desc, parameter, visible )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter,  visible )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( visible.visitParameterAnnotation ( parameter, desc, mv )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^return new CheckAnnotationAdapter ( desc.visitParameterAnnotation ( parameter, mv, visible )  ) ;^337^338^339^^^330^340^return new CheckAnnotationAdapter ( mv.visitParameterAnnotation ( parameter, desc, visible )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitParameterAnnotation [RETURN_TYPE] AnnotationVisitor   final int parameter String desc final boolean visible [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  parameter  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid type=" + nLocal + " for frame nLocal " + type ) ;^392^393^^^^377^407^throw new IllegalArgumentException ( "Invalid nLocal=" + nLocal + " for frame type " + type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( mStack > nStack )  {^395^^^^^380^410^if  ( nStack > mStack )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid type=" + nStack + " for frame nStack " + type ) ;^396^397^^^^381^411^throw new IllegalArgumentException ( "Invalid nStack=" + nStack + " for frame type " + type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( local > 0 &&  ( nLocal == null || local.length < nLocal )  )  {^401^^^^^386^416^if  ( nLocal > 0 &&  ( local == null || local.length < nLocal )  )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( nLocal > 0 &&  ( local.length == null || local < nLocal )  )  {^401^^^^^386^416^if  ( nLocal > 0 &&  ( local == null || local.length < nLocal )  )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( local.length > 0 &&  ( local == null || nLocal < nLocal )  )  {^401^^^^^386^416^if  ( nLocal > 0 &&  ( local == null || local.length < nLocal )  )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^for  ( nLocalnt i = 0; i < i; ++i )  {^404^^^^^389^419^for  ( int i = 0; i < nLocal; ++i )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( stack.length > 0 &&  ( stack == null || nStack < nStack )  )  {^408^^^^^393^423^if  ( nStack > 0 &&  ( stack == null || stack.length < nStack )  )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^if  ( nStack > 0 &&  ( stack.length == null || stack < nStack )  )  {^408^^^^^393^423^if  ( nStack > 0 &&  ( stack == null || stack.length < nStack )  )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^for  ( nStacknt i = 0; i < i; ++i )  {^411^^^^^396^426^for  ( int i = 0; i < nStack; ++i )  {^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( nStack, nLocal, local, type, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame (  nLocal, local, nStack, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( nLocal, type, local, nStack, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type,  local, nStack, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type, nLocal, stack, nStack, local ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type, nLocal,  nStack, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type, nStack, local, nLocal, stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type, nLocal, local,  stack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitFrame ( type, nLocal, local, nStack ) ;^415^^^^^400^430^mv.visitFrame ( type, nLocal, local, nStack, stack ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  mLocal  mStack  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^mv.visitIntInsn ( operand, opcode ) ;^443^^^^^425^444^mv.visitIntInsn ( opcode, operand ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  operand  
[buglab_swap_variables]^mv.visitIntInsn (  operand ) ;^443^^^^^425^444^mv.visitIntInsn ( opcode, operand ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  operand  
[buglab_swap_variables]^mv.visitIntInsn ( opcode ) ;^443^^^^^425^444^mv.visitIntInsn ( opcode, operand ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  operand  
[buglab_swap_variables]^mv.visitVarInsn ( var, opcode ) ;^451^^^^^446^452^mv.visitVarInsn ( opcode, var ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  var  
[buglab_swap_variables]^mv.visitVarInsn (  var ) ;^451^^^^^446^452^mv.visitVarInsn ( opcode, var ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  var  
[buglab_swap_variables]^mv.visitVarInsn ( opcode ) ;^451^^^^^446^452^mv.visitVarInsn ( opcode, var ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  var  
[buglab_swap_variables]^mv.visitTypeInsn ( type, opcode ) ;^463^^^^^454^464^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitTypeInsn (  type ) ;^463^^^^^454^464^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitTypeInsn ( opcode ) ;^463^^^^^454^464^mv.visitTypeInsn ( opcode, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTypeInsn [RETURN_TYPE] void   final int opcode String type [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn ( name, owner, opcode, desc ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn (  owner, name, desc ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode,  name, desc ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, owner,  desc ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, owner, desc, name ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitFieldInsn ( opcode, owner, name ) ;^478^^^^^466^479^mv.visitFieldInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitFieldInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn (  owner, name, desc ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode, desc, name, owner ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode,  name, desc ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( name, owner, opcode, desc ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode, owner,  desc ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode, owner, desc, name ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitMethodInsn ( opcode, owner, name ) ;^493^^^^^481^494^mv.visitMethodInsn ( opcode, owner, name, desc ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMethodInsn [RETURN_TYPE] void   final int opcode String owner String name String desc [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  String  desc  name  owner  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitJumpInsn ( label, opcode ) ;^501^^^^^496^502^mv.visitJumpInsn ( opcode, label ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitJumpInsn (  label ) ;^501^^^^^496^502^mv.visitJumpInsn ( opcode, label ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  
[buglab_swap_variables]^mv.visitJumpInsn ( opcode ) ;^501^^^^^496^502^mv.visitJumpInsn ( opcode, label ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitJumpInsn [RETURN_TYPE] void   final int opcode Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  
[buglab_swap_variables]^if  ( labelss.get ( label )  != null )  {^508^^^^^504^513^if  ( labels.get ( label )  != null )  {^[CLASS] CheckMethodAdapter  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  
[buglab_swap_variables]^if  ( label.get ( labels )  != null )  {^508^^^^^504^513^if  ( labels.get ( label )  != null )  {^[CLASS] CheckMethodAdapter  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  
[buglab_swap_variables]^labels.put ( labels, new Integer ( label.size (  )  )  ) ;^511^^^^^504^513^labels.put ( label, new Integer ( labels.size (  )  )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  
[buglab_swap_variables]^labels.put (  new Integer ( labels.size (  )  )  ) ;^511^^^^^504^513^labels.put ( label, new Integer ( labels.size (  )  )  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLabel [RETURN_TYPE] void   Label label [VARIABLES] Label  label  int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  
[buglab_swap_variables]^mv.visitIincInsn (  increment ) ;^529^^^^^524^530^mv.visitIincInsn ( var, increment ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  increment  var  
[buglab_swap_variables]^mv.visitIincInsn ( increment, var ) ;^529^^^^^524^530^mv.visitIincInsn ( var, increment ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  increment  var  
[buglab_swap_variables]^mv.visitIincInsn ( var ) ;^529^^^^^524^530^mv.visitIincInsn ( var, increment ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] int[]  TYPE  boolean  endCode  endMethod  startCode  visible  Map  labels  int  increment  var  
[buglab_swap_variables]^if  ( min < max )  {^540^^^^^532^552^if  ( max < min )  {^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Max = " + min + " must be greater than or equal to max = " + min ) ;^541^542^^^^532^552^throw new IllegalArgumentException ( "Max = " + max + " must be greater than or equal to min = " + min ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^checkLabel ( i[i], false, "label at labelsndex " + i ) ;^549^^^^^532^552^checkLabel ( labels[i], false, "label at index " + i ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( max, min, dflt, labels ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn (  max, dflt, labels ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, labels, dflt, max ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min,  dflt, labels ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( dflt, max, min, labels ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, max,  labels ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^mv.visitTableSwitchInsn ( min, max, dflt ) ;^551^^^^^532^552^mv.visitTableSwitchInsn ( min, max, dflt, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  max  min  
[buglab_swap_variables]^checkLabel ( i[i], false, "label at labelsndex " + i ) ;^566^^^^^554^569^checkLabel ( labels[i], false, "label at index " + i ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( labels, keys, dflt ) ;^568^^^^^554^569^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^mv.visitLookupSwitchInsn (  keys, labels ) ;^568^^^^^554^569^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( dflt,  labels ) ;^568^^^^^554^569^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( dflt, labels, keys ) ;^568^^^^^554^569^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^mv.visitLookupSwitchInsn ( dflt, keys ) ;^568^^^^^554^569^mv.visitLookupSwitchInsn ( dflt, keys, labels ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label  dflt  int[]  TYPE  keys  Label[]  labels  boolean  endCode  endMethod  startCode  visible  Map  labels  int  i  
[buglab_swap_variables]^if  ( desc > dims.lastIndexOf ( '[' )  + 1 )  {^583^^^^^571^588^if  ( dims > desc.lastIndexOf ( '[' )  + 1 )  {^[CLASS] CheckMethodAdapter  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  dims  
[buglab_swap_variables]^mv.visitMultiANewArrayInsn (  dims ) ;^587^^^^^571^588^mv.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  dims  
[buglab_swap_variables]^mv.visitMultiANewArrayInsn ( dims, desc ) ;^587^^^^^571^588^mv.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  dims  
[buglab_swap_variables]^mv.visitMultiANewArrayInsn ( desc ) ;^587^^^^^571^588^mv.visitMultiANewArrayInsn ( desc, dims ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMultiANewArrayInsn [RETURN_TYPE] void   String desc final int dims [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  dims  
[buglab_swap_variables]^mv.visitTryCatchBlock ( handler, end, start, type ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock (  end, handler, type ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock ( start, handler, end, type ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock ( start,  handler, type ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock ( start, end,  type ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock ( start, end, type, handler ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^mv.visitTryCatchBlock ( start, end, handler ) ;^601^^^^^590^602^mv.visitTryCatchBlock ( start, end, handler, type ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitTryCatchBlock [RETURN_TYPE] void   Label start Label end Label handler String type [VARIABLES] Label  end  handler  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  type  Map  labels  
[buglab_swap_variables]^int s =  (  ( Integer )  start.get ( labels )  ) .intValue (  ) ;^619^^^^^604^625^int s =  (  ( Integer )  labels.get ( start )  ) .intValue (  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^int e =  (  ( Integer )  end.get ( labels )  ) .intValue (  ) ;^620^^^^^604^625^int e =  (  ( Integer )  labels.get ( end )  ) .intValue (  ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^if  ( s < e )  {^621^^^^^604^625^if  ( e < s )  {^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( desc, name, signature, start, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable (  desc, signature, start, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, signature, desc, start, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name,  signature, start, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, end, start, signature, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc,  start, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, start, signature, desc, end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, signature,  end, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, signature, end, start, index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, signature, start,  index ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, index, start, end, signature ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLocalVariable ( name, desc, signature, start, end ) ;^624^^^^^604^625^mv.visitLocalVariable ( name, desc, signature, start, end, index ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLocalVariable [RETURN_TYPE] void   String name String desc String signature Label start Label end final int index [VARIABLES] Label  end  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  desc  name  signature  Map  labels  int  e  index  s  
[buglab_swap_variables]^mv.visitLineNumber ( start, line ) ;^632^^^^^627^633^mv.visitLineNumber ( line, start ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  line  
[buglab_swap_variables]^mv.visitLineNumber (  start ) ;^632^^^^^627^633^mv.visitLineNumber ( line, start ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  line  
[buglab_swap_variables]^mv.visitLineNumber ( line ) ;^632^^^^^627^633^mv.visitLineNumber ( line, start ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitLineNumber [RETURN_TYPE] void   final int line Label start [VARIABLES] Label  start  int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  line  
[buglab_swap_variables]^mv.visitMaxs ( maxLocals, maxStack ) ;^641^^^^^635^642^mv.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  maxLocals  maxStack  
[buglab_swap_variables]^mv.visitMaxs (  maxLocals ) ;^641^^^^^635^642^mv.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  maxLocals  maxStack  
[buglab_swap_variables]^mv.visitMaxs ( maxStack ) ;^641^^^^^635^642^mv.visitMaxs ( maxStack, maxLocals ) ;^[CLASS] CheckMethodAdapter  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  maxLocals  maxStack  
[buglab_swap_variables]^if  ( type < 0 || opcode > 199 || TYPE[opcode] != opcode )  {^709^^^^^708^712^if  ( opcode < 0 || opcode > 199 || TYPE[opcode] != type )  {^[CLASS] CheckMethodAdapter  [METHOD] checkOpcode [RETURN_TYPE] void   final int opcode final int type [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  type  
[buglab_swap_variables]^if  ( opcode < 0 || opcode > 199 || type[opcode] != TYPE )  {^709^^^^^708^712^if  ( opcode < 0 || opcode > 199 || TYPE[opcode] != type )  {^[CLASS] CheckMethodAdapter  [METHOD] checkOpcode [RETURN_TYPE] void   final int opcode final int type [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  Map  labels  int  opcode  type  
[buglab_swap_variables]^throw new IllegalArgumentException ( value + "  ( must be a signed byte ) : " + msg ) ;^722^723^^^^720^725^throw new IllegalArgumentException ( msg + "  ( must be a signed byte ) : " + value ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkSignedByte [RETURN_TYPE] void   final int value String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  Map  labels  int  value  
[buglab_swap_variables]^throw new IllegalArgumentException ( value + "  ( must be a signed short ) : " + msg ) ;^735^736^^^^733^738^throw new IllegalArgumentException ( msg + "  ( must be a signed short ) : " + value ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkSignedShort [RETURN_TYPE] void   final int value String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  Map  labels  int  value  
[buglab_swap_variables]^throw new IllegalArgumentException ( value + "  ( must be an unsigned short ) : " + msg ) ;^748^749^^^^746^751^throw new IllegalArgumentException ( msg + "  ( must be an unsigned short ) : " + value ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkUnsignedShort [RETURN_TYPE] void   final int value String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  Map  labels  int  value  
[buglab_swap_variables]^checkIdentifier ( msg, 0, -1, name ) ;^775^^^^^774^776^checkIdentifier ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^checkIdentifier (  0, -1, msg ) ;^775^^^^^774^776^checkIdentifier ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^checkIdentifier ( name, 0, -1 ) ;^775^^^^^774^776^checkIdentifier ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^if  ( end == null ||  ( name == -1 ? name.length (  )  <= start : end <= start )  ) {^794^795^^^^788^810^if  ( name == null ||  ( end == -1 ? name.length (  )  <= start : end <= start )  ) {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid " + name + "  ( must be a valid Java identifier ) : " + msg ) ;^800^801^^^^788^810^throw new IllegalArgumentException ( "Invalid " + msg + "  ( must be a valid Java identifier ) : " + name ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierStart ( start.charAt ( name )  )  )  {^799^^^^^788^810^if  ( !Character.isJavaIdentifierStart ( name.charAt ( start )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^int max = name == -1 ? end.length (  )  : end;^803^^^^^788^810^int max = end == -1 ? name.length (  )  : end;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierPart ( i.charAt ( name )  )  )  {^805^^^^^788^810^if  ( !Character.isJavaIdentifierPart ( name.charAt ( i )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid " + name + "  ( must be a valid Java identifier ) : " + msg ) ;^806^807^^^^788^810^throw new IllegalArgumentException ( "Invalid " + msg + "  ( must be a valid Java identifier ) : " + name ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^for  ( int i = max + 1; i < start; ++i )  {^804^^^^^788^810^for  ( int i = start + 1; i < max; ++i )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^for  ( startnt i = i + 1; i < max; ++i )  {^804^^^^^788^810^for  ( int i = start + 1; i < max; ++i )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  end  i  max  start  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid " + name + "  ( must be a '<init>', '<clinit>' or a valid Java identifier ) : " + msg ) ;^828^829^830^831^^819^841^throw new IllegalArgumentException ( "Invalid " + msg + "  ( must be a '<init>', '<clinit>' or a valid Java identifier ) : " + name ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  i  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid " + name + "  ( must be '<init>' or '<clinit>' or a valid Java identifier ) : " + msg ) ;^835^836^837^838^^819^841^throw new IllegalArgumentException ( "Invalid " + msg + "  ( must be '<init>' or '<clinit>' or a valid Java identifier ) : " + name ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  i  
[buglab_swap_variables]^for  ( nament i = 1; i < i.length (  ) ; ++i )  {^833^^^^^819^841^for  ( int i = 1; i < name.length (  ) ; ++i )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  i  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierPart ( i.charAt ( name )  )  )  {^834^^^^^819^841^if  ( !Character.isJavaIdentifierPart ( name.charAt ( i )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodIdentifier [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  i  
[buglab_swap_variables]^checkInternalName ( msg, 0, -1, name ) ;^857^^^^^849^859^checkInternalName ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^checkInternalName (  0, -1, msg ) ;^857^^^^^849^859^checkInternalName ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^checkInternalName ( name, 0, -1 ) ;^857^^^^^849^859^checkInternalName ( name, 0, -1, msg ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  
[buglab_swap_variables]^int max = name == -1 ? end.length (  )  : end;^877^^^^^871^895^int max = end == -1 ? name.length (  )  : end;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^if  ( max == -1 || slash > slash )  {^883^^^^^871^895^if  ( slash == -1 || slash > max )  {^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^slash = begin.indexOf ( '/', name + 1 ) ;^882^^^^^871^895^slash = name.indexOf ( '/', begin + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^slash = name.indexOf ( '/' + 1 ) ;^882^^^^^871^895^slash = name.indexOf ( '/', begin + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier ( slash, begin, name, null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier (  begin, slash, null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier ( begin, name, slash, null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier ( name,  slash, null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier ( name, slash, begin, null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkIdentifier ( name, begin,  null ) ;^886^^^^^871^895^checkIdentifier ( name, begin, slash, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^throw new IllegalArgumentException ( "Invalid " + name + "  ( must be a fully qualified class msg in internal form ) : " + name ) ;^890^891^892^893^^871^895^throw new IllegalArgumentException ( "Invalid " + msg + "  ( must be a fully qualified class name in internal form ) : " + name ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkInternalName [RETURN_TYPE] void   String name final int start final int end String msg [VARIABLES] int[]  TYPE  keys  boolean  endCode  endMethod  startCode  visible  String  msg  name  Map  labels  int  begin  end  max  slash  start  IllegalArgumentException  _  
[buglab_swap_variables]^int end = checkDesc ( canBeVoid, 0, desc ) ;^904^^^^^903^908^int end = checkDesc ( desc, 0, canBeVoid ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] void   String desc final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  end  
[buglab_swap_variables]^int end = checkDesc (  0, canBeVoid ) ;^904^^^^^903^908^int end = checkDesc ( desc, 0, canBeVoid ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] void   String desc final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  end  
[buglab_swap_variables]^int end = checkDesc ( desc, 0 ) ;^904^^^^^903^908^int end = checkDesc ( desc, 0, canBeVoid ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] void   String desc final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  end  
[buglab_swap_variables]^if  ( desc != end.length (  )  )  {^905^^^^^903^908^if  ( end != desc.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] void   String desc final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  end  
[buglab_swap_variables]^if  ( start == null || desc >= desc.length (  )  )  {^923^^^^^908^938^if  ( desc == null || start >= desc.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^while  ( desc < index.length (  )  && desc.charAt ( index )  == '[' )  {^946^^^^^931^961^while  ( index < desc.length (  )  && desc.charAt ( index )  == '[' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^if  ( desc < index.length (  )  )  {^949^^^^^934^964^if  ( index < desc.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^return checkDesc ( index, desc, false ) ;^950^^^^^935^965^return checkDesc ( desc, index, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^return checkDesc (  index, false ) ;^950^^^^^935^965^return checkDesc ( desc, index, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^return checkDesc ( desc,  false ) ;^950^^^^^935^965^return checkDesc ( desc, index, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^if  ( start == -1 || index - index < 2 )  {^957^^^^^942^972^if  ( index == -1 || index - start < 2 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkInternalName ( start, desc + 1, index, null ) ;^962^^^^^947^977^checkInternalName ( desc, start + 1, index, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkInternalName (  start + 1, index, null ) ;^962^^^^^947^977^checkInternalName ( desc, start + 1, index, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkInternalName ( desc, index + 1, start, null ) ;^962^^^^^947^977^checkInternalName ( desc, start + 1, index, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkInternalName ( desc + 1, index, null ) ;^962^^^^^947^977^checkInternalName ( desc, start + 1, index, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^checkInternalName ( desc, start + 1,  null ) ;^962^^^^^947^977^checkInternalName ( desc, start + 1, index, null ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^index = start.indexOf ( ';', desc ) ;^956^^^^^941^971^index = desc.indexOf ( ';', start ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^index = desc.indexOf ( ';' ) ;^956^^^^^941^971^index = desc.indexOf ( ';', start ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^switch  ( start.charAt ( desc )  )  {^927^^^^^912^942^switch  ( desc.charAt ( start )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkDesc [RETURN_TYPE] int   String desc final int start final boolean canBeVoid [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  index  start  IllegalArgumentException  _  
[buglab_swap_variables]^if  ( start.charAt ( desc )  != ' ) ' )  {^987^^^^^979^1000^if  ( desc.charAt ( start )  != ' ) ' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^if  ( start.charAt ( desc )  == 'V' )  {^989^^^^^979^1000^if  ( desc.charAt ( start )  == 'V' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc ( start, desc, false ) ;^993^^^^^979^1000^start = checkDesc ( desc, start, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc (  start, false ) ;^993^^^^^979^1000^start = checkDesc ( desc, start, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc ( desc,  false ) ;^993^^^^^979^1000^start = checkDesc ( desc, start, false ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^} while  ( desc < start.length (  )  && desc.charAt ( start )  != ' ) ' ) ;^994^^^^^979^1000^} while  ( start < desc.length (  )  && desc.charAt ( start )  != ' ) ' ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc ( start, desc + 1, true ) ;^996^^^^^979^1000^start = checkDesc ( desc, start + 1, true ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc (  start + 1, true ) ;^996^^^^^979^1000^start = checkDesc ( desc, start + 1, true ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^start = checkDesc ( desc + 1, true ) ;^996^^^^^979^1000^start = checkDesc ( desc, start + 1, true ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^if  ( desc != start.length (  )  )  {^997^^^^^979^1000^if  ( start != desc.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodDesc [RETURN_TYPE] void   String desc [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  desc  Map  labels  int  start  
[buglab_swap_variables]^if  ( getChar (  0 )  == '<' )  {^1012^^^^^1007^1023^if  ( getChar ( signature, 0 )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters ( pos, signature ) ;^1013^^^^^1007^1023^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters (  pos ) ;^1013^^^^^1007^1023^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters ( signature ) ;^1013^^^^^1007^1023^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( pos, signature ) ;^1015^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature (  pos ) ;^1015^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( signature ) ;^1015^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  == 'L' )  {^1016^^^^^1007^1023^while  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  == 'L' )  {^1016^^^^^1007^1023^while  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  == 'L' )  {^1016^^^^^1007^1023^while  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( pos, signature ) ;^1017^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature (  pos ) ;^1017^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( signature ) ;^1017^^^^^1007^1023^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( signature != pos.length (  )  )  {^1019^^^^^1007^1023^if  ( pos != signature.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( pos + ": error at index " + signature ) ;^1020^1021^^^^1007^1023^throw new IllegalArgumentException ( signature + ": error at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  0 )  == '<' )  {^1036^^^^^1021^1051^if  ( getChar ( signature, 0 )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters ( pos, signature ) ;^1037^^^^^1022^1052^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters (  pos ) ;^1037^^^^^1022^1052^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameters ( signature ) ;^1037^^^^^1022^1052^pos = checkFormalTypeParameters ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ( ', pos, signature ) ;^1039^^^^^1024^1054^pos = checkChar ( ' ( ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ( ',  pos ) ;^1039^^^^^1024^1054^pos = checkChar ( ' ( ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ( ', signature ) ;^1039^^^^^1024^1054^pos = checkChar ( ' ( ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( "ZCBSIFJDL[T".indexOf ( getChar ( pos, signature )  )  != -1 )  {^1040^^^^^1025^1055^while  ( "ZCBSIFJDL[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( "ZCBSIFJDL[T".indexOf ( getChar (  pos )  )  != -1 )  {^1040^^^^^1025^1055^while  ( "ZCBSIFJDL[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( "ZCBSIFJDL[T".indexOf ( getChar ( signature )  )  != -1 )  {^1040^^^^^1025^1055^while  ( "ZCBSIFJDL[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( pos, signature ) ;^1041^^^^^1026^1056^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature (  pos ) ;^1041^^^^^1026^1056^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( signature ) ;^1041^^^^^1026^1056^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ) ', pos, signature ) ;^1043^^^^^1028^1058^pos = checkChar ( ' ) ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ) ',  pos ) ;^1043^^^^^1028^1058^pos = checkChar ( ' ) ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ' ) ', signature ) ;^1043^^^^^1028^1058^pos = checkChar ( ' ) ', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( pos, signature )  == 'V' )  {^1044^^^^^1029^1059^if  ( getChar ( signature, pos )  == 'V' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  pos )  == 'V' )  {^1044^^^^^1029^1059^if  ( getChar ( signature, pos )  == 'V' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature )  == 'V' )  {^1044^^^^^1029^1059^if  ( getChar ( signature, pos )  == 'V' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( pos, signature ) ;^1047^^^^^1044^1048^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature (  pos ) ;^1047^^^^^1044^1048^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( signature ) ;^1047^^^^^1044^1048^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( pos, signature ) ;^1047^^^^^1032^1062^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature (  pos ) ;^1047^^^^^1032^1062^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeSignature ( signature ) ;^1047^^^^^1032^1062^pos = checkTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  == '^' )  {^1049^^^^^1034^1064^while  ( getChar ( signature, pos )  == '^' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  == '^' )  {^1049^^^^^1034^1064^while  ( getChar ( signature, pos )  == '^' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  == '^' )  {^1049^^^^^1034^1064^while  ( getChar ( signature, pos )  == '^' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( pos, signature )  == 'L' )  {^1051^^^^^1036^1066^if  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  pos )  == 'L' )  {^1051^^^^^1036^1066^if  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature )  == 'L' )  {^1051^^^^^1036^1066^if  ( getChar ( signature, pos )  == 'L' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature ( pos, signature ) ;^1054^^^^^1051^1055^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature (  pos ) ;^1054^^^^^1051^1055^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature ( signature ) ;^1054^^^^^1051^1055^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( pos, signature ) ;^1052^^^^^1037^1067^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature (  pos ) ;^1052^^^^^1037^1067^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkClassTypeSignature ( signature ) ;^1052^^^^^1037^1067^pos = checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature ( pos, signature ) ;^1054^^^^^1039^1069^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature (  pos ) ;^1054^^^^^1039^1069^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeVariableSignature ( signature ) ;^1054^^^^^1039^1069^pos = checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( signature != pos.length (  )  )  {^1057^^^^^1042^1072^if  ( pos != signature.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( pos + ": error at index " + signature ) ;^1058^1059^^^^1043^1073^throw new IllegalArgumentException ( signature + ": error at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkMethodSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( signature != pos.length (  )  )  {^1070^^^^^1068^1074^if  ( pos != signature.length (  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFieldSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( pos + ": error at index " + signature ) ;^1071^1072^^^^1068^1074^throw new IllegalArgumentException ( signature + ": error at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldSignature [RETURN_TYPE] void   String signature [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<', pos, signature ) ;^1088^^^^^1083^1094^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<',  pos ) ;^1088^^^^^1083^1094^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<', signature ) ;^1088^^^^^1083^1094^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter ( pos, signature ) ;^1089^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter (  pos ) ;^1089^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter ( signature ) ;^1089^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  != '>' )  {^1090^^^^^1083^1094^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  != '>' )  {^1090^^^^^1083^1094^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  != '>' )  {^1090^^^^^1083^1094^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter ( pos, signature ) ;^1091^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter (  pos ) ;^1091^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFormalTypeParameter ( signature ) ;^1091^^^^^1083^1094^pos = checkFormalTypeParameter ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameters [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( pos, signature ) ;^1108^^^^^1103^1117^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier (  pos ) ;^1108^^^^^1103^1117^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( signature ) ;^1108^^^^^1103^1117^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ':', pos, signature ) ;^1109^^^^^1103^1117^pos = checkChar ( ':', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ':',  pos ) ;^1109^^^^^1103^1117^pos = checkChar ( ':', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( ':', signature ) ;^1109^^^^^1103^1117^pos = checkChar ( ':', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( "L[T".indexOf ( getChar ( pos, signature )  )  != -1 )  {^1110^^^^^1103^1117^if  ( "L[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( "L[T".indexOf ( getChar (  pos )  )  != -1 )  {^1110^^^^^1103^1117^if  ( "L[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( "L[T".indexOf ( getChar ( signature )  )  != -1 )  {^1110^^^^^1103^1117^if  ( "L[T".indexOf ( getChar ( signature, pos )  )  != -1 )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature ( pos, signature ) ;^1111^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature (  pos ) ;^1111^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature ( signature ) ;^1111^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  == ':' )  {^1113^^^^^1103^1117^while  ( getChar ( signature, pos )  == ':' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  == ':' )  {^1113^^^^^1103^1117^while  ( getChar ( signature, pos )  == ':' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  == ':' )  {^1113^^^^^1103^1117^while  ( getChar ( signature, pos )  == ':' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature ( pos, signature + 1 ) ;^1114^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature (  pos + 1 ) ;^1114^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkFieldTypeSignature ( signature + 1 ) ;^1114^^^^^1103^1117^pos = checkFieldTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFormalTypeParameter [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkClassTypeSignature ( pos, signature ) ;^1136^^^^^1126^1142^return checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkClassTypeSignature (  pos ) ;^1136^^^^^1126^1142^return checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkClassTypeSignature ( signature ) ;^1136^^^^^1126^1142^return checkClassTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeSignature ( pos, signature + 1 ) ;^1138^^^^^1126^1142^return checkTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeSignature (  pos + 1 ) ;^1138^^^^^1126^1142^return checkTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeSignature ( signature + 1 ) ;^1138^^^^^1126^1142^return checkTypeSignature ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeVariableSignature ( pos, signature ) ;^1140^^^^^1126^1142^return checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeVariableSignature (  pos ) ;^1140^^^^^1126^1142^return checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkTypeVariableSignature ( signature ) ;^1140^^^^^1126^1142^return checkTypeVariableSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar ( pos, signature )  )  {^1134^^^^^1126^1142^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar (  pos )  )  {^1134^^^^^1126^1142^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar ( signature )  )  {^1134^^^^^1126^1142^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkFieldTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'L', pos, signature ) ;^1157^^^^^1151^1172^pos = checkChar ( 'L', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'L',  pos ) ;^1157^^^^^1151^1172^pos = checkChar ( 'L', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'L', signature ) ;^1157^^^^^1151^1172^pos = checkChar ( 'L', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( pos, signature ) ;^1158^^^^^1151^1172^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier (  pos ) ;^1158^^^^^1151^1172^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( signature ) ;^1158^^^^^1151^1172^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  == '/' )  {^1159^^^^^1151^1172^while  ( getChar ( signature, pos )  == '/' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  == '/' )  {^1159^^^^^1151^1172^while  ( getChar ( signature, pos )  == '/' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  == '/' )  {^1159^^^^^1151^1172^while  ( getChar ( signature, pos )  == '/' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( pos, signature + 1 ) ;^1160^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier (  pos + 1 ) ;^1160^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( signature + 1 ) ;^1160^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( pos, signature )  == '<' )  {^1162^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  pos )  == '<' )  {^1162^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature )  == '<' )  {^1162^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments ( pos, signature ) ;^1163^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments (  pos ) ;^1163^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments ( signature ) ;^1163^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  == '.' )  {^1165^^^^^1151^1172^while  ( getChar ( signature, pos )  == '.' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  == '.' )  {^1165^^^^^1151^1172^while  ( getChar ( signature, pos )  == '.' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  == '.' )  {^1165^^^^^1151^1172^while  ( getChar ( signature, pos )  == '.' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( pos, signature )  == '<' )  {^1167^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  pos )  == '<' )  {^1167^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature )  == '<' )  {^1167^^^^^1151^1172^if  ( getChar ( signature, pos )  == '<' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments ( pos, signature ) ;^1168^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments (  pos ) ;^1168^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArguments ( signature ) ;^1168^^^^^1151^1172^pos = checkTypeArguments ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( pos, signature + 1 ) ;^1166^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier (  pos + 1 ) ;^1166^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( signature + 1 ) ;^1166^^^^^1151^1172^pos = checkIdentifier ( signature, pos + 1 ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';', pos, signature ) ;^1171^^^^^1151^1172^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';',  pos ) ;^1171^^^^^1151^1172^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';', signature ) ;^1171^^^^^1151^1172^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkClassTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<', pos, signature ) ;^1185^^^^^1181^1191^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<',  pos ) ;^1185^^^^^1181^1191^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( '<', signature ) ;^1185^^^^^1181^1191^pos = checkChar ( '<', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument ( pos, signature ) ;^1186^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument (  pos ) ;^1186^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument ( signature ) ;^1186^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( pos, signature )  != '>' )  {^1187^^^^^1181^1191^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar (  pos )  != '>' )  {^1187^^^^^1181^1191^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( getChar ( signature )  != '>' )  {^1187^^^^^1181^1191^while  ( getChar ( signature, pos )  != '>' )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument ( pos, signature ) ;^1188^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument (  pos ) ;^1188^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkTypeArgument ( signature ) ;^1188^^^^^1181^1191^pos = checkTypeArgument ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArguments [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^char c = getChar ( pos, signature ) ;^1204^^^^^1200^1211^char c = getChar ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^char c = getChar (  pos ) ;^1204^^^^^1200^1211^char c = getChar ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^char c = getChar ( signature ) ;^1204^^^^^1200^1211^char c = getChar ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature ( pos, signature ) ;^1210^^^^^1200^1211^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature (  pos ) ;^1210^^^^^1200^1211^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature ( signature ) ;^1210^^^^^1200^1211^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeArgument [RETURN_TYPE] int   String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'T', pos, signature ) ;^1227^^^^^1220^1230^pos = checkChar ( 'T', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'T',  pos ) ;^1227^^^^^1220^1230^pos = checkChar ( 'T', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkChar ( 'T', signature ) ;^1227^^^^^1220^1230^pos = checkChar ( 'T', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( pos, signature ) ;^1228^^^^^1220^1230^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier (  pos ) ;^1228^^^^^1220^1230^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^pos = checkIdentifier ( signature ) ;^1228^^^^^1220^1230^pos = checkIdentifier ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';', pos, signature ) ;^1229^^^^^1220^1230^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';',  pos ) ;^1229^^^^^1220^1230^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkChar ( ';', signature ) ;^1229^^^^^1220^1230^return checkChar ( ';', signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeVariableSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature ( pos, signature ) ;^1254^^^^^1239^1256^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature (  pos ) ;^1254^^^^^1239^1256^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return checkFieldTypeSignature ( signature ) ;^1254^^^^^1239^1256^return checkFieldTypeSignature ( signature, pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar ( pos, signature )  )  {^1243^^^^^1239^1256^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar (  pos )  )  {^1243^^^^^1239^1256^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^switch  ( getChar ( signature )  )  {^1243^^^^^1239^1256^switch  ( getChar ( signature, pos )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkTypeSignature [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierStart ( getChar ( pos, signature )  )  )  {^1266^^^^^1265^1275^if  ( !Character.isJavaIdentifierStart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierStart ( getChar (  pos )  )  )  {^1266^^^^^1265^1275^if  ( !Character.isJavaIdentifierStart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( !Character.isJavaIdentifierStart ( getChar ( signature )  )  )  {^1266^^^^^1265^1275^if  ( !Character.isJavaIdentifierStart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( pos + ": identifier expected at index " + signature ) ;^1267^1268^^^^1265^1275^throw new IllegalArgumentException ( signature + ": identifier expected at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( Character.isJavaIdentifierPart ( getChar ( pos, signature )  )  )  {^1271^^^^^1265^1275^while  ( Character.isJavaIdentifierPart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( Character.isJavaIdentifierPart ( getChar (  pos )  )  )  {^1271^^^^^1265^1275^while  ( Character.isJavaIdentifierPart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^while  ( Character.isJavaIdentifierPart ( getChar ( signature )  )  )  {^1271^^^^^1265^1275^while  ( Character.isJavaIdentifierPart ( getChar ( signature, pos )  )  )  {^[CLASS] CheckMethodAdapter  [METHOD] checkIdentifier [RETURN_TYPE] int   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( c, pos )  == signature )  {^1286^^^^^1284^1291^if  ( getChar ( signature, pos )  == c )  {^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar (  pos )  == c )  {^1286^^^^^1284^1291^if  ( getChar ( signature, pos )  == c )  {^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( pos, signature )  == c )  {^1286^^^^^1284^1291^if  ( getChar ( signature, pos )  == c )  {^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature )  == c )  {^1286^^^^^1284^1291^if  ( getChar ( signature, pos )  == c )  {^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( getChar ( signature, c )  == pos )  {^1286^^^^^1284^1291^if  ( getChar ( signature, pos )  == c )  {^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( c + ": '" + signature + "' expected at index " + pos ) ;^1289^1290^^^^1284^1291^throw new IllegalArgumentException ( signature + ": '" + c + "' expected at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( pos + ": '" + c + "' expected at index " + signature ) ;^1289^1290^^^^1284^1291^throw new IllegalArgumentException ( signature + ": '" + c + "' expected at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^throw new IllegalArgumentException ( signature + ": '" + pos + "' expected at index " + c ) ;^1289^1290^^^^1284^1291^throw new IllegalArgumentException ( signature + ": '" + c + "' expected at index " + pos ) ;^[CLASS] CheckMethodAdapter  [METHOD] checkChar [RETURN_TYPE] int   final char c String signature int pos [VARIABLES] char  c  int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^return signature < pos.length (  )  ? signature.charAt ( pos )  :  ( char )  0;^1302^^^^^1301^1303^return pos < signature.length (  )  ? signature.charAt ( pos )  :  ( char )  0;^[CLASS] CheckMethodAdapter  [METHOD] getChar [RETURN_TYPE] char   String signature int pos [VARIABLES] int[]  TYPE  keys  boolean  canBeVoid  endCode  endMethod  startCode  visible  String  signature  Map  labels  int  pos  
[buglab_swap_variables]^if  ( checkVisited && labelss.get ( label )  == null )  {^1323^^^^^1314^1327^if  ( checkVisited && labels.get ( label )  == null )  {^[CLASS] CheckMethodAdapter  [METHOD] checkLabel [RETURN_TYPE] void   Label label final boolean checkVisited String msg [VARIABLES] Label  label  int[]  TYPE  keys  boolean  canBeVoid  checkVisited  endCode  endMethod  startCode  visible  String  msg  Map  labels  
[buglab_swap_variables]^if  ( checkVisited && label.get ( labels )  == null )  {^1323^^^^^1314^1327^if  ( checkVisited && labels.get ( label )  == null )  {^[CLASS] CheckMethodAdapter  [METHOD] checkLabel [RETURN_TYPE] void   Label label final boolean checkVisited String msg [VARIABLES] Label  label  int[]  TYPE  keys  boolean  canBeVoid  checkVisited  endCode  endMethod  startCode  visible  String  msg  Map  labels  
