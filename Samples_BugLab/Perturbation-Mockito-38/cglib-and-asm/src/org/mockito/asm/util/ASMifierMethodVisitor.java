[buglab_swap_variables]^declareFrameTypes ( local, nLocal ) ;^102^^^^^87^117^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes (  local ) ;^102^^^^^87^117^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes ( nLocal ) ;^102^^^^^87^117^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes ( stack, nStack ) ;^103^^^^^88^118^declareFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes (  stack ) ;^103^^^^^88^118^declareFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes ( nStack ) ;^103^^^^^88^118^declareFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( local, nLocal ) ;^110^^^^^95^125^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes (  local ) ;^110^^^^^95^125^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( nLocal ) ;^110^^^^^95^125^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( stack, nStack ) ;^112^^^^^97^127^appendFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes (  stack ) ;^112^^^^^97^127^appendFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( nStack ) ;^112^^^^^97^127^appendFrameTypes ( nStack, stack ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes ( local, nLocal ) ;^116^^^^^101^131^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes (  local ) ;^116^^^^^101^131^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^declareFrameTypes ( nLocal ) ;^116^^^^^101^131^declareFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( local, nLocal ) ;^120^^^^^105^135^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes (  local ) ;^120^^^^^105^135^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^appendFrameTypes ( nLocal ) ;^120^^^^^105^135^appendFrameTypes ( nLocal, local ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitFrame [RETURN_TYPE] void   final int type final int nLocal Object[] local final int nStack Object[] stack [VARIABLES] boolean  int  nLocal  nStack  type  Object[]  local  stack  
[buglab_swap_variables]^buf.append ( "mv.visitIntInsn ( " ) .append ( opcode[opcode] ) .append ( ", " ) .append ( OPCODES == Opcodes.NEWARRAY^150^151^152^153^^148^158^buf.append ( "mv.visitIntInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( opcode == Opcodes.NEWARRAY^[CLASS] ASMifierMethodVisitor  [METHOD] visitIntInsn [RETURN_TYPE] void   final int opcode final int operand [VARIABLES] boolean  int  opcode  operand  
[buglab_swap_variables]^buf.append ( "mv.visitVarInsn ( " ) .append ( var[opcode] ) .append ( ", " ) .append ( OPCODES )^162^163^164^165^^160^168^buf.append ( "mv.visitVarInsn ( " ) .append ( OPCODES[opcode] ) .append ( ", " ) .append ( var )^[CLASS] ASMifierMethodVisitor  [METHOD] visitVarInsn [RETURN_TYPE] void   final int opcode final int var [VARIABLES] boolean  int  opcode  var  
[buglab_swap_variables]^buf.append ( "mv.visitIincInsn ( " ) .append ( increment ) .append ( ", " ) .append ( var )^240^241^242^243^^238^246^buf.append ( "mv.visitIincInsn ( " ) .append ( var ) .append ( ", " ) .append ( increment )^[CLASS] ASMifierMethodVisitor  [METHOD] visitIincInsn [RETURN_TYPE] void   final int var final int increment [VARIABLES] boolean  int  increment  var  
[buglab_swap_variables]^buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( max ) .append ( ", " ) .append ( min )^260^261^262^263^^248^273^buf.append ( "mv.visitTableSwitchInsn ( " ) .append ( min ) .append ( ", " ) .append ( max )^[CLASS] ASMifierMethodVisitor  [METHOD] visitTableSwitchInsn [RETURN_TYPE] void   final int min final int max Label dflt Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int  i  max  min  
[buglab_swap_variables]^for  ( keysnt i = 0; i < i.length; ++i )  {^289^^^^^275^299^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] ASMifierMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < keys.length.length; ++i )  {^289^^^^^275^299^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] ASMifierMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < keys; ++i )  {^289^^^^^275^299^for  ( int i = 0; i < keys.length; ++i )  {^[CLASS] ASMifierMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  int  i  
[buglab_swap_variables]^buf.append ( keys == 0 ? " " : ", " ) .append ( i[i] ) ;^290^^^^^275^299^buf.append ( i == 0 ? " " : ", " ) .append ( keys[i] ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] visitLookupSwitchInsn [RETURN_TYPE] void   Label dflt final int[] keys Label[] labels [VARIABLES] Label[]  labels  boolean  Label  dflt  int[]  keys  int  i  
[buglab_swap_variables]^buf.append ( "mv.visitMaxs ( " ) .append ( maxLocals ) .append ( ", " ) .append ( maxStack )^364^365^366^367^^362^370^buf.append ( "mv.visitMaxs ( " ) .append ( maxStack ) .append ( ", " ) .append ( maxLocals )^[CLASS] ASMifierMethodVisitor  [METHOD] visitMaxs [RETURN_TYPE] void   final int maxStack final int maxLocals [VARIABLES] boolean  int  maxLocals  maxStack  
[buglab_swap_variables]^if  ( i[i] onstanceof Label )  {^374^^^^^372^378^if  ( o[i] instanceof Label )  {^[CLASS] ASMifierMethodVisitor  [METHOD] declareFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] boolean  int  i  n  Object[]  o  
[buglab_swap_variables]^for  ( nnt i = 0; i < i; ++i )  {^373^^^^^372^378^for  ( int i = 0; i < n; ++i )  {^[CLASS] ASMifierMethodVisitor  [METHOD] declareFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] boolean  int  i  n  Object[]  o  
[buglab_swap_variables]^if  ( i[i] onstanceof String )  {^385^^^^^370^400^if  ( o[i] instanceof String )  {^[CLASS] ASMifierMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] boolean  int  i  n  Object[]  o  
[buglab_swap_variables]^} else of  ( i[i] instanceof Integer )  {^387^^^^^372^402^} else if  ( o[i] instanceof Integer )  {^[CLASS] ASMifierMethodVisitor  [METHOD] appendFrameTypes [RETURN_TYPE] void   final int n Object[] o [VARIABLES] boolean  int  i  n  Object[]  o  
[buglab_swap_variables]^String name =  ( String )  labelNamesabelNames.get ( l ) ;^425^^^^^424^431^String name =  ( String )  labelNames.get ( l ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] declareLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  String  name  
[buglab_swap_variables]^String name =  ( String )  l.get ( labelNames ) ;^425^^^^^424^431^String name =  ( String )  labelNames.get ( l ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] declareLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  String  name  
[buglab_swap_variables]^labelNames.put ( name, l ) ;^428^^^^^424^431^labelNames.put ( l, name ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] declareLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  String  name  
[buglab_swap_variables]^labelNames.put (  name ) ;^428^^^^^424^431^labelNames.put ( l, name ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] declareLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  String  name  
[buglab_swap_variables]^labelNames.put ( l ) ;^428^^^^^424^431^labelNames.put ( l, name ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] declareLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  String  name  
[buglab_swap_variables]^buf.append (  ( String )  labelNamesabelNames.get ( l )  ) ;^441^^^^^440^442^buf.append (  ( String )  labelNames.get ( l )  ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  
[buglab_swap_variables]^buf.append (  ( String )  l.get ( labelNames )  ) ;^441^^^^^440^442^buf.append (  ( String )  labelNames.get ( l )  ) ;^[CLASS] ASMifierMethodVisitor  [METHOD] appendLabel [RETURN_TYPE] void   Label l [VARIABLES] boolean  Label  l  
