[BugLab_Wrong_Literal]^buf.setLength ( id ) ;^64^^^^^63^71^buf.setLength ( 0 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] Object  value  String  name  boolean  int  id  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( name, buf ) ;^66^^^^^63^71^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] Object  value  String  name  boolean  int  id  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( value, buf ) ;^68^^^^^63^71^ASMifierAbstractVisitor.appendConstant ( buf, value ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] Object  value  String  name  boolean  int  id  
[BugLab_Variable_Misuse]^text.add ( null.toString (  )  ) ;^70^^^^^63^71^text.add ( buf.toString (  )  ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] Object  value  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.setLength ( -1 ) ;^78^^^^^73^87^buf.setLength ( 0 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( buf, value ) ;^80^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( name, buf ) ;^80^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( buf, value ) ;^82^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, desc ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( desc, buf ) ;^82^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, desc ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^84^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, value ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( value, buf ) ;^84^^^^^73^87^ASMifierAbstractVisitor.appendConstant ( buf, value ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] int  id  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^buf.append ( "AnnotationVisitor av" ) .append ( id  >  1 ) .append ( " = av" ) ;^95^^^^^89^106^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.append ( "AnnotationVisitor av" ) .append ( id  ) .append ( " = av" ) ;^95^^^^^89^106^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Operator]^buf.append ( "AnnotationVisitor av" ) .append ( id  >>  1 ) .append ( " = av" ) ;^95^^^^^89^106^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.append ( "AnnotationVisitor av" ) .append ( id + id ) .append ( " = av" ) ;^95^^^^^89^106^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( av, name ) ;^97^^^^^89^106^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( name, buf ) ;^97^^^^^89^106^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^99^^^^^89^106^ASMifierAbstractVisitor.appendConstant ( buf, desc ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( av, desc ) ;^99^^^^^89^106^ASMifierAbstractVisitor.appendConstant ( buf, desc ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( desc, buf ) ;^99^^^^^89^106^ASMifierAbstractVisitor.appendConstant ( buf, desc ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Variable_Misuse]^text.add ( av.toString (  )  ) ;^101^^^^^89^106^text.add ( buf.toString (  )  ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Operator]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  >=  1 ) ;^102^^^^^89^106^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Literal]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + id ) ;^102^^^^^89^106^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Operator]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  ^  1 ) ;^102^^^^^89^106^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Literal]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  ) ;^102^^^^^89^106^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] ASMifierAnnotationVisitor  av  String  desc  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.setLength ( id ) ;^109^^^^^108^120^buf.setLength ( 0 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Operator]^buf.append ( "AnnotationVisitor av" ) .append ( id  <  1 ) .append ( " = av" ) ;^111^^^^^108^120^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.append ( "AnnotationVisitor av" ) .append ( id +  ) .append ( " = av" ) ;^111^^^^^108^120^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Operator]^buf.append ( "AnnotationVisitor av" ) .append ( id  <=  1 ) .append ( " = av" ) ;^111^^^^^108^120^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.append ( "AnnotationVisitor av" ) .append ( id + id ) .append ( " = av" ) ;^111^^^^^108^120^buf.append ( "AnnotationVisitor av" ) .append ( id + 1 ) .append ( " = av" ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Variable_Misuse]^ASMifierAbstractVisitor.appendConstant ( av, name ) ;^113^^^^^108^120^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Argument_Swapping]^ASMifierAbstractVisitor.appendConstant ( name, buf ) ;^113^^^^^108^120^ASMifierAbstractVisitor.appendConstant ( buf, name ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Variable_Misuse]^text.add ( av.toString (  )  ) ;^115^^^^^108^120^text.add ( buf.toString (  )  ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Operator]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  <=  1 ) ;^116^^^^^108^120^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + id ) ;^116^^^^^108^120^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Operator]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  &  1 ) ;^116^^^^^108^120^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id  ) ;^116^^^^^108^120^ASMifierAnnotationVisitor av = new ASMifierAnnotationVisitor ( id + 1 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] ASMifierAnnotationVisitor  av  String  name  boolean  int  id  
[BugLab_Wrong_Literal]^buf.setLength (  ) ;^123^^^^^122^126^buf.setLength ( 0 ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] int  id  boolean  
[BugLab_Variable_Misuse]^text.add ( 3.toString (  )  ) ;^125^^^^^122^126^text.add ( buf.toString (  )  ) ;^[CLASS] ASMifierAnnotationVisitor  [METHOD] visitEnd [RETURN_TYPE] void   [VARIABLES] int  id  boolean  
