[buglab_swap_variables]^if  ( ! (  ( BasicValue )  BasicValue.RETURNADDRESS_VALUE ) .isReference (  ) && value != value ) {^77^78^79^^^62^92^if  ( ! (  ( BasicValue )  value ) .isReference (  ) && value != BasicValue.RETURNADDRESS_VALUE ) {^[CLASS] BasicVerifier  [METHOD] copyOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  expected  value  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( expected != value )  {^90^^^^^75^105^if  ( value != expected )  {^[CLASS] BasicVerifier  [METHOD] copyOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  expected  value  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( expected, value )  )  {^179^^^^^164^194^if  ( !isSubTypeOf ( value, expected )  )  {^[CLASS] BasicVerifier  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  expected  value  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf (  expected )  )  {^179^^^^^164^194^if  ( !isSubTypeOf ( value, expected )  )  {^[CLASS] BasicVerifier  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  expected  value  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( value )  )  {^179^^^^^164^194^if  ( !isSubTypeOf ( value, expected )  )  {^[CLASS] BasicVerifier  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  expected  value  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf (  expected1 )  )  {^300^^^^^285^315^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( value1 )  )  {^300^^^^^285^315^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf ( expected2, value2 )  )  {^302^^^^^287^317^} else if  ( !isSubTypeOf ( value2, expected2 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf (  expected2 )  )  {^302^^^^^287^317^} else if  ( !isSubTypeOf ( value2, expected2 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf ( value2 )  )  {^302^^^^^287^317^} else if  ( !isSubTypeOf ( value2, expected2 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( expected1, value1 )  )  {^300^^^^^285^315^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  expected1  expected2  value1  value2  FieldInsnNode  fin  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf (  expected1 )  )  {^360^^^^^345^375^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( expected1, value1 )  )  {^360^^^^^345^375^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( value1 )  )  {^360^^^^^345^375^if  ( !isSubTypeOf ( value1, expected1 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf ( expected3, value3 )  )  {^367^^^^^352^382^} else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf (  expected3 )  )  {^367^^^^^352^382^} else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( !isSubTypeOf ( value3 )  )  {^367^^^^^352^382^} else if  ( !isSubTypeOf ( value3, expected3 )  )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^throw new AnalyzerException ( "Second argument", value2, BasicValue.INT_VALUE ) ;^364^365^366^^^349^379^throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE, value2 ) ;^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE ) ;^364^365^366^^^349^379^throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE, value2 ) ;^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^throw new AnalyzerException ( "Second argument",  value2 ) ;^364^365^366^^^349^379^throw new AnalyzerException ( "Second argument", BasicValue.INT_VALUE, value2 ) ;^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^throw new AnalyzerException ( "First argument", "a " + value1 + " array reference", expected1 ) ;^361^362^^^^346^376^throw new AnalyzerException ( "First argument", "a " + expected1 + " array reference", value1 ) ;^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^throw new AnalyzerException ( "First argument", "a " + expected1 + " array reference" ) ;^361^362^^^^346^376^throw new AnalyzerException ( "First argument", "a " + expected1 + " array reference", value1 ) ;^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^} else if  ( BasicValue.INT_VALUE != value2 )  {^363^^^^^348^378^} else if  ( value2 != BasicValue.INT_VALUE )  {^[CLASS] BasicVerifier  [METHOD] ternaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 Value value3 [VARIABLES] boolean  Value  expected1  expected3  value1  value2  value3  AbstractInsnNode  insn  
[buglab_swap_variables]^if  ( !isSubTypeOf ( expected, encountered )  )  {^400^^^^^385^415^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf (  expected )  )  {^400^^^^^385^415^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf ( encountered )  )  {^400^^^^^385^415^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + expected, j, encountered ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " +  expected, encountered ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j,  encountered ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j, encountered, expected ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j, expected ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + encountered, expected, j ) ;^401^402^403^^^386^416^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^while  ( values < i.size (  )  )  {^397^^^^^377^406^while  ( i < values.size (  )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf ( expected, encountered )  )  {^400^^^^^377^406^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf (  expected )  )  {^400^^^^^377^406^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf ( encountered )  )  {^400^^^^^377^406^if  ( !isSubTypeOf ( encountered, expected )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + encountered, expected, j ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " +  expected, encountered ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j, encountered, expected ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j,  encountered ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + j, expected ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Argument " + expected, j, encountered ) ;^401^402^403^^^377^406^throw new AnalyzerException ( "Argument " + j, expected, encountered ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf (  ( Value )  owner.get ( i++ ) , newValue ( values )  )  )  {^390^^^^^377^406^if  ( !isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Method values", newValue ( owner ) , ( Value )  owner.get ( 0 )  ) ;^391^392^393^^^377^406^throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( BasicValue.INT_VALUE.get ( i )  != values )  {^379^^^^^364^394^if  ( values.get ( i )  != BasicValue.INT_VALUE )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( i.get ( values )  != BasicValue.INT_VALUE )  {^379^^^^^364^394^if  ( values.get ( i )  != BasicValue.INT_VALUE )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  i.get ( values )  ) ;^380^381^382^^^365^395^throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( null, i, ( Value )  values.get ( BasicValue.INT_VALUE )  ) ;^380^381^382^^^365^395^throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( null,  ( Value )  values.get ( i )  ) ;^380^381^382^^^365^395^throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^( Value )  i.get ( values )  ) ;^382^^^^^367^397^( Value )  values.get ( i )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^for  ( valuesnt i = 0; i < i.size (  ) ; ++i )  {^378^^^^^363^393^for  ( int i = 0; i < values.size (  ) ; ++i )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( values.get ( BasicValue.INT_VALUE )  != i )  {^379^^^^^364^394^if  ( values.get ( i )  != BasicValue.INT_VALUE )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( null, values, ( Value )  BasicValue.INT_VALUE.get ( i )  ) ;^380^381^382^^^365^395^throw new AnalyzerException ( null, BasicValue.INT_VALUE, ( Value )  values.get ( i )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^if  ( !isSubTypeOf (  ( Value )  owner.get ( i++ ) , newValue ( values )  )  )  {^390^^^^^375^405^if  ( !isSubTypeOf (  ( Value )  values.get ( i++ ) , newValue ( owner )  )  )  {^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^throw new AnalyzerException ( "Method values", newValue ( owner ) , ( Value )  owner.get ( 0 )  ) ;^391^392^393^^^376^406^throw new AnalyzerException ( "Method owner", newValue ( owner ) , ( Value )  values.get ( 0 )  ) ;^[CLASS] BasicVerifier  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] Type  owner  boolean  Type[]  args  Value  encountered  expected  List  values  AbstractInsnNode  insn  int  i  j  opcode  
[buglab_swap_variables]^return expected == value;^421^^^^^420^422^return value == expected;^[CLASS] BasicVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] boolean  Value  expected  value  
