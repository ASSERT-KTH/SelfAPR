[BugLab_Variable_Misuse]^this.min = max;^85^^^^^78^92^this.min = min;^[CLASS] TableSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   final int min final int max LabelNode dflt LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  labels  boolean  int  max  min  
[BugLab_Variable_Misuse]^this.max = min;^86^^^^^78^92^this.max = max;^[CLASS] TableSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   final int min final int max LabelNode dflt LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  labels  boolean  int  max  min  
[BugLab_Wrong_Operator]^if  ( labels == null )  {^89^^^^^78^92^if  ( labels != null )  {^[CLASS] TableSwitchInsnNode  [METHOD] <init> [RETURN_TYPE] LabelNode[])   final int min final int max LabelNode dflt LabelNode[] labels [VARIABLES] LabelNode  dflt  LabelNode[]  labels  List  labels  boolean  int  max  min  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= labels.length; ++i )  {^100^^^^^98^104^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < labels.length; ++i )  {^100^^^^^98^104^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^labels[i] =  (  ( LabelNode )  this.labels.get ( min )  ) .getLabel (  ) ;^101^^^^^98^104^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^labels[i] =  (  ( LabelNode )  labels.get ( i )  ) .getLabel (  ) ;^101^^^^^98^104^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^labels[i] =  (  ( LabelNode )  i.get ( this.labels )  ) .getLabel (  ) ;^101^^^^^98^104^labels[i] =  (  ( LabelNode )  this.labels.get ( i )  ) .getLabel (  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Wrong_Literal]^for  ( int i = max; i < labels.length; ++i )  {^100^^^^^98^104^for  ( int i = 0; i < labels.length; ++i )  {^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTableSwitchInsn ( max, max, dflt.getLabel (  ) , labels ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^mv.visitTableSwitchInsn ( min, min, dflt.getLabel (  ) , labels ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( labels, max, dflt.getLabel (  ) , min ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( max, min, dflt.getLabel (  ) , labels ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( min, labels, dflt.getLabel (  ) , max ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Argument_Swapping]^mv.visitTableSwitchInsn ( min, max, labels.getLabel (  ) , dflt ) ;^103^^^^^98^104^mv.visitTableSwitchInsn ( min, max, dflt.getLabel (  ) , labels ) ;^[CLASS] TableSwitchInsnNode  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] LabelNode  dflt  List  labels  Label[]  labels  boolean  int  i  max  min  MethodVisitor  mv  
[BugLab_Variable_Misuse]^return new TableSwitchInsnNode ( i, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Variable_Misuse]^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( min, max, clone ( labels, dflt ) , clone ( this.labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( max, min, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( min, dflt, clone ( max, labels ) , clone ( this.labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( min, max, clone ( this.labels, labels ) , clone ( dflt, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( min, this.labels, clone ( dflt, labels ) , clone ( max, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Variable_Misuse]^return new TableSwitchInsnNode ( min, i, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^return new TableSwitchInsnNode ( min, max, clone ( dflt, this.labels ) , clone ( labels, labels )  ) ;^107^108^109^110^^106^111^return new TableSwitchInsnNode ( min, max, clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^clone ( labels, dflt ) , clone ( this.labels, labels )  ) ;^109^110^^^^106^111^clone ( dflt, labels ) , clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
[BugLab_Argument_Swapping]^clone ( labels, this.labels )  ) ;^110^^^^^106^111^clone ( this.labels, labels )  ) ;^[CLASS] TableSwitchInsnNode  [METHOD] clone [RETURN_TYPE] AbstractInsnNode   Map labels [VARIABLES] LabelNode  dflt  List  labels  boolean  Map  labels  int  i  max  min  
