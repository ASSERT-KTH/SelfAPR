[BugLab_Variable_Misuse]^this.values = new Value[top + nStack];^75^^^^^74^77^this.values = new Value[nLocals + nStack];^[CLASS] Frame  [METHOD] <init> [RETURN_TYPE] Frame(int,int)   final int nLocals final int nStack [VARIABLES] Value[]  values  int  locals  nLocals  nStack  top  boolean  
[BugLab_Wrong_Operator]^this ( src.locals, src.values.length  >>  src.locals ) ;^85^^^^^84^87^this ( src.locals, src.values.length - src.locals ) ;^[CLASS] Frame  [METHOD] <init> [RETURN_TYPE] Frame)   Frame src [VARIABLES] Frame  src  boolean  Value[]  values  int  locals  nLocals  nStack  top  
[BugLab_Wrong_Literal]^System.arraycopy ( src.values, 1, values, 1, values.length ) ;^96^^^^^95^99^System.arraycopy ( src.values, 0, values, 0, values.length ) ;^[CLASS] Frame  [METHOD] init [RETURN_TYPE] Frame   Frame src [VARIABLES] Frame  src  boolean  Value[]  values  int  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^top = top;^97^^^^^95^99^top = src.top;^[CLASS] Frame  [METHOD] init [RETURN_TYPE] Frame   Frame src [VARIABLES] Frame  src  boolean  Value[]  values  int  locals  nLocals  nStack  top  
[BugLab_Argument_Swapping]^top = src.top.top;^97^^^^^95^99^top = src.top;^[CLASS] Frame  [METHOD] init [RETURN_TYPE] Frame   Frame src [VARIABLES] Frame  src  boolean  Value[]  values  int  locals  nLocals  nStack  top  
[BugLab_Argument_Swapping]^top = src;^97^^^^^95^99^top = src.top;^[CLASS] Frame  [METHOD] init [RETURN_TYPE] Frame   Frame src [VARIABLES] Frame  src  boolean  Value[]  values  int  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^return top;^107^^^^^106^108^return locals;^[CLASS] Frame  [METHOD] getLocals [RETURN_TYPE] int   [VARIABLES] Value[]  values  int  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^if  ( top >= locals )  {^118^^^^^117^122^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] getLocal [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^if  ( i >= top )  {^118^^^^^117^122^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] getLocal [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Argument_Swapping]^if  ( locals >= i )  {^118^^^^^117^122^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] getLocal [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Wrong_Operator]^if  ( i > locals )  {^118^^^^^117^122^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] getLocal [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^if  ( top >= locals )  {^134^^^^^131^138^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] setLocal [RETURN_TYPE] void   final int i Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^if  ( i >= top )  {^134^^^^^131^138^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] setLocal [RETURN_TYPE] void   final int i Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Argument_Swapping]^if  ( locals >= i )  {^134^^^^^131^138^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] setLocal [RETURN_TYPE] void   final int i Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Wrong_Operator]^if  ( i > locals )  {^134^^^^^131^138^if  ( i >= locals )  {^[CLASS] Frame  [METHOD] setLocal [RETURN_TYPE] void   final int i Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^return nStack;^147^^^^^146^148^return top;^[CLASS] Frame  [METHOD] getStackSize [RETURN_TYPE] int   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^return values[top + locals];^159^^^^^158^160^return values[i + locals];^[CLASS] Frame  [METHOD] getStack [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^return values[i + top];^159^^^^^158^160^return values[i + locals];^[CLASS] Frame  [METHOD] getStack [RETURN_TYPE] Value   final int i [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Wrong_Literal]^top = ;^166^^^^^165^167^top = 0;^[CLASS] Frame  [METHOD] clearStack [RETURN_TYPE] void   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^if  ( nLocals == 0 )  {^176^^^^^175^180^if  ( top == 0 )  {^[CLASS] Frame  [METHOD] pop [RETURN_TYPE] Value   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Wrong_Operator]^if  ( top >= 0 )  {^176^^^^^175^180^if  ( top == 0 )  {^[CLASS] Frame  [METHOD] pop [RETURN_TYPE] Value   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Variable_Misuse]^return values[--top + top];^179^^^^^175^180^return values[--top + locals];^[CLASS] Frame  [METHOD] pop [RETURN_TYPE] Value   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Argument_Swapping]^return locals[--top + values];^179^^^^^175^180^return values[--top + locals];^[CLASS] Frame  [METHOD] pop [RETURN_TYPE] Value   [VARIABLES] Value[]  values  int  i  locals  nLocals  nStack  top  boolean  
[BugLab_Wrong_Operator]^if  ( top + locals < values.length )  {^189^^^^^188^193^if  ( top + locals >= values.length )  {^[CLASS] Frame  [METHOD] push [RETURN_TYPE] void   Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Wrong_Operator]^if  ( top  >=  locals >= values.length )  {^189^^^^^188^193^if  ( top + locals >= values.length )  {^[CLASS] Frame  [METHOD] push [RETURN_TYPE] void   Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^values[top++ + top] = value;^192^^^^^188^193^values[top++ + locals] = value;^[CLASS] Frame  [METHOD] push [RETURN_TYPE] void   Value value [VARIABLES] Value  value  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 2 )  {^254^^^^^239^269^if  ( value1.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 2 )  {^254^^^^^239^269^if  ( value1.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value1.getSize (  )  == top )  {^254^^^^^239^269^if  ( value1.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value.getSize (  )  == 2 )  {^254^^^^^239^269^if  ( value1.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( top + 1, interpreter.newValue ( null )  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( interpreter + 1, var.newValue ( null )  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^setLocal ( var + 1, interpreter.newValue ( null )  >>  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^setLocal ( var + top, interpreter.newValue ( null )  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( nStack > 0 )  {^257^^^^^242^272^if  ( var > 0 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( var >= 0 )  {^257^^^^^242^272^if  ( var > 0 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4 != null && local.getSize (  )  == 2 )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( local != null || local.getSize (  )  == 2 )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( local == null && local.getSize (  )  == 2 )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( local != null && local.getSize (  )  != 2 )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( local != null && local.getSize (  )  == 1 )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( top - 1, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( interpreter - 1, var.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^setLocal ( var  >  1, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^setLocal ( var - nStack, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^Value local = getLocal ( top - 1 ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^Value local = getLocal ( var  ==  1 ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^Value local = getLocal ( var - locals ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^Value local = getLocal ( var  >=  1 ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^setLocal ( var  &  1, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^setLocal ( var , interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( local != null && local.getSize (  )  == var )  {^259^^^^^244^274^if  ( local != null && local.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( pop (  ) .getSize (  )  < 2 )  {^278^^^^^263^293^if  ( pop (  ) .getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( pop (  ) .getSize (  )  >= 1 )  {^283^^^^^268^298^if  ( pop (  ) .getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( pop (  ) .getSize (  )  == 2 )  {^283^^^^^268^298^if  ( pop (  ) .getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( pop (  ) .getSize (  )  >= 1 )  {^284^^^^^269^299^if  ( pop (  ) .getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( pop (  ) .getSize (  )  == 1 )  {^284^^^^^269^299^if  ( pop (  ) .getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( pop (  ) .getSize (  )  != top )  {^284^^^^^269^299^if  ( pop (  ) .getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  != 1 )  {^291^^^^^276^306^if  ( value1.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  == 1 )  {^291^^^^^276^306^if  ( value1.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value1.getSize (  )  != 1 || value4.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( value2.getSize (  )  != 1 || value1.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 && value2.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  == 1 || value2.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  <= 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuenStack.getSize (  )  != nStack || value2.getSize (  )  != nStack )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuetop.getSize (  )  != top || value2.getSize (  )  != top )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  > 1 )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value0.getSize (  )  == 0 )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value.getSize (  )  ==  )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuevar.getSize (  )  == var )  {^309^^^^^294^324^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  != 1 )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  >= 1 )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  ==  )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == nLocals )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^321^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^321^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^321^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^321^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^322^^^^^311^325^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^322^^^^^311^325^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^322^^^^^311^325^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^322^^^^^311^325^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^322^^^^^311^325^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^323^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^323^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^323^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^323^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^313^^^^^298^328^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  <= 1 )  {^313^^^^^298^328^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^314^^^^^299^329^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^314^^^^^299^329^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^314^^^^^299^329^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^315^^^^^300^330^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^315^^^^^300^330^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^315^^^^^300^330^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^316^^^^^301^331^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^316^^^^^301^331^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^316^^^^^301^331^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^316^^^^^301^331^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^317^^^^^302^332^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^317^^^^^302^332^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^317^^^^^302^332^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^314^^^^^299^329^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^315^^^^^300^330^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^315^^^^^300^330^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^317^^^^^302^332^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^317^^^^^302^332^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  != 1 )  {^313^^^^^298^328^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == i )  {^313^^^^^298^328^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^314^^^^^299^329^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^316^^^^^301^331^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^321^^^^^306^336^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^321^^^^^306^336^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^321^^^^^306^336^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^321^^^^^306^336^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^322^^^^^307^337^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^322^^^^^307^337^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^322^^^^^307^337^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^322^^^^^307^337^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^323^^^^^308^338^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^323^^^^^308^338^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^323^^^^^308^338^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^323^^^^^308^338^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^323^^^^^308^338^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  <= 1 )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == top )  {^311^^^^^296^326^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^321^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^323^^^^^311^325^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == 2 )  {^313^^^^^298^328^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^330^^^^^315^345^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  <= 1 )  {^330^^^^^315^345^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  >= 1 )  {^330^^^^^315^345^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value0.getSize (  )  == 0 )  {^330^^^^^315^345^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^340^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^340^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^340^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^340^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^340^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^341^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^341^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^341^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^341^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^341^^^^^330^343^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^332^^^^^317^347^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  != 1 )  {^332^^^^^317^347^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == nLocals )  {^332^^^^^317^347^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^333^^^^^318^348^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^333^^^^^318^348^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^333^^^^^318^348^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^333^^^^^318^348^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^334^^^^^319^349^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^334^^^^^319^349^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^334^^^^^319^349^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^334^^^^^319^349^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^335^^^^^320^350^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^335^^^^^320^350^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^335^^^^^320^350^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^335^^^^^320^350^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^336^^^^^321^351^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^336^^^^^321^351^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^336^^^^^321^351^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^336^^^^^321^351^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^336^^^^^321^351^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^333^^^^^318^348^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^334^^^^^319^349^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^335^^^^^320^350^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  > 1 )  {^332^^^^^317^347^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^347^^^^^332^362^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 )  {^347^^^^^332^362^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuei.getSize (  )  == i )  {^347^^^^^332^362^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 2 )  {^347^^^^^332^362^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^362^^^^^347^368^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  >= 1 )  {^362^^^^^347^368^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 0 )  {^362^^^^^347^368^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^363^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^363^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^363^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^363^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^364^^^^^347^368^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^364^^^^^347^368^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^364^^^^^347^368^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^364^^^^^347^368^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^365^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^365^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^365^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^365^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^362^^^^^347^368^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^363^^^^^347^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  != 1 )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  > 1 )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == i )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  != 1 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == 0 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^352^^^^^337^367^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^352^^^^^337^367^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^352^^^^^337^367^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^352^^^^^337^367^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^353^^^^^338^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^353^^^^^338^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^353^^^^^338^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^353^^^^^338^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^354^^^^^339^369^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^354^^^^^339^369^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^354^^^^^339^369^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^355^^^^^340^370^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^355^^^^^340^370^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^355^^^^^340^370^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^355^^^^^340^370^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^356^^^^^341^371^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^356^^^^^341^371^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^356^^^^^341^371^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^356^^^^^341^371^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^352^^^^^337^367^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^353^^^^^338^368^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^354^^^^^339^369^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^354^^^^^339^369^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^355^^^^^340^370^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  <= 1 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == i )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^356^^^^^341^371^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  >= 1 )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == var )  {^349^^^^^334^364^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  >= 1 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^362^^^^^347^377^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  >= 1 )  {^362^^^^^347^377^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^363^^^^^348^378^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^363^^^^^348^378^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^363^^^^^348^378^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^363^^^^^348^378^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^364^^^^^349^379^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^364^^^^^349^379^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^364^^^^^349^379^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^364^^^^^349^379^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^365^^^^^350^380^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^365^^^^^350^380^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^365^^^^^350^380^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^365^^^^^350^380^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^365^^^^^350^380^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  <= 1 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  < 1 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value0.getSize (  )  == 0 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuenLocals.getSize (  )  == nLocals )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( valuelocals.getSize (  )  == locals )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 2 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  <= 1 )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 0 )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == var )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^408^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^408^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^408^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^408^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^408^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^409^^^^^398^412^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^409^^^^^398^412^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^409^^^^^398^412^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^409^^^^^398^412^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^410^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^410^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^410^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^410^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  != 1 )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^401^^^^^386^416^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^401^^^^^386^416^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^401^^^^^386^416^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^401^^^^^386^416^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^401^^^^^386^416^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^402^^^^^387^417^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^402^^^^^387^417^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^402^^^^^387^417^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^403^^^^^388^418^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^403^^^^^388^418^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^403^^^^^388^418^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^403^^^^^388^418^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^403^^^^^388^418^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^404^^^^^389^419^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^404^^^^^389^419^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^404^^^^^389^419^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^404^^^^^389^419^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^402^^^^^387^417^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^402^^^^^387^417^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^404^^^^^389^419^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == 0 )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^408^^^^^393^423^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^408^^^^^393^423^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^408^^^^^393^423^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^408^^^^^393^423^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^409^^^^^394^424^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^409^^^^^394^424^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^409^^^^^394^424^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^409^^^^^394^424^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^410^^^^^395^425^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^410^^^^^395^425^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^410^^^^^395^425^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^410^^^^^395^425^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^410^^^^^395^425^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  <= 1 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  != 1 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 0 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 2 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value2.getSize (  )  == 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  > 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  <= 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == 0 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^388^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^388^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^388^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^389^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^389^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^389^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^389^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^389^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^390^^^^^376^394^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^390^^^^^376^394^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^390^^^^^376^394^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^390^^^^^376^394^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^391^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^391^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^391^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^391^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^391^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^392^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^392^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^392^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^392^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value4.getSize (  )  != 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value4.getSize (  )  == 2 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^379^^^^^364^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^379^^^^^364^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^379^^^^^364^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^379^^^^^364^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^379^^^^^364^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^380^^^^^365^395^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^380^^^^^365^395^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^380^^^^^365^395^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^380^^^^^365^395^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^381^^^^^366^396^push ( interpreter.copyOperation ( insn, value4 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value4.copyOperation ( insn, interpreter )  ) ;^381^^^^^366^396^push ( interpreter.copyOperation ( insn, value4 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value4 )  ) ;^381^^^^^366^396^push ( interpreter.copyOperation ( insn, value4 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value4, insn )  ) ;^381^^^^^366^396^push ( interpreter.copyOperation ( insn, value4 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^381^^^^^366^396^push ( interpreter.copyOperation ( insn, value4 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^382^^^^^367^397^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^382^^^^^367^397^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^382^^^^^367^397^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^382^^^^^367^397^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^382^^^^^367^397^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^383^^^^^368^398^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^383^^^^^368^398^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^383^^^^^368^398^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^383^^^^^368^398^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^383^^^^^368^398^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^384^^^^^369^399^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^384^^^^^369^399^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^384^^^^^369^399^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^384^^^^^369^399^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value2.getSize (  )  == 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value4.getSize (  )  < 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^384^^^^^369^399^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^388^^^^^373^403^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^388^^^^^373^403^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^388^^^^^373^403^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^388^^^^^373^403^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^388^^^^^373^403^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^389^^^^^374^404^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^389^^^^^374^404^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^389^^^^^374^404^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^389^^^^^374^404^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^390^^^^^375^405^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value3.copyOperation ( insn, interpreter )  ) ;^390^^^^^375^405^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value3, insn )  ) ;^390^^^^^375^405^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value3 )  ) ;^390^^^^^375^405^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^391^^^^^376^406^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^391^^^^^376^406^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^391^^^^^376^406^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^391^^^^^376^406^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^391^^^^^376^406^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^392^^^^^377^407^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^392^^^^^377^407^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^392^^^^^377^407^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  >= 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  != 1 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == i )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^388^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^388^^^^^376^394^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^390^^^^^376^394^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^392^^^^^376^394^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value4.getSize (  )  == i )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^380^^^^^365^395^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value2 )  ) ;^390^^^^^375^405^push ( interpreter.copyOperation ( insn, value3 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^392^^^^^377^407^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  >= 1 )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == top )  {^374^^^^^359^389^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == top )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == nLocals )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value4.getSize (  )  <= 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value4.getSize (  )  == 0 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == 2 )  {^376^^^^^361^391^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value4.getSize (  )  >= 1 )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value4.getSize (  )  ==  )  {^378^^^^^363^393^if  ( value4.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value2.getSize (  )  != 1 )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == locals )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value2.getSize (  )  == 2 )  {^398^^^^^383^413^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^410^^^^^398^412^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value3.getSize (  )  > 1 )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value3.getSize (  )  == nStack )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value1.getSize (  )  != 1 || value4.getSize (  )  != 1 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( value2.getSize (  )  != 1 || value1.getSize (  )  != 1 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 && value2.getSize (  )  != 1 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  == 1 || value2.getSize (  )  != 1 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  <= 1 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^if  ( value0.getSize (  )  != 0 || value2.getSize (  )  != 0 )  {^418^^^^^403^433^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( insn.getOpcode (  )  == Opcodes.INVOKESTATIC )  {^561^^^^^546^576^if  ( insn.getOpcode (  )  != Opcodes.INVOKESTATIC )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^values.add ( , pop (  )  ) ;^562^^^^^547^577^values.add ( 0, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( Type.getReturnType ( desc )  < Type.VOID_TYPE )  {^564^^^^^549^579^if  ( Type.getReturnType ( desc )  == Type.VOID_TYPE )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.naryOperation ( interpreter, values )  ) ;^567^^^^^564^568^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( values.naryOperation ( insn, interpreter )  ) ;^567^^^^^564^568^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.naryOperation ( values, insn )  ) ;^567^^^^^564^568^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.naryOperation ( values, insn ) ;^565^^^^^550^580^interpreter.naryOperation ( insn, values ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i = Type.getArgumentTypes ( desc ) .length; i == 0; --i )  {^558^^^^^543^573^for  ( int i = Type.getArgumentTypes ( desc ) .length; i > 0; --i )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = Type.getArgumentTypes ( desc ) .length; i > 1; --i )  {^558^^^^^543^573^for  ( int i = Type.getArgumentTypes ( desc ) .length; i > 0; --i )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i =  (  ( MultiANewArrayInsnNode )  insn ) .dims; i >= 0; --i )  {^591^^^^^576^606^for  ( int i =  (  ( MultiANewArrayInsnNode )  insn ) .dims; i > 0; --i )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i =  (  ( MultiANewArrayInsnNode )  insn ) .dims; i > 1; --i )  {^591^^^^^576^606^for  ( int i =  (  ( MultiANewArrayInsnNode )  insn ) .dims; i > 0; --i )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^values.add ( -1, pop (  )  ) ;^592^^^^^577^607^values.add ( 0, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^value1 = insn.copyOperation ( interpreter, pop (  )  ) ;^251^^^^^236^266^value1 = interpreter.copyOperation ( insn, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^Value local = getLocal ( var  !=  1 ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^Value local = getLocal ( var  ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.newOperation ( interpreter )  ) ;^224^^^^^209^239^push ( interpreter.newOperation ( insn )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value4, value2 )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value1, value4 )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.binaryOperation ( interpreter, value1, value2 )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( value1, insn, value2 )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( insn, value2, value1 )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.binaryOperation ( insn, value1, interpreter )  ) ;^244^^^^^229^259^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( top, value1 ) ;^253^^^^^238^268^setLocal ( var, value1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( var, value3 ) ;^253^^^^^238^268^setLocal ( var, value1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( value1, var ) ;^253^^^^^238^268^setLocal ( var, value1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value4.getSize (  )  == 2 )  {^254^^^^^239^269^if  ( value1.getSize (  )  == 2 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^setLocal ( var + 1, interpreter.newValue ( null )  ^  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^setLocal ( var , interpreter.newValue ( null )  ) ;^255^^^^^240^270^setLocal ( var + 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^Value local = getLocal ( var  <=  1 ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^Value local = getLocal ( var -  ) ;^258^^^^^243^273^Value local = getLocal ( var - 1 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( nStack - 1, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^setLocal ( var  ||  1, interpreter.newValue ( null )  ) ;^260^^^^^245^275^setLocal ( var - 1, interpreter.newValue ( null )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.ternaryOperation ( insn, value4, value2, value3 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.ternaryOperation ( insn, value1, value4, value3 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.ternaryOperation ( insn, value1, value2, value4 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.ternaryOperation ( value1, insn, value2, value3 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.ternaryOperation ( insn, value3, value2, value1 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.ternaryOperation ( insn, value2, value1, value3 ) ;^275^^^^^260^290^interpreter.ternaryOperation ( insn, value1, value2, value3 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  != 1 )  {^291^^^^^276^306^if  ( value1.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^294^^^^^279^309^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^294^^^^^279^309^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^294^^^^^279^309^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^294^^^^^279^309^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^295^^^^^280^310^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^295^^^^^280^310^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^295^^^^^280^310^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^295^^^^^280^310^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value1.getSize (  )  != 1 || value3.getSize (  )  != 1 )  {^300^^^^^285^315^if  ( value1.getSize (  )  != 1 || value2.getSize (  )  != 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^303^^^^^288^318^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^303^^^^^288^318^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^303^^^^^288^318^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^303^^^^^288^318^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^304^^^^^289^319^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^304^^^^^289^319^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^304^^^^^289^319^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^304^^^^^289^319^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^304^^^^^289^319^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^305^^^^^290^320^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^305^^^^^290^320^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^305^^^^^290^320^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^305^^^^^290^320^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^305^^^^^290^320^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^321^^^^^306^336^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^322^^^^^307^337^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^332^^^^^317^347^if  ( value2.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^340^^^^^325^355^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^340^^^^^325^355^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^340^^^^^325^355^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^340^^^^^325^355^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^341^^^^^326^356^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^341^^^^^326^356^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^341^^^^^326^356^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^341^^^^^326^356^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^341^^^^^326^356^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value2.getSize (  )  == 1 )  {^351^^^^^336^366^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^364^^^^^349^379^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value3.getSize (  )  == 1 )  {^372^^^^^357^387^if  ( value1.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( value2.getSize (  )  == 1 )  {^400^^^^^385^415^if  ( value3.getSize (  )  == 1 )  {^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^408^^^^^393^423^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value3 )  ) ;^409^^^^^394^424^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^421^^^^^406^436^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.copyOperation ( insn, interpreter )  ) ;^421^^^^^406^436^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value2 )  ) ;^421^^^^^406^436^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value2, insn )  ) ;^421^^^^^406^436^push ( interpreter.copyOperation ( insn, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.copyOperation ( insn, value4 )  ) ;^422^^^^^407^437^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.copyOperation ( interpreter, value1 )  ) ;^422^^^^^407^437^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.copyOperation ( value1, insn )  ) ;^422^^^^^407^437^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.copyOperation ( insn, interpreter )  ) ;^422^^^^^407^437^push ( interpreter.copyOperation ( insn, value1 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.binaryOperation ( insn, interpreter, value2 )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.binaryOperation ( interpreter, value1, value2 )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( value2, value1, insn )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value4, value2 )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value1, value4 )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( insn, value2, value1 )  ) ;^446^^^^^431^461^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.unaryOperation ( interpreter, pop (  )  )  ) ;^452^^^^^437^467^push ( interpreter.unaryOperation ( insn, pop (  )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value4, value2 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value1, value4 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value1.binaryOperation ( insn, interpreter, value2 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( value1, insn, value2 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( insn, value2, value1 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.binaryOperation ( interpreter, value1, value2 )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( value2, value1, insn )  ) ;^468^^^^^453^483^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( nStack, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^472^^^^^457^487^setLocal ( var, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( interpreter, var.unaryOperation ( insn, getLocal ( var )  )  ) ;^472^^^^^457^487^setLocal ( var, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( insn, interpreter.unaryOperation ( var, getLocal ( var )  )  ) ;^472^^^^^457^487^setLocal ( var, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^setLocal ( top, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^472^^^^^457^487^setLocal ( var, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^setLocal ( var, insn.unaryOperation ( interpreter, getLocal ( var )  )  ) ;^472^^^^^457^487^setLocal ( var, interpreter.unaryOperation ( insn, getLocal ( var )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.unaryOperation ( interpreter, pop (  )  )  ) ;^489^^^^^474^504^push ( interpreter.unaryOperation ( insn, pop (  )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value1, value3 )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( value2.binaryOperation ( insn, value1, interpreter )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.binaryOperation ( interpreter, value1, value2 )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( insn, value2, value1 )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^push ( interpreter.binaryOperation ( insn, value1, value4 )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.binaryOperation ( value2, value1, insn )  ) ;^498^^^^^483^513^push ( interpreter.binaryOperation ( insn, value1, value2 )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.binaryOperation ( insn, value4, value2 ) ;^518^^^^^503^533^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.binaryOperation ( insn, value1, value4 ) ;^518^^^^^503^533^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.binaryOperation ( value2, value1, insn ) ;^518^^^^^503^533^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.binaryOperation ( insn, value2, value1 ) ;^518^^^^^503^533^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.newOperation ( interpreter )  ) ;^523^^^^^508^538^push ( interpreter.newOperation ( insn )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.newOperation ( interpreter )  ) ;^539^^^^^524^554^push ( interpreter.newOperation ( insn )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.unaryOperation ( interpreter, pop (  )  )  ) ;^545^^^^^530^560^push ( interpreter.unaryOperation ( insn, pop (  )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.binaryOperation ( insn, value4, value2 ) ;^550^^^^^535^565^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^interpreter.binaryOperation ( insn, value1, value4 ) ;^550^^^^^535^565^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^interpreter.binaryOperation ( insn, value2, value1 ) ;^550^^^^^535^565^interpreter.binaryOperation ( insn, value1, value2 ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^values.add ( nStack, pop (  )  ) ;^559^^^^^544^574^values.add ( 0, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^values.add ( var, pop (  )  ) ;^562^^^^^547^577^values.add ( 0, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( values.naryOperation ( insn, interpreter )  ) ;^567^^^^^552^582^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.naryOperation ( values, insn )  ) ;^567^^^^^552^582^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.naryOperation ( interpreter, values )  ) ;^567^^^^^552^582^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.newOperation ( interpreter )  ) ;^571^^^^^556^586^push ( interpreter.newOperation ( insn )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.unaryOperation ( interpreter, pop (  )  )  ) ;^576^^^^^561^591^push ( interpreter.unaryOperation ( insn, pop (  )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.unaryOperation ( interpreter, pop (  )  )  ) ;^583^^^^^568^598^push ( interpreter.unaryOperation ( insn, pop (  )  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^values.add ( nLocals, pop (  )  ) ;^592^^^^^577^607^values.add ( 0, pop (  )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( insn.naryOperation ( interpreter, values )  ) ;^594^^^^^579^609^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( values.naryOperation ( insn, interpreter )  ) ;^594^^^^^579^609^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^push ( interpreter.naryOperation ( values, insn )  ) ;^594^^^^^579^609^push ( interpreter.naryOperation ( insn, values )  ) ;^[CLASS] Frame  [METHOD] execute [RETURN_TYPE] void   AbstractInsnNode insn Interpreter interpreter [VARIABLES] Interpreter  interpreter  boolean  Value[]  values  Value  local  value1  value2  value3  value4  List  values  String  desc  AbstractInsnNode  insn  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( var != frame.top )  {^617^^^^^614^629^if  ( top != frame.top )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( frame != top.top )  {^617^^^^^614^629^if  ( top != frame.top )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( frame.top != top )  {^617^^^^^614^629^if  ( top != frame.top )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( top == frame.top )  {^617^^^^^614^629^if  ( top != frame.top )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^boolean changes = true;^620^^^^^614^629^boolean changes = false;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( values != v[i] )  {^623^^^^^614^629^if  ( v != values[i] )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( v >= values[i] )  {^623^^^^^614^629^if  ( v != values[i] )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^changes |= false;^625^^^^^614^629^changes |= true;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( topnt i = 0; i < locals + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < locals + var; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^for  ( topnt i = 0; i < locals + i; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^for  ( localsnt i = 0; i < i + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < top + locals; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > locals + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < locals + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < locals + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( v == values[i] )  {^623^^^^^614^629^if  ( v != values[i] )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^Value v = varnterpreter.merge ( values[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^Value v = interpreter.merge ( values[i], values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = frame.merge ( values[i], interpreter.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = valuesnterpreter.merge ( i[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = interpreter.merge ( values[i], frame.values.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = interpreter.merge ( frame[i], values.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = interpreter.merge ( values[i], frame[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = i.merge ( values[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = interpreternterpreter.merge ( values[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = interpreter.merge ( frame.values[i], values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = var; i < locals + top; ++i )  {^621^^^^^614^629^for  ( int i = 0; i < locals + top; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^Value v = topnterpreter.merge ( values[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = frame.values.merge ( values[i], interpreter[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = frame.valuesnterpreter.merge ( values[i], i[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = framenterpreter.merge ( values[i], i.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^Value v = values.merge ( interpreter[i], frame.values[i] ) ;^622^^^^^614^629^Value v = interpreter.merge ( values[i], frame.values[i] ) ;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame Interpreter interpreter [VARIABLES] Value  v  Frame  frame  Interpreter  interpreter  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^boolean changes = true;^641^^^^^640^649^boolean changes = false;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( !access[i] && !values[i].equals ( frame[i] )  )  {^643^^^^^640^649^if  ( !access[i] && !values[i].equals ( frame.values[i] )  )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^if  ( !access[i] || !values[i].equals ( frame.values[i] )  )  {^643^^^^^640^649^if  ( !access[i] && !values[i].equals ( frame.values[i] )  )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^values[i] = values[i];^644^^^^^640^649^values[i] = frame.values[i];^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^changes = false;^645^^^^^640^649^changes = true;^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( topnt i = 0; i < locals; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < var; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^for  ( localsnt i = 0; i < i; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= locals; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = locals; i < locals; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^if  ( !access[i] && !values[i].equals ( values[i] )  )  {^643^^^^^640^649^if  ( !access[i] && !values[i].equals ( frame.values[i] )  )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^if  ( !access[i] && !values[i].equals ( frame.values.values[i] )  )  {^643^^^^^640^649^if  ( !access[i] && !values[i].equals ( frame.values[i] )  )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^values[i] = frame.values.values[i];^644^^^^^640^649^values[i] = frame.values[i];^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < locals; ++i )  {^642^^^^^640^649^for  ( int i = 0; i < locals; ++i )  {^[CLASS] Frame  [METHOD] merge [RETURN_TYPE] boolean   Frame frame final boolean[] access [VARIABLES] Frame  frame  boolean[]  access  boolean  changes  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( topnt i = 0; i < getLocals (  ) ; ++i )  {^658^^^^^656^666^for  ( int i = 0; i < getLocals (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= getLocals (  ) ; ++i )  {^658^^^^^656^666^for  ( int i = 0; i < getLocals (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < getLocals (  ) ; ++i )  {^658^^^^^656^666^for  ( int i = 0; i < getLocals (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^b.append ( getLocal ( var )  ) ;^659^^^^^656^666^b.append ( getLocal ( i )  ) ;^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^b.append ( getLocal ( top )  ) ;^659^^^^^656^666^b.append ( getLocal ( i )  ) ;^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^for  ( varnt i = 0; i < getStackSize (  ) ; ++i )  {^662^^^^^656^666^for  ( int i = 0; i < getStackSize (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == getStackSize (  ) ; ++i )  {^662^^^^^656^666^for  ( int i = 0; i < getStackSize (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^b.append ( getStack ( var ) .toString (  )  ) ;^663^^^^^656^666^b.append ( getStack ( i ) .toString (  )  ) ;^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < getStackSize (  ) ; ++i )  {^662^^^^^656^666^for  ( int i = 0; i < getStackSize (  ) ; ++i )  {^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^b.append ( getStack ( top ) .toString (  )  ) ;^663^^^^^656^666^b.append ( getStack ( i ) .toString (  )  ) ;^[CLASS] Frame  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] StringBuffer  b  boolean  Value[]  values  int  i  locals  nLocals  nStack  top  var  
