[BugLab_Wrong_Operator]^if  ( values != null )  {^85^^^^^84^92^if  ( values == null )  {^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Variable_Misuse]^values = new ArrayList ( name != null ? 2 : 1 ) ;^86^^^^^84^92^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Wrong_Operator]^values = new ArrayList ( this.desc == null ? 2 : 1 ) ;^86^^^^^84^92^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 1 : 1 ) ;^86^^^^^84^92^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 0 ) ;^86^^^^^84^92^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Variable_Misuse]^if  ( desc != null )  {^88^^^^^84^92^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Wrong_Operator]^if  ( this.desc == null )  {^88^^^^^84^92^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Variable_Misuse]^values.add ( desc ) ;^89^^^^^84^92^values.add ( name ) ;^[CLASS] AnnotationNode  [METHOD] visit [RETURN_TYPE] void   String name Object value [VARIABLES] List  values  Object  value  String  desc  name  boolean  
[BugLab_Wrong_Operator]^if  ( values != null )  {^99^^^^^94^106^if  ( values == null )  {^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^values = new ArrayList ( this.desc == null ? 2 : 1 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 1 : 1 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 :  ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values = new ArrayList ( name != null ? 2 : 1 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 2 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 3 : 1 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 0 ) ;^100^^^^^94^106^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^if  ( value != null )  {^102^^^^^94^106^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^if  ( this.desc == null )  {^102^^^^^94^106^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values.add ( value ) ;^103^^^^^94^106^values.add ( name ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values.add ( new String[] { name, value } ) ;^105^^^^^94^106^values.add ( new String[] { desc, value } ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values.add ( new String[] { desc, name } ) ;^105^^^^^94^106^values.add ( new String[] { desc, value } ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Argument_Swapping]^values.add ( new String[] { value, desc } ) ;^105^^^^^94^106^values.add ( new String[] { desc, value } ) ;^[CLASS] AnnotationNode  [METHOD] visitEnum [RETURN_TYPE] void   String name String desc String value [VARIABLES] List  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^if  ( values != null )  {^112^^^^^108^121^if  ( values == null )  {^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^values = new ArrayList ( value != null ? 2 : 1 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Wrong_Operator]^values = new ArrayList ( this.desc == null ? 2 : 1 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 2 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 3 : 1 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 0 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^values = new ArrayList ( name != null ? 2 : 1 ) ;^113^^^^^108^121^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^if  ( value != null )  {^115^^^^^108^121^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Wrong_Operator]^if  ( this.desc == null )  {^115^^^^^108^121^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^values.add ( value ) ;^116^^^^^108^121^values.add ( name ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^AnnotationNode annotation = new AnnotationNode ( value ) ;^118^^^^^108^121^AnnotationNode annotation = new AnnotationNode ( desc ) ;^[CLASS] AnnotationNode  [METHOD] visitAnnotation [RETURN_TYPE] AnnotationVisitor   String name String desc [VARIABLES] List  values  String  desc  name  value  boolean  AnnotationNode  annotation  
[BugLab_Variable_Misuse]^if  ( array == null )  {^124^^^^^123^133^if  ( values == null )  {^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^if  ( values != null )  {^124^^^^^123^133^if  ( values == null )  {^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values = new ArrayList ( value != null ? 2 : 1 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^values = new ArrayList ( this.desc == null ? 2 : 1 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 3 : 1 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ?  : 1 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values = new ArrayList ( name != null ? 2 : 1 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Literal]^values = new ArrayList ( this.desc != null ? 2 : 2 ) ;^125^^^^^123^133^values = new ArrayList ( this.desc != null ? 2 : 1 ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^if  ( name != null )  {^127^^^^^123^133^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^if  ( this.desc == null )  {^127^^^^^123^133^if  ( this.desc != null )  {^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^values.add ( value ) ;^128^^^^^123^133^values.add ( name ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Variable_Misuse]^return new AnnotationNode ( values ) ;^132^^^^^123^133^return new AnnotationNode ( array ) ;^[CLASS] AnnotationNode  [METHOD] visitArray [RETURN_TYPE] AnnotationVisitor   String name [VARIABLES] List  array  values  String  desc  name  value  boolean  
[BugLab_Wrong_Operator]^if  ( av == null )  {^148^^^^^147^158^if  ( av != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^if  ( array != null )  {^149^^^^^147^158^if  ( values != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^if  ( valuess != null )  {^149^^^^^147^158^if  ( values != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^if  ( value != null )  {^149^^^^^147^158^if  ( values != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^if  ( values == null )  {^149^^^^^147^158^if  ( values != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < array.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^for  ( valuent i = 0; i < is.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^String name =  ( String )  array.get ( i ) ;^151^^^^^147^158^String name =  ( String )  values.get ( i ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^String name =  ( String )  i.get ( values ) ;^151^^^^^147^158^String name =  ( String )  values.get ( i ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^Object value = array.get ( i + 1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^Object value = i.get ( values + 1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  >>  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^Object value = values.get ( i + i ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  <  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^accept ( av, desc, value ) ;^153^^^^^147^158^accept ( av, name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^accept ( name, av, value ) ;^153^^^^^147^158^accept ( av, name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^accept ( value, name, av ) ;^153^^^^^147^158^accept ( av, name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < values.size (  ) ; i += i )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  !=  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  ==  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^Object value = values.get ( i  ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^accept ( av, value, name ) ;^153^^^^^147^158^accept ( av, name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  ( int i -= 0; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  &&  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  >=  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  ^  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^accept ( av, value, value ) ;^153^^^^^147^158^accept ( av, name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^for  ( valuesnt i = 0; i < i.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  >  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  <=  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 0; i < values.size (  ) ; i += 3 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  ||  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < value.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < values.size (  ) ; i += 2 )  {^150^^^^^147^158^for  ( int i = 0; i < values.size (  ) ; i += 2 )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Wrong_Operator]^Object value = values.get ( i  |  1 ) ;^152^^^^^147^158^Object value = values.get ( i + 1 ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av [VARIABLES] AnnotationVisitor  av  List  array  values  Object  value  String  desc  name  value  boolean  int  i  
[BugLab_Variable_Misuse]^if  ( v != null )  {^172^^^^^167^190^if  ( av != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^if  ( aav != null )  {^172^^^^^167^190^if  ( av != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( av == null )  {^172^^^^^167^190^if  ( av != null )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  >=  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  >  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  ||  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^} else if  ( avalue instanceof AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  ^  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  !=  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^} else if  ( avalue instanceof List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  <  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^av.visit ( desc, value ) ;^187^^^^^167^190^av.visit ( name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^av.visit ( value, name ) ;^187^^^^^167^190^av.visit ( name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^for  ( int j = 0; j < values.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^for  ( int array = 0; j < j.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^for  ( int j = j; j < array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^accept ( av, null, array.get ( j )  ) ;^183^^^^^167^190^accept ( v, null, array.get ( j )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^accept ( j, null, array.get ( v )  ) ;^183^^^^^167^190^accept ( v, null, array.get ( j )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^accept ( v, null, j.get ( array )  ) ;^183^^^^^167^190^accept ( v, null, array.get ( j )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^accept ( v, null, values.get ( j )  ) ;^183^^^^^167^190^accept ( v, null, array.get ( j )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^AnnotationVisitor v = av.visitArray ( value ) ;^180^^^^^167^190^AnnotationVisitor v = av.visitArray ( name ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^AnnotationVisitor v = name.visitArray ( av ) ;^180^^^^^167^190^AnnotationVisitor v = av.visitArray ( name ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^AnnotationVisitor v = v.visitArray ( name ) ;^180^^^^^167^190^AnnotationVisitor v = av.visitArray ( name ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^accept ( array, null, v.get ( j )  ) ;^183^^^^^167^190^accept ( v, null, array.get ( j )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^an.accept ( v.visitAnnotation ( name, an.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^an.accept ( av.visitAnnotation ( value, an.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^an.accept ( av.visitAnnotation ( name, value )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( an.visitAnnotation ( name, av.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( an.desc.visitAnnotation ( name, av )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( name.visitAnnotation ( av, an.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( av.visitAnnotation ( an.desc, name )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( av.visitAnnotation ( an, name.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( av.visitAnnotation ( name, an )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  >=  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^av.visit ( value, value ) ;^187^^^^^167^190^av.visit ( name, value ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^av.visitEnum ( value, typeconst[0], typeconst[1] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^av.visitEnum ( typeconst, name[0], typeconst[1] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^av.visitEnum ( name, typeconst[-1], typeconst[1] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^av.visitEnum ( name, typeconst[0], typeconst[j] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  ==  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  ||  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  <=  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^an.accept ( av.visitAnnotation ( name, name )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  !=  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Argument_Swapping]^an.accept ( av.visitAnnotation ( name, an.desc.desc )  ) ;^178^^^^^167^190^an.accept ( av.visitAnnotation ( name, an.desc )  ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Variable_Misuse]^if  ( avalue instanceof String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  |  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  !=  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^if  ( value  <  String[] )  {^173^^^^^167^190^if  ( value instanceof String[] )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  &&  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  |  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^for  ( int j = ; j < array.size (  ) ; ++j )  {^182^^^^^167^190^for  ( int j = 0; j < array.size (  ) ; ++j )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^av.visitEnum ( name, typeconst[0], typeconst[0] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  |  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  &  AnnotationNode )  {^176^^^^^167^190^} else if  ( value instanceof AnnotationNode )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Operator]^} else if  ( value  ^  List )  {^179^^^^^167^190^} else if  ( value instanceof List )  {^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^av.visitEnum ( name, typeconst[j], typeconst[1] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
[BugLab_Wrong_Literal]^av.visitEnum ( name, typeconst[0], typeconst[] ) ;^175^^^^^167^190^av.visitEnum ( name, typeconst[0], typeconst[1] ) ;^[CLASS] AnnotationNode  [METHOD] accept [RETURN_TYPE] void   AnnotationVisitor av String name Object value [VARIABLES] boolean  AnnotationNode  an  AnnotationVisitor  av  v  List  array  values  Object  value  String  desc  name  value  String[]  typeconst  int  j  
