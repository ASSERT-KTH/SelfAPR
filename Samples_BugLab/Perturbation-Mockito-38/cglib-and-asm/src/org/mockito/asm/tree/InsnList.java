[BugLab_Variable_Misuse]^next = get ( size ) ;^574^^^^^569^577^next = get ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] <init> [RETURN_TYPE] InsnList$InsnListIterator(int)   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^return index;^79^^^^^78^80^return size;^[CLASS] InsnList InsnListIterator  [METHOD] size [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^return prev;^89^^^^^88^90^return first;^[CLASS] InsnList InsnListIterator  [METHOD] getFirst [RETURN_TYPE] AbstractInsnNode   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Argument_Swapping]^if  ( size < 0 || index >= index )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( index < 0 && index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( index <= 0 || index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( index < 0 || index > size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Wrong_Literal]^if  ( index < index || index >= size )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^116^^^^^112^120^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode i = prev;^131^^^^^130^136^AbstractInsnNode i = first;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^while  ( i != null || i != insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^while  ( i == null && i != insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^while  ( i != null && i == insn )  {^132^^^^^130^136^while  ( i != null && i != insn )  {^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^return i == null;^135^^^^^130^136^return i != null;^[CLASS] InsnList InsnListIterator  [METHOD] contains [RETURN_TYPE] boolean   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^if  ( check && !contains ( prev )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Argument_Swapping]^if  ( insn && !contains ( check )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( check || !contains ( insn )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^157^^^^^153^161^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode insn = prev;^169^^^^^168^174^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[BugLab_Wrong_Operator]^while  ( insn == null )  {^170^^^^^168^174^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] accept [RETURN_TYPE] void   MethodVisitor mv [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  MethodVisitor  mv  
[BugLab_Wrong_Literal]^return iterator ( -1 ) ;^182^^^^^181^183^return iterator ( 0 ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Variable_Misuse]^return new InsnListIterator ( size ) ;^191^^^^^190^192^return new InsnListIterator ( index ) ;^[CLASS] InsnList InsnListIterator  [METHOD] iterator [RETURN_TYPE] ListIterator   int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[BugLab_Wrong_Literal]^int i = i;^200^^^^^199^209^int i = 0;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode elem = prev;^201^^^^^199^209^AbstractInsnNode elem = first;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^while  ( elem == null )  {^203^^^^^199^209^while  ( elem != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insns[i] = prev;^204^^^^^199^209^insns[i] = elem;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^return cache;^208^^^^^199^209^return insns;^[CLASS] InsnList InsnListIterator  [METHOD] toArray [RETURN_TYPE] AbstractInsnNode[]   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && ! ( contains ( location )  && insn.index != -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( check && ! ( contains ( location )  && insn.index == -2 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( prev )  && insn.index == -1 )  )  {^222^^^^^221^249^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.next = last;^226^^^^^221^249^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( prev != null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next == null )  {^227^^^^^221^249^if  ( next != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^230^^^^^227^231^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = location;^228^^^^^221^249^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^230^^^^^221^249^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.prev = next;^233^^^^^221^249^insn.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( next != null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev == null )  {^234^^^^^221^249^if  ( prev != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = next;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = location;^235^^^^^221^249^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = location;^237^^^^^221^249^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( cache == null )  {^239^^^^^221^249^if  ( cache != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = size;^244^^^^^239^245^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^cache[index] = location;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.index = size;^242^^^^^221^249^insn.index = index;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^cache[index] = prev;^241^^^^^221^249^cache[index] = insn;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = size;^244^^^^^221^249^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^location.index = -0;^246^^^^^221^249^location.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] set [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || insn.index != -1 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && insn.index == -1 )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( check && insn.index != -size )  {^260^^^^^259^274^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( prev == null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( last != null )  {^264^^^^^259^274^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last.next = prev;^268^^^^^259^274^last.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.prev = prev;^269^^^^^259^274^insn.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = next;^265^^^^^259^274^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = next;^266^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = next;^271^^^^^259^274^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = 1;^273^^^^^259^274^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns && check == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || insns == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && insns != this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( size == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns.size.size == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insns.size > 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( insns.size == index )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^size += index;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns.size.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( last != null )  {^291^^^^^283^302^if  ( last == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last.next = prev;^296^^^^^283^302^last.next = elem;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^elem.prev = prev;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns.last.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode elem = prev;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode elem = insns.first.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode elem = insns;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first = location;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns.first.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns.last.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^elem.prev = next;^297^^^^^283^302^elem.prev = last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode elem = location;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^insns.removeAll ( true ) ;^301^^^^^283^302^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || insn.index != -1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && insn.index >= -1 )  {^313^^^^^312^327^if  ( check && insn.index != -1 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( prev == null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( first != null )  {^317^^^^^312^327^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first.prev = prev;^321^^^^^312^327^first.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.next = prev;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = location;^318^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^319^^^^^312^327^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first.prev = next;^321^^^^^312^327^first.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.next = location;^322^^^^^312^327^insn.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = next;^324^^^^^312^327^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = 1;^326^^^^^312^327^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns && check == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || insns == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && insns < this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( size == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns.size.size == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insns.size != 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( insns.size == 1 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^size += size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns.size.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( first != null )  {^344^^^^^336^355^if  ( first == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first.prev = prev;^349^^^^^336^355^first.prev = elem;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^elem.next = location;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first = location;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns.first.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode elem = prev;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode elem = insns.last.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode elem = insns;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first = last;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns.first.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^first = insns;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns.last.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^last = insns;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first.prev = next;^349^^^^^336^355^first.prev = elem;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^elem.next = prev;^350^^^^^336^355^elem.next = first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^insns.removeAll ( true ) ;^354^^^^^336^355^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && ! ( contains ( location )  && insn.index <= -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( prev )  && insn.index == -1 )  )  {^369^^^^^368^384^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( prev == null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next != null )  {^374^^^^^368^384^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = prev;^377^^^^^368^384^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^375^^^^^368^384^last = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = location;^377^^^^^368^384^next.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.next = prev;^380^^^^^368^384^insn.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.prev = last;^381^^^^^368^384^insn.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = size;^383^^^^^368^384^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( prev )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( check && ! ( contains ( insns )  && location != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns && ! ( contains ( location )  && check != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( location && ! ( contains ( check )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || ! ( contains ( location )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && ! ( contains ( location )  && insns <= this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( index == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns.size.size == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insns.size <= 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( insns.size ==  )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^size += index;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns.size.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode ifirst = prev;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ifirst = insns.first.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ifirst = insns;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ilast = insns.last.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ilast = insns;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( last == null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next != null )  {^407^^^^^396^417^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^last = prev;^408^^^^^396^417^last = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = last;^410^^^^^396^417^next.prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^location.next = prev;^412^^^^^396^417^location.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^ilast.next = prev;^413^^^^^396^417^ilast.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^ifirst.prev = insn;^414^^^^^396^417^ifirst.prev = location;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^insns.removeAll ( true ) ;^416^^^^^396^417^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || ! ( contains ( location )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && ! ( contains ( location )  && insn.index >= -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( check && ! ( contains ( location )  && insn.index == -i )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( insn )  && insn.index == -1 )  )  {^431^^^^^430^446^if  ( check && ! ( contains ( location )  && insn.index == -1 )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location == null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^436^^^^^430^446^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = last;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = prev;^437^^^^^430^446^first = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = prev;^439^^^^^430^446^prev.next = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^location.prev = location;^441^^^^^430^446^location.prev = insn;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.next = next;^442^^^^^430^446^insn.next = location;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn.prev = next;^443^^^^^430^446^insn.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -1;^445^^^^^430^446^insn.index = 0;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( last  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( location && ! ( contains ( check  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns && ! ( contains ( location  )  && check != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || ! ( contains ( location  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check && ! ( contains ( location  )  && insns == this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && ! ( contains ( prev  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( index == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns.size.size == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insns == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insns.size != 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^if  ( insns.size == -1 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^size += size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns.size.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^size += insns;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode ifirst = location;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ifirst = insns.first.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ifirst = insns;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode ilast = next;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ilast = insns.last.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Argument_Swapping]^AbstractInsnNode ilast = insns;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( next == null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^469^^^^^458^479^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = next;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^first = last;^470^^^^^458^479^first = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = last;^472^^^^^458^479^prev.next = ifirst;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^location .prev = next;^474^^^^^458^479^location .prev = ilast;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^ifirst.prev = insn;^476^^^^^458^479^ifirst.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Wrong_Literal]^insns.removeAll ( true ) ;^478^^^^^458^479^insns.removeAll ( false ) ;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( check && !contains ( last )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Argument_Swapping]^if  ( insn && !contains ( check )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( check || !contains ( insn )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( insn == null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next != null )  {^497^^^^^490^518^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location == null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^506^^^^^497^513^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = prev;^510^^^^^497^513^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = last;^511^^^^^497^513^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = last;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = insn;^507^^^^^497^513^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = next;^511^^^^^497^513^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( insn == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = insn;^503^^^^^498^504^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^last = last;^503^^^^^490^518^last = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( last == null )  {^498^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location == null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^506^^^^^490^518^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = prev;^510^^^^^506^512^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = last;^511^^^^^506^512^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = insn;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^first = last;^507^^^^^490^518^first = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^prev.next = prev;^510^^^^^490^518^prev.next = next;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^next.prev = insn;^511^^^^^490^518^next.prev = prev;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -size;^515^^^^^490^518^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^while  ( insn == null )  {^529^^^^^526^541^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -0;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -2;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -i;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn = insn;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^insn.index = -index;^531^^^^^526^541^insn.index = -1;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^insn = location;^534^^^^^526^541^insn = next;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode insn = next;^528^^^^^526^541^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Literal]^size = size;^537^^^^^526^541^size = 0;^[CLASS] InsnList InsnListIterator  [METHOD] removeAll [RETURN_TYPE] void   final boolean mark [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^removeAll ( mark ) ;^547^^^^^546^548^removeAll ( check ) ;^[CLASS] InsnList InsnListIterator  [METHOD] clear [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode insn = prev;^556^^^^^555^563^AbstractInsnNode insn = first;^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^while  ( insn == null )  {^557^^^^^555^563^while  ( insn != null )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location instanceof LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insn  |  LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( last instanceof LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( insn  >  LabelNode )  {^558^^^^^555^563^if  ( insn instanceof LabelNode )  {^[CLASS] InsnList InsnListIterator  [METHOD] resetLabels [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^return last != null;^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Wrong_Operator]^return next == null;^580^^^^^579^581^return next != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location == null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode result = prev;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^prev = prev;^588^^^^^583^591^prev = result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^return next;^590^^^^^583^591^return result;^[CLASS] InsnList InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^InsnList.this.remove ( result ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^return insn != null;^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^return prev == null;^599^^^^^598^600^return prev != null;^[CLASS] InsnList InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^AbstractInsnNode result = insn;^603^^^^^602^607^AbstractInsnNode result = prev;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^next = next;^604^^^^^602^607^next = result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^return insn;^606^^^^^602^607^return result;^[CLASS] InsnList InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( insn == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( next != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( insns == null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( location == null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Literal]^return -0;^621^^^^^619^627^return -1;^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^if  ( insns == null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnList InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^InsnList.this.insertBefore ( location,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[BugLab_Variable_Misuse]^return prev != null;^580^^^^^579^581^return next != null;^[CLASS] InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  boolean  
[BugLab_Wrong_Operator]^return next == null;^580^^^^^579^581^return next != null;^[CLASS] InsnListIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  boolean  
[BugLab_Wrong_Operator]^if  ( next != null )  {^584^^^^^583^591^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^AbstractInsnNode result = prev;^587^^^^^583^591^AbstractInsnNode result = next;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^prev = prev;^588^^^^^583^591^prev = result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^return prev;^590^^^^^583^591^return result;^[CLASS] InsnListIterator  [METHOD] next [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^InsnList.this.remove ( result ) ;^594^^^^^593^596^InsnList.this.remove ( prev ) ;^[CLASS] InsnListIterator  [METHOD] remove [RETURN_TYPE] void   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Operator]^return prev == null;^599^^^^^598^600^return prev != null;^[CLASS] InsnListIterator  [METHOD] hasPrevious [RETURN_TYPE] boolean   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^next = prev;^604^^^^^602^607^next = result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^return prev;^606^^^^^602^607^return result;^[CLASS] InsnListIterator  [METHOD] previous [RETURN_TYPE] Object   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^if  ( result == null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Operator]^if  ( next != null )  {^610^^^^^609^617^if  ( next == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^613^^^^^609^617^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] nextIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Operator]^if  ( prev != null )  {^620^^^^^619^627^if  ( prev == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Literal]^return -0;^621^^^^^619^627^return -1;^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Wrong_Operator]^if  ( cache != null )  {^623^^^^^619^627^if  ( cache == null )  {^[CLASS] InsnListIterator  [METHOD] previousIndex [RETURN_TYPE] int   [VARIABLES] AbstractInsnNode  next  prev  result  boolean  
[BugLab_Variable_Misuse]^InsnList.this.insertBefore ( result,  ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
