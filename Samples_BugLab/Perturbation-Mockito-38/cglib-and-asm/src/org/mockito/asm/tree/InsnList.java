[buglab_swap_variables]^if  ( size < 0 || index >= index )  {^113^^^^^112^120^if  ( index < 0 || index >= size )  {^[CLASS] InsnList InsnListIterator  [METHOD] get [RETURN_TYPE] AbstractInsnNode   final int index [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  last  next  prev  int  index  size  
[buglab_swap_variables]^if  ( insn && !contains ( check )  )  {^154^^^^^153^161^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] indexOf [RETURN_TYPE] int   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  boolean  check  AbstractInsnNode  first  i  insn  last  next  prev  int  index  size  
[buglab_swap_variables]^if  ( insns && check == this )  {^284^^^^^283^302^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns.size.size == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns == 0 )  {^287^^^^^283^302^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns.size.size;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns;^290^^^^^283^302^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns.last.last;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns;^298^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode elem = insns.first.first;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode elem = insns;^295^^^^^283^302^AbstractInsnNode elem = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns.first.first;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns;^292^^^^^283^302^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns.last.last;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns;^293^^^^^283^302^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns && check == this )  {^337^^^^^336^355^if  ( check && insns == this )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns.size.size == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns == 0 )  {^340^^^^^336^355^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns.size.size;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns;^343^^^^^336^355^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns.first.first;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns;^351^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode elem = insns.last.last;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode elem = insns;^348^^^^^336^355^AbstractInsnNode elem = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns.first.first;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^first = insns;^345^^^^^336^355^first = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns.last.last;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^last = insns;^346^^^^^336^355^last = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( location && ! ( contains ( check )  && insns != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns && ! ( contains ( location )  && check != this )  )  {^397^^^^^396^417^if  ( check && ! ( contains ( location )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns.size.size == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns == 0 )  {^400^^^^^396^417^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns.size.size;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns;^403^^^^^396^417^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ifirst = insns.first.first;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ifirst = insns;^404^^^^^396^417^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ilast = insns.last.last;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ilast = insns;^405^^^^^396^417^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insert [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( location && ! ( contains ( check  )  && insns != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns && ! ( contains ( location  )  && check != this )  )  {^459^^^^^458^479^if  ( check && ! ( contains ( location  )  && insns != this )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns.size.size == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insns == 0 )  {^462^^^^^458^479^if  ( insns.size == 0 )  {^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns.size.size;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^size += insns;^465^^^^^458^479^size += insns.size;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ifirst = insns.first.first;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ifirst = insns;^466^^^^^458^479^AbstractInsnNode ifirst = insns.first;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ilast = insns.last.last;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^AbstractInsnNode ilast = insns;^467^^^^^458^479^AbstractInsnNode ilast = insns.last;^[CLASS] InsnList InsnListIterator  [METHOD] insertBefore [RETURN_TYPE] void   AbstractInsnNode location InsnList insns [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  InsnList  insns  int  i  index  size  
[buglab_swap_variables]^if  ( insn && !contains ( check )  )  {^491^^^^^490^518^if  ( check && !contains ( insn )  )  {^[CLASS] InsnList InsnListIterator  [METHOD] remove [RETURN_TYPE] void   AbstractInsnNode insn [VARIABLES] AbstractInsnNode[]  cache  insns  boolean  check  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  int  i  index  size  
[buglab_swap_variables]^InsnList.this.insertBefore (   ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnList InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode[]  cache  insns  Object  o  boolean  check  mark  AbstractInsnNode  elem  first  i  ifirst  ilast  insn  last  location  next  prev  result  int  i  index  size  
[buglab_swap_variables]^InsnList.this.insertBefore (   ( AbstractInsnNode )  o ) ;^630^^^^^629^632^InsnList.this.insertBefore ( next,  ( AbstractInsnNode )  o ) ;^[CLASS] InsnListIterator  [METHOD] add [RETURN_TYPE] void   Object o [VARIABLES] AbstractInsnNode  next  prev  result  Object  o  boolean  
