[BugLab_Wrong_Operator]^if  ( type != null )  {^53^^^^^52^77^if  ( type == null )  {^[CLASS] BasicInterpreter  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Type  type  boolean  
[BugLab_Wrong_Operator]^if  ( cst  >=  Integer )  {^106^^^^^91^121^if  ( cst instanceof Integer )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^if  ( cst  <<  Integer )  {^106^^^^^91^121^if  ( cst instanceof Integer )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^if  ( cst  !=  Integer )  {^106^^^^^91^121^if  ( cst instanceof Integer )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^if  ( cst  |  Integer )  {^106^^^^^91^121^if  ( cst instanceof Integer )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  ^  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  |  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <=  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  &&  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >=  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <<  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  |  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >=  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  ==  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  |  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  ||  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  ||  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >=  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >>  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  &  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  !=  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >>  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 2;^113^^^^^98^128^return BasicValue.DOUBLE_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  !=  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <=  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <=  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >  Float )  {^108^^^^^93^123^} else if  ( cst instanceof Float )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  &  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  &&  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 0;^113^^^^^98^128^return BasicValue.DOUBLE_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  !=  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  >>  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  &  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 1;^111^^^^^96^126^return BasicValue.LONG_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 0;^109^^^^^94^124^return BasicValue.FLOAT_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <=  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <  Long )  {^110^^^^^95^125^} else if  ( cst instanceof Long )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  <<  Type )  {^114^^^^^99^129^} else if  ( cst instanceof Type )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 4;^111^^^^^96^126^return BasicValue.LONG_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^} else if  ( cst  ^  Double )  {^112^^^^^97^127^} else if  ( cst instanceof Double )  {^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return null;^93^^^^^78^108^return BasicValue.LONG_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 4;^103^^^^^88^118^return BasicValue.INT_VALUE;^[CLASS] BasicInterpreter  [METHOD] newOperation [RETURN_TYPE] Value   AbstractInsnNode insn [VARIABLES] boolean  Object  cst  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  ^  )  ) ;^204^^^^^189^219^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  )  ) ;^[CLASS] BasicInterpreter  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  value  String  desc  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  &&  )  ) ;^204^^^^^189^219^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  )  ) ;^[CLASS] BasicInterpreter  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  value  String  desc  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  ==  )  ) ;^204^^^^^189^219^return newValue ( Type.getType ( "[" + Type.getObjectType ( desc )  )  ) ;^[CLASS] BasicInterpreter  [METHOD] unaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value [VARIABLES] boolean  Value  value  String  desc  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return 0;^265^^^^^250^280^return BasicValue.LONG_VALUE;^[CLASS] BasicInterpreter  [METHOD] binaryOperation [RETURN_TYPE] Value   AbstractInsnNode insn Value value1 Value value2 [VARIABLES] boolean  Value  value1  value2  AbstractInsnNode  insn  
[BugLab_Wrong_Operator]^if  ( insn.getOpcode (  )  != MULTIANEWARRAY )  {^308^^^^^305^313^if  ( insn.getOpcode (  )  == MULTIANEWARRAY )  {^[CLASS] BasicInterpreter  [METHOD] naryOperation [RETURN_TYPE] Value   AbstractInsnNode insn List values [VARIABLES] boolean  List  values  AbstractInsnNode  insn  
[BugLab_Variable_Misuse]^return w;^319^^^^^315^320^return v;^[CLASS] BasicInterpreter  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] boolean  Value  v  w  
