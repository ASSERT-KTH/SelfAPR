[BugLab_Wrong_Literal]^this ( null, null, true ) ;^70^^^^^69^71^this ( null, null, false ) ;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] SimpleVerifier()   [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Argument_Swapping]^this ( currentSuperClass, currentClass, null, isInterface ) ;^86^^^^^81^87^this ( currentClass, currentSuperClass, null, isInterface ) ;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Type currentClass Type currentSuperClass final boolean isInterface [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Argument_Swapping]^this ( currentClass, isInterface, null, currentSuperClass ) ;^86^^^^^81^87^this ( currentClass, currentSuperClass, null, isInterface ) ;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Type currentClass Type currentSuperClass final boolean isInterface [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Argument_Swapping]^this ( isInterface, currentSuperClass, null, currentClass ) ;^86^^^^^81^87^this ( currentClass, currentSuperClass, null, isInterface ) ;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] Type,boolean)   Type currentClass Type currentSuperClass final boolean isInterface [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Variable_Misuse]^this.currentClass = currentSuperClass;^105^^^^^99^109^this.currentClass = currentClass;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] List,boolean)   Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Variable_Misuse]^this.currentSuperClass = currentClass;^106^^^^^99^109^this.currentSuperClass = currentSuperClass;^[CLASS] SimpleVerifier  [METHOD] <init> [RETURN_TYPE] List,boolean)   Type currentClass Type currentSuperClass List currentClassInterfaces final boolean isInterface [VARIABLES] Type  currentClass  currentSuperClass  List  currentClassInterfaces  boolean  isInterface  
[BugLab_Wrong_Operator]^if  ( type != null )  {^112^^^^^111^141^if  ( type == null )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^boolean isArray = currentSuperClass.getSort (  )  == Type.ARRAY;^116^^^^^111^141^boolean isArray = type.getSort (  )  == Type.ARRAY;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^boolean isArray = type.getSort (  )  <= Type.ARRAY;^116^^^^^111^141^boolean isArray = type.getSort (  )  == Type.ARRAY;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^if  ( isInterface )  {^117^^^^^111^141^if  ( isArray )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^return new BasicValue ( currentSuperClass ) ;^123^^^^^111^141^return new BasicValue ( type ) ;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^switch  ( currentSuperClass.getElementType (  ) .getSort (  )  )  {^118^^^^^111^141^switch  ( type.getElementType (  ) .getSort (  )  )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^if  ( v != BasicValue.REFERENCE_VALUE )  {^128^^^^^111^141^if  ( v == BasicValue.REFERENCE_VALUE )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^if  ( isInterface )  {^129^^^^^111^141^if  ( isArray )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Argument_Swapping]^if  ( isArraysArray )  {^129^^^^^111^141^if  ( isArray )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^v = new BasicValue ( currentSuperClass ) ;^137^^^^^129^138^v = new BasicValue ( type ) ;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < currentSuperClass.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Argument_Swapping]^for  ( typent i = 0; i < i.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^v = newValue ( currentSuperClass.getElementType (  )  ) ;^130^^^^^111^141^v = newValue ( type.getElementType (  )  ) ;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^v = new BasicValue ( currentSuperClass ) ;^137^^^^^111^141^v = new BasicValue ( type ) ;^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < type.getDimensions (  ) ; ++i )  {^132^^^^^111^141^for  ( int i = 0; i < type.getDimensions (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] newValue [RETURN_TYPE] Value   Type type [VARIABLES] Value  v  Type  currentClass  currentSuperClass  type  List  currentClassInterfaces  boolean  isArray  isInterface  String  desc  int  i  
[BugLab_Variable_Misuse]^return type != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^145^146^^^^143^147^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return t != null ||  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^145^146^^^^143^147^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return t == null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^145^146^^^^143^147^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  && t.getSort (  )  == Type.ARRAY ) ;^145^146^^^^143^147^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  != Type.ARRAY ) ;^145^146^^^^143^147^return t != null &&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( "Lnull;".equals ( type.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^146^^^^^143^147^&&  ( "Lnull;".equals ( t.getDescriptor (  )  )  || t.getSort (  )  == Type.ARRAY ) ;^[CLASS] SimpleVerifier  [METHOD] isArrayValue [RETURN_TYPE] boolean   Value value [VARIABLES] Value  value  Type  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type != null )  {^153^^^^^149^162^if  ( arrayType != null )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( arrayType == null )  {^153^^^^^149^162^if  ( arrayType != null )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type.getSort (  )  == Type.ARRAY )  {^154^^^^^149^162^if  ( arrayType.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( arrayType.getSort (  )  != Type.ARRAY )  {^154^^^^^149^162^if  ( arrayType.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^} else if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^157^^^^^149^162^} else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^} else if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^157^^^^^149^162^} else if  ( "Lnull;".equals ( arrayType.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( Type.getType ( type.getDescriptor (  ) .substring ( 1 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 0 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 2 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( Type.getType ( t.getDescriptor (  ) .substring ( 1 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( t.getSort (  )  == Type.ARRAY )  {^154^^^^^149^162^if  ( arrayType.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 3 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 4 )  )  ) ;^155^156^^^^149^162^return newValue ( Type.getType ( arrayType.getDescriptor (  ) .substring ( 1 )  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getElementValue [RETURN_TYPE] Value   Value objectArrayValue [VARIABLES] Value  objectArrayValue  Type  arrayType  currentClass  currentSuperClass  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^175^^^^^164^187^if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^} else if  ( t.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^} else if  ( type.getSort (  )  == Type.OBJECT && type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^} else if  ( type.getSort (  )  <= Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^} else if  ( type.getSort (  )  >= Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return true;^182^^^^^164^187^return false;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return isAssignableFrom ( t, type ) ;^180^^^^^164^187^return isAssignableFrom ( expectedType, type ) ;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return isAssignableFrom ( expectedType, t ) ;^180^^^^^164^187^return isAssignableFrom ( expectedType, type ) ;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^return isAssignableFrom ( type, expectedType ) ;^180^^^^^164^187^return isAssignableFrom ( expectedType, type ) ;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^|| t.getSort (  )  == Type.ARRAY ) {^178^179^^^^164^187^|| type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Literal]^return false;^176^^^^^164^187^return true;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^} else if  ( type.getSort (  )  < Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^} else if  ( type.getSort (  )  != Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^177^178^179^^^164^187^} else if  ( type.getSort (  )  == Type.OBJECT || type.getSort (  )  == Type.ARRAY ) {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return t == expectedType;^172^^^^^164^187^return type == expectedType;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return type == t;^172^^^^^164^187^return type == expectedType;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^return expectedType == type;^172^^^^^164^187^return type == expectedType;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return type >= expectedType;^172^^^^^164^187^return type == expectedType;^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^switch  ( type.getSort (  )  )  {^167^^^^^164^187^switch  ( expectedType.getSort (  )  )  {^[CLASS] SimpleVerifier  [METHOD] isSubTypeOf [RETURN_TYPE] boolean   Value value Value expected [VARIABLES] Value  expected  value  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( !v.equals ( v )  )  {^190^^^^^175^205^if  ( !v.equals ( w )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t != null ||  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t == null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT && t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t != null &&  ( t.getSort (  )  != Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u != null &&  ( u.getSortype (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( u != null ||  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( u == null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT && u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( u != null &&  ( u.getSort (  )  != Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^199^^^^^196^224^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return v;^200^^^^^196^224^return w;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return w;^203^^^^^196^224^return v;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, u )  )  {^205^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, type )  )  {^205^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( u, t )  )  {^205^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return w;^206^^^^^196^224^return v;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( expectedType, t )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, expectedType )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( t, u )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return v;^209^^^^^196^224^return w;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( expectedType == null || isInterface ( t )  )  {^216^^^^^196^224^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t == null && isInterface ( t )  )  {^216^^^^^196^224^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t != null || isInterface ( t )  )  {^216^^^^^196^224^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, type )  )  {^220^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( u, t )  )  {^220^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( u ) ;^221^^^^^196^224^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^199^^^^^196^224^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^202^^^^^196^224^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^202^^^^^196^224^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( expectedType, u )  )  {^205^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, type )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u == null || isInterface ( t )  )  {^216^^^^^196^224^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( type ) ;^219^^^^^196^224^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^199^^^^^184^214^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return v;^200^^^^^185^215^return w;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^202^^^^^187^217^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return w;^203^^^^^188^218^return v;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, u )  )  {^205^^^^^190^220^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, expectedType )  )  {^205^^^^^190^220^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( u, t )  )  {^205^^^^^190^220^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return w;^206^^^^^191^221^return v;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, t )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( t, u )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return v;^209^^^^^194^224^return w;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( expectedType == null || isInterface ( t )  )  {^216^^^^^201^231^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t == null && isInterface ( t )  )  {^216^^^^^201^231^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( t != null || isInterface ( t )  )  {^216^^^^^201^231^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, u )  )  {^220^^^^^205^235^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, expectedType )  )  {^220^^^^^205^235^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( u, t )  )  {^220^^^^^205^235^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( u ) ;^221^^^^^206^236^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( expectedType ) ;^221^^^^^206^236^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( type ) ;^219^^^^^204^234^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( expectedType.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^197^198^^^^182^212^&&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( type.getDescriptor (  )  )  )  {^199^^^^^184^214^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( expectedType.getDescriptor (  )  )  )  {^202^^^^^187^217^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( expectedType, u )  )  {^205^^^^^190^220^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( expectedType, t )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, type )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u == null || isInterface ( t )  )  {^216^^^^^201^231^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, type )  )  {^220^^^^^205^235^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( expectedType.getDescriptor (  )  )  )  {^202^^^^^196^224^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, t )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( type ) ;^221^^^^^196^224^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( u ) ;^219^^^^^196^224^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( expectedType ) ;^221^^^^^196^224^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( expectedType.getDescriptor (  )  )  )  {^199^^^^^196^224^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( expectedType ) ;^219^^^^^196^224^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( expectedType.getDescriptor (  )  )  )  {^199^^^^^184^214^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, u )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( expectedType.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^194^195^^^^179^209^&&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( type.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^194^195^^^^179^209^&&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( type.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^197^198^^^^182^212^&&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( "Lnull;".equals ( t.getDescriptor (  )  )  )  {^202^^^^^187^217^if  ( "Lnull;".equals ( u.getDescriptor (  )  )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, type )  )  {^205^^^^^190^220^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, expectedType )  )  {^208^^^^^193^223^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type == null || isInterface ( t )  )  {^216^^^^^201^231^if  ( t == null || isInterface ( t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( expectedType != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^193^194^195^^^178^208^if  ( t != null &&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( expectedType != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, u )  )  {^208^^^^^196^224^if  ( isAssignableFrom ( u, t )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return 2;^217^^^^^196^224^return BasicValue.REFERENCE_VALUE;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, expectedType )  )  {^220^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( expectedType, u )  )  {^220^^^^^205^235^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( u ) ;^219^^^^^204^234^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^t = getSuperClass ( expectedType ) ;^219^^^^^204^234^t = getSuperClass ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u != null &&  ( u.getSorexpectedType (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^196^197^198^^^181^211^if  ( u != null &&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, expectedType )  )  {^205^^^^^196^224^if  ( isAssignableFrom ( t, u )  )  {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return newValue ( type ) ;^221^^^^^206^236^return newValue ( t ) ;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( u.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^194^195^^^^179^209^&&  ( t.getSort (  )  == Type.OBJECT || t.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^&&  ( t.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^197^198^^^^182^212^&&  ( u.getSort (  )  == Type.OBJECT || u.getSort (  )  == Type.ARRAY )  ) {^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return w;^228^^^^^213^243^return v;^[CLASS] SimpleVerifier  [METHOD] merge [RETURN_TYPE] Value   Value v Value w [VARIABLES] Value  v  w  Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( currentClass != null && u.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type != null && t.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( t != null && currentClass.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( currentClass != null || t.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( currentClass == null && t.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return isArray;^233^^^^^231^236^return isInterface;^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u != null && t.equals ( currentClass )  )  {^232^^^^^231^236^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return getClass ( u ) .isInterface (  ) ;^235^^^^^231^236^return getClass ( t ) .isInterface (  ) ;^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return getClass ( expectedType ) .isInterface (  ) ;^235^^^^^231^236^return getClass ( t ) .isInterface (  ) ;^[CLASS] SimpleVerifier  [METHOD] isInterface [RETURN_TYPE] boolean   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( currentClass != null && type.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type != null && t.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Argument_Swapping]^if  ( t != null && currentClass.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( currentClass != null || t.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^if  ( currentClass == null && t.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return u;^240^^^^^238^244^return currentSuperClass;^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^return t;^240^^^^^238^244^return currentSuperClass;^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( u != null && t.equals ( currentClass )  )  {^239^^^^^238^244^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^Class c = getClass ( type ) .getSuperclass (  ) ;^242^^^^^238^244^Class c = getClass ( t ) .getSuperclass (  ) ;^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^Class c = getClass ( u ) .getSuperclass (  ) ;^242^^^^^238^244^Class c = getClass ( t ) .getSuperclass (  ) ;^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Wrong_Operator]^return c != null ? null : Type.getType ( c ) ;^243^^^^^238^244^return c == null ? null : Type.getType ( c ) ;^[CLASS] SimpleVerifier  [METHOD] getSuperClass [RETURN_TYPE] Type   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  List  currentClassInterfaces  Class  c  boolean  isArray  isInterface  
[BugLab_Variable_Misuse]^if  ( type.equals ( u )  )  {^247^^^^^246^272^if  ( t.equals ( u )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^if  ( u.equals ( t )  )  {^247^^^^^246^272^if  ( t.equals ( u )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^return false;^248^^^^^246^272^return true;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( v.equals ( u )  )  {^247^^^^^246^272^if  ( t.equals ( u )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( t.equals ( v )  )  {^247^^^^^246^272^if  ( t.equals ( u )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( currentClass != null && type.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( u != null && t.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^if  ( t != null && currentClass.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( currentClass != null || t.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( currentClass == null && t.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( getSuperClass ( v )  == null )  {^251^^^^^246^272^if  ( getSuperClass ( u )  == null )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( getSuperClass ( u )  != null )  {^251^^^^^246^272^if  ( getSuperClass ( u )  == null )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( v, getSuperClass ( u )  ) ;^254^^^^^251^255^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( t, getSuperClass ( v )  ) ;^254^^^^^251^255^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^return isAssignableFrom ( u, getSuperClass ( t )  ) ;^254^^^^^251^255^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( t, getSuperClass ( type )  ) ;^254^^^^^251^255^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^return true;^252^^^^^246^272^return false;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^246^272^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( t, getSuperClass ( v )  ) ;^254^^^^^246^272^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^return isAssignableFrom ( u, getSuperClass ( t )  ) ;^254^^^^^246^272^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( getSuperClass ( t )  == null )  {^251^^^^^246^272^if  ( getSuperClass ( u )  == null )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( getSuperClass ( type )  == null )  {^251^^^^^246^272^if  ( getSuperClass ( u )  == null )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( type, getSuperClass ( u )  ) ;^254^^^^^251^255^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( v, getSuperClass ( u )  ) ;^254^^^^^246^272^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return isAssignableFrom ( t, getSuperClass ( type )  ) ;^254^^^^^246^272^return isAssignableFrom ( t, getSuperClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( currentClass != null && u.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( v != null && t.equals ( currentClass )  )  {^250^^^^^246^272^if  ( currentClass != null && t.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( currentClass != null && v.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( u != null && u.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( currentClass != null || u.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( currentClass == null && u.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( v, currentSuperClass )  )  {^258^^^^^246^272^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, v )  )  {^258^^^^^246^272^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( currentSuperClass, t )  )  {^258^^^^^246^272^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^return false;^259^^^^^246^272^return true;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^if  ( currentClassInterfaces == null )  {^261^^^^^246^272^if  ( currentClassInterfaces != null )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( type, v )  )  {^264^^^^^246^272^if  ( isAssignableFrom ( t, v )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, u )  )  {^264^^^^^246^272^if  ( isAssignableFrom ( t, v )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^if  ( isAssignableFrom ( v, t )  )  {^264^^^^^246^272^if  ( isAssignableFrom ( t, v )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^return false;^265^^^^^246^272^return true;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^for  ( intype i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^Type v =  ( Type )  i.get ( currentClassInterfaces ) ;^263^^^^^246^272^Type v =  ( Type )  currentClassInterfaces.get ( i ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, v )  )  {^264^^^^^246^272^if  ( isAssignableFrom ( t, v )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, type )  )  {^264^^^^^246^272^if  ( isAssignableFrom ( t, v )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^for  ( inv i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^return true;^269^^^^^246^272^return false;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( u, currentSuperClass )  )  {^258^^^^^246^272^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( isAssignableFrom ( t, u )  )  {^258^^^^^246^272^if  ( isAssignableFrom ( t, currentSuperClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^for  ( currentClassInterfacesnt i = 0; i < i.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^for  ( inu i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < currentClassInterfaces.size (  ) ; ++i )  {^262^^^^^246^272^for  ( int i = 0; i < currentClassInterfaces.size (  ) ; ++i )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( v != null && u.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^if  ( u != null && currentClass.equals ( currentClass )  )  {^257^^^^^246^272^if  ( currentClass != null && u.equals ( currentClass )  )  {^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return getClass ( v ) .isAssignableFrom ( getClass ( u )  ) ;^271^^^^^246^272^return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return getClass ( t ) .isAssignableFrom ( getClass ( v )  ) ;^271^^^^^246^272^return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Argument_Swapping]^return getClass ( u ) .isAssignableFrom ( getClass ( t )  ) ;^271^^^^^246^272^return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^return getClass ( type ) .isAssignableFrom ( getClass ( u )  ) ;^271^^^^^246^272^return getClass ( t ) .isAssignableFrom ( getClass ( u )  ) ;^[CLASS] SimpleVerifier  [METHOD] isAssignableFrom [RETURN_TYPE] boolean   Type t Type u [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  int  i  
[BugLab_Variable_Misuse]^if  ( type.getSort (  )  == Type.ARRAY )  {^276^^^^^274^283^if  ( t.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^if  ( t.getSort (  )  >= Type.ARRAY )  {^276^^^^^274^283^if  ( t.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( v.getDescriptor (  ) .replace ( '/', '.' )  ) ;^277^^^^^274^283^return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( type.getDescriptor (  ) .replace ( '/', '.' )  ) ;^277^^^^^274^283^return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^if  ( v.getSort (  )  == Type.ARRAY )  {^276^^^^^274^283^if  ( t.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Wrong_Operator]^if  ( t.getSort (  )  <= Type.ARRAY )  {^276^^^^^274^283^if  ( t.getSort (  )  == Type.ARRAY )  {^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( v.getClassName (  )  ) ;^279^^^^^274^283^return Class.forName ( t.getClassName (  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( type.getClassName (  )  ) ;^279^^^^^274^283^return Class.forName ( t.getClassName (  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( u.getDescriptor (  ) .replace ( '/', '.' )  ) ;^277^^^^^274^283^return Class.forName ( t.getDescriptor (  ) .replace ( '/', '.' )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
[BugLab_Variable_Misuse]^return Class.forName ( u.getClassName (  )  ) ;^279^^^^^274^283^return Class.forName ( t.getClassName (  )  ) ;^[CLASS] SimpleVerifier  [METHOD] getClass [RETURN_TYPE] Class   Type t [VARIABLES] Type  arrayType  currentClass  currentSuperClass  expectedType  t  type  u  v  List  currentClassInterfaces  boolean  isArray  isInterface  ClassNotFoundException  e  
