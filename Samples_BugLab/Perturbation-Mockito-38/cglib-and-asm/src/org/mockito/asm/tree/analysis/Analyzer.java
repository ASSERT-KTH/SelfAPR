[buglab_swap_variables]^for  ( int j = end; j < begin; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^for  ( int end = begin; j < j; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^for  ( int begin = j; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^findSubroutine ( 0, subroutineCalls, main ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^findSubroutine ( 0,  subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^findSubroutine ( 0, main ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++, ctype.newValue ( interpreter )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++.newValue ( ctype )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++.newValue ( null )  ) ;^163^^^^^148^178^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++, interpreternterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++nterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++, args.newValue ( interpreter[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++, argsnterpreter.newValue ( i[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++, i.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.setLocal ( local++.newValue ( null )  ) ;^167^^^^^152^182^current.setLocal ( local++, interpreter.newValue ( null )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current + 1, insn, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, subroutine, current ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1,  subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, current ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current + 1, insn, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1,  subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, subroutine, current ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, current ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( call, insn + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine + 1, current, insn ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine + 1, current, insn ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^jump = label.indexOf ( insns ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( jump, insn ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( jump, insn ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^jump = label.indexOf ( insns ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( jump, insn ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( jump, insn ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( insn != GOTO && insnOpcodeOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( insnOpcodeOpcode != GOTO && insn != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( GOTO != insnOpcode && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( JSROpcode != GOTO && insnOpcode != insn )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current + 1, insn, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1,  subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine + 1, current, insn ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, current ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( current, jump, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, current ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( jump, insn ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge (  jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^newControlFlowEdge ( insn ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( insnOpcode != JSR && insnOpcode != GOTO )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, current, jump ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.init ( insnNode ) .execute ( f, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.init ( f ) .execute (  interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.init ( f ) .execute ( insnNode ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, subroutine, current ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, current ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine + 1, f, insn ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, subroutine, f ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1,  subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( insn + 1, f ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( newControlFlowExceptionEdge (  jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( newControlFlowExceptionEdge ( insn )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^handler.push ( type.newValue ( interpreter )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( subroutine, handler, jump ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge (  handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( handler, jump, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump,  subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, subroutine, handler ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( jump, handler ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( newControlFlowExceptionEdge ( jump, insn )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  i.get ( insnHandlers ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlersnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( GOTOOpcode != insn && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( JSR != GOTO && insnOpcode != insnOpcode )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^current.init ( f ) .execute ( interpreter, insnNode ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^List handlersHandlers = insn[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^merge ( f + 1, insn, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  )  ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  )  ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[buglab_swap_variables]^if  ( n < 0 || insn >= insn )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( sub ) , l, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) , calls, sub ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) ,  calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( calls ) , sub, l ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) , sub ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( sub.indexOf ( l ) , insns, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( l.indexOf ( insns ) , sub, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( sub ) , l, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) ,  calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( calls ) , sub, l ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) , sub ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( l.indexOf ( insns ) , sub, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( sub.indexOf ( l ) , insns, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( insns.indexOf ( l ) , calls, sub ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( calls.indexOf ( l ) , sub, insns ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^findSubroutine ( calls.indexOf ( l ) , sub, insns ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  i.get ( insnHandlers ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlersnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^AbstractInsnNode node = insnss.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^AbstractInsnNode node = insn.get ( insns ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^List handlersHandlers = insn[insn];^339^^^^^324^354^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[buglab_swap_variables]^return new Frame ( nStack, nLocals ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[buglab_swap_variables]^return new Frame (  nStack ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[buglab_swap_variables]^return new Frame ( nLocals ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[buglab_swap_variables]^changes = frame.merge ( oldFrame, interpreter ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge (  interpreter ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = interpreter.merge ( frame, oldFrame ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge ( frame ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = frame.merge ( oldFrame, interpreter ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge ( interpreter, frame ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge (  interpreter ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge ( frame ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = interpreter.merge ( frame, oldFrame ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes |= subroutine.merge ( oldSubroutine ) ;^470^^^^^463^472^changes |= oldSubroutine.merge ( subroutine ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes |= subroutine.merge ( oldSubroutine ) ;^470^^^^^451^477^changes |= oldSubroutine.merge ( subroutine ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^afterRET.merge (  access ) ;^490^^^^^485^506^afterRET.merge ( beforeJSR, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^afterRET.merge ( beforeJSR ) ;^490^^^^^485^506^afterRET.merge ( beforeJSR, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = access.merge ( afterRET, oldFrame ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = afterRET.merge ( oldFrame, access ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge (  access ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge ( access, afterRET ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes = oldFrame.merge ( afterRET ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^if  ( subroutineBeforeJSR != null && oldSubroutine != null )  {^499^^^^^485^506^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[buglab_swap_variables]^changes |= subroutineBeforeJSR.merge ( oldSubroutine ) ;^500^^^^^485^506^changes |= oldSubroutine.merge ( subroutineBeforeJSR ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
