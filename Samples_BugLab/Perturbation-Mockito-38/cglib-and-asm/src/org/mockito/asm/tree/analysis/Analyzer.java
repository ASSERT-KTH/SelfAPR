[BugLab_Wrong_Operator]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  == 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  (  ( m.access  <=   ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  (  ( m.access &  ( ACC_ABSTRACT  &  ACC_NATIVE )  )  != 0 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != -1 )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != top )  {^101^^^^^86^116^if  (  ( m.access &  ( ACC_ABSTRACT | ACC_NATIVE )  )  != 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^frames = new Frame[jump];^102^^^^^87^117^frames = new Frame[0];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^handlers = insnTypeew List[n];^107^^^^^92^122^handlers = new List[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^frames = insnTypeew Frame[n];^108^^^^^93^123^frames = new Frame[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^subroutines = insnTypeew Subroutine[n];^109^^^^^94^124^subroutines = new Subroutine[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^queued = insnTypeew boolean[n];^110^^^^^95^125^queued = new boolean[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^queue = insnTypeew int[n];^111^^^^^96^126^queue = new int[n];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^top = 1;^112^^^^^97^127^top = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( subroutineCalls == null )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnHandlers != null )  {^121^^^^^106^136^if  ( insnHandlers == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^handlers[j] = subroutineCalls;^123^^^^^108^138^handlers[j] = insnHandlers;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = insnOpcode; i < m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int j = local; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int insnType = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int j = begin; j < jump; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^for  ( int end = begin; j < j; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = begin; j <= end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int j = var; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int j = jump; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int n = begin; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^for  ( int begin = j; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = begin; j == end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < m.tryCatchBlocks.size (  ) ; ++i )  {^115^^^^^100^130^for  ( int i = 0; i < m.tryCatchBlocks.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int j = n; j < end; ++j )  {^119^^^^^104^134^for  ( int j = begin; j < end; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^findSubroutine ( 0, subroutine, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^findSubroutine ( 0, main, insnHandlers ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^findSubroutine ( 0, subroutineCalls, main ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^findSubroutine ( insn, main, subroutineCalls ) ;^133^^^^^118^148^findSubroutine ( 0, main, subroutineCalls ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( sub != null )  {^137^^^^^122^152^if  ( sub == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^JumpInsnNode jsr =  ( JumpInsnNode )  insnHandlers.remove ( 0 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 1 ) ;^135^^^^^120^150^JumpInsnNode jsr =  ( JumpInsnNode )  subroutineCalls.remove ( 0 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutines[i] != null || subroutines[i].start == null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutines[i] == null && subroutines[i].start == null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutines[i] != null && subroutines[i].start != null )  {^146^^^^^131^161^if  ( subroutines[i] != null && subroutines[i].start == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < n; ++i )  {^145^^^^^130^160^for  ( int i = 0; i < n; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^int local = var;^155^^^^^140^170^int local = 0;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  (  ( m.access & ACC_STATIC )  >= 0 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  (  ( m.access  >=  ACC_STATIC )  == 0 )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^if  (  ( m.access & ACC_STATIC )  == var )  {^156^^^^^141^171^if  (  ( m.access & ACC_STATIC )  == 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.setLocal ( local++, ctype.newValue ( interpreter )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^current.setLocal ( local++, interpreter.newValue ( type )  ) ;^158^^^^^143^173^current.setLocal ( local++, interpreter.newValue ( ctype )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( args[i].getSize (  )  > 2 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^if  ( args[i].getSize (  )  == insnType )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( args[i].getSize (  )  != 2 )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^if  ( args[i].getSize (  )  == top )  {^162^^^^^147^177^if  ( args[i].getSize (  )  == 2 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^current.setLocal ( local++, localnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.setLocal ( local++, args.newValue ( interpreter[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^current.setLocal ( local++, nnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.setLocal ( local++, argsnterpreter.newValue ( i[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.setLocal ( local++, i.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = insnType; i < args.length; ++i )  {^160^^^^^145^175^for  ( int i = 0; i < args.length; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^current.setLocal ( local++, jumpnterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.setLocal ( local++, interpreternterpreter.newValue ( args[i] )  ) ;^161^^^^^146^176^current.setLocal ( local++, interpreter.newValue ( args[i] )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^while  ( local <= m.maxLocals )  {^166^^^^^151^181^while  ( local < m.maxLocals )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( 0, handler, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( -1, current, null ) ;^169^^^^^154^184^merge ( 0, current, null ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^while  ( top >= 0 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^while  ( top >  )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^while  ( top > end )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^while  ( top > -1 )  {^172^^^^^157^187^while  ( top > 0 )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType == AbstractInsnNode.LABEL && insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType != AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType >= AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType <= AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType < AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >=  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <=  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <<  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >>  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >>  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode < RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode > RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode >= RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW ||  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode <= ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN && insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode <= IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode >= RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutine == null )  {^249^^^^^246^266^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  |  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var] = false;^261^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode >= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode >= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode != LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode != DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var ] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + 1] = false;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var] = false;^252^^^^^246^266^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + end] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode != DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode >= DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &&  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ==  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode <= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &&  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, handler, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, current, sub ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current + 1, insn, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( insn + 1, subroutine, current ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine + 1, current, insn ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn , current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( jump, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn  ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutine == null )  {^249^^^^^234^264^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  !=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ^  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var] = false;^261^^^^^246^276^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD && insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode >= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode != LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode != DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var ] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + 1] = false;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var] = false;^252^^^^^237^267^subroutine.access[var] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + j] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + 1] = false;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode >= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode <= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode <= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode >= DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <<  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnType] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <<  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ||  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ==  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode <= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode != DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode >= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode < DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insn] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var ] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode > DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + var] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  !=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + call] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, handler, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, current, sub ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current + 1, insn, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( insn + 1, subroutine, current ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + begin, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + j ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( sub == null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( subroutine != null )  {^231^^^^^216^246^if  ( subroutine == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( frames[call] == null )  {^237^^^^^222^252^if  ( frames[call] != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + n, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( jump, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, jump + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( call, insn + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  &  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + top ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  <  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ==  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + var, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  |  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call  ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call , frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  ==  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + begin ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  &&  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode == ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ||  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ^  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode >= LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + call] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  |  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ==  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >>  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode <= DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + local] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode < DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode <= DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >>  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  |  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode < DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  |  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >>  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ||  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  >=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  <=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call   instanceof   1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  >>  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + i ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + var] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = i; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + begin, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine + 1, current, insn ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn , current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + end ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^jump = label.indexOf ( insns ) ;^226^^^^^211^241^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( jump, insn ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( jump, insn ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, j ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode == IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode == RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode < LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode < LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode < DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + , current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <=  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + local] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + n] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <=  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + , current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + call ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  <  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + insn ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ^  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ||  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, call + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  >=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + call, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  <=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + local ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = var; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  !=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <=  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ^  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode <= LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnType] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + ] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + j] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <<  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + begin] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + var] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + end, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <=  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ==  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode > LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for   instanceof   ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + insnType, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  !=  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + jump] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  ^  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insn, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j <= lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^jump = label.indexOf ( insns ) ;^215^^^^^200^230^jump = insns.indexOf ( label ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( jump, insn ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = j; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, j ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( jump, insn ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  !=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >=  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode <= RET )  {^230^^^^^215^245^} else if  ( insnOpcode == RET )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode < ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode > DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + top, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode > DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + ] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode < LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ^  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + i ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + i, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call +  ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + jump, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top + 1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  >  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + local, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = insnOpcode; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + insn, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  ||  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode > LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnOpcode, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode <= DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + call] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insn] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &&  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnOpcode] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = begin; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + insnOpcode, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = call; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + end ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + n, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ||  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn  ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = jump; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, j ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + i] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + n] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode > LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + top] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode > DSTORE ) {^253^254^255^256^^246^266^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ||  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insnType] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + i] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  >>  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = insn; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + top, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + jump ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + , frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode > IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ||  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <<  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + var, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + end] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + i] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + begin] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = 1; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, j ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = i; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + end, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = begin; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = end; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + insnType ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + var, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( local != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( varOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( insnOpcodeOpcode != GOTO && insn != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( insnOpcode != JSR && insnOpcode != GOTO )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO || insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode == GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO && insnOpcode >= JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, handler, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, current, sub ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current + 1, insn, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine + 1, current, insn ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + call, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn +  ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + i, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + local ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, current, sub ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( current, jump, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, current ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, j ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^newControlFlowEdge ( jump, insn ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( jump != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( insn != GOTO && insnOpcodeOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode <= GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO && insnOpcode <= JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( insn + 1, subroutine, current ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn , current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnOpcode ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ^  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &&  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  |  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode >= ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <  VarInsnNode )  {^250^^^^^246^266^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + local ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  |  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n + 1, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >>  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >>  IincInsnNode )  {^259^^^^^244^274^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode < LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + top] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  >  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = var; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + jump, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, insn + 1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + ] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + top] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >>  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + call ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  &  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  <<  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode > ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode < RETURN )  ) {^246^247^248^^^231^261^} else if  ( insnOpcode != ATHROW &&  ( insnOpcode < IRETURN || insnOpcode > RETURN )  ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + n] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = j; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( call + j, frames[call], current, subroutines[call],^238^239^240^241^^223^253^merge ( call + 1, frames[call], current, subroutines[call],^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, call  <<  1 ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + local] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnType, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ==  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ^  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + jump] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + j ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn +  ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + insnOpcode ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = jump; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  !=  IincInsnNode )  {^259^^^^^246^266^} else if  ( insnNode instanceof IincInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + jump] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  !=  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = j; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnOpcode, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = ; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = n; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  &&  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = ; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = top; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >=  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + end] = true;^257^^^^^242^272^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = insnOpcode; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = insnOpcode; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^subroutine = subroutine != null ? null : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = end; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^current.init ( handler ) .execute ( insnNode, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.init ( f ) .execute ( interpreter, insnNode ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^subroutine = sub == null ? null : subroutine.copy (  ) ;^191^^^^^176^206^subroutine = subroutine == null ? null : subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, current, jump ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, jump ) ;^228^^^^^213^243^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + local, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( jump, insn + 1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, handler, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insn + 1, f, sub ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine + 1, f, insn ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( f + 1, insn, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( insn + 1, subroutine, f ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn , f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  >>  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + j] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  !=  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + var ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + begin] = true;^257^^^^^253^258^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + j ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = begin; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnType, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &&  VarInsnNode )  {^250^^^^^235^265^if  ( insnNode instanceof VarInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + end, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + local, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + end ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = local; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, call + n ) ;^243^^^^^228^258^newControlFlowEdge ( insn, call + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = insn; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j > lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, jump ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top ) ;^217^^^^^202^232^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^subroutine.access[var + insn] = true;^257^^^^^246^266^subroutine.access[var + 1] = true;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode > LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^253^254^255^256^^238^268^if  ( insnOpcode == LLOAD || insnOpcode == DLOAD || insnOpcode == LSTORE || insnOpcode == DSTORE ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = -1; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = n; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = top; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^211^^^^^196^226^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( n != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( jOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnOpcode, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + call ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode <= JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + top ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( j != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  |  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn  ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode >= JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  >  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top + 1, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, current, subroutine ) ;^227^^^^^212^242^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + begin, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = top; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + call, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + n ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + j, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + i, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + n, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + jump, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + top ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnHandlers == null )  {^270^^^^^255^285^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( tcb.type != null )  {^274^^^^^259^289^if  ( tcb.type == null )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( j, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, top )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^icurrent  ( newControlFlowExceptionEdge ( insn, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( newControlFlowExceptionEdge ( jump, insn )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^handler.init ( current ) ;^281^^^^^266^296^handler.init ( f ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^handler.push ( interpreter.newValue ( ctype )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^handler.push ( type.newValue ( interpreter )  ) ;^283^^^^^268^298^handler.push ( interpreter.newValue ( type )  ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, f, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump, handler, sub ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( subroutine, handler, jump ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( jump, subroutine, handler ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = var; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, insnType )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( insnType, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^merge ( handler, jump, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  subroutineCalls.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  localnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  i.get ( insnHandlers ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlersnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, j )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = jump; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < subroutineCalls.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jumpnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, local )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( top, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, n )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^ihandler  ( newControlFlowExceptionEdge ( insn, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = n; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i == insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = begin; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  nnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnType > AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^183^184^185^186^^168^198^if  ( insnType == AbstractInsnNode.LABEL || insnType == AbstractInsnNode.LINE || insnType == AbstractInsnNode.FRAME ) {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  &&  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ||  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  !=  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  <<  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ||  TableSwitchInsnNode )  {^219^^^^^204^234^} else if  ( insnNode instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = local; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insn ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + call, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, jump ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + n ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, n ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, current, subroutine ) ;^216^^^^^201^231^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, current, subroutine ) ;^222^^^^^207^237^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( var != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( localOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( GOTOOpcode != insn && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( jump, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >>  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + n ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + var ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( jumpOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( insnOpcode != 4 && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( JSROpcode != GOTO && insnOpcode != insn )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode < GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO && insnOpcode == JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + begin, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn   instanceof   1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &&  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + i ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + top ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn +  ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, jump ) ;^223^^^^^208^238^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.init ( insnNode ) .execute ( f, interpreter ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^current.init ( interpreter ) .execute ( insnNode, f ) ;^190^^^^^175^205^current.init ( f ) .execute ( insnNode, interpreter ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ==  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + end ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ==  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = var; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + j, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >=  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <<  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( n, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( topOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = insnType; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + var ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + top, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( n, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( insn, var )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = i; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  varnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = ; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( var, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( local, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( var, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^List handlersHandlers = insn[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = n; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( j, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + var ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + begin ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, jump ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^queued[insn] = true;^176^^^^^161^191^queued[insn] = false;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^throw new AnalyzerException ( "Error at instruction " + j + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  <<  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "   instanceof   insn   instanceof   ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  !=  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^throw new AnalyzerException ( "Error at instruction " + local + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^throw new AnalyzerException ( "Error at instruction " + e + ": " + insn.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  >  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  >  insn  >  ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  !=  insn + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^List topHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  ==  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^throw new AnalyzerException ( "Error at instruction " + var + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  <<  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "   instanceof   insn   instanceof   ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( var, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn  ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + n, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( local, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, var ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  &  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  |  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = insnType; i < subroutine.callers.size (  ) ; ++i )  {^234^^^^^219^249^for  ( int i = 0; i < subroutine.callers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = i; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insn ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + jump ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( JSR != GOTO && insnOpcode != insnOpcode )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode < JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + top, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( j, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode > GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO && insnOpcode < JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insn, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, insn + 1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + local ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + var ) ;^265^^^^^250^280^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = insnType; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = jump; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + , current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + end ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + end, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  ^  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + i ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ==  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^} else if  ( insnNode  ||  LookupSwitchInsnNode )  {^208^^^^^193^223^} else if  ( insnNode instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + call ) ;^265^^^^^246^266^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int j = 0; j == lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + j, current, subroutine ) ;^264^^^^^249^279^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = call; j < tsi.labels.size (  ) ; ++j )  {^224^^^^^209^239^for  ( int j = 0; j < tsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( nOpcode != GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  <=  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, current, subroutine ) ;^205^^^^^190^220^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Argument_Swapping]^if  ( GOTO != insnOpcode && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int j = ; j < lsi.labels.size (  ) ; ++j )  {^213^^^^^198^228^for  ( int j = 0; j < lsi.labels.size (  ) ; ++j )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + i, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insn, current, subroutine ) ;^264^^^^^246^266^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = local; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^for  ( int i = end; i < insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^if  ( newControlFlowExceptionEdge ( jump, jump )  )  {^280^^^^^265^295^if  ( newControlFlowExceptionEdge ( insn, jump )  )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( n, handler, subroutine ) ;^284^^^^^269^299^merge ( jump, handler, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode >= GOTO && insnOpcode != JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local + 1, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + jump, current, subroutine ) ;^196^^^^^181^211^merge ( insn + 1, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  >  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode > JSR )  {^200^^^^^185^215^if  ( insnOpcode == JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insn ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, local ) ;^207^^^^^192^222^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( local + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^merge ( insn + insnOpcode, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( top, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn +  ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  ^  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnNode  <<  JumpInsnNode )  {^193^^^^^178^208^if  ( insnNode instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^if  ( insnOpcode != GOTO && insnOpcode > JSR )  {^195^^^^^180^210^if  ( insnOpcode != GOTO && insnOpcode != JSR )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( top, current, subroutine ) ;^205^^^^^200^206^merge ( jump, current, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( insn, top ) ;^212^^^^^197^227^newControlFlowEdge ( insn, jump ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  topnsnHandlers.get ( i ) ;^272^^^^^257^287^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > insnHandlers.size (  ) ; ++i )  {^271^^^^^256^286^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^List jHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^merge ( jump + 1, f, subroutine ) ;^187^^^^^172^202^merge ( insn + 1, f, subroutine ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + top ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + insnType ) ;^197^^^^^182^212^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  >>  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  >>  insn  >>  ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  ||  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  >>  insn  >>  ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  <=  insn + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^List varHandlers = handlers[insn];^269^^^^^254^284^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^throw new AnalyzerException ( "Error at instruction " + local + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  ^  insn  ^  ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  <=  insn + ": " + e.getMessage (  ) , e ) ;^289^290^^^^274^304^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^throw new AnalyzerException ( "Error at instruction " + jump + ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ==  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^throw new AnalyzerException ( "Error at instruction "  &&  insn  &&  ": " + e.getMessage (  ) , e ) ;^292^293^^^^277^307^throw new AnalyzerException ( "Error at instruction " + insn + ": " + e.getMessage (  ) , e ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Variable_Misuse]^newControlFlowEdge ( jump, insn + 1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Operator]^newControlFlowEdge ( insn, insn  &&  1 ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^newControlFlowEdge ( insn, insn + local ) ;^188^^^^^173^203^newControlFlowEdge ( insn, insn + 1 ) ;^[CLASS] Analyzer  [METHOD] analyze [RETURN_TYPE] Frame[]   String owner MethodNode m [VARIABLES] LabelNode  label  Frame  current  f  handler  Subroutine  main  sub  subroutine  Type[]  args  String  owner  InsnList  insns  AbstractInsnNode  insnNode  List[]  handlers  MethodNode  m  List  insnHandlers  subroutineCalls  LookupSwitchInsnNode  lsi  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsi  Interpreter  interpreter  AnalyzerException  e  Frame[]  frames  int[]  queue  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  Exception  e  Type  ctype  type  boolean  JumpInsnNode  j  jsr  Object  caller  Subroutine[]  subroutines  boolean[]  queued  Map  subroutineHeads  
[BugLab_Wrong_Literal]^while  ( false )  {^303^^^^^288^318^while  ( true )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^if  ( var < 0 || insn >= n )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^if  ( insn < 0 || insn >= var )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^if  ( n < 0 || insn >= insn )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( insn < 0 && insn >= n )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( insn <= 0 || insn >= n )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( insn < 0 || insn > n )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^if  ( insn < var || insn >= n )  {^304^^^^^289^319^if  ( insn < 0 || insn >= n )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( subroutines[insn] == null )  {^307^^^^^292^322^if  ( subroutines[insn] != null )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node  <  JumpInsnNode )  {^314^^^^^299^329^if  ( node instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node  <<  JumpInsnNode )  {^314^^^^^299^329^if  ( node instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node  ^  JumpInsnNode )  {^314^^^^^299^329^if  ( node instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  <<  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  &&  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  &  LookupSwitchInsnNode )  {^329^^^^^314^344^} else if  ( node instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   ^  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )  - 1; i < 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - j; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= j; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^findSubroutine ( insns.indexOf ( l ) , sub, insnHandlers ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( l.indexOf ( insns ) , sub, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( sub.indexOf ( l ) , insns, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( calls ) , sub, l ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   &&  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  ; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( sub ) , l, calls ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( calls.indexOf ( l ) , sub, insns ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   <<  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )  - 1; i > 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= -1; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( l ) , calls, sub ) ;^334^^^^^319^349^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - end; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )    instanceof   1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )  - 1; i == 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - ; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^findSubroutine ( insns.indexOf ( l ) , sub, insnHandlers ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( calls ) , sub, l ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( sub.indexOf ( l ) , insns, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( calls.indexOf ( l ) , sub, insns ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( l.indexOf ( insns ) , sub, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   >>  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - var; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( l ) , calls, sub ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  |  LookupSwitchInsnNode )  {^329^^^^^314^344^} else if  ( node instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   <=  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - i; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= local; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   ||  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   >=  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )  - 1; i > 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  ; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - 1; i >= 1; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^findSubroutine ( insns.indexOf ( sub ) , l, calls ) ;^327^^^^^312^342^findSubroutine ( insns.indexOf ( l ) , sub, calls ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   <  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - local; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   ==  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node.getOpcode (  )  >= JSR )  {^315^^^^^300^330^if  ( node.getOpcode (  )  == JSR )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  <  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  >>  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   >  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= var; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - insn; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - insnType; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   !=  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - 1; i >= end; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   <=  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  >>  LookupSwitchInsnNode )  {^329^^^^^314^344^} else if  ( node instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - top; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= n; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   >=  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( insnHandlers == null )  {^340^^^^^325^355^if  ( insnHandlers != null )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = ; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  calls.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  nnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  i.get ( insnHandlers ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlersnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  topnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  localnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   &  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - top; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - 1; i >= jump; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )  - 1; i == 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= call; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = insnOpcode; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^AbstractInsnNode node = jumps.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^AbstractInsnNode node = insnss.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^AbstractInsnNode node = insn.get ( insns ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   <<  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^List jHandlers = handlers[insn];^339^^^^^324^354^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Argument_Swapping]^List handlersHandlers = insn[insn];^339^^^^^324^354^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = j; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^AbstractInsnNode node = vars.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < calls.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node  &  JumpInsnNode )  {^314^^^^^299^329^if  ( node instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node  <=  JumpInsnNode )  {^314^^^^^299^329^if  ( node instanceof JumpInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  >  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  !=  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  >=  LookupSwitchInsnNode )  {^329^^^^^314^344^} else if  ( node instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )    instanceof   1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   |  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - begin; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= 1; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   !=  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - i; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )  - 1; i < 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - jump; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - 1; i >= i; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - insnOpcode; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^if  ( node.getOpcode (  )  != JSR )  {^315^^^^^300^330^if  ( node.getOpcode (  )  == JSR )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  >=  TableSwitchInsnNode )  {^322^^^^^307^337^} else if  ( node instanceof TableSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^} else if  ( node  <=  LookupSwitchInsnNode )  {^329^^^^^314^344^} else if  ( node instanceof LookupSwitchInsnNode )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   >>  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = lsnode.labels.size (  )   <  1; i >= 0; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Operator]^for  ( int i = tsnode.labels.size (  )   ^  1; i >= 0; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = tsnode.labels.size (  )  - 1; i >= -1; --i )  {^325^^^^^310^340^for  ( int i = tsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = lsnode.labels.size (  )  - 1; i >= top; --i )  {^332^^^^^317^347^for  ( int i = lsnode.labels.size (  )  - 1; i >= 0; --i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = top; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  jumpnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Wrong_Literal]^for  ( int i = jump; i < insnHandlers.size (  ) ; ++i )  {^341^^^^^326^356^for  ( int i = 0; i < insnHandlers.size (  ) ; ++i )  {^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^AbstractInsnNode node = locals.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^List localHandlers = handlers[insn];^339^^^^^324^354^List insnHandlers = handlers[insn];^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^AbstractInsnNode node = ns.get ( insn ) ;^311^^^^^296^326^AbstractInsnNode node = insns.get ( insn ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  varnsnHandlers.get ( i ) ;^342^^^^^327^357^TryCatchBlockNode tcb =  ( TryCatchBlockNode )  insnHandlers.get ( i ) ;^[CLASS] Analyzer  [METHOD] findSubroutine [RETURN_TYPE] void   int insn Subroutine sub List calls [VARIABLES] LabelNode  l  TryCatchBlockNode  tcb  TableSwitchInsnNode  tsnode  Interpreter  interpreter  Subroutine  sub  Frame[]  frames  int[]  queue  InsnList  insns  AbstractInsnNode  node  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  top  var  boolean  JumpInsnNode  jnode  List  calls  insnHandlers  Subroutine[]  subroutines  boolean[]  queued  LookupSwitchInsnNode  lsnode  
[BugLab_Variable_Misuse]^return new Frame ( var, nStack ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^return new Frame ( nLocals, top ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[BugLab_Argument_Swapping]^return new Frame ( nStack, nLocals ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^return new Frame ( j, nStack ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[BugLab_Variable_Misuse]^return new Frame ( nLocals, jump ) ;^400^^^^^399^401^return new Frame ( nLocals, nStack ) ;^[CLASS] Analyzer  [METHOD] newFrame [RETURN_TYPE] Frame   final int nLocals final int nStack [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  top  var  
[BugLab_Wrong_Literal]^return false;^442^^^^^438^443^return true;^[CLASS] Analyzer  [METHOD] newControlFlowExceptionEdge [RETURN_TYPE] boolean   final int insn final int successor [VARIABLES] Interpreter  interpreter  boolean  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^if  ( frame == null )  {^456^^^^^451^477^if  ( oldFrame == null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldFrame != null )  {^456^^^^^451^477^if  ( oldFrame == null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = interpreter.merge ( frame, oldFrame ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = frame.merge ( oldFrame, interpreter ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = oldFrame.merge ( interpreter, frame ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^changes = frame.merge ( frame, interpreter ) ;^460^^^^^456^461^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^frames[insn] = newFrame ( oldFrame ) ;^457^^^^^451^477^frames[insn] = newFrame ( frame ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Literal]^changes = false;^458^^^^^451^477^changes = true;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^changes = frame.merge ( frame, interpreter ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = frame.merge ( oldFrame, interpreter ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = oldFrame.merge ( interpreter, frame ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = interpreter.merge ( frame, oldFrame ) ;^460^^^^^451^477^changes = oldFrame.merge ( frame, interpreter ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldSubroutine != null )  {^463^^^^^451^477^if  ( oldSubroutine == null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( subroutine == null )  {^469^^^^^463^472^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes |= subroutine.merge ( oldSubroutine ) ;^470^^^^^463^472^changes |= oldSubroutine.merge ( subroutine ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^if  ( oldSubroutine != null )  {^464^^^^^451^477^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( subroutine == null )  {^464^^^^^451^477^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^subroutines[insn] = oldSubroutine.copy (  ) ;^465^^^^^451^477^subroutines[insn] = subroutine.copy (  ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Literal]^changes = false;^466^^^^^451^477^changes = true;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( subroutine == null )  {^469^^^^^451^477^if  ( subroutine != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes |= subroutine.merge ( oldSubroutine ) ;^470^^^^^451^477^changes |= oldSubroutine.merge ( subroutine ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( changes || !queued[insn] )  {^473^^^^^451^477^if  ( changes && !queued[insn] )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Literal]^queued[insn] = false;^474^^^^^451^477^queued[insn] = true;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^queue[top++] = nStack;^475^^^^^451^477^queue[top++] = insn;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame frame Subroutine subroutine [VARIABLES] Frame  frame  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutine  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^afterRET.merge ( oldFrame, access ) ;^490^^^^^485^506^afterRET.merge ( beforeJSR, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^afterRET.merge ( beforeJSR, queued ) ;^490^^^^^485^506^afterRET.merge ( beforeJSR, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^afterRET.merge ( access, beforeJSR ) ;^490^^^^^485^506^afterRET.merge ( beforeJSR, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^if  ( beforeJSR == null )  {^492^^^^^485^506^if  ( oldFrame == null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldFrame != null )  {^492^^^^^485^506^if  ( oldFrame == null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^changes = oldFrame.merge ( beforeJSR, access ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^changes = oldFrame.merge ( afterRET, queued ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = afterRET.merge ( oldFrame, access ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = access.merge ( afterRET, oldFrame ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^changes = beforeJSR.merge ( afterRET, access ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes = oldFrame.merge ( access, afterRET ) ;^496^^^^^485^506^changes = oldFrame.merge ( afterRET, access ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^frames[insn] = newFrame ( oldFrame ) ;^493^^^^^485^506^frames[insn] = newFrame ( afterRET ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Literal]^changes = false;^494^^^^^485^506^changes = true;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^if  ( subroutineBeforeJSR != null && oldSubroutine != null )  {^499^^^^^485^506^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldSubroutine != null || subroutineBeforeJSR != null )  {^499^^^^^485^506^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldSubroutine == null && subroutineBeforeJSR != null )  {^499^^^^^485^506^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( oldSubroutine != null && subroutineBeforeJSR == null )  {^499^^^^^485^506^if  ( oldSubroutine != null && subroutineBeforeJSR != null )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Argument_Swapping]^changes |= subroutineBeforeJSR.merge ( oldSubroutine ) ;^500^^^^^485^506^changes |= oldSubroutine.merge ( subroutineBeforeJSR ) ;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Operator]^if  ( changes || !queued[insn] )  {^502^^^^^485^506^if  ( changes && !queued[insn] )  {^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Wrong_Literal]^queued[insn] = false;^503^^^^^485^506^queued[insn] = true;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
[BugLab_Variable_Misuse]^queue[top++] = var;^504^^^^^485^506^queue[top++] = insn;^[CLASS] Analyzer  [METHOD] merge [RETURN_TYPE] void   final int insn Frame beforeJSR Frame afterRET Subroutine subroutineBeforeJSR final boolean[] access [VARIABLES] Frame  afterRET  beforeJSR  oldFrame  Interpreter  interpreter  boolean  changes  Subroutine  oldSubroutine  subroutineBeforeJSR  Frame[]  frames  int[]  queue  Subroutine[]  subroutines  boolean[]  access  queued  InsnList  insns  List[]  handlers  int  begin  call  end  i  insn  insnOpcode  insnType  j  jump  local  n  nLocals  nStack  successor  top  var  
