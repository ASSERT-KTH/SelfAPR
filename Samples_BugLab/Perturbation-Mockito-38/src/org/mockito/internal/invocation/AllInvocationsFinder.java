[BugLab_Variable_Misuse]^int comparison = o2.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] AllInvocationsFinder SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
[BugLab_Variable_Misuse]^int comparison = o1.getSequenceNumber (  ) .compareTo ( o1.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] AllInvocationsFinder SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
[BugLab_Argument_Swapping]^int comparison = o2.getSequenceNumber (  ) .compareTo ( o1.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] AllInvocationsFinder SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
[BugLab_Variable_Misuse]^int comparison = o2.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
[BugLab_Variable_Misuse]^int comparison = o1.getSequenceNumber (  ) .compareTo ( o1.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
[BugLab_Argument_Swapping]^int comparison = o2.getSequenceNumber (  ) .compareTo ( o1.getSequenceNumber (  )  ) ;^35^^^^^34^38^int comparison = o1.getSequenceNumber (  ) .compareTo ( o2.getSequenceNumber (  )  ) ;^[CLASS] SequenceNumberComparator  [METHOD] compare [RETURN_TYPE] int   Invocation o1 Invocation o2 [VARIABLES] boolean  Invocation  o1  o2  int  comparison  
