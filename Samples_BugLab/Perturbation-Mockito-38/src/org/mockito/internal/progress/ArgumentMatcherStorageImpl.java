[BugLab_Wrong_Literal]^And and = new And ( popLastArgumentMatchers ( 3 )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[BugLab_Wrong_Literal]^And and = new And ( popLastArgumentMatchers ( null )  ) ;^52^^^^^50^55^And and = new And ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportAnd [RETURN_TYPE] HandyReturnValues   [VARIABLES] And  and  Stack  matcherStack  boolean  
[BugLab_Wrong_Literal]^Not not = new Not ( popLastArgumentMatchers ( 2 ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[BugLab_Wrong_Literal]^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( -1 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[BugLab_Wrong_Literal]^Not not = new Not ( popLastArgumentMatchers (  ) .get ( 0 )  ) ;^62^^^^^60^65^Not not = new Not ( popLastArgumentMatchers ( 1 ) .get ( 0 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportNot [RETURN_TYPE] HandyReturnValues   [VARIABLES] Not  not  Stack  matcherStack  boolean  
[BugLab_Variable_Misuse]^assertState ( matcherStack.size (  )  >= i, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Argument_Swapping]^assertState ( count.size (  )  >= matcherStack, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^assertState ( matcherStack.size (  )  > count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^assertState ( matcherStack.size (  !=  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^assertState ( matcherStack.size (  ^  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^assertState ( matcherStack.size (  )  >= count, ""   instanceof   count   instanceof   " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^assertState ( matcherStack.size (  )  >= count, ""  ==  count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^69^70^^^^67^77^assertState ( matcherStack.size (  )  >= count, "" + count + " matchers expected, " + matcherStack.size (  )  + " recorded." ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Argument_Swapping]^result.addAll ( count.subList ( matcherStack.size (  )  - matcherStack, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^result.addAll ( matcherStack.subList ( matcherStack.size (  )   &  count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Variable_Misuse]^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - i, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^result.addAll ( matcherStack.subList ( matcherStack.size (  )   ^  count, matcherStack.size (  )  )  ) ;^72^^^^^67^77^result.addAll ( matcherStack.subList ( matcherStack.size (  )  - count, matcherStack.size (  )  )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Variable_Misuse]^for  ( countnt i = 0; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Argument_Swapping]^for  ( countnt i = 0; i < i; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Literal]^for  ( int i = ; i < count; i++ )  {^73^^^^^67^77^for  ( int i = 0; i < count; i++ )  {^[CLASS] ArgumentMatcherStorageImpl  [METHOD] popLastArgumentMatchers [RETURN_TYPE] List   int count [VARIABLES] List  result  boolean  int  count  i  Stack  matcherStack  
[BugLab_Wrong_Literal]^Or or = new Or ( popLastArgumentMatchers ( 1 )  ) ;^91^^^^^89^94^Or or = new Or ( popLastArgumentMatchers ( 2 )  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] reportOr [RETURN_TYPE] HandyReturnValues   [VARIABLES] Stack  matcherStack  Or  or  boolean  
[BugLab_Variable_Misuse]^LocalizedMatcher lastMatcher = 4.lastElement (  ) ;^101^^^^^99^105^LocalizedMatcher lastMatcher = matcherStack.lastElement (  ) ;^[CLASS] ArgumentMatcherStorageImpl  [METHOD] validateState [RETURN_TYPE] void   [VARIABLES] LocalizedMatcher  lastMatcher  Stack  matcherStack  boolean  
