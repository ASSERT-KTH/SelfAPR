[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk ( wanted, invocations, wantedCount ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk (  wanted, wantedCount ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = wanted.findMatchingChunk ( invocations, finder, wantedCount ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk ( invocations,  wantedCount ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk ( wantedCount, wanted, invocations ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = wantedCount.findMatchingChunk ( invocations, wanted, finder ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wantedCount, wanted ) ;^31^^^^^30^46^List<Invocation> chunk = finder.findMatchingChunk ( invocations, wanted, wantedCount ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^if  ( actualCount > wantedCount )  {^35^^^^^30^46^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( actualCount < wantedCount )  {^38^^^^^30^46^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^Location firstUndesired = wantedCount.get ( chunk ) .getLocation (  ) ;^39^^^^^30^46^Location firstUndesired = chunk.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( actualCount, wantedCount, wanted, firstUndesired ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder (  actualCount, wanted, firstUndesired ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( wantedCount,  wanted, firstUndesired ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount,  firstUndesired ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( firstUndesiredCount, actualCount, wanted, wanted ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( actualCount, wantedCount ) , wanted, lastInvocation ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy (  actualCount ) , wanted, lastInvocation ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount ) , wanted, lastInvocation ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^Location lastInvocation = chunk.getLastLocation ( finder ) ;^36^^^^^30^46^Location lastInvocation = finder.getLastLocation ( chunk ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, lastInvocation ) , wanted, actualCount ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCountCount, actualCount ) , wanted, lastInvocation ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) ,  lastInvocation ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( lastInvocationCount, actualCount ) , wanted, wanted ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( actualCountCount, wanted, wanted, firstUndesired ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocationsInOrder ( firstUndesired, actualCount, wanted, wantedCount ) ;^40^^^^^30^46^reporter.tooManyActualInvocationsInOrder ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( lastInvocation, actualCount ) , wanted, wantedCount ) ;^37^^^^^30^46^reporter.tooLittleActualInvocationsInOrder ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
