[BugLab_Argument_Swapping]^List<Invocation> chunk = invocations.findAllMatchingUnverifiedChunks ( finder, wanted ) ;^21^^^^^20^33^List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^List<Invocation> chunk = wanted.findAllMatchingUnverifiedChunks ( invocations, finder ) ;^21^^^^^20^33^List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( wanted, invocations ) ;^21^^^^^20^33^List<Invocation> chunk = finder.findAllMatchingUnverifiedChunks ( invocations, wanted ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Variable_Misuse]^if  ( actualCount > actualCount )  {^25^^^^^20^33^if  ( wantedCount > actualCount )  {^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Variable_Misuse]^if  ( wantedCount > wantedCount )  {^25^^^^^20^33^if  ( wantedCount > actualCount )  {^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^if  ( actualCount > wantedCount )  {^25^^^^^20^33^if  ( wantedCount > actualCount )  {^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^if  ( wantedCountCount > actualCount )  {^25^^^^^20^33^if  ( wantedCount > actualCount )  {^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Wrong_Operator]^if  ( wantedCount < actualCount )  {^25^^^^^20^33^if  ( wantedCount > actualCount )  {^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( actualCount, wantedCount ) , wanted, lastLocation ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^Location lastLocation = chunk.getLastLocation ( finder ) ;^26^^^^^20^33^Location lastLocation = finder.getLastLocation ( chunk ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( actualCountCount, wanted ) , wanted, lastLocation ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( lastLocationCount, actualCount ) , wanted, wanted ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Variable_Misuse]^Location lastLocation = finder.getLastLocation ( null ) ;^26^^^^^20^33^Location lastLocation = finder.getLastLocation ( chunk ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Variable_Misuse]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( actualCount, actualCount ) , wanted, lastLocation ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Variable_Misuse]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, wantedCount ) , wanted, lastLocation ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, lastLocation ) , wanted, actualCount ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCountCount, actualCount ) , wanted, lastLocation ) ;^27^^^^^20^33^reporter.tooLittleActualInvocationsInOrder ( new AtLeastDiscrepancy ( wantedCount, actualCount ) , wanted, lastLocation ) ;^[CLASS] AtLeastXNumberOfInvocationsInOrderChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  chunk  invocations  int  actualCount  wantedCount  Location  lastLocation  
