[buglab_swap_variables]^List<Invocation> actualInvocations = finder.findInvocations ( wanted, invocations ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> actualInvocations = finder.findInvocations (  wanted ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> actualInvocations = wanted.findInvocations ( invocations, finder ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> actualInvocations = finder.findInvocations ( invocations ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^List<Invocation> actualInvocations = invocations.findInvocations ( finder, wanted ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( wanted == 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( actualCount == 0 && wantedCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( actualCountCount == 0 && wanted > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( actualCount < wantedCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( actualCountCount < wanted )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( wantedCountCount < actualCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^Location firstUndesired = wantedCount.get ( actualInvocations ) .getLocation (  ) ;^41^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( actualCount, wantedCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations (  actualCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wantedCount,  wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( actualCountCount, wanted, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wantedCount, actualCount,  firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wantedCount, firstUndesired, wanted, actualCount ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wanted, actualCount, wantedCount, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^Location firstUndesired = wantedCount.get ( actualInvocations ) .getLocation (  ) ;^38^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.neverWantedButInvoked ( firstUndesired, wanted ) ;^39^^^^^30^48^reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.neverWantedButInvoked (  firstUndesired ) ;^39^^^^^30^48^reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.neverWantedButInvoked ( wanted ) ;^39^^^^^30^48^reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( firstUndesiredCount, actualCount, wanted, wanted ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( actualCount, wantedCount ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy (  actualCount ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^Location lastInvocation = actualInvocations.getLastLocation ( finder ) ;^35^^^^^30^48^Location lastInvocation = finder.getLastLocation ( actualInvocations ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) ,  lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^} else if  ( wantedCountCount == 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooManyActualInvocations ( wantedCountCount, actualCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( actualCountCount, wanted ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[buglab_swap_variables]^reporter.tooLittleActualInvocations ( new Discrepancy ( lastInvocationCount, actualCount ) , wanted, wanted ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
