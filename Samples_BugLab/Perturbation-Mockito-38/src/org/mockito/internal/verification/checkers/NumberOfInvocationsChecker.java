[BugLab_Argument_Swapping]^List<Invocation> actualInvocations = invocations.findInvocations ( finder, wanted ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^List<Invocation> actualInvocations = wanted.findInvocations ( invocations, finder ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^List<Invocation> actualInvocations = finder.findInvocations ( wanted, invocations ) ;^31^^^^^30^48^List<Invocation> actualInvocations = finder.findInvocations ( invocations, wanted ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^if  ( actualCount > actualCount )  {^34^^^^^30^48^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^if  ( wantedCount > wantedCount )  {^34^^^^^30^48^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^if  ( actualCount > wantedCount )  {^34^^^^^30^48^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^if  ( wantedCount == actualCount )  {^34^^^^^30^48^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^if  ( wantedCount >= actualCount )  {^34^^^^^30^48^if  ( wantedCount > actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^} else if  ( actualCount == 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^} else if  ( wantedCount == 0 && wantedCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^} else if  ( actualCount == 0 && wantedCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount == 0 || actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount != 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount == 0 && actualCount >= 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Literal]^} else if  ( wantedCount == -1 && actualCount > -1 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Literal]^} else if  ( wantedCount == actualCount && actualCount > actualCount )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^} else if  ( wantedCount < wantedCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^} else if  ( actualCount < wantedCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount > actualCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^Location firstUndesired = 2.get ( wantedCount ) .getLocation (  ) ;^41^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^Location firstUndesired = actualInvocations.get ( actualCount ) .getLocation (  ) ;^41^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^Location firstUndesired = wantedCount.get ( actualInvocations ) .getLocation (  ) ;^41^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, lastInvocation ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( actualCount, wantedCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( wantedCountCount, actualCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( wantedCount, firstUndesired, wanted, actualCount ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.tooManyActualInvocations ( actualCount, actualCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.tooManyActualInvocations ( wantedCount, wantedCount, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( firstUndesiredCount, actualCount, wanted, wanted ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^Location firstUndesired = actualInvocations.get ( actualCount ) .getLocation (  ) ;^38^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^Location firstUndesired = wantedCount.get ( actualInvocations ) .getLocation (  ) ;^38^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.neverWantedButInvoked ( wanted, lastInvocation ) ;^39^^^^^30^48^reporter.neverWantedButInvoked ( wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^} else if  ( actualCount < actualCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^} else if  ( wantedCountCount < actualCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount <= actualCount )  {^40^^^^^30^48^} else if  ( wantedCount < actualCount )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( firstUndesired, actualCount, wanted, wantedCount ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( actualCountCount, wanted, wanted, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^Location firstUndesired = null.get ( wantedCount ) .getLocation (  ) ;^38^^^^^30^48^Location firstUndesired = actualInvocations.get ( wantedCount ) .getLocation (  ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooManyActualInvocations ( wanted, actualCount, wantedCount, firstUndesired ) ;^42^^^^^30^48^reporter.tooManyActualInvocations ( wantedCount, actualCount, wanted, firstUndesired ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocations ( new Discrepancy ( actualCount, wantedCount ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^Location lastInvocation = actualInvocations.getLastLocation ( finder ) ;^35^^^^^30^48^Location lastInvocation = finder.getLastLocation ( actualInvocations ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^Location lastInvocation = finder.getLastLocation ( this ) ;^35^^^^^30^48^Location lastInvocation = finder.getLastLocation ( actualInvocations ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, firstUndesired ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^} else if  ( wantedCountCount == 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Operator]^} else if  ( wantedCount > 0 && actualCount > 0 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Wrong_Literal]^} else if  ( wantedCount == 1 && actualCount > 1 )  {^37^^^^^30^48^} else if  ( wantedCount == 0 && actualCount > 0 )  {^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Variable_Misuse]^reporter.tooLittleActualInvocations ( new Discrepancy ( actualCount, actualCount ) , wanted, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocations ( new Discrepancy ( wanted, actualCount ) , wantedCount, lastInvocation ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
[BugLab_Argument_Swapping]^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, lastInvocation ) , wanted, actualCount ) ;^36^^^^^30^48^reporter.tooLittleActualInvocations ( new Discrepancy ( wantedCount, actualCount ) , wanted, lastInvocation ) ;^[CLASS] NumberOfInvocationsChecker  [METHOD] check [RETURN_TYPE] void   Invocation> invocations InvocationMatcher wanted int wantedCount [VARIABLES] boolean  Invocation  i  InvocationsFinder  finder  Reporter  reporter  InvocationMatcher  wanted  List  actualInvocations  invocations  int  actualCount  wantedCount  Location  firstUndesired  lastInvocation  
