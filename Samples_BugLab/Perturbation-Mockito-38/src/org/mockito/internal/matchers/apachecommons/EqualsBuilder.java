[buglab_swap_variables]^return reflectionEquals ( rhs, lhs, false, null, null ) ;^132^^^^^131^133^return reflectionEquals ( lhs, rhs, false, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  boolean  isEquals  
[buglab_swap_variables]^return reflectionEquals (  rhs, false, null, null ) ;^132^^^^^131^133^return reflectionEquals ( lhs, rhs, false, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  boolean  isEquals  
[buglab_swap_variables]^return reflectionEquals ( lhs,  false, null, null ) ;^132^^^^^131^133^return reflectionEquals ( lhs, rhs, false, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  boolean  isEquals  
[buglab_swap_variables]^return reflectionEquals ( rhs, lhs, false, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals (  rhs, false, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals ( lhs,  false, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals ( excludeFields, rhs, false, null, lhs ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals ( lhs, rhs, false, null ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals ( lhs, excludeFields, false, null, rhs ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[buglab_swap_variables]^return reflectionEquals ( rhs, lhs, testTransients, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals (  rhs, testTransients, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs,  testTransients, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, testTransients, rhs, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, rhs,  null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( rhs, lhs, testTransients, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals (  rhs, testTransients, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, reflectUpToClass, testTransients, rhs, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs,  testTransients, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( testTransients, rhs, lhs, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, rhs,  reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( reflectUpToClass, rhs, testTransients, lhs, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, rhs, testTransients,  null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^return reflectionEquals ( lhs, rhs, reflectUpToClass, testTransients, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^239^^^^^224^254^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^242^^^^^227^257^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^if  ( lhs.isInstance ( rhs )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^if  ( rhs.isInstance ( lhsClass )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^if  ( rhsClass.isInstance ( lhs )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^} else if  ( lhs.isInstance ( rhsClass )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^} else if  ( lhsClass.isInstance ( rhs )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( rhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend (  rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, testTransients, testClass, equalsBuilder, rhs, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs,  testClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, testClass, rhs, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs,  equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( equalsBuilder, rhs, testClass, lhs, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass,  testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder,  excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, excludeFields, equalsBuilder, testTransients, testClass ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^while  ( reflectUpToClass.getSuperclass (  )  != null && testClass != testClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( testTransients, rhs, testClass, equalsBuilder, lhs, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, excludeFields, testClass, equalsBuilder, testTransients, rhs ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, testTransients, equalsBuilder, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( excludeFields, rhs, testClass, equalsBuilder, testTransients, lhs ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( excludeFields, rhs, testClass, equalsBuilder, testTransients, lhs ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend (  rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( rhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs,  testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, testClass, rhs, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs,  equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( equalsBuilder, rhs, testClass, lhs, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass,  testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, excludeFields, testTransients ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder,  excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, excludeFields, testClass, equalsBuilder, testTransients, rhs ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, equalsBuilder, testClass, rhs, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, excludeFields, testTransients ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testTransients, equalsBuilder, testClass, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^reflectionAppend ( lhs, rhs, testTransients, equalsBuilder, testClass, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[buglab_swap_variables]^builder.append ( f.get ( lhs ) .get ( rhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^builder.append ( f.get ( rhs ) , f.get ( lhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^builder.append ( lhs.get ( f ) , f.get ( rhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^builder.append ( rhs.get ( lhs ) , f.get ( f )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^for  ( int i = 0; i < fields.length.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^for  ( int i = 0; i < builderields.length && f.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^for  ( int i = 0; i < builder.isEquals.length && fields; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[buglab_swap_variables]^if  ( rhs == lhs )  {^355^^^^^340^370^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^358^^^^^343^373^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals = rhs.equals ( lhs ) ;^368^^^^^364^369^isEquals = lhs.equals ( rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals = rhs.equals ( lhs ) ;^368^^^^^353^383^isEquals = lhs.equals ( rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs instanceof java.math.BigDecimal && lhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^414^^^^^410^416^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^429^^^^^425^431^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^444^^^^^440^446^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^459^^^^^455^461^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^474^^^^^470^476^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^return append ( Double.doubleToLongBits ( rhs ) , Double.doubleToLongBits ( lhs )  ) ;^495^^^^^491^496^return append ( Double.doubleToLongBits ( lhs ) , Double.doubleToLongBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double lhs double rhs [VARIABLES] double  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^return append ( Float.floatToIntBits ( rhs ) , Float.floatToIntBits ( lhs )  ) ;^515^^^^^511^516^return append ( Float.floatToIntBits ( lhs ) , Float.floatToIntBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[buglab_swap_variables]^isEquals =  ( rhs == lhs ) ;^529^^^^^525^531^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^547^^^^^543^562^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^550^^^^^543^562^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs != lhs.length.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < lhs && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < isEquals.length && lhs; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^559^^^^^543^562^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^559^^^^^543^562^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^578^^^^^574^593^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^581^^^^^574^593^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length.length != lhs )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs != lhs.length.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^590^^^^^574^593^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^590^^^^^574^593^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^609^^^^^605^624^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^612^^^^^605^624^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( lhs.length.length != rhs.length )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^621^^^^^605^624^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^621^^^^^605^624^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^640^^^^^636^655^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^643^^^^^636^655^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^652^^^^^636^655^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^652^^^^^636^655^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^671^^^^^667^686^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^674^^^^^667^686^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs != lhs.length.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^if  ( lhs.length != rhs )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^683^^^^^667^686^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^683^^^^^667^686^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs == lhs )  {^702^^^^^698^717^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^705^^^^^698^717^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( lhs.length.length != rhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < isEquals.length && lhs; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < lhs && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^714^^^^^698^717^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^714^^^^^698^717^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^733^^^^^729^748^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^736^^^^^729^748^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs != lhs.length.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( lhs.length != rhs )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^for  ( int i = 0; i < isEquals.length && lhs; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^745^^^^^729^748^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^745^^^^^729^748^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[buglab_swap_variables]^if  ( rhs == lhs )  {^764^^^^^760^779^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^767^^^^^760^779^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs != lhs.length.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs.length.length != lhs )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^776^^^^^760^779^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^776^^^^^760^779^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs == lhs )  {^795^^^^^791^810^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs == null || lhs == null )  {^798^^^^^791^810^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs.length != lhs.length )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^if  ( rhs.length.length != lhs )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^append ( rhs[i], lhs[i] ) ;^807^^^^^791^810^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[buglab_swap_variables]^append ( lhs[i][i] ) ;^807^^^^^791^810^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
