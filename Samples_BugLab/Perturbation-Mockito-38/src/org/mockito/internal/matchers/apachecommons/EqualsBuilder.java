[BugLab_Wrong_Literal]^private boolean isEquals = false;^99^^^^^94^104^private boolean isEquals = true;^[CLASS] EqualsBuilder   [VARIABLES] 
[BugLab_Argument_Swapping]^return reflectionEquals ( rhs, lhs, false, null, null ) ;^132^^^^^131^133^return reflectionEquals ( lhs, rhs, false, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  boolean  isEquals  
[BugLab_Wrong_Literal]^return reflectionEquals ( lhs, rhs, true, null, null ) ;^132^^^^^131^133^return reflectionEquals ( lhs, rhs, false, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  boolean  isEquals  
[BugLab_Variable_Misuse]^return reflectionEquals ( rhs, rhs, false, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[BugLab_Argument_Swapping]^return reflectionEquals ( rhs, lhs, false, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[BugLab_Argument_Swapping]^return reflectionEquals ( excludeFields, rhs, false, null, lhs ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[BugLab_Wrong_Literal]^return reflectionEquals ( lhs, rhs, true, null, excludeFields ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[BugLab_Argument_Swapping]^return reflectionEquals ( lhs, excludeFields, false, null, rhs ) ;^155^^^^^154^156^return reflectionEquals ( lhs, rhs, false, null, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs String[] excludeFields [VARIABLES] Object  lhs  rhs  boolean  isEquals  String[]  excludeFields  
[BugLab_Variable_Misuse]^return reflectionEquals ( lhs, rhs, isEquals, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( rhs, lhs, testTransients, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( lhs, testTransients, rhs, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( testTransients, rhs, lhs, null, null ) ;^179^^^^^178^180^return reflectionEquals ( lhs, rhs, testTransients, null, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients [VARIABLES] Object  lhs  rhs  boolean  isEquals  testTransients  
[BugLab_Variable_Misuse]^return reflectionEquals ( rhs, rhs, testTransients, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Variable_Misuse]^return reflectionEquals ( lhs, rhs, isEquals, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( rhs, lhs, testTransients, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( lhs, rhs, reflectUpToClass, testTransients, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( reflectUpToClass, rhs, testTransients, lhs, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^return reflectionEquals ( testTransients, rhs, lhs, reflectUpToClass, null ) ;^208^^^^^207^209^return reflectionEquals ( lhs, rhs, testTransients, reflectUpToClass, null ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass [VARIABLES] Object  lhs  rhs  Class  reflectUpToClass  boolean  isEquals  testTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^239^^^^^224^254^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^if  ( lhs <= rhs )  {^239^^^^^224^254^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Literal]^return false;^240^^^^^225^255^return true;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^242^^^^^227^257^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^242^^^^^227^257^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^242^^^^^227^257^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^242^^^^^227^257^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Literal]^return true;^243^^^^^228^258^return false;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^Class rhsClass = lhs.getClass (  ) ;^249^^^^^234^264^Class lhsClass = lhs.getClass (  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^Class lhsClass = rhs.getClass (  ) ;^250^^^^^235^265^Class rhsClass = rhs.getClass (  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^if  ( testClass.isInstance ( rhs )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^if  ( lhsClass.isInstance ( lhs )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^if  ( rhs.isInstance ( lhsClass )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^if  ( rhsClass.isInstance ( lhs )  )  {^252^^^^^237^267^if  ( lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^} else if  ( testClass.isInstance ( lhs )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^} else if  ( lhsClass.isInstance ( rhs )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^} else if  ( rhsClassClass.isInstance ( lhs )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Literal]^return true;^266^^^^^258^267^return false;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^if  ( !lhsClass.isInstance ( lhs )  )  {^260^^^^^245^275^if  ( !lhsClass.isInstance ( rhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^testClass = testClass;^262^^^^^247^277^testClass = lhsClass;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^testClass = testClass;^259^^^^^244^274^testClass = rhsClass;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Literal]^return true;^266^^^^^251^281^return false;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^} else if  ( rhsClass.isInstance ( rhs )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^} else if  ( lhs.isInstance ( rhsClass )  )  {^258^^^^^243^273^} else if  ( rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^if  ( !rhsClass.isInstance ( rhs )  )  {^254^^^^^239^269^if  ( !rhsClass.isInstance ( lhs )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^testClass = testClass;^256^^^^^241^271^testClass = rhsClass;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^testClass = testClass;^253^^^^^238^268^testClass = lhsClass;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^while  ( rhsClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^while  ( testClass.getSuperclass (  )  != null && testClass != testClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^while  ( reflectUpToClass.getSuperclass (  )  != null && testClass != testClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^while  ( testClass.getSuperclass (  )  != null || testClass != reflectUpToClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^while  ( testClass.getSuperclass (  )  == null && testClass != reflectUpToClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^while  ( testClass.getSuperclass (  )  != null && testClass == reflectUpToClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^testClass = rhsClass.getSuperclass (  ) ;^272^^^^^257^287^testClass = testClass.getSuperclass (  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, rhsClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, isEquals, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( rhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, excludeFields, testClass, equalsBuilder, testTransients, rhs ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testTransients, equalsBuilder, testClass, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, equalsBuilder, testClass, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, excludeFields, testTransients ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, excludeFields, equalsBuilder, testTransients, testClass ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^while  ( testClass.getSuperclass (  )  != null && testClass != rhsClass )  {^271^^^^^256^286^while  ( testClass.getSuperclass (  )  != null && testClass != reflectUpToClass )  {^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, equalsBuilder, testClass, rhs, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testClass, testTransients, equalsBuilder, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( testTransients, rhs, testClass, equalsBuilder, lhs, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, rhsClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, isEquals, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( rhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, excludeFields, equalsBuilder, testTransients, testClass ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( equalsBuilder, rhs, testClass, lhs, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testTransients, equalsBuilder, testClass, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testClass, excludeFields, testTransients, equalsBuilder ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( testClass, rhs, lhs, equalsBuilder, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, testTransients, testClass, equalsBuilder, rhs, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( excludeFields, rhs, testClass, equalsBuilder, testTransients, lhs ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Literal]^return true;^281^^^^^266^296^return false;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( rhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Variable_Misuse]^reflectionAppend ( lhs, lhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( testTransients, rhs, testClass, equalsBuilder, lhs, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, equalsBuilder, testClass, testTransients, excludeFields ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, excludeFields, testTransients ) ;^270^^^^^255^285^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Argument_Swapping]^reflectionAppend ( equalsBuilder, rhs, testClass, lhs, testTransients, excludeFields ) ;^273^^^^^258^288^reflectionAppend ( lhs, rhs, testClass, equalsBuilder, testTransients, excludeFields ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionEquals [RETURN_TYPE] boolean   Object lhs Object rhs boolean testTransients Class reflectUpToClass String[] excludeFields [VARIABLES] Object  lhs  rhs  Class  lhsClass  reflectUpToClass  rhsClass  testClass  EqualsBuilder  equalsBuilder  boolean  isEquals  testTransients  String[]  excludeFields  IllegalArgumentException  e  
[BugLab_Wrong_Operator]^List excludedFieldList = excludeFields == null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^305^^^^^297^322^List excludedFieldList = excludeFields != null ? Arrays.asList ( excludeFields )  : Collections.EMPTY_LIST;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Literal]^AccessibleObject.setAccessible ( fields, false ) ;^306^^^^^297^322^AccessibleObject.setAccessible ( fields, true ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Variable_Misuse]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( testTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^309^310^311^312^^297^322^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) ||  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^309^310^311^312^^297^322^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  != -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^309^310^311^312^^297^322^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Operator]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients && !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^309^310^311^312^^297^322^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Literal]^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -0 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^309^310^311^312^^297^322^if  ( !excludedFieldList.contains ( f.getName (  )  ) &&  ( f.getName (  ) .indexOf ( '$' )  == -1 ) &&  ( useTransients || !Modifier.isTransient ( f.getModifiers (  )  )  ) &&  ( !Modifier.isStatic ( f.getModifiers (  )  )  )  )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( lhs.get ( f ) , f.get ( rhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( f.get ( rhs ) , f.get ( lhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Variable_Misuse]^builder.append ( f.get ( rhs ) , f.get ( rhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Variable_Misuse]^builder.append ( f.get ( lhs ) , f.get ( lhs )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^builder.append ( rhs.get ( lhs ) , f.get ( f )  ) ;^314^^^^^297^322^builder.append ( f.get ( lhs ) , f.get ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < fields.length && useTransients; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( fnt i = 0; i < iields.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < fields.length.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Argument_Swapping]^for  ( fields.lengthnt i = 0; i < i && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < fields.length || builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fields.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < fields.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Wrong_Literal]^for  ( int i = i; i < fields.length && builder.isEquals; i++ )  {^307^^^^^297^322^for  ( int i = 0; i < fields.length && builder.isEquals; i++ )  {^[CLASS] EqualsBuilder  [METHOD] reflectionAppend [RETURN_TYPE] void   Object lhs Object rhs Class clazz EqualsBuilder builder boolean useTransients String[] excludeFields [VARIABLES] Field  f  boolean  isEquals  testTransients  useTransients  Object  lhs  rhs  Class  clazz  EqualsBuilder  builder  List  excludedFieldList  String[]  excludeFields  Field[]  fields  int  i  IllegalAccessException  e  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^334^^^^^333^339^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] appendSuper [RETURN_TYPE] EqualsBuilder   boolean superEquals [VARIABLES] boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^334^^^^^333^339^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] appendSuper [RETURN_TYPE] EqualsBuilder   boolean superEquals [VARIABLES] boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^334^^^^^333^339^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] appendSuper [RETURN_TYPE] EqualsBuilder   boolean superEquals [VARIABLES] boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^isEquals = useTransients;^337^^^^^333^339^isEquals = superEquals;^[CLASS] EqualsBuilder  [METHOD] appendSuper [RETURN_TYPE] EqualsBuilder   boolean superEquals [VARIABLES] boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^352^^^^^337^367^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals <= false )  {^352^^^^^337^367^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^352^^^^^337^367^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^355^^^^^340^370^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs >= rhs )  {^355^^^^^340^370^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^358^^^^^343^373^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^358^^^^^343^373^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^358^^^^^343^373^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^358^^^^^343^373^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^359^^^^^344^374^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^Class rhsClass = lhs.getClass (  ) ;^362^^^^^347^377^Class lhsClass = lhs.getClass (  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs.getClass (  )  != rhs.getClass (  )  )  {^370^^^^^355^385^} else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( lhs.getClass (  )  != lhs.getClass (  )  )  {^370^^^^^355^385^} else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs.getClass (  )  >= rhs.getClass (  )  )  {^370^^^^^355^385^} else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  boolean[] )  {^390^^^^^375^405^} else if  ( lhs instanceof boolean[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  float[] )  {^388^^^^^373^403^} else if  ( lhs instanceof float[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^} else if  ( rhs instanceof short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <=  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  double[] )  {^386^^^^^371^401^} else if  ( lhs instanceof double[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >=  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  &&  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  byte[] )  {^384^^^^^369^399^} else if  ( lhs instanceof byte[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  char[] )  {^382^^^^^367^397^} else if  ( lhs instanceof char[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^372^^^^^357^387^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  |  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >>  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ||  int[] )  {^378^^^^^363^393^} else if  ( lhs instanceof int[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ^  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  ==  short[] )  {^380^^^^^365^395^} else if  ( lhs instanceof short[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs instanceof java.math.BigDecimal || rhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs  ==  java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs  <=  java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals = rhs.equals ( lhs ) ;^368^^^^^364^369^isEquals = lhs.equals ( rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  != 0 ) ;^365^^^^^350^380^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  <= 0 ) ;^365^^^^^350^380^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals = rhs.equals ( lhs ) ;^368^^^^^353^383^isEquals = lhs.equals ( rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( rhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs instanceof java.math.BigDecimal && lhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs instanceof java.math.BigDecimal && lhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs  >=  java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^364^^^^^349^379^if  ( lhs instanceof java.math.BigDecimal && rhs instanceof java.math.BigDecimal )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == -1 ) ;^365^^^^^350^380^isEquals =  (  (  ( java.math.BigDecimal )  lhs ) .compareTo (  ( java.math.BigDecimal )  rhs )  == 0 ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs.getClass (  )  <= rhs.getClass (  )  )  {^370^^^^^355^385^} else if  ( lhs.getClass (  )  != rhs.getClass (  )  )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  !=  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  >  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^} else if  ( lhs  <<  long[] )  {^376^^^^^361^391^} else if  ( lhs instanceof long[] )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object lhs Object rhs [VARIABLES] Object  lhs  rhs  Class  lhsClass  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^411^^^^^410^416^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals < false )  {^411^^^^^410^416^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^411^^^^^410^416^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^414^^^^^410^416^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs >= rhs ) ;^414^^^^^410^416^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long lhs long rhs [VARIABLES] long  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^426^^^^^425^431^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^426^^^^^425^431^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^426^^^^^425^431^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^429^^^^^425^431^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs >= rhs ) ;^429^^^^^425^431^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int lhs int rhs [VARIABLES] int  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^441^^^^^440^446^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^441^^^^^440^446^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^441^^^^^440^446^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^444^^^^^440^446^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs <= rhs ) ;^444^^^^^440^446^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short lhs short rhs [VARIABLES] short  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^456^^^^^455^461^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals > false )  {^456^^^^^455^461^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^456^^^^^455^461^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^459^^^^^455^461^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs != rhs ) ;^459^^^^^455^461^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char lhs char rhs [VARIABLES] char  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^471^^^^^470^476^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^471^^^^^470^476^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^471^^^^^470^476^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^474^^^^^470^476^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs != rhs ) ;^474^^^^^470^476^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte lhs byte rhs [VARIABLES] byte  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^492^^^^^491^496^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double lhs double rhs [VARIABLES] double  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^492^^^^^491^496^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double lhs double rhs [VARIABLES] double  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^return append ( Double.doubleToLongBits ( rhs ) , Double.doubleToLongBits ( lhs )  ) ;^495^^^^^491^496^return append ( Double.doubleToLongBits ( lhs ) , Double.doubleToLongBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double lhs double rhs [VARIABLES] double  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^return append ( Double.doubleToLongBits ( rhs ) , Double.doubleToLongBits ( rhs )  ) ;^495^^^^^491^496^return append ( Double.doubleToLongBits ( lhs ) , Double.doubleToLongBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double lhs double rhs [VARIABLES] double  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^512^^^^^511^516^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals <= false )  {^512^^^^^511^516^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^512^^^^^511^516^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^return append ( Float.floatToIntBits ( rhs ) , Float.floatToIntBits ( lhs )  ) ;^515^^^^^511^516^return append ( Float.floatToIntBits ( lhs ) , Float.floatToIntBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^return append ( Float.floatToIntBits ( rhs ) , Float.floatToIntBits ( rhs )  ) ;^515^^^^^511^516^return append ( Float.floatToIntBits ( lhs ) , Float.floatToIntBits ( rhs )  ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float lhs float rhs [VARIABLES] float  lhs  rhs  boolean  isEquals  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^526^^^^^525^531^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^526^^^^^525^531^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^526^^^^^525^531^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^isEquals =  ( useTransients == rhs ) ;^529^^^^^525^531^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^isEquals =  ( lhs == useTransients ) ;^529^^^^^525^531^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^isEquals =  ( rhs == lhs ) ;^529^^^^^525^531^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^isEquals =  ( lhs <= rhs ) ;^529^^^^^525^531^isEquals =  ( lhs == rhs ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean lhs boolean rhs [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^544^^^^^543^562^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^544^^^^^543^562^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^544^^^^^543^562^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^547^^^^^543^562^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs < rhs )  {^547^^^^^543^562^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^550^^^^^543^562^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^550^^^^^543^562^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^550^^^^^543^562^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^550^^^^^543^562^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^551^^^^^543^562^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs.length.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs != lhs.length.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^554^^^^^543^562^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^555^^^^^543^562^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < lhs && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^559^^^^^543^562^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^558^^^^^543^562^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   Object[] lhs Object[] rhs [VARIABLES] Object[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^575^^^^^574^593^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^575^^^^^574^593^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^575^^^^^574^593^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^578^^^^^574^593^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^578^^^^^574^593^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^581^^^^^574^593^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^581^^^^^574^593^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^581^^^^^574^593^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^581^^^^^574^593^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^582^^^^^574^593^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs != rhs.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^585^^^^^574^593^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^586^^^^^574^593^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && testTransients; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = ; i < lhs.length && isEquals; ++i )  {^589^^^^^574^593^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^590^^^^^574^593^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   long[] lhs long[] rhs [VARIABLES] long[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^606^^^^^605^624^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^606^^^^^605^624^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^606^^^^^605^624^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^609^^^^^605^624^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs <= rhs )  {^609^^^^^605^624^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^612^^^^^605^624^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^612^^^^^605^624^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^612^^^^^605^624^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^612^^^^^605^624^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^613^^^^^605^624^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length < rhs.length )  {^616^^^^^605^624^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^617^^^^^605^624^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^621^^^^^605^624^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && isEquals; ++i )  {^620^^^^^605^624^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   int[] lhs int[] rhs [VARIABLES] int[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( testTransients == false )  {^637^^^^^636^655^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^637^^^^^636^655^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^637^^^^^636^655^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^640^^^^^636^655^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs <= rhs )  {^640^^^^^636^655^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^643^^^^^636^655^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^643^^^^^636^655^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^643^^^^^636^655^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^643^^^^^636^655^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^644^^^^^636^655^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs.length.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs != lhs.length.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length <= rhs.length )  {^647^^^^^636^655^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^648^^^^^636^655^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && testTransients; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^651^^^^^636^655^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^append ( rhs[i], rhs[i] ) ;^652^^^^^636^655^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^652^^^^^636^655^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   short[] lhs short[] rhs [VARIABLES] short[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( testTransients == false )  {^668^^^^^667^686^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( isEquals <= false )  {^668^^^^^667^686^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^668^^^^^667^686^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^671^^^^^667^686^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^671^^^^^667^686^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^674^^^^^667^686^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^674^^^^^667^686^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^674^^^^^667^686^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^674^^^^^667^686^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^675^^^^^667^686^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^678^^^^^667^686^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^679^^^^^667^686^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^683^^^^^667^686^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^682^^^^^667^686^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   char[] lhs char[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  char[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^699^^^^^698^717^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^699^^^^^698^717^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^699^^^^^698^717^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^702^^^^^698^717^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs <= rhs )  {^702^^^^^698^717^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^705^^^^^698^717^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^705^^^^^698^717^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^705^^^^^698^717^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^705^^^^^698^717^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^706^^^^^698^717^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs.length.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^709^^^^^698^717^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^710^^^^^698^717^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < lhs && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^714^^^^^698^717^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && isEquals; ++i )  {^713^^^^^698^717^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   byte[] lhs byte[] rhs [VARIABLES] byte[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^730^^^^^729^748^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( isEquals <= false )  {^730^^^^^729^748^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^730^^^^^729^748^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^733^^^^^729^748^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^733^^^^^729^748^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^736^^^^^729^748^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^736^^^^^729^748^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^736^^^^^729^748^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^736^^^^^729^748^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^737^^^^^729^748^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs != lhs.length.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^if  ( lhs.length == rhs.length )  {^740^^^^^729^748^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^741^^^^^729^748^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhsnt i = 0; i < i.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < lhs.length.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^for  ( isEqualsnt i = 0; i < lhs.length && i; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Operator]^for  ( int i = 0; i > lhs.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = 1; i < lhs.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^745^^^^^729^748^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^744^^^^^729^748^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^append ( rhs[i], rhs[i] ) ;^745^^^^^729^748^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^append ( lhs[i], lhs[i] ) ;^745^^^^^729^748^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   double[] lhs double[] rhs [VARIABLES] double[]  lhs  rhs  int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^761^^^^^760^779^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( isEquals >= false )  {^761^^^^^760^779^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^761^^^^^760^779^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^764^^^^^760^779^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^764^^^^^760^779^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^767^^^^^760^779^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^767^^^^^760^779^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^767^^^^^760^779^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^767^^^^^760^779^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^768^^^^^760^779^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( rhs.length != rhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs.length.length != lhs )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs.length <= rhs.length )  {^771^^^^^760^779^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^772^^^^^760^779^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < isEquals && lhs.length; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < lhs.length && isEquals; ++i )  {^775^^^^^760^779^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^append ( rhs[i], rhs[i] ) ;^776^^^^^760^779^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^776^^^^^760^779^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   float[] lhs float[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  float[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( useTransients == false )  {^792^^^^^791^810^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( isEquals != false )  {^792^^^^^791^810^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Literal]^if  ( isEquals == true )  {^792^^^^^791^810^if  ( isEquals == false )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == lhs )  {^795^^^^^791^810^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != rhs )  {^795^^^^^791^810^if  ( lhs == rhs )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs == null || lhs == null )  {^798^^^^^791^810^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null && rhs == null )  {^798^^^^^791^810^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs != null || rhs == null )  {^798^^^^^791^810^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs == null || rhs != null )  {^798^^^^^791^810^if  ( lhs == null || rhs == null )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^799^^^^^791^810^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( lhs.length != lhs.length )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( i != rhs.length )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^if  ( lhs.length != i )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( rhs.length != lhs.length )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^if  ( lhs.length != rhs )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^if  ( lhs.length > rhs.length )  {^802^^^^^791^810^if  ( lhs.length != rhs.length )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Literal]^this.setEquals ( true ) ;^803^^^^^791^810^this.setEquals ( false ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < rhs.length && isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^for  ( int i = 0; i < lhs.length && useTransients; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^for  ( lhs.lengthnt i = 0; i < i && isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i < lhs.length || isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= lhs.length && isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Wrong_Literal]^for  ( int i = i; i < lhs.length && isEquals; ++i )  {^806^^^^^791^810^for  ( int i = 0; i < lhs.length && isEquals; ++i )  {^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Argument_Swapping]^append ( rhs[i], lhs[i] ) ;^807^^^^^791^810^append ( lhs[i], rhs[i] ) ;^[CLASS] EqualsBuilder  [METHOD] append [RETURN_TYPE] EqualsBuilder   boolean[] lhs boolean[] rhs [VARIABLES] int  i  boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  boolean[]  lhs  rhs  
[BugLab_Variable_Misuse]^return testTransients;^819^^^^^818^820^return this.isEquals;^[CLASS] EqualsBuilder  [METHOD] isEquals [RETURN_TYPE] boolean   [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
[BugLab_Variable_Misuse]^this.isEquals = useTransients;^829^^^^^828^830^this.isEquals = isEquals;^[CLASS] EqualsBuilder  [METHOD] setEquals [RETURN_TYPE] void   boolean isEquals [VARIABLES] boolean  isEquals  lhs  rhs  superEquals  testTransients  useTransients  
