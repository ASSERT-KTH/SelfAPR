[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  ||  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  <<  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )   instanceof   + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  ==  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  <=  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  &&  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  !=  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  |  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Wrong_Operator]^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  ^  + ", hashCode: " + mock.hashCode (  ) ;^60^^^^^55^68^return "Mock for " + ClassNameFinder.classNameForMock ( mock )  + ", hashCode: " + mock.hashCode (  ) ;^[CLASS] ReturnsEmptyValues  [METHOD] answer [RETURN_TYPE] Object   InvocationOnMock invocation [VARIABLES] MockName  name  boolean  InvocationOnMock  invocation  Object  mock  Class  returnType  
[BugLab_Variable_Misuse]^} else if  ( type == Collection.type )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= Collection.class )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != Collection.class )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= Collection.class )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == Set.type )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == HashSet.type )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == SortedSet.type )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == TreeSet.type )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == LinkedHashSet.type )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == List.type )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == LinkedList.type )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == ArrayList.type )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == Map.type )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == HashMap.type )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == SortedMap.type )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( type == TreeMap.type )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type <= LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type >= LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == LinkedHashMap.class )  {^103^^^^^88^118^} else if  ( type == LinkedHashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == TreeMap.class )  {^101^^^^^86^116^} else if  ( type == TreeMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == SortedMap.class )  {^99^^^^^84^114^} else if  ( type == SortedMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == HashMap.class )  {^97^^^^^82^112^} else if  ( type == HashMap.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == TreeSet.class )  {^85^^^^^70^100^} else if  ( type == TreeSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == ArrayList.class )  {^93^^^^^78^108^} else if  ( type == ArrayList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == Map.class )  {^95^^^^^80^110^} else if  ( type == Map.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == LinkedList.class )  {^91^^^^^76^106^} else if  ( type == LinkedList.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 3 == LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type > Collection.class )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < Collection.class )  {^77^^^^^62^92^} else if  ( type == Collection.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type < HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 0 == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == SortedSet.class )  {^83^^^^^68^98^} else if  ( type == SortedSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^return primitiveOf ( 2 ) ;^72^^^^^57^87^return primitiveOf ( type ) ;^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( null == HashSet.class )  {^81^^^^^66^96^} else if  ( type == HashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 4 == LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( this == Set.class )  {^79^^^^^64^94^} else if  ( type == Set.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 2 == LinkedHashSet.class )  {^87^^^^^72^102^} else if  ( type == LinkedHashSet.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^} else if  ( 1 == List.class )  {^89^^^^^74^104^} else if  ( type == List.class )  {^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Variable_Misuse]^return Primitives.primitiveWrapperOf ( this ) ;^74^^^^^59^89^return Primitives.primitiveWrapperOf ( type ) ;^[CLASS] ReturnsEmptyValues  [METHOD] returnValueFor [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^if  ( type >= Boolean.TYPE )  {^111^^^^^110^118^if  ( type == Boolean.TYPE )  {^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^if  ( type > Boolean.TYPE )  {^111^^^^^110^118^if  ( type == Boolean.TYPE )  {^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Operator]^} else if  ( type != Character.TYPE )  {^113^^^^^110^118^} else if  ( type == Character.TYPE )  {^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Literal]^return 3;^116^^^^^110^118^return 0;^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Literal]^return true;^112^^^^^110^118^return false;^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Literal]^return -1;^116^^^^^110^118^return 0;^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
[BugLab_Wrong_Literal]^return 1;^116^^^^^110^118^return 0;^[CLASS] ReturnsEmptyValues  [METHOD] primitiveOf [RETURN_TYPE] Object   Class<?> type [VARIABLES] boolean  Class  type  
