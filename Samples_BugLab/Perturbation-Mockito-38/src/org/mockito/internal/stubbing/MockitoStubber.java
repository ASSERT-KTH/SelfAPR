[buglab_swap_variables]^answersValidator.validate ( invocation, answer ) ;^46^^^^^42^53^answersValidator.validate ( answer, invocation ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^answersValidator.validate (  invocation ) ;^46^^^^^42^53^answersValidator.validate ( answer, invocation ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^answersValidator.validate ( answer ) ;^46^^^^^42^53^answersValidator.validate ( answer, invocation ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^stubbed.addFirst ( new StubbedInvocationMatcher ( answer, invocationForStubbing )  ) ;^51^^^^^42^53^stubbed.addFirst ( new StubbedInvocationMatcher ( invocationForStubbing, answer )  ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^stubbed.addFirst ( new StubbedInvocationMatcher ( invocationForStubbing )  ) ;^51^^^^^42^53^stubbed.addFirst ( new StubbedInvocationMatcher ( invocationForStubbing, answer )  ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^stubbed.addFirst ( new StubbedInvocationMatcher (  answer )  ) ;^51^^^^^42^53^stubbed.addFirst ( new StubbedInvocationMatcher ( invocationForStubbing, answer )  ) ;^[CLASS] MockitoStubber  [METHOD] addAnswer [RETURN_TYPE] void   Answer answer boolean isConsecutive [VARIABLES] Answer  answer  boolean  isConsecutive  Invocation  invocation  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  AnswersValidator  answersValidator  
[buglab_swap_variables]^if  ( invocation.matches ( s )  )  {^61^^^^^59^67^if  ( s.matches ( invocation )  )  {^[CLASS] MockitoStubber  [METHOD] findAnswerFor [RETURN_TYPE] Answer   Invocation invocation [VARIABLES] boolean  Invocation  invocation  StubbedInvocationMatcher  s  InvocationMatcher  invocation  invocationForStubbing  List  answersForStubbing  MockingProgress  mockingProgress  LinkedList  stubbed  
[buglab_swap_variables]^for  ( answersForStubbingnt i = 0; i < i.size (  ) ; i++ )  {^84^^^^^81^88^for  ( int i = 0; i < answersForStubbing.size (  ) ; i++ )  {^[CLASS] MockitoStubber  [METHOD] setMethodForStubbing [RETURN_TYPE] void   InvocationMatcher invocation [VARIABLES] InvocationMatcher  invocation  invocationForStubbing  List  answers  answersForStubbing  boolean  MockingProgress  mockingProgress  LinkedList  stubbed  int  i  
[buglab_swap_variables]^addAnswer ( i.get ( answersForStubbing ) , i != 0 ) ;^85^^^^^81^88^addAnswer ( answersForStubbing.get ( i ) , i != 0 ) ;^[CLASS] MockitoStubber  [METHOD] setMethodForStubbing [RETURN_TYPE] void   InvocationMatcher invocation [VARIABLES] InvocationMatcher  invocation  invocationForStubbing  List  answers  answersForStubbing  boolean  MockingProgress  mockingProgress  LinkedList  stubbed  int  i  
[buglab_swap_variables]^addAnswer ( answersForStubbing.get ( i )  != 0 ) ;^85^^^^^81^88^addAnswer ( answersForStubbing.get ( i ) , i != 0 ) ;^[CLASS] MockitoStubber  [METHOD] setMethodForStubbing [RETURN_TYPE] void   InvocationMatcher invocation [VARIABLES] InvocationMatcher  invocation  invocationForStubbing  List  answers  answersForStubbing  boolean  MockingProgress  mockingProgress  LinkedList  stubbed  int  i  
