[buglab_swap_variables]^copyValues ( mock, from, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^copyValues (  mock, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^copyValues ( from,  clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^copyValues ( from, clazz, mock ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^copyValues ( from, mock ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^copyValues ( clazz, mock, from ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[buglab_swap_variables]^for  ( fields.lengthnt i = 0; i < i; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < field.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < fields.lengths.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue ( field, mock, from ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue (  mock, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue ( mock, from, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue ( from,  field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue ( from, mock ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[buglab_swap_variables]^fieldCopier.copyValue ( from, field, mock ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
