[BugLab_Variable_Misuse]^Class clazz = mock.getClass (  ) ;^16^^^^^15^25^Class clazz = from.getClass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Variable_Misuse]^Class fromSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^17^^^^^15^25^Class mockSuperClass = mock.getClass (  ) .getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Variable_Misuse]^while  ( mockSuperClass != Object.class )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Variable_Misuse]^while  ( clazz != Object.mockSuperClass )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Wrong_Operator]^while  ( clazz == Object.class )  {^21^^^^^15^25^while  ( clazz != Object.class )  {^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Variable_Misuse]^clazz = mockSuperClass.getSuperclass (  ) ;^23^^^^^15^25^clazz = clazz.getSuperclass (  ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Variable_Misuse]^copyValues ( from, mock, mockSuperClass ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Argument_Swapping]^copyValues ( mock, from, clazz ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Argument_Swapping]^copyValues ( from, clazz, mock ) ;^22^^^^^15^25^copyValues ( from, mock, clazz ) ;^[CLASS] LenientCopyTool  [METHOD] copyToMock [RETURN_TYPE] <T>   T from T mock [VARIABLES] Class  clazz  mockSuperClass  boolean  T  from  mock  FieldCopier  fieldCopier  
[BugLab_Argument_Swapping]^for  ( fields.lengthnt i = 0; i < i; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < field.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Argument_Swapping]^for  ( fieldnt i = 0; i < is.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Variable_Misuse]^fieldCopier.copyValue ( from, from, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Argument_Swapping]^fieldCopier.copyValue ( mock, from, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Argument_Swapping]^fieldCopier.copyValue ( from, field, mock ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Variable_Misuse]^fieldCopier.copyValue ( mock, mock, field ) ;^39^^^^^27^46^fieldCopier.copyValue ( from, mock, field ) ;^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
[BugLab_Wrong_Literal]^for  ( int i = -1; i < fields.length; i++ )  {^30^^^^^27^46^for  ( int i = 0; i < fields.length; i++ )  {^[CLASS] LenientCopyTool  [METHOD] copyValues [RETURN_TYPE] <T>   T from T mock Class classFrom [VARIABLES] Field  field  boolean  T  from  mock  FieldCopier  fieldCopier  AccessibilityChanger  accessibilityChanger  Throwable  t  Class  classFrom  Field[]  fields  int  i  
