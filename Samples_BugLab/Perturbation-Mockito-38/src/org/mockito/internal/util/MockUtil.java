[BugLab_Variable_Misuse]^creationValidator.validateType ( this ) ;^32^^^^^31^49^creationValidator.validateType ( classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^creationValidator.validateExtraInterfaces ( settings, classToMock.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^MockName mockName = new MockName ( classToMock.getMockName (  ) , settings ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^MockHandler<T> mockHandler = new MockHandler<T> ( settings, progress, new MatchersBinder (  ) , mockName ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, settings, new MatchersBinder (  ) , progress ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^MockHandler<T> mockHandler = new MockHandler<T> ( progress, mockName, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( mockHandler, classToMock ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Wrong_Operator]^Class<?>[] ancillaryTypes = interfaces != null ? new Class<?>[0] : interfaces;^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Wrong_Literal]^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[-1] : interfaces;^39^^^^^31^49^Class<?>[] ancillaryTypes = interfaces == null ? new Class<?>[0] : interfaces;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^T mock = ClassImposterizer.INSTANCE.imposterise ( classToMock, filter, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, ancillaryTypes, classToMock ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Wrong_Operator]^if  ( spiedInstance == null )  {^44^^^^^31^49^if  ( spiedInstance != null )  {^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Argument_Swapping]^new LenientCopyTool (  ) .copyToMock ( mock, spiedInstance ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[BugLab_Wrong_Operator]^if  ( mock != null )  {^59^^^^^58^68^if  ( mock == null )  {^[CLASS] MockUtil  [METHOD] getMockHandler [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[BugLab_Wrong_Operator]^return Enhancer.isEnhanced ( mock.getClass (  )  )  || getInterceptor ( mock )  != null;^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[BugLab_Wrong_Operator]^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  == null;^71^^^^^70^72^return Enhancer.isEnhanced ( mock.getClass (  )  )  && getInterceptor ( mock )  != null;^[CLASS] MockUtil  [METHOD] isMockitoMock [RETURN_TYPE] <T>   T mock [VARIABLES] T  mock  CreationValidator  creationValidator  boolean  
[BugLab_Wrong_Operator]^return mock != null || isMockitoMock ( mock ) ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[BugLab_Wrong_Operator]^return mock == null && isMockitoMock ( mock ) ;^75^^^^^74^76^return mock != null && isMockitoMock ( mock ) ;^[CLASS] MockUtil  [METHOD] isMock [RETURN_TYPE] boolean   Object mock [VARIABLES] Object  mock  CreationValidator  creationValidator  boolean  
[BugLab_Wrong_Literal]^Callback callback = factory.getCallback ( -1 ) ;^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[BugLab_Wrong_Literal]^Callback callback = factory.getCallback ( 1 ) ;^81^^^^^79^86^Callback callback = factory.getCallback ( 0 ) ;^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
[BugLab_Wrong_Operator]^if  ( callback  |  MethodInterceptorFilter )  {^82^^^^^79^86^if  ( callback instanceof MethodInterceptorFilter )  {^[CLASS] MockUtil  [METHOD] getInterceptor [RETURN_TYPE] <T>   T mock [VARIABLES] Factory  factory  Callback  callback  boolean  T  mock  CreationValidator  creationValidator  
