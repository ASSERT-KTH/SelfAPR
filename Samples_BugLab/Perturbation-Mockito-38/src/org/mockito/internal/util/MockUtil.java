[buglab_swap_variables]^creationValidator.validateExtraInterfaces ( settings, classToMock.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^creationValidator.validateExtraInterfaces (  settings.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^creationValidator.validateExtraInterfaces ( classToMock.getExtraInterfaces (  )  ) ;^33^^^^^31^49^creationValidator.validateExtraInterfaces ( classToMock, settings.getExtraInterfaces (  )  ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockName mockName = new MockName ( classToMock.getMockName (  ) , settings ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockName mockName = new MockName ( settings.getMockName (  )  ) ;^35^^^^^31^49^MockName mockName = new MockName ( settings.getMockName (  ) , classToMock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> ( settings, progress, new MatchersBinder (  ) , mockName ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> (  progress, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> ( progress, mockName, new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName,  new MatchersBinder (  ) , settings ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  )  ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, settings, new MatchersBinder (  ) , progress ) ;^36^^^^^31^49^MockHandler<T> mockHandler = new MockHandler<T> ( mockName, progress, new MatchersBinder (  ) , settings ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( mockHandler, classToMock ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> (  mockHandler ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock ) ;^37^^^^^31^49^MethodInterceptorFilter<MockHandler<T>> filter = new MethodInterceptorFilter<MockHandler<T>> ( classToMock, mockHandler ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise ( classToMock, filter, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise (  classToMock, ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, ancillaryTypes, classToMock ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter,  ancillaryTypes ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise ( ancillaryTypes, classToMock, filter ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock ) ;^42^^^^^31^49^T mock = ClassImposterizer.INSTANCE.imposterise ( filter, classToMock, ancillaryTypes ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^new LenientCopyTool (  ) .copyToMock ( mock, spiedInstance ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^new LenientCopyTool (  ) .copyToMock (  mock ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^new LenientCopyTool (  ) .copyToMock ( spiedInstance ) ;^45^^^^^31^49^new LenientCopyTool (  ) .copyToMock ( spiedInstance, mock ) ;^[CLASS] MockUtil  [METHOD] createMock [RETURN_TYPE] <T>   Class<T> classToMock MockingProgress progress MockSettingsImpl settings [VARIABLES] MockName  mockName  Class[]  ancillaryTypes  interfaces  boolean  T  mock  MockSettingsImpl  settings  CreationValidator  creationValidator  Class  classToMock  MockHandler  mockHandler  Object  spiedInstance  MockingProgress  progress  MethodInterceptorFilter  filter  
[buglab_swap_variables]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[buglab_swap_variables]^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object. newMockHandler ) ;^54^^^^^51^56^MethodInterceptorFilter<MockHandler<T>> newFilter = new MethodInterceptorFilter<MockHandler<T>> ( Object.class, newMockHandler ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
[buglab_swap_variables]^(  ( Factory )  mock ) .setCallback ( 0 ) ;^55^^^^^51^56^(  ( Factory )  mock ) .setCallback ( 0, newFilter ) ;^[CLASS] MockUtil  [METHOD] resetMock [RETURN_TYPE] <T>   T mock MockingProgress progress [VARIABLES] MockHandler  newMockHandler  oldMockHandler  boolean  T  mock  MockingProgress  progress  CreationValidator  creationValidator  MethodInterceptorFilter  newFilter  
