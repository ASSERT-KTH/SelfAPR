[buglab_swap_variables]^return  ( fromOrgMockito || fromMockObject )  && !isRunner && !isInternalRunner;^19^^^^^14^20^return  ( fromMockObject || fromOrgMockito )  && !isRunner && !isInternalRunner;^[CLASS] StackTraceFilter  [METHOD] isBad [RETURN_TYPE] boolean   StackTraceElement e [VARIABLES] boolean  fromMockObject  fromOrgMockito  isInternalRunner  isRunner  StackTraceElement  e  
[buglab_swap_variables]^if  ( !this.isBad ( i.get ( unfilteredStackTrace )  )  )  {^34^^^^^27^54^if  ( !this.isBad ( unfilteredStackTrace.get ( i )  )  )  {^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
[buglab_swap_variables]^if  ( firstBad && keepTop != -1 )  {^44^^^^^27^54^if  ( keepTop && firstBad != -1 )  {^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
[buglab_swap_variables]^top = firstBad.subList ( 0, unfilteredStackTrace ) ;^45^^^^^27^54^top = unfilteredStackTrace.subList ( 0, firstBad ) ;^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
[buglab_swap_variables]^top = unfilteredStackTrace.subList ( 0 ) ;^45^^^^^27^54^top = unfilteredStackTrace.subList ( 0, firstBad ) ;^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
[buglab_swap_variables]^List<StackTraceElement> bottom = lastBad.subList ( unfilteredStackTrace + 1, unfilteredStackTrace.size (  )  ) ;^50^^^^^27^54^List<StackTraceElement> bottom = unfilteredStackTrace.subList ( lastBad + 1, unfilteredStackTrace.size (  )  ) ;^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
[buglab_swap_variables]^List<StackTraceElement> bottom = unfilteredStackTrace.subList ( lastBad + 1.size (  )  ) ;^50^^^^^27^54^List<StackTraceElement> bottom = unfilteredStackTrace.subList ( lastBad + 1, unfilteredStackTrace.size (  )  ) ;^[CLASS] StackTraceFilter  [METHOD] filter [RETURN_TYPE] StackTraceElement[]   StackTraceElement[] target boolean keepTop [VARIABLES] boolean  keepTop  StackTraceElement[]  target  List  bottom  filtered  top  unfilteredStackTrace  int  firstBad  i  lastBad  
