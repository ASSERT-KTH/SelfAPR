[buglab_swap_variables]^for  ( int i = chars.length.length - 1; i >= 0; i-- )  {^60^^^^^58^63^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] TokenQueue  [METHOD] addFirst [RETURN_TYPE] void   String seq [VARIABLES] String  seq  boolean  LinkedList  queue  int  i  char[]  chars  
[buglab_swap_variables]^for  ( chars.lengthnt i = i - 1; i >= 0; i-- )  {^60^^^^^58^63^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] TokenQueue  [METHOD] addFirst [RETURN_TYPE] void   String seq [VARIABLES] String  seq  boolean  LinkedList  queue  int  i  char[]  chars  
[buglab_swap_variables]^for  ( int i = chars - 1; i >= 0; i-- )  {^60^^^^^58^63^for  ( int i = chars.length - 1; i >= 0; i-- )  {^[CLASS] TokenQueue  [METHOD] addFirst [RETURN_TYPE] void   String seq [VARIABLES] String  seq  boolean  LinkedList  queue  int  i  char[]  chars  
[buglab_swap_variables]^if  ( queue > len.size (  )  ) return false;^72^73^^^^70^83^if  ( len > queue.size (  )  ) return false;^[CLASS] TokenQueue  [METHOD] matches [RETURN_TYPE] boolean   String seq [VARIABLES] boolean  Character  check  found  List  chars  String  seq  LinkedList  queue  int  i  len  char[]  seqChars  
[buglab_swap_variables]^List<Character> chars = len.subList ( 0, queue ) ;^74^^^^^70^83^List<Character> chars = queue.subList ( 0, len ) ;^[CLASS] TokenQueue  [METHOD] matches [RETURN_TYPE] boolean   String seq [VARIABLES] boolean  Character  check  found  List  chars  String  seq  LinkedList  queue  int  i  len  char[]  seqChars  
[buglab_swap_variables]^List<Character> chars = queue.subList ( 0 ) ;^74^^^^^70^83^List<Character> chars = queue.subList ( 0, len ) ;^[CLASS] TokenQueue  [METHOD] matches [RETURN_TYPE] boolean   String seq [VARIABLES] boolean  Character  check  found  List  chars  String  seq  LinkedList  queue  int  i  len  char[]  seqChars  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^76^^^^^70^83^for  ( int i = 0; i < len; i++ )  {^[CLASS] TokenQueue  [METHOD] matches [RETURN_TYPE] boolean   String seq [VARIABLES] boolean  Character  check  found  List  chars  String  seq  LinkedList  queue  int  i  len  char[]  seqChars  
[buglab_swap_variables]^Character found = Character.toLowerCase ( i.get ( chars )  ) ;^77^^^^^70^83^Character found = Character.toLowerCase ( chars.get ( i )  ) ;^[CLASS] TokenQueue  [METHOD] matches [RETURN_TYPE] boolean   String seq [VARIABLES] boolean  Character  check  found  List  chars  String  seq  LinkedList  queue  int  i  len  char[]  seqChars  
[buglab_swap_variables]^if  ( queue > len.size (  )  ) throw new IllegalStateException  (" ")  ;^148^149^^^^144^153^if  ( len > queue.size (  )  ) throw new IllegalStateException  (" ")  ;^[CLASS] TokenQueue  [METHOD] consume [RETURN_TYPE] void   String seq [VARIABLES] String  seq  boolean  LinkedList  queue  int  i  len  
[buglab_swap_variables]^for  ( lennt i = 0; i < i; i++ )  {^150^^^^^144^153^for  ( int i = 0; i < len; i++ )  {^[CLASS] TokenQueue  [METHOD] consume [RETURN_TYPE] void   String seq [VARIABLES] String  seq  boolean  LinkedList  queue  int  i  len  
[buglab_swap_variables]^while  ( !queue.isEmpty (  )  && !matchesAny ( accum )  ) seq.append ( consume (  )  ) ;^171^172^^^^169^175^while  ( !queue.isEmpty (  )  && !matchesAny ( seq )  ) accum.append ( consume (  )  ) ;^[CLASS] TokenQueue  [METHOD] consumeToAny [RETURN_TYPE] String    seq [VARIABLES] String[]  seq  boolean  StringBuilder  accum  LinkedList  queue  
