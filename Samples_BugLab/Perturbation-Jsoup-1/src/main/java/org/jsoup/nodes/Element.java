[BugLab_Argument_Swapping]^super ( attributes, baseUri ) ;^35^^^^^34^39^super ( baseUri, attributes ) ;^[CLASS] Element  [METHOD] <init> [RETURN_TYPE] Attributes)   Tag tag String baseUri Attributes attributes [VARIABLES] Attributes  attributes  Set  classNames  Tag  tag  String  baseUri  boolean  
[BugLab_Argument_Swapping]^this ( baseUri, tag, new Attributes (  )  ) ;^50^^^^^49^51^this ( tag, baseUri, new Attributes (  )  ) ;^[CLASS] Element  [METHOD] <init> [RETURN_TYPE] String)   Tag tag String baseUri [VARIABLES] Set  classNames  Tag  tag  String  baseUri  boolean  
[BugLab_Wrong_Operator]^return id != null ? "" : id;^93^^^^^91^94^return id == null ? "" : id;^[CLASS] Element  [METHOD] id [RETURN_TYPE] String   [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  
[BugLab_Argument_Swapping]^if  ( elements instanceof Element ) node.add (  ( Element )  node ) ;^138^139^^^^134^142^if  ( node instanceof Element ) elements.add (  ( Element )  node ) ;^[CLASS] Element  [METHOD] children [RETURN_TYPE] Elements   [VARIABLES] List  elements  Set  classNames  Tag  tag  boolean  Node  node  
[BugLab_Wrong_Operator]^if  ( node  ==  Element ) elements.add (  ( Element )  node ) ;^138^139^^^^134^142^if  ( node instanceof Element ) elements.add (  ( Element )  node ) ;^[CLASS] Element  [METHOD] children [RETURN_TYPE] Elements   [VARIABLES] List  elements  Set  classNames  Tag  tag  boolean  Node  node  
[BugLab_Argument_Swapping]^Element fragment = Parser.parseBodyFragment ( baseUri, html ) .body (  ) ;^252^^^^^249^259^Element fragment = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] append [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  Tag  tag  String  html  boolean  Element  fragment  Node  node  
[BugLab_Variable_Misuse]^Element fragment = Parser.parseBodyFragment ( html, fragment ) .body (  ) ;^252^^^^^249^259^Element fragment = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] append [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  Tag  tag  String  html  boolean  Element  fragment  Node  node  
[BugLab_Argument_Swapping]^Element fragment = Parser.parseBodyFragment ( baseUri, html ) .body (  ) ;^270^^^^^267^279^Element fragment = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Variable_Misuse]^Element fragment = Parser.parseBodyFragment ( html, fragment ) .body (  ) ;^270^^^^^267^279^Element fragment = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Argument_Swapping]^for  ( nodesnt i = i.size (  )  - 1; i >= 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Argument_Swapping]^for  ( int i = nodess.size (  )  - 1; i >= 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Wrong_Operator]^for  ( int i = nodes.size (  )   >=  1; i >= 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Wrong_Operator]^for  ( int i = nodes.size (  )  - 1; i > 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Wrong_Literal]^for  ( int i = nodes.size (  )  ; i >= 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Wrong_Literal]^for  ( int i = nodes.size (  )  - 1; i >= i; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Argument_Swapping]^Node node = i.get ( nodes ) ;^274^^^^^267^279^Node node = nodes.get ( i ) ;^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Wrong_Operator]^for  ( int i = nodes.size (  )   &&  1; i >= 0; i-- )  {^273^^^^^267^279^for  ( int i = nodes.size (  )  - 1; i >= 0; i-- )  {^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Variable_Misuse]^Node node = this.get ( i ) ;^274^^^^^267^279^Node node = nodes.get ( i ) ;^[CLASS] Element  [METHOD] prepend [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  fragment  Node  node  List  nodes  Tag  tag  String  html  int  i  
[BugLab_Variable_Misuse]^Element wrapBody = Parser.parseBodyFragment ( html, wrap ) .body (  ) ;^298^^^^^295^317^Element wrapBody = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Argument_Swapping]^Element wrapBody = Parser.parseBodyFragment ( baseUri, html ) .body (  ) ;^298^^^^^295^317^Element wrapBody = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^Element wrapBody = Parser.parseBodyFragment ( html, wrapBody ) .body (  ) ;^298^^^^^295^317^Element wrapBody = Parser.parseBodyFragment ( html, baseUri ) .body (  ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^Elements wrapChildren = wrap.children (  ) ;^299^^^^^295^317^Elements wrapChildren = wrapBody.children (  ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^if  ( wrapBody == null ) return null;^301^302^^^^295^317^if  ( wrap == null ) return null;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Operator]^if  ( wrap != null ) return null;^301^302^^^^295^317^if  ( wrap == null ) return null;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^Element deepest = getDeepChild ( wrapBody ) ;^304^^^^^295^317^Element deepest = getDeepChild ( wrap ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^parentNode.replaceChild ( this, wrapBody ) ;^305^^^^^295^317^parentNode.replaceChild ( this, wrap ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Operator]^if  ( wrapChildren.size (  )  >= 1 )  {^309^^^^^295^317^if  ( wrapChildren.size (  )  > 1 )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Literal]^if  ( wrapChildren.size (  )  > i )  {^309^^^^^295^317^if  ( wrapChildren.size (  )  > 1 )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Literal]^if  ( wrapChildren.size (  )  >  )  {^309^^^^^295^317^if  ( wrapChildren.size (  )  > 1 )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i <= wrapChildren.size (  ) ; i++ )  {^310^^^^^295^317^for  ( int i = 1; i < wrapChildren.size (  ) ; i++ )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < wrapChildren.size (  ) ; i++ )  {^310^^^^^295^317^for  ( int i = 1; i < wrapChildren.size (  ) ; i++ )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Argument_Swapping]^Element remainder = i.get ( wrapChildren ) ;^311^^^^^295^317^Element remainder = wrapChildren.get ( i ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Variable_Misuse]^wrap.appendChild ( wrapBody ) ;^313^^^^^295^317^wrap.appendChild ( remainder ) ;^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i > wrapChildren.size (  ) ; i++ )  {^310^^^^^295^317^for  ( int i = 1; i < wrapChildren.size (  ) ; i++ )  {^[CLASS] Element  [METHOD] wrap [RETURN_TYPE] Element   String html [VARIABLES] Set  classNames  boolean  Element  deepest  remainder  wrap  wrapBody  Tag  tag  String  html  Elements  wrapChildren  int  i  
[BugLab_Wrong_Operator]^if  ( children.size (  )  >= 0 ) return getDeepChild ( children.get ( 0 )  ) ;^321^322^^^^319^325^if  ( children.size (  )  > 0 ) return getDeepChild ( children.get ( 0 )  ) ;^[CLASS] Element  [METHOD] getDeepChild [RETURN_TYPE] Element   Element el [VARIABLES] List  children  Set  classNames  Tag  tag  boolean  Element  el  
[BugLab_Wrong_Literal]^return getDeepChild ( children.get ( 1 )  ) ;^322^^^^^319^325^return getDeepChild ( children.get ( 0 )  ) ;^[CLASS] Element  [METHOD] getDeepChild [RETURN_TYPE] Element   Element el [VARIABLES] List  children  Set  classNames  Tag  tag  boolean  Element  el  
[BugLab_Wrong_Literal]^return getDeepChild ( children.get ( -1 )  ) ;^322^^^^^319^325^return getDeepChild ( children.get ( 0 )  ) ;^[CLASS] Element  [METHOD] getDeepChild [RETURN_TYPE] Element   Element el [VARIABLES] List  children  Set  classNames  Tag  tag  boolean  Element  el  
[BugLab_Argument_Swapping]^if  ( index.size (  )  > siblings+1 ) return siblings.get ( index+1 ) ;^347^348^^^^343^351^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  ( siblings.size (  )  >= index+1 ) return siblings.get ( index+1 ) ;^347^348^^^^343^351^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  ==  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^347^348^^^^343^351^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  >=  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^347^348^^^^343^351^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^if  ( siblings.size (  )  > index+2 ) return siblings.get ( index+2 ) ;^347^348^^^^343^351^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Argument_Swapping]^return index.get ( siblings+1 ) ;^348^^^^^343^351^return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^return siblings.get ( index+2 ) ;^348^^^^^343^351^return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Variable_Misuse]^return 0.get ( index+1 ) ;^348^^^^^343^351^return siblings.get ( index+1 ) ;^[CLASS] Element  [METHOD] nextElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Argument_Swapping]^if  ( siblings > 0 ) return index.get ( index-1 ) ;^362^363^^^^358^366^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Element  [METHOD] previousElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  ( index < 0 ) return siblings.get ( index-1 ) ;^362^363^^^^358^366^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Element  [METHOD] previousElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Argument_Swapping]^return index.get ( siblings-1 ) ;^363^^^^^358^366^return siblings.get ( index-1 ) ;^[CLASS] Element  [METHOD] previousElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^return siblings.get ( index-0 ) ;^363^^^^^358^366^return siblings.get ( index-1 ) ;^[CLASS] Element  [METHOD] previousElementSibling [RETURN_TYPE] Element   [VARIABLES] Integer  index  List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return siblings.size (  )  == 1 ? siblings.get ( 0 )  : null;^375^^^^^372^376^return siblings.size (  )  > 1 ? siblings.get ( 0 )  : null;^[CLASS] Element  [METHOD] firstElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^return siblings.size (  )  > 1 ? siblings.get ( -1 )  : null;^375^^^^^372^376^return siblings.size (  )  > 1 ? siblings.get ( 0 )  : null;^[CLASS] Element  [METHOD] firstElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  ( parent (  )  != null )  return 0;^384^^^^^383^386^if  ( parent (  )  == null )  return 0;^[CLASS] Element  [METHOD] elementSiblingIndex [RETURN_TYPE] Integer   [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^if  ( parent (  )  == null )  return 1;^384^^^^^383^386^if  ( parent (  )  == null )  return 0;^[CLASS] Element  [METHOD] elementSiblingIndex [RETURN_TYPE] Integer   [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return siblings.size (  )  >= 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^394^^^^^392^395^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^[CLASS] Element  [METHOD] lastElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )   <<  1 )  : null;^394^^^^^392^395^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^[CLASS] Element  [METHOD] lastElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )   )  : null;^394^^^^^392^395^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^[CLASS] Element  [METHOD] lastElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Literal]^return siblings.size (  )  >  ? siblings.get ( siblings.size (  )  -  )  : null;^394^^^^^392^395^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^[CLASS] Element  [METHOD] lastElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )   ||  1 )  : null;^394^^^^^392^395^return siblings.size (  )  > 1 ? siblings.get ( siblings.size (  )  - 1 )  : null;^[CLASS] Element  [METHOD] lastElementSibling [RETURN_TYPE] Element   [VARIABLES] List  siblings  Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^if  ( elements.size (  )  >= 0 ) return elements.get ( 0 ) ;^424^425^^^^420^428^if  ( elements.size (  )  > 0 ) return elements.get ( 0 ) ;^[CLASS] Element  [METHOD] getElementById [RETURN_TYPE] Element   String id [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  Elements  elements  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  > 1 ) return elements.get ( 1 ) ;^424^425^^^^420^428^if  ( elements.size (  )  > 0 ) return elements.get ( 0 ) ;^[CLASS] Element  [METHOD] getElementById [RETURN_TYPE] Element   String id [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  Elements  elements  
[BugLab_Wrong_Literal]^if  ( elements.size (  )  > -1 ) return elements.get ( -1 ) ;^424^425^^^^420^428^if  ( elements.size (  )  > 0 ) return elements.get ( 0 ) ;^[CLASS] Element  [METHOD] getElementById [RETURN_TYPE] Element   String id [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  Elements  elements  
[BugLab_Wrong_Literal]^return elements.get (  ) ;^425^^^^^420^428^return elements.get ( 0 ) ;^[CLASS] Element  [METHOD] getElementById [RETURN_TYPE] Element   String id [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  Elements  elements  
[BugLab_Wrong_Literal]^return elements.get ( 1 ) ;^425^^^^^420^428^return elements.get ( 0 ) ;^[CLASS] Element  [METHOD] getElementById [RETURN_TYPE] Element   String id [VARIABLES] Set  classNames  Tag  tag  String  id  boolean  Elements  elements  
[BugLab_Argument_Swapping]^return Collector.collect ( new Evaluator.AttributeWithValue ( value, key ) , this ) ;^468^^^^^467^469^return Collector.collect ( new Evaluator.AttributeWithValue ( key, value ) , this ) ;^[CLASS] Element  [METHOD] getElementsByAttributeValue [RETURN_TYPE] Elements   String key String value [VARIABLES] Set  classNames  Tag  tag  String  key  value  boolean  
[BugLab_Argument_Swapping]^return Collector.collect ( new Evaluator.AttributeWithValueNot ( value, key ) , this ) ;^479^^^^^478^480^return Collector.collect ( new Evaluator.AttributeWithValueNot ( key, value ) , this ) ;^[CLASS] Element  [METHOD] getElementsByAttributeValueNot [RETURN_TYPE] Elements   String key String value [VARIABLES] Set  classNames  Tag  tag  String  key  value  boolean  
[BugLab_Argument_Swapping]^return Collector.collect ( new Evaluator.AttributeWithValueStarting ( valuePrefix, key ) , this ) ;^490^^^^^489^491^return Collector.collect ( new Evaluator.AttributeWithValueStarting ( key, valuePrefix ) , this ) ;^[CLASS] Element  [METHOD] getElementsByAttributeValueStarting [RETURN_TYPE] Elements   String key String valuePrefix [VARIABLES] Set  classNames  Tag  tag  String  key  valuePrefix  boolean  
[BugLab_Argument_Swapping]^return Collector.collect ( new Evaluator.AttributeWithValueEnding ( valueSuffix, key ) , this ) ;^501^^^^^500^502^return Collector.collect ( new Evaluator.AttributeWithValueEnding ( key, valueSuffix ) , this ) ;^[CLASS] Element  [METHOD] getElementsByAttributeValueEnding [RETURN_TYPE] Elements   String key String valueSuffix [VARIABLES] Set  classNames  Tag  tag  String  key  valueSuffix  boolean  
[BugLab_Argument_Swapping]^return Collector.collect ( new Evaluator.AttributeWithValueContaining ( match, key ) , this ) ;^512^^^^^511^513^return Collector.collect ( new Evaluator.AttributeWithValueContaining ( key, match ) , this ) ;^[CLASS] Element  [METHOD] getElementsByAttributeValueContaining [RETURN_TYPE] Elements   String key String match [VARIABLES] Set  classNames  Tag  tag  String  key  match  boolean  
[BugLab_Wrong_Operator]^if  ( child  >=  TextNode )  {^564^^^^^562^582^if  ( child instanceof TextNode )  {^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Operator]^} else if  ( child  >  Element )  {^575^^^^^562^582^} else if  ( child instanceof Element )  {^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Argument_Swapping]^if  ( element.length (  )  > 0 && accum.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Operator]^if  ( accum.length (  )  > 0 || element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Operator]^if  ( accum.length (  )  >= 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Literal]^if  ( accum.length (  )  > -1 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Argument_Swapping]^if  ( TextNode.lastCharIsWhitespace ( text )  ) accum = TextNode.stripLeadingWhitespace ( text ) ;^570^571^^^^562^582^if  ( TextNode.lastCharIsWhitespace ( accum )  ) text = TextNode.stripLeadingWhitespace ( text ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Operator]^} else if  ( child  <<  Element )  {^575^^^^^562^582^} else if  ( child instanceof Element )  {^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Literal]^if  ( accum.length (  )  > 1 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^577^578^^^^562^582^if  ( accum.length (  )  > 0 && element.isBlock (  )  && !TextNode.lastCharIsWhitespace ( accum )  ) accum.append ( " " ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  boolean  StringBuilder  accum  Node  child  Element  element  TextNode  textNode  Tag  tag  String  text  
[BugLab_Wrong_Operator]^return tag.preserveWhitespace (  )  && parent (  )  != null && parent (  ) .preserveWhitespace (  ) ;^585^^^^^584^586^return tag.preserveWhitespace (  )  || parent (  )  != null && parent (  ) .preserveWhitespace (  ) ;^[CLASS] Element  [METHOD] preserveWhitespace [RETURN_TYPE] boolean   [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return tag.preserveWhitespace (  )  || parent (  )  != null || parent (  ) .preserveWhitespace (  ) ;^585^^^^^584^586^return tag.preserveWhitespace (  )  || parent (  )  != null && parent (  ) .preserveWhitespace (  ) ;^[CLASS] Element  [METHOD] preserveWhitespace [RETURN_TYPE] boolean   [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Wrong_Operator]^return tag.preserveWhitespace (  )  || parent (  )  == null && parent (  ) .preserveWhitespace (  ) ;^585^^^^^584^586^return tag.preserveWhitespace (  )  || parent (  )  != null && parent (  ) .preserveWhitespace (  ) ;^[CLASS] Element  [METHOD] preserveWhitespace [RETURN_TYPE] boolean   [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Argument_Swapping]^TextNode baseUriNode = new TextNode ( text, text ) ;^597^^^^^593^601^TextNode textNode = new TextNode ( text, baseUri ) ;^[CLASS] Element  [METHOD] text [RETURN_TYPE] Element   String text [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  String  text  boolean  
[BugLab_Wrong_Operator]^if  ( child  &  TextNode )  {^609^^^^^607^620^if  ( child instanceof TextNode )  {^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Operator]^if  ( child  <<  TextNode )  {^609^^^^^607^620^if  ( child instanceof TextNode )  {^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Operator]^} else if  ( child  >  Element )  {^613^^^^^607^620^} else if  ( child instanceof Element )  {^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Literal]^if  ( el.hasText (  )  ) return false;^615^616^^^^607^620^if  ( el.hasText (  )  ) return true;^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Literal]^return false;^616^^^^^607^620^return true;^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Literal]^if  ( !textNode.isBlank (  )  ) return false;^611^612^^^^607^620^if  ( !textNode.isBlank (  )  ) return true;^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Literal]^return false;^612^^^^^607^620^return true;^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Operator]^} else if  ( child  <<  Element )  {^613^^^^^607^620^} else if  ( child instanceof Element )  {^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Literal]^return true;^619^^^^^607^620^return false;^[CLASS] Element  [METHOD] hasText [RETURN_TYPE] boolean   [VARIABLES] TextNode  textNode  Set  classNames  Tag  tag  boolean  Node  child  Element  el  
[BugLab_Wrong_Operator]^if  ( childNode  >  DataNode )  {^630^^^^^626^640^if  ( childNode instanceof DataNode )  {^[CLASS] Element  [METHOD] data [RETURN_TYPE] String   [VARIABLES] Set  classNames  boolean  StringBuilder  sb  DataNode  data  Node  childNode  Element  element  Tag  tag  String  elementData  
[BugLab_Wrong_Operator]^if  ( childNode  <  DataNode )  {^630^^^^^626^640^if  ( childNode instanceof DataNode )  {^[CLASS] Element  [METHOD] data [RETURN_TYPE] String   [VARIABLES] Set  classNames  boolean  StringBuilder  sb  DataNode  data  Node  childNode  Element  element  Tag  tag  String  elementData  
[BugLab_Wrong_Operator]^} else if  ( childNode  ==  Element )  {^633^^^^^626^640^} else if  ( childNode instanceof Element )  {^[CLASS] Element  [METHOD] data [RETURN_TYPE] String   [VARIABLES] Set  classNames  boolean  StringBuilder  sb  DataNode  data  Node  childNode  Element  element  Tag  tag  String  elementData  
[BugLab_Wrong_Operator]^} else if  ( childNode  &  Element )  {^633^^^^^626^640^} else if  ( childNode instanceof Element )  {^[CLASS] Element  [METHOD] data [RETURN_TYPE] String   [VARIABLES] Set  classNames  boolean  StringBuilder  sb  DataNode  data  Node  childNode  Element  element  Tag  tag  String  elementData  
[BugLab_Wrong_Operator]^if  ( classNames != null )  {^658^^^^^657^663^if  ( classNames == null )  {^[CLASS] Element  [METHOD] classNames [RETURN_TYPE] Set   [VARIABLES] Set  classNames  Tag  tag  String[]  names  boolean  
[BugLab_Variable_Misuse]^attributes.put ( "class", StringUtils.join ( null, " " )  ) ;^672^^^^^670^674^attributes.put ( "class", StringUtils.join ( classNames, " " )  ) ;^[CLASS] Element  [METHOD] classNames [RETURN_TYPE] Element   String> classNames [VARIABLES] Set  classNames  Tag  tag  boolean  
[BugLab_Argument_Swapping]^if  ( className.contains ( classes )  ) classes.remove ( className ) ;^724^725^^^^720^731^if  ( classes.contains ( className )  ) classes.remove ( className ) ;^[CLASS] Element  [METHOD] toggleClass [RETURN_TYPE] Element   String className [VARIABLES] Set  classNames  classes  Tag  tag  String  className  boolean  
[BugLab_Wrong_Operator]^if  ( isBlock (  )  &&  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^758^759^^^^757^773^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Operator]^if  ( isBlock (  )  ||  ( parent (  )  != null || parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^758^759^^^^757^773^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Operator]^if  ( isBlock (  )  ||  ( parent (  )  == null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^758^759^^^^757^773^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Operator]^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  != 0 )  ) indent ( accum ) ;^758^759^^^^757^773^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Literal]^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == -1 )  ) indent ( accum ) ;^758^759^^^^757^773^if  ( isBlock (  )  ||  ( parent (  )  != null && parent (  ) .tag (  ) .canContainBlock (  )  && siblingIndex (  )  == 0 )  ) indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Argument_Swapping]^if  ( tag.isEmpty (  )  && childNodes.isEmpty (  )  )  {^765^^^^^757^773^if  ( childNodes.isEmpty (  )  && tag.isEmpty (  )  )  {^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Operator]^if  ( childNodes.isEmpty (  )  || tag.isEmpty (  )  )  {^765^^^^^757^773^if  ( childNodes.isEmpty (  )  && tag.isEmpty (  )  )  {^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Argument_Swapping]^if  ( accum.canContainBlock (  )  )  indent ( tag ) ;^770^^^^^757^773^if  ( tag.canContainBlock (  )  )  indent ( accum ) ;^[CLASS] Element  [METHOD] outerHtml [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Set  classNames  classes  Tag  tag  boolean  StringBuilder  accum  
[BugLab_Wrong_Operator]^if  ( this >= o )  return true;^811^^^^^810^820^if  ( this == o )  return true;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Literal]^if  ( this == o )  return false;^811^^^^^810^820^if  ( this == o )  return true;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Operator]^if  ( ! ( o  >>  Element )  )  return false;^812^^^^^810^820^if  ( ! ( o instanceof Element )  )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Literal]^if  ( ! ( o instanceof Element )  )  return true;^812^^^^^810^820^if  ( ! ( o instanceof Element )  )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Literal]^if  ( !super.equals ( o )  )  return true;^813^^^^^810^820^if  ( !super.equals ( o )  )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Argument_Swapping]^if  ( tag != null ? !tag.equals ( element.tag.tag )  : element != null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Argument_Swapping]^if  ( element.tag != null ? !tag.equals ( tag )  : element.tag != null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Argument_Swapping]^if  ( tag != null ? !tag.equals ( element )  : element.tag.tag != null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Operator]^if  ( tag == null ? !tag.equals ( element.tag )  : element.tag == null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Operator]^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag == null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Literal]^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return true;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Argument_Swapping]^if  ( element != null ? !tag.equals ( tag.tag )  : element.tag != null )  return false;^817^^^^^810^820^if  ( tag != null ? !tag.equals ( element.tag )  : element.tag != null )  return false;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Wrong_Literal]^return false;^819^^^^^810^820^return true;^[CLASS] Element  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Object  o  Set  classNames  classes  Tag  tag  boolean  Element  element  
[BugLab_Argument_Swapping]^result = 31 * tag +  ( result != null ? tag.hashCode (  )  : 0 ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
[BugLab_Wrong_Operator]^result = 31 * result +  <<  ( tag != null ? tag.hashCode (  )  : 0 ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
[BugLab_Wrong_Operator]^result = 31 - result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
[BugLab_Wrong_Operator]^result = 31 * result +  ( tag == null ? tag.hashCode (  )  : 0 ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
[BugLab_Wrong_Literal]^result = 32 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
[BugLab_Wrong_Literal]^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : result ) ;^825^^^^^823^827^result = 31 * result +  ( tag != null ? tag.hashCode (  )  : 0 ) ;^[CLASS] Element  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Set  classNames  classes  Tag  tag  boolean  int  result  
