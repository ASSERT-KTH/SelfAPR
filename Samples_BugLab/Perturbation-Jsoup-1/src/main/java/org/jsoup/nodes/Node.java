[BugLab_Variable_Misuse]^Validate.notNull ( baseUri ) ;^60^^^^^59^67^Validate.notNull ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^if  ( hasAttr ( baseUri )  ) return attributes.get ( attributeKey ) ;^62^63^^^^59^67^if  ( hasAttr ( attributeKey )  ) return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Argument_Swapping]^if  ( hasAttr ( attributes )  ) return attributeKey.get ( attributeKey ) ;^62^63^^^^59^67^if  ( hasAttr ( attributeKey )  ) return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^else if  ( baseUri.toLowerCase (  ) .startsWith ( "abs:" )  ) return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^64^65^^^^59^67^else if  ( attributeKey.toLowerCase (  ) .startsWith ( "abs:" )  ) return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^return absUrl ( baseUri.substring ( "abs:".length (  )  )  ) ;^65^^^^^59^67^return absUrl ( attributeKey.substring ( "abs:".length (  )  )  ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^return attributes.get ( baseUri ) ;^63^^^^^59^67^return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Argument_Swapping]^return attributeKey.get ( attributes ) ;^63^^^^^59^67^return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^attributes.put ( attributeKey, baseUri ) ;^84^^^^^83^86^attributes.put ( attributeKey, attributeValue ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] Node   String attributeKey String attributeValue [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Argument_Swapping]^attributes.put ( attributeValue, attributeKey ) ;^84^^^^^83^86^attributes.put ( attributeKey, attributeValue ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] Node   String attributeKey String attributeValue [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Argument_Swapping]^return attributeKey.hasKey ( attributes ) ;^95^^^^^93^96^return attributes.hasKey ( attributeKey ) ;^[CLASS] Node  [METHOD] hasAttr [RETURN_TYPE] boolean   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^return attributes.hasKey ( baseUri ) ;^95^^^^^93^96^return attributes.hasKey ( attributeKey ) ;^[CLASS] Node  [METHOD] hasAttr [RETURN_TYPE] boolean   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( baseUri ) ;^104^^^^^103^107^Validate.notNull ( attributeKey ) ;^[CLASS] Node  [METHOD] removeAttr [RETURN_TYPE] Node   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^attributes.remove ( baseUri ) ;^105^^^^^103^107^attributes.remove ( attributeKey ) ;^[CLASS] Node  [METHOD] removeAttr [RETURN_TYPE] Node   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^return attributeValue;^114^^^^^113^115^return baseUri;^[CLASS] Node  [METHOD] baseUri [RETURN_TYPE] String   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( attributeValue ) ;^122^^^^^121^124^Validate.notNull ( baseUri ) ;^[CLASS] Node  [METHOD] setBaseUri [RETURN_TYPE] void   String baseUri [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^this.baseUri = attributeValue;^123^^^^^121^124^this.baseUri = baseUri;^[CLASS] Node  [METHOD] setBaseUri [RETURN_TYPE] void   String baseUri [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[BugLab_Variable_Misuse]^Validate.notEmpty ( relUrl ) ;^144^^^^^143^165^Validate.notEmpty ( attributeKey ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^String relUrl = attr ( baseUri ) ;^146^^^^^143^165^String relUrl = attr ( attributeKey ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^String relUrl = attr ( relUrl ) ;^146^^^^^143^165^String relUrl = attr ( attributeKey ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^if  ( !hasAttr ( relUrl )  )  {^147^^^^^143^165^if  ( !hasAttr ( attributeKey )  )  {^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^base = new URL ( relUrl ) ;^153^^^^^143^165^base = new URL ( baseUri ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^return base.toExternalForm (  ) ;^157^^^^^143^165^return abs.toExternalForm (  ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^return base.toExternalForm (  ) ;^160^^^^^143^165^return abs.toExternalForm (  ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^URL abs = new URL ( baseUri ) ;^156^^^^^143^165^URL abs = new URL ( relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^URL abs = new URL ( abs, relUrl ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Variable_Misuse]^URL abs = new URL ( base, baseUri ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Argument_Swapping]^URL abs = new URL ( relUrl, base ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[BugLab_Argument_Swapping]^return index.get ( childNodes ) ;^173^^^^^172^174^return childNodes.get ( index ) ;^[CLASS] Node  [METHOD] childNode [RETURN_TYPE] Node   int index [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( parentNode ) ;^206^^^^^205^209^Validate.notNull ( in ) ;^[CLASS] Node  [METHOD] replaceWith [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( in ) ;^207^^^^^205^209^Validate.notNull ( parentNode ) ;^[CLASS] Node  [METHOD] replaceWith [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[BugLab_Variable_Misuse]^if  ( parentNode != null ) throw new NotImplementedException  (" ")  ;^212^213^^^^211^215^if  ( this.parentNode != null ) throw new NotImplementedException  (" ")  ;^[CLASS] Node  [METHOD] setParentNode [RETURN_TYPE] void   Node parentNode [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[BugLab_Wrong_Operator]^if  ( this.parentNode == null ) throw new NotImplementedException  (" ")  ;^212^213^^^^211^215^if  ( this.parentNode != null ) throw new NotImplementedException  (" ")  ;^[CLASS] Node  [METHOD] setParentNode [RETURN_TYPE] void   Node parentNode [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[BugLab_Variable_Misuse]^this.parentNode = in;^214^^^^^211^215^this.parentNode = parentNode;^[CLASS] Node  [METHOD] setParentNode [RETURN_TYPE] void   Node parentNode [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[BugLab_Variable_Misuse]^Validate.isTrue ( parentNode.parentNode == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^Validate.isTrue ( parentNode == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^Validate.isTrue ( out.parentNode.parentNode == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^Validate.isTrue ( out == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^Validate.isTrue ( out.parentNode <= this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( parentNode ) ;^219^^^^^217^227^Validate.notNull ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( parentNode.parentNode != null ) in.parentNode.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( parentNode != null ) in.parentNode.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( in.parentNode.parentNode != null ) in.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( in != null ) in.parentNode.parentNode.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( in.parentNode == null ) in.parentNode.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^in.parentNode.removeChild ( parentNode ) ;^221^^^^^217^227^in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^Integer index = indexInList ( parentNode, childNodes ) ;^223^^^^^217^227^Integer index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^Integer index = indexInList ( childNodes, out ) ;^223^^^^^217^227^Integer index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^childNodes.set ( in, index ) ;^224^^^^^217^227^childNodes.set ( index, in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^Validate.isTrue ( parentNode.parentNode == this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^Validate.isTrue ( out.parentNode.parentNode == this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^Validate.isTrue ( out == this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^Validate.isTrue ( out.parentNode < this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^int index = indexInList ( parentNode, childNodes ) ;^231^^^^^229^234^int index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^int index = indexInList ( childNodes, out ) ;^231^^^^^229^234^int index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^Validate.notNull ( parentNode ) ;^237^^^^^236^243^Validate.notNull ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( parentNode.parentNode != null ) in.parentNode.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( parentNode != null ) in.parentNode.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( in.parentNode.parentNode != null ) in.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( in != null ) in.parentNode.parentNode.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( in.parentNode == null ) in.parentNode.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^in.parentNode.removeChild ( parentNode ) ;^239^^^^^236^243^in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^childNodes.add ( parentNode ) ;^241^^^^^236^243^childNodes.add ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( out == null ) return 0;^246^247^^^^245^250^if  ( parentNode == null ) return 0;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( parentNode != null ) return 0;^246^247^^^^245^250^if  ( parentNode == null ) return 0;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^return out.nodeDepth (  )  + 1;^249^^^^^245^250^return parentNode.nodeDepth (  )  + 1;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^return parentNode.nodeDepth (  >=  )  + 1;^249^^^^^245^250^return parentNode.nodeDepth (  )  + 1;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^return parentNode.nodeDepth (  )  ;^249^^^^^245^250^return parentNode.nodeDepth (  )  + 1;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^return 1;^247^^^^^245^250^return 0;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^return parentNode.nodeDepth (  <  )  + 1;^249^^^^^245^250^return parentNode.nodeDepth (  )  + 1;^[CLASS] Node  [METHOD] nodeDepth [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^List<Node> siblings = out.childNodes;^265^^^^^264^272^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^List<Node> siblings = parentNode;^265^^^^^264^272^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^List<Node> siblings = parentNode.childNodes.childNodes;^265^^^^^264^272^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( index.size (  )  > siblings+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( siblings.size (  )  == index+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  >  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  !=  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^if  ( siblings.size (  )  > index+0 ) return siblings.get ( index+0 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^return index.get ( siblings+1 ) ;^269^^^^^264^272^return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^List<Node> siblings = out.childNodes;^279^^^^^278^286^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^List<Node> siblings = parentNode;^279^^^^^278^286^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^List<Node> siblings = parentNode.childNodes.childNodes;^279^^^^^278^286^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^if  ( siblings > 0 ) return index.get ( index-1 ) ;^282^283^^^^278^286^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( index >= 0 ) return siblings.get ( index-1 ) ;^282^283^^^^278^286^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^if  ( index > -1 ) return siblings.get ( index-1 ) ;^282^283^^^^278^286^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^if  ( index > 0 ) return siblings.get ( index-2 ) ;^282^283^^^^278^286^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^return index.get ( siblings-1 ) ;^283^^^^^278^286^return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^return siblings.get ( index-0 ) ;^283^^^^^278^286^return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^return this.get ( index-1 ) ;^283^^^^^278^286^return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^return siblings.get ( index-2 ) ;^283^^^^^278^286^return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^if  ( search.equals ( search )  ) return i;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Variable_Misuse]^if  ( node.equals ( node )  ) return i;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^if  ( i.equals ( search )  ) return node;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^if  ( search.equals ( node )  ) return i;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < node.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^for  ( int i = 0; i < nodess.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 0; i <= nodes.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Wrong_Literal]^for  ( int i = i; i < nodes.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^if  ( node.equals ( i )  ) return search;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Argument_Swapping]^N node = i.get ( nodes ) ;^303^^^^^298^308^N node = nodes.get ( i ) ;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[BugLab_Wrong_Operator]^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 / 2 )  ) ;^331^^^^^330^332^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[CLASS] Node  [METHOD] indent [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  StringBuilder  accum  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -2 * 2 )  ) ;^331^^^^^330^332^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[CLASS] Node  [METHOD] indent [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  StringBuilder  accum  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 *  )  ) ;^331^^^^^330^332^accum.append ( "\n" ) .append ( StringUtils.leftPad ( "", nodeDepth (  )  -1 * 2 )  ) ;^[CLASS] Node  [METHOD] indent [RETURN_TYPE] void   StringBuilder accum [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  StringBuilder  accum  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^if  ( this >= o )  return true;^336^^^^^335^339^if  ( this == o )  return true;^[CLASS] Node  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  Object  o  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^if  ( this == o )  return false;^336^^^^^335^339^if  ( this == o )  return true;^[CLASS] Node  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  Object  o  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^return true;^338^^^^^335^339^return false;^[CLASS] Node  [METHOD] equals [RETURN_TYPE] boolean   Object o [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  Object  o  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[BugLab_Variable_Misuse]^int result = out != null ? parentNode.hashCode (  )  : 0;^343^^^^^342^347^int result = parentNode != null ? parentNode.hashCode (  )  : 0;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^int result = parentNode == null ? parentNode.hashCode (  )  : 0;^343^^^^^342^347^int result = parentNode != null ? parentNode.hashCode (  )  : 0;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^int result = parentNode != null ? parentNode.hashCode (  )  : result;^343^^^^^342^347^int result = parentNode != null ? parentNode.hashCode (  )  : 0;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Argument_Swapping]^result = 31 * attributes +  ( result != null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^result = 31 * result +  <  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^result = 31 - result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Operator]^result = 31 * result +  ( attributes == null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^result = result * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
[BugLab_Wrong_Literal]^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : result ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
