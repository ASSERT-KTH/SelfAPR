[buglab_swap_variables]^if  ( hasAttr ( attributes )  ) return attributeKey.get ( attributeKey ) ;^62^63^^^^59^67^if  ( hasAttr ( attributeKey )  ) return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^return attributeKey.get ( attributes ) ;^63^^^^^59^67^return attributes.get ( attributeKey ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] String   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^attributes.put (  attributeValue ) ;^84^^^^^83^86^attributes.put ( attributeKey, attributeValue ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] Node   String attributeKey String attributeValue [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^attributes.put ( attributeValue, attributeKey ) ;^84^^^^^83^86^attributes.put ( attributeKey, attributeValue ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] Node   String attributeKey String attributeValue [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^attributes.put ( attributeKey ) ;^84^^^^^83^86^attributes.put ( attributeKey, attributeValue ) ;^[CLASS] Node  [METHOD] attr [RETURN_TYPE] Node   String attributeKey String attributeValue [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^return attributeKey.hasKey ( attributes ) ;^95^^^^^93^96^return attributes.hasKey ( attributeKey ) ;^[CLASS] Node  [METHOD] hasAttr [RETURN_TYPE] boolean   String attributeKey [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  boolean  Node  parentNode  
[buglab_swap_variables]^URL abs = new URL ( relUrl, base ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[buglab_swap_variables]^URL abs = new URL (  relUrl ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[buglab_swap_variables]^URL abs = new URL ( base ) ;^159^^^^^143^165^URL abs = new URL ( base, relUrl ) ;^[CLASS] Node  [METHOD] absUrl [RETURN_TYPE] String   String attributeKey [VARIABLES] MalformedURLException  e  boolean  Node  parentNode  Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  URL  abs  base  
[buglab_swap_variables]^return index.get ( childNodes ) ;^173^^^^^172^174^return childNodes.get ( index ) ;^[CLASS] Node  [METHOD] childNode [RETURN_TYPE] Node   int index [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  parentNode  
[buglab_swap_variables]^parentNode.replaceChild ( this ) ;^208^^^^^205^209^parentNode.replaceChild ( this, in ) ;^[CLASS] Node  [METHOD] replaceWith [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  parentNode  
[buglab_swap_variables]^Validate.isTrue ( out.parentNode.parentNode == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^Validate.isTrue ( out == this ) ;^218^^^^^217^227^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( in.parentNode.parentNode != null ) in.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( in != null ) in.parentNode.parentNode.removeChild ( in ) ;^220^221^^^^217^227^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^Integer index = indexInList ( childNodes, out ) ;^223^^^^^217^227^Integer index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^Integer index = indexInList (  childNodes ) ;^223^^^^^217^227^Integer index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^Integer index = indexInList ( out ) ;^223^^^^^217^227^Integer index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^childNodes.set (  in ) ;^224^^^^^217^227^childNodes.set ( index, in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^childNodes.set ( indexdex, in ) ;^224^^^^^217^227^childNodes.set ( index, in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^childNodes.set ( index ) ;^224^^^^^217^227^childNodes.set ( index, in ) ;^[CLASS] Node  [METHOD] replaceChild [RETURN_TYPE] void   Node out Node in [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^Validate.isTrue ( out.parentNode.parentNode == this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[buglab_swap_variables]^Validate.isTrue ( out == this ) ;^230^^^^^229^234^Validate.isTrue ( out.parentNode == this ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[buglab_swap_variables]^int index = indexInList ( childNodes, out ) ;^231^^^^^229^234^int index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[buglab_swap_variables]^int index = indexInList (  childNodes ) ;^231^^^^^229^234^int index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[buglab_swap_variables]^int index = indexInList ( out ) ;^231^^^^^229^234^int index = indexInList ( out, childNodes ) ;^[CLASS] Node  [METHOD] removeChild [RETURN_TYPE] void   Node out [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  index  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( in.parentNode.parentNode != null ) in.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( in != null ) in.parentNode.parentNode.removeChild ( in ) ;^238^239^^^^236^243^if  ( in.parentNode != null ) in.parentNode.removeChild ( in ) ;^[CLASS] Node  [METHOD] addChild [RETURN_TYPE] void   Node in [VARIABLES] Attributes  attributes  List  childNodes  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^List<Node> siblings = parentNode;^265^^^^^264^272^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^List<Node> siblings = parentNode.childNodes.childNodes;^265^^^^^264^272^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( index.size (  )  > siblings+1 ) return siblings.get ( index+1 ) ;^268^269^^^^264^272^if  ( siblings.size (  )  > index+1 ) return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^return index.get ( siblings+1 ) ;^269^^^^^264^272^return siblings.get ( index+1 ) ;^[CLASS] Node  [METHOD] nextSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^List<Node> siblings = parentNode;^279^^^^^278^286^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^List<Node> siblings = parentNode.childNodes.childNodes;^279^^^^^278^286^List<Node> siblings = parentNode.childNodes;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( siblings > 0 ) return index.get ( index-1 ) ;^282^283^^^^278^286^if  ( index > 0 ) return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^return index.get ( siblings-1 ) ;^283^^^^^278^286^return siblings.get ( index-1 ) ;^[CLASS] Node  [METHOD] previousSibling [RETURN_TYPE] Node   [VARIABLES] Attributes  attributes  Integer  index  List  childNodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  Node  in  out  parentNode  
[buglab_swap_variables]^if  ( search.equals ( node )  ) return i;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^if  ( i.equals ( search )  ) return node;^304^305^^^^298^308^if  ( node.equals ( search )  ) return i;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^for  ( nodesnt i = 0; i < i.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^for  ( int i = 0; i < node.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^for  ( nodent i = 0; i < is.size (  ) ; i++ )  {^302^^^^^298^308^for  ( int i = 0; i < nodes.size (  ) ; i++ )  {^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^N node = i.get ( nodes ) ;^303^^^^^298^308^N node = nodes.get ( i ) ;^[CLASS] Node  [METHOD] indexInList [RETURN_TYPE] <N   N search List<N> nodes [VARIABLES] boolean  Node  in  out  parentNode  Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  N  node  search  int  i  
[buglab_swap_variables]^result = 31 * attributes +  ( result != null ? attributes.hashCode (  )  : 0 ) ;^345^^^^^342^347^result = 31 * result +  ( attributes != null ? attributes.hashCode (  )  : 0 ) ;^[CLASS] Node  [METHOD] hashCode [RETURN_TYPE] int   [VARIABLES] Attributes  attributes  List  childNodes  nodes  siblings  String  attributeKey  attributeValue  baseUri  relUrl  boolean  int  result  Node  in  out  parentNode  
