[BugLab_Variable_Misuse]^super ( query ) ;^333^^^^^332^334^super ( s ) ;^[CLASS] Selector SelectorParseException  [METHOD] <init> [RETURN_TYPE] String)   String s [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[BugLab_Variable_Misuse]^return new Selector ( s, root ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[BugLab_Argument_Swapping]^return new Selector ( root, query ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[BugLab_Variable_Misuse]^Validate.notEmpty ( s ) ;^83^^^^^82^91^Validate.notEmpty ( query ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[BugLab_Variable_Misuse]^elements.addAll ( select ( s, root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[BugLab_Argument_Swapping]^elements.addAll ( select ( root, query )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[BugLab_Argument_Swapping]^if  ( combinators.matchesAny ( tq )  )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Argument_Swapping]^elements.addAll ( select ( root, subQuery )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Argument_Swapping]^} else if  ( combinators.matchesAny ( tq )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Argument_Swapping]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Argument_Swapping]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Variable_Misuse]^elements.addAll ( select ( s, root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Variable_Misuse]^intersectElements ( filterForSelf ( this, candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Variable_Misuse]^intersectElements ( filterForSelf ( 3, candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Variable_Misuse]^return new Elements ( this ) ;^121^^^^^93^122^return new Elements ( elements ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[BugLab_Argument_Swapping]^String subQuery = combinators.consumeToAny ( tq ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^if  ( subQuery.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( s, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^if  ( subQuery.equals ( ">" )  ) output = filterForChildren ( elements, select ( combinator, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^if  ( elements.equals ( ">" )  ) output = filterForChildren ( combinator, select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( s.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( s, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( subQuery.equals ( " " )  ) output = filterForDescendants ( elements, select ( combinator, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( subQuery, select ( elements, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( s.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( s, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( combinator, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( root.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, combinator )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Wrong_Operator]^else if   instanceof   ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( s, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( elements.equals ( "~" )  ) output = filterForGeneralSiblings ( combinator, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( subQuery.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( combinator, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( root.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, combinator )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForGeneralSiblings ( elements, select ( s, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForGeneralSiblings ( 0, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForAdjacentSiblings ( elements, select ( s, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( s.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( subQuery.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForDescendants ( elements, select ( s, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForDescendants ( subQuery, select ( elements, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( 2, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Wrong_Operator]^else if  &  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForDescendants ( 1, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^else if  ( subQuery.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForDescendants ( this, select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForGeneralSiblings ( null, select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForChildren ( elements, select ( s, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForChildren ( null, select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^output = filterForChildren ( subQuery, select ( elements, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( elements.equals ( " " )  ) output = filterForDescendants ( combinator, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Wrong_Operator]^else if  ^  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^else if  ( elements.equals ( "+" )  ) output = filterForAdjacentSiblings ( combinator, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Wrong_Operator]^else if  >>  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^output = filterForAdjacentSiblings ( 1, select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Argument_Swapping]^elements.clear (  ) ; output.addAll ( elements ) ;^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[BugLab_Variable_Misuse]^Validate.notEmpty ( subQuery ) ;^175^^^^^173^182^Validate.notEmpty ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Argument_Swapping]^Element found = id.getElementById ( root ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Variable_Misuse]^Element found = root.getElementById ( subQuery ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Variable_Misuse]^Element found = found.getElementById ( id ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Variable_Misuse]^if ( root != null ) byId.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Argument_Swapping]^if ( byId != null ) found.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Wrong_Operator]^if ( found == null ) byId.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Variable_Misuse]^byId.add ( root ) ;^180^^^^^173^182^byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[BugLab_Variable_Misuse]^Validate.notEmpty ( subQuery ) ;^186^^^^^184^189^Validate.notEmpty ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByClass ( subQuery ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByClass ( className ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return className.getElementsByClass ( root ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByClass ( s ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[BugLab_Variable_Misuse]^Validate.notEmpty ( subQuery ) ;^193^^^^^191^196^Validate.notEmpty ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByTag ( s ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByTag ( tagName ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tagName.getElementsByTag ( root ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByTag ( subQuery ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^Validate.notEmpty ( subQuery ) ;^200^^^^^198^223^Validate.notEmpty ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^if  ( tq.matchChomp ( "=" )  ) return found.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^if  ( tq.matchChomp ( "=" )  ) return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( subQuery, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "!=" )  ) return found.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( root.matchChomp ( "!=" )  ) return tq.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( subQuery, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "^=" )  ) return found.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( key.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tq, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( tq.matchChomp ( "^=" )  ) return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( tq.matchChomp ( "$=" )  ) return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tagName, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "*=" )  ) return found.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueContaining ( s, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return root.getElementsByAttributeValueContaining ( tq, key.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tq.getElementsByAttributeValueContaining ( key, root.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueContaining ( tagName, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueContaining ( subQuery, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueEnding ( s, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tq.getElementsByAttributeValueEnding ( key, root.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return root.getElementsByAttributeValueEnding ( tq, key.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( key.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tq, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( root.matchChomp ( "*=" )  ) return tq.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueEnding ( subQuery, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueStarting ( tagName, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return root.getElementsByAttributeValueStarting ( tq, key.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tq.getElementsByAttributeValueStarting ( key, root.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( s, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "$=" )  ) return found.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( root.matchChomp ( "$=" )  ) return tq.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( tq.matchChomp ( "*=" )  ) return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueEnding ( tagName, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( subQuery, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueNot ( s, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return root.getElementsByAttributeValueNot ( tq, key.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tq.getElementsByAttributeValueNot ( key, root.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttributeValueNot ( root, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tagName, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueStarting ( subQuery, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( s, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueNot ( tagName, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueStarting ( s, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValue ( s, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return root.getElementsByAttributeValue ( tq, key.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValue ( tagName, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return tq.getElementsByAttributeValue ( key, root.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( root.matchChomp ( "^=" )  ) return tq.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValueNot ( subQuery, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( s, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( key.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tq, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttributeValue ( subQuery, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttribute ( tagName ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^return key.getElementsByAttribute ( root ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return root.getElementsByAttribute ( s ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByAttribute ( key ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( s, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^if  ( key.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( tq, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( tq.matchChomp ( "!=" )  ) return key.getElementsByAttributeValueNot ( root, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( subQuery, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( tagName, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Argument_Swapping]^else if  ( key.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( tq, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getAllElements (  ) ;^226^^^^^225^227^return root.getAllElements (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] allElements [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^231^^^^^230^232^return root.getElementsByIndexLessThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexLessThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^235^^^^^234^236^return root.getElementsByIndexGreaterThan ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexGreaterThan [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^return found.getElementsByIndexEquals ( consumeIndex (  )  ) ;^239^^^^^238^240^return root.getElementsByIndexEquals ( consumeIndex (  )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] indexEquals [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[BugLab_Variable_Misuse]^Validate.isTrue ( StringUtils.isNumeric ( query ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[BugLab_Variable_Misuse]^Validate.isTrue ( StringUtils.isNumeric ( tagName ) , "Index must be numeric" ) ;^244^^^^^242^248^Validate.isTrue ( StringUtils.isNumeric ( indexS ) , "Index must be numeric" ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[BugLab_Variable_Misuse]^int index = Integer.parseInt ( query ) ;^245^^^^^242^248^int index = Integer.parseInt ( indexS ) ;^[CLASS] Selector SelectorParseException  [METHOD] consumeIndex [RETURN_TYPE] int   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  int  index  
[BugLab_Variable_Misuse]^if  ( root.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^if  ( c.parent (  )  != null && c.parent (  ) .equals ( root )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Argument_Swapping]^if  ( p.parent (  )  != null && c.parent (  ) .equals ( c )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Wrong_Operator]^if  ( c.parent (  )  != null || c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Wrong_Operator]^if  ( c.parent (  )  == null && c.parent (  ) .equals ( p )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^children.add ( root ) ;^256^^^^^251^262^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^if  ( root.equals ( p )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^if  ( c.equals ( root )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Argument_Swapping]^if  ( p.equals ( c )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Wrong_Literal]^found = false;^272^^^^^266^280^found = true;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Argument_Swapping]^if  ( !found ) c.add ( children ) ;^276^277^^^^266^280^if  ( !found ) children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^children.add ( root ) ;^277^^^^^266^280^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Wrong_Literal]^boolean found = true;^269^^^^^266^280^boolean found = false;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^if  ( root != null && previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^if  ( previousSib != null && previousSib.equals ( root )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Wrong_Operator]^if  ( previousSib != null || previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Wrong_Operator]^if  ( previousSib == null && previousSib.equals ( e )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^siblings.add ( root ) ;^291^^^^^283^297^siblings.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^Element previousSib = root.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^if  ( !e.parent (  ) .equals ( root.parent (  )  )  ) continue;^287^288^^^^283^297^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^Element previousSib = previousSib.previousElementSibling (  ) ;^289^^^^^283^297^Element previousSib = c.previousElementSibling (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Argument_Swapping]^if  ( e != null && previousSib.equals ( previousSib )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[BugLab_Variable_Misuse]^if  ( !e.parent (  ) .equals ( root.parent (  )  )  ) continue;^304^305^^^^300^315^if  ( !e.parent (  ) .equals ( c.parent (  )  )  ) continue;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^if  ( rootPos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Argument_Swapping]^if  ( ePosPos > c )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Argument_Swapping]^if  ( cPosPos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Wrong_Operator]^if  ( cPos >= ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^output.add ( root ) ;^309^^^^^300^315^output.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^int rootPos = e.elementSiblingIndex (  ) ;^306^^^^^300^315^int ePos = e.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^int previousSibPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^int rootPos = c.elementSiblingIndex (  ) ;^307^^^^^300^315^int cPos = c.elementSiblingIndex (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[BugLab_Variable_Misuse]^if  ( root.equals ( p )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^if  ( c.equals ( root )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Argument_Swapping]^if  ( p.equals ( c )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^children.add ( previousSib ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[BugLab_Variable_Misuse]^children.add ( root ) ;^323^^^^^318^329^children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
