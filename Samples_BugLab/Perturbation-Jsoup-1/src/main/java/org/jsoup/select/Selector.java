[buglab_swap_variables]^return new Selector ( root, query ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[buglab_swap_variables]^return new Selector (  root ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[buglab_swap_variables]^return new Selector ( query ) .select (  ) ;^73^^^^^72^74^return new Selector ( query, root ) .select (  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element root [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  query  s  boolean  Element  root  
[buglab_swap_variables]^elements.addAll ( select (  root )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[buglab_swap_variables]^elements.addAll ( select ( query )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[buglab_swap_variables]^elements.addAll ( select ( root, query )  ) ;^88^^^^^82^91^elements.addAll ( select ( query, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   String query Element> roots [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Iterable  roots  Element  root  String[]  combinators  String  query  s  
[buglab_swap_variables]^if  ( combinators.matchesAny ( tq )  )  {^96^^^^^93^122^if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^elements.addAll ( select (  root )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^elements.addAll ( select ( subQuery )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^elements.addAll ( select ( root, subQuery )  ) ;^110^^^^^93^122^elements.addAll ( select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf ( elements )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf (  candidates )  ) ;^118^^^^^114^119^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf ( candidates, elements )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf ( elements )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^intersectElements ( filterForSelf (  candidates )  ) ;^118^^^^^93^122^intersectElements ( filterForSelf ( elements, candidates )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^} else if  ( combinators.matchesAny ( tq )  )  {^112^^^^^93^122^} else if  ( tq.matchesAny ( combinators )  )  {^[CLASS] Selector SelectorParseException  [METHOD] select [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  seenWhite  Element  root  String[]  combinators  String  query  s  subQuery  Elements  candidates  
[buglab_swap_variables]^String subQuery = combinators.consumeToAny ( tq ) ;^126^^^^^124^141^String subQuery = tq.consumeToAny ( combinators ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^if  ( subQuery.equals ( ">" )  ) output = filterForChildren ( elements, select ( combinator, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select (  elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( subQuery, select ( elements, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^if  ( combinator.equals ( ">" )  ) output = filterForChildren (  select ( subQuery, elements )  ) ;^129^130^^^^124^141^if  ( combinator.equals ( ">" )  ) output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( elements.equals ( " " )  ) output = filterForDescendants ( combinator, select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( subQuery.equals ( " " )  ) output = filterForDescendants ( elements, select ( combinator, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select (  elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( " " )  ) output = filterForDescendants (  select ( subQuery, elements )  ) ;^131^132^^^^124^141^else if  ( combinator.equals ( " " )  ) output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( root.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, combinator )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( subQuery.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( combinator, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select (  root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( elements.equals ( "+" )  ) output = filterForAdjacentSiblings ( combinator, select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings (  select ( subQuery, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( subQuery.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( combinator, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select (  root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( elements.equals ( "~" )  ) output = filterForGeneralSiblings ( combinator, select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings (  select ( subQuery, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( root.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, combinator )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings ( elements, select (  root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings (  select ( subQuery, root )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings ( elements, select ( subQuery )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^136^^^^^124^141^output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings ( elements, select (  root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings ( root, select ( subQuery, elements )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings (  select ( subQuery, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings ( elements, select ( subQuery )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^134^^^^^124^141^output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( subQuery, select ( elements, root )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( root, subQuery )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForDescendants ( subQuery, select ( elements, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForDescendants ( elements, select (  elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForDescendants (  select ( subQuery, elements )  ) ;^132^^^^^124^141^output = filterForDescendants ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( subQuery, select ( elements, root )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( root, subQuery )  ) ;^133^134^^^^124^141^else if  ( combinator.equals ( "+" )  ) output = filterForAdjacentSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( root, select ( subQuery, elements )  ) ;^135^136^^^^124^141^else if  ( combinator.equals ( "~" )  ) output = filterForGeneralSiblings ( elements, select ( subQuery, root )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForChildren ( subQuery, select ( elements, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForChildren ( elements, select (  elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^output = filterForChildren (  select ( subQuery, elements )  ) ;^130^^^^^124^141^output = filterForChildren ( elements, select ( subQuery, elements )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^elements.clear (  ) ; output.addAll ( elements ) ;^140^^^^^124^141^elements.clear (  ) ; elements.addAll ( output ) ;^[CLASS] Selector SelectorParseException  [METHOD] combinator [RETURN_TYPE] void   String combinator [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  root  String[]  combinators  String  combinator  query  s  subQuery  Elements  output  
[buglab_swap_variables]^Element found = id.getElementById ( root ) ;^177^^^^^173^182^Element found = root.getElementById ( id ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[buglab_swap_variables]^if ( byId != null ) found.add ( found ) ;^179^180^^^^173^182^if ( found != null ) byId.add ( found ) ;^[CLASS] Selector SelectorParseException  [METHOD] byId [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  found  root  String[]  combinators  String  combinator  id  query  s  subQuery  Elements  byId  
[buglab_swap_variables]^return className.getElementsByClass ( root ) ;^188^^^^^184^189^return root.getElementsByClass ( className ) ;^[CLASS] Selector SelectorParseException  [METHOD] byClass [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  boolean  Element  found  root  
[buglab_swap_variables]^return tagName.getElementsByTag ( root ) ;^195^^^^^191^196^return root.getElementsByTag ( tagName ) ;^[CLASS] Selector SelectorParseException  [METHOD] byTag [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue (  tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^if  ( tq.matchChomp ( "=" )  ) return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot (  tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( key.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( tq, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( root.matchChomp ( "!=" )  ) return tq.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting (  tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( key.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( tq, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( root.matchChomp ( "^=" )  ) return tq.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding (  tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( root.matchChomp ( "$=" )  ) return tq.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "*=" )  ) return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining (  tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( root.matchChomp ( "*=" )  ) return tq.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttributeValueContaining ( root, tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueContaining (  tq.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueContaining ( tq, key.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueContaining ( key.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return tq.getElementsByAttributeValueContaining ( key, root.chompTo ( "]" )  ) ;^218^^^^^198^223^return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueEnding (  tq.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueEnding ( tq, key.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueEnding ( key.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( key.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( tq, tq.chompTo ( "]" )  ) ;^217^218^^^^198^223^else if  ( tq.matchChomp ( "*=" )  ) return root.getElementsByAttributeValueContaining ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueStarting ( tq, key.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueStarting (  tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return tq.getElementsByAttributeValueStarting ( key, root.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueStarting ( key.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( key.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( tq, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return tq.getElementsByAttributeValueEnding ( key, root.chompTo ( "]" )  ) ;^215^^^^^198^223^return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^212^^^^^198^223^return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttributeValueNot ( root, tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueNot (  tq.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return tq.getElementsByAttributeValueNot ( key, root.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueNot ( tq, key.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValueNot ( key.chompTo ( "]" )  ) ;^209^^^^^198^223^return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "^=" )  ) return key.getElementsByAttributeValueStarting ( root, tq.chompTo ( "]" )  ) ;^211^212^^^^198^223^else if  ( tq.matchChomp ( "^=" )  ) return root.getElementsByAttributeValueStarting ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValue ( tq, key.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValue (  tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return tq.getElementsByAttributeValue ( key, root.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return root.getElementsByAttributeValue ( key.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttributeValue ( root, tq.chompTo ( "]" )  ) ;^206^^^^^198^223^return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "!=" )  ) return key.getElementsByAttributeValueNot ( root, tq.chompTo ( "]" )  ) ;^208^209^^^^198^223^else if  ( tq.matchChomp ( "!=" )  ) return root.getElementsByAttributeValueNot ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^else if  ( tq.matchChomp ( "$=" )  ) return key.getElementsByAttributeValueEnding ( root, tq.chompTo ( "]" )  ) ;^214^215^^^^198^223^else if  ( tq.matchChomp ( "$=" )  ) return root.getElementsByAttributeValueEnding ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^return key.getElementsByAttribute ( root ) ;^203^^^^^198^223^return root.getElementsByAttribute ( key ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^if  ( root.matchChomp ( "=" )  ) return tq.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^205^206^^^^198^223^if  ( tq.matchChomp ( "=" )  ) return root.getElementsByAttributeValue ( key, tq.chompTo ( "]" )  ) ;^[CLASS] Selector SelectorParseException  [METHOD] byAttribute [RETURN_TYPE] Elements   [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  String[]  combinators  String  className  combinator  id  key  query  s  subQuery  tagName  boolean  Element  found  root  
[buglab_swap_variables]^if  ( p.parent (  )  != null && c.parent (  ) .equals ( c )  )  {^255^^^^^251^262^if  ( c.parent (  )  != null && c.parent (  ) .equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForChildren [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[buglab_swap_variables]^if  ( p.equals ( c )  )  {^271^^^^^266^280^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[buglab_swap_variables]^if  ( !found ) childrenhildren.add ( c ) ;^276^277^^^^266^280^if  ( !found ) children.add ( c ) ;^[CLASS] Selector SelectorParseException  [METHOD] filterForDescendants [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  found  Element  c  found  p  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
[buglab_swap_variables]^if  ( e != null && previousSib.equals ( previousSib )  )  {^290^^^^^283^297^if  ( previousSib != null && previousSib.equals ( e )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForAdjacentSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  siblings  
[buglab_swap_variables]^if  ( ePos > cPos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[buglab_swap_variables]^if  ( cPosPos > ePos )  {^308^^^^^300^315^if  ( cPos > ePos )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForGeneralSiblings [RETURN_TYPE] Elements   Element> elements Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  elements  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  output  int  cPos  ePos  
[buglab_swap_variables]^if  ( p.equals ( c )  )  {^322^^^^^318^329^if  ( c.equals ( p )  )  {^[CLASS] Selector SelectorParseException  [METHOD] filterForSelf [RETURN_TYPE] Elements   Element> parents Element> candidates [VARIABLES] LinkedHashSet  elements  TokenQueue  tq  boolean  Element  c  e  found  p  previousSib  root  Collection  candidates  parents  String[]  combinators  String  className  combinator  id  indexS  key  query  s  subQuery  tagName  Elements  children  
