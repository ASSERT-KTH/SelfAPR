[BugLab_Argument_Swapping]^return implicitReturn == node;^80^^^^^78^81^return node == implicitReturn;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isImplicitReturn [RETURN_TYPE] boolean   Branch> node [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Wrong_Operator]^return node < implicitReturn;^80^^^^^78^81^return node == implicitReturn;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isImplicitReturn [RETURN_TYPE] boolean   Branch> node [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Variable_Misuse]^return this == edgeValue || this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  boolean  
[BugLab_Variable_Misuse]^return this == ON_TRUE || this == edgeValue;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  boolean  
[BugLab_Argument_Swapping]^return this == ON_FALSE || this == ON_TRUE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  boolean  
[BugLab_Wrong_Operator]^return this == ON_TRUE && this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  boolean  
[BugLab_Wrong_Operator]^return this != ON_TRUE || this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  entry  implicitReturn  node  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  boolean  
[BugLab_Variable_Misuse]^if  ( n == null )  {^138^^^^^136^142^if  ( parent == null )  {^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  NodeTraversal  nodeTraversal  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^138^^^^^136^142^if  ( parent == null )  {^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  NodeTraversal  nodeTraversal  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^139^^^^^136^142^return true;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  NodeTraversal  nodeTraversal  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return !isEnteringNewCfgNode ( parent ) ;^141^^^^^136^142^return !isEnteringNewCfgNode ( n ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  NodeTraversal  nodeTraversal  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^Node parent = parent.getParent (  ) ;^150^^^^^135^165^Node parent = n.getParent (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return NodeUtil.getConditionExpression ( n )  != parent;^184^^^^^181^185^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return NodeUtil.getConditionExpression ( parent )  <= n;^184^^^^^181^185^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return NodeUtil.getConditionExpression ( n )  != n;^184^^^^^181^185^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return parent == n.getLastChild (  ) ;^182^^^^^167^197^return n == parent.getLastChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return n != parent.getLastChild (  ) ;^182^^^^^167^197^return n == parent.getLastChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return n == n.getLastChild (  ) ;^182^^^^^167^197^return n == parent.getLastChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^156^^^^^141^171^return true;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return parent != n.getFirstChild (  ) .getNext (  ) ;^165^^^^^150^180^return n != parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return n == parent.getFirstChild (  ) .getNext (  ) ;^165^^^^^150^180^return n != parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return NodeUtil.getConditionExpression ( n )  != parent;^171^^^^^156^186^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return NodeUtil.getConditionExpression ( parent )  >= n;^171^^^^^156^186^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return NodeUtil.getConditionExpression ( n )  != parent;^184^^^^^169^199^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return NodeUtil.getConditionExpression ( parent )  == n;^184^^^^^169^199^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Argument_Swapping]^return parent != n.getFirstChild (  ) ;^190^^^^^175^205^return n != parent.getFirstChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Operator]^return n == parent.getFirstChild (  ) ;^190^^^^^175^205^return n != parent.getFirstChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Wrong_Literal]^return true;^192^^^^^177^207^return false;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^switch  ( n.getType (  )  )  {^151^^^^^136^166^switch  ( parent.getType (  )  )  {^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return n != n.getFirstChild (  ) .getNext (  ) ;^165^^^^^150^180^return n != parent.getFirstChild (  ) .getNext (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return NodeUtil.getConditionExpression ( n )  != n;^171^^^^^156^186^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.isForIn ( n )  )  {^181^^^^^166^196^if  ( NodeUtil.isForIn ( parent )  )  {^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return NodeUtil.getConditionExpression ( n )  != n;^184^^^^^169^199^return NodeUtil.getConditionExpression ( parent )  != n;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return n != n.getFirstChild (  ) ;^190^^^^^175^205^return n != parent.getFirstChild (  ) ;^[CLASS] ControlFlowGraph Branch AbstractCfgNodeTraversalCallback  [METHOD] isEnteringNewCfgNode [RETURN_TYPE] boolean   Node n [VARIABLES] DiGraphNode  entry  implicitReturn  node  boolean  Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  edgeValue  Node  n  parent  
[BugLab_Variable_Misuse]^return this == UNCOND || this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Variable_Misuse]^return this == ON_TRUE || this == UNCOND;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Argument_Swapping]^return this == ON_FALSE || this == ON_TRUE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Wrong_Operator]^return this == ON_TRUE && this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Wrong_Operator]^return this != ON_TRUE || this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Wrong_Operator]^return this <= ON_TRUE || this == ON_FALSE;^121^^^^^120^122^return this == ON_TRUE || this == ON_FALSE;^[CLASS] Branch  [METHOD] isConditional [RETURN_TYPE] boolean   [VARIABLES] Branch  ON_EX  ON_FALSE  ON_TRUE  SYN_BLOCK  UNCOND  boolean  
[BugLab_Variable_Misuse]^if  ( n == null )  {^138^^^^^136^142^if  ( parent == null )  {^[CLASS] AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[BugLab_Wrong_Operator]^if  ( parent != null )  {^138^^^^^136^142^if  ( parent == null )  {^[CLASS] AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[BugLab_Wrong_Literal]^return false;^139^^^^^136^142^return true;^[CLASS] AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
[BugLab_Variable_Misuse]^return !isEnteringNewCfgNode ( parent ) ;^141^^^^^136^142^return !isEnteringNewCfgNode ( n ) ;^[CLASS] AbstractCfgNodeTraversalCallback  [METHOD] shouldTraverse [RETURN_TYPE] boolean   NodeTraversal nodeTraversal Node n Node parent [VARIABLES] boolean  NodeTraversal  nodeTraversal  Node  n  parent  
