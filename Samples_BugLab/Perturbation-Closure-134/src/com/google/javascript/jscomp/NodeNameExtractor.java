[BugLab_Variable_Misuse]^if  ( "prototype".equals ( nameOutsideBrackets )  )  {^58^^^^^43^73^if  ( "prototype".equals ( rhsOfDotName )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return nameOutsideBrackets + delimiter + rhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return lhsOfDotName + delimiter + nameOutsideBrackets;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return rhsOfDotName + delimiter + lhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return lhsOfDotName + rhsOfDotName + delimiter;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^return lhsOfDotName  ^  delimiter + rhsOfDotName;^61^^^^^58^62^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return rhsOfDotName + delimiter;^59^^^^^44^74^return lhsOfDotName + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return delimiter + lhsOfDotName;^59^^^^^44^74^return lhsOfDotName + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^if  ( "prototype".equals ( rhsOfDotName )  )  {^68^^^^^53^83^if  ( "prototype".equals ( nameInsideBrackets )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return nameOutsideBrackets + delimiter + rhsOfDotName;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return nameInsideBrackets + delimiter + nameOutsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return nameOutsideBrackets + nameInsideBrackets + delimiter;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return delimiter + nameOutsideBrackets + nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^return nameOutsideBrackets  |  delimiter + nameInsideBrackets;^71^^^^^68^72^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return rhsOfDotName + delimiter;^69^^^^^54^84^return nameOutsideBrackets + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return delimiter + nameOutsideBrackets;^69^^^^^54^84^return nameOutsideBrackets + delimiter;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^if  ( sb.length (  )  >= 0 )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Literal]^if  ( sb.length (  )  > nextUniqueInt )  {^88^^^^^73^103^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^for  ( Node child = outsideBrackets.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^for  ( Node rhsOfDot = node.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^for  ( Node node = child.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^for  ( Node child = node.getFirstChild (  ) ; child == null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^if  ( sb.length (  )  >= 0 )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Literal]^if  ( sb.length (  )  > nextUniqueInt )  {^88^^^^^86^92^if  ( sb.length (  )  > 0 )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^sb.append ( getName ( node )  ) ;^91^^^^^86^92^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^child = rhsOfDot.getNext (  )  )  {^87^^^^^72^102^child = child.getNext (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return rhsOfDot.getString (  ) ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return nameOutsideBrackets + delimiter + rhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return lhsOfDotName + delimiter + nameOutsideBrackets;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return rhsOfDotName + delimiter + lhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return lhsOfDotName + rhsOfDotName + delimiter;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^return lhsOfDotName  >  delimiter + rhsOfDotName;^61^^^^^46^76^return lhsOfDotName + delimiter + rhsOfDotName;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return rhsOfDotName + delimiter + nameInsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return nameOutsideBrackets + delimiter + rhsOfDotName;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return nameInsideBrackets + delimiter + nameOutsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Argument_Swapping]^return nameOutsideBrackets + nameInsideBrackets + delimiter;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^return nameOutsideBrackets  >>  delimiter + nameInsideBrackets;^71^^^^^56^86^return nameOutsideBrackets + delimiter + nameInsideBrackets;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Wrong_Operator]^return TokenStream.isJSIdentifier ( node.getString (  &  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return NodeUtil.getStringValue ( lhsOfDot ) ;^79^^^^^64^94^return NodeUtil.getStringValue ( node ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return getName ( rhsOfDot.getFirstChild (  )  ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node functionNameNode = rhsOfDot.getFirstChild (  ) ;^51^^^^^36^66^Node functionNameNode = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node lhsOfDot = rhsOfDot.getFirstChild (  ) ;^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node rhsOfDot = outsideBrackets.getNext (  ) ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String nodeName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String outsideBracketsName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node outsideBrackets = rhsOfDot.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node insideBrackets = rhsOfDot.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String nameInsideBrackets = getName ( rhsOfDot ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^for  ( Node child = rhsOfDot.getFirstChild (  ) ; child != null;^86^^^^^71^101^for  ( Node child = node.getFirstChild (  ) ; child != null;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^switch  ( rhsOfDot.getType (  )  )  {^49^^^^^34^64^switch  ( node.getType (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return outsideBrackets.getString (  ) ;^52^^^^^37^67^return functionNameNode.getString (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node lhsOfDot = lhsOfDot.getFirstChild (  ) ;^54^^^^^39^69^Node lhsOfDot = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node rhsOfDot = rhsOfDot.getNext (  ) ;^55^^^^^40^70^Node rhsOfDot = lhsOfDot.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String outsideBracketsName = getName ( lhsOfDot ) ;^56^^^^^41^71^String lhsOfDotName = getName ( lhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String lhsOfDotName = getName ( rhsOfDot ) ;^57^^^^^42^72^String rhsOfDotName = getName ( rhsOfDot ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node outsideBrackets = outsideBrackets.getFirstChild (  ) ;^64^^^^^49^79^Node outsideBrackets = node.getFirstChild (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^Node insideBrackets = node.getNext (  ) ;^65^^^^^50^80^Node insideBrackets = outsideBrackets.getNext (  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String nameOutsideBrackets = getName ( node ) ;^66^^^^^51^81^String nameOutsideBrackets = getName ( outsideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^String nameInsideBrackets = getName ( outsideBrackets ) ;^67^^^^^52^82^String nameInsideBrackets = getName ( insideBrackets ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return TokenStream.isJSIdentifier ( lhsOfDot.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return TokenStream.isJSIdentifier ( outsideBrackets.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^76^77^^^^61^91^return TokenStream.isJSIdentifier ( node.getString (  )  )  ? node.getString (  )  :  ( "__" + nextUniqueInt++ ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return NodeUtil.getStringValue ( rhsOfDot ) ;^79^^^^^64^94^return NodeUtil.getStringValue ( node ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^return getName ( outsideBrackets.getFirstChild (  )  ) ;^83^^^^^68^98^return getName ( node.getFirstChild (  )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^child = node.getNext (  )  )  {^87^^^^^72^102^child = child.getNext (  )  )  {^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^sb.append ( getName ( outsideBrackets )  ) ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
[BugLab_Variable_Misuse]^sb.append ( getName ( rhsOfDot )  ) ;^91^^^^^76^106^sb.append ( getName ( child )  ) ;^[CLASS] NodeNameExtractor  [METHOD] getName [RETURN_TYPE] String   Node node [VARIABLES] char  delimiter  String  lhsOfDotName  nameInsideBrackets  nameOutsideBrackets  rhsOfDotName  boolean  StringBuilder  sb  int  nextUniqueInt  Node  child  functionNameNode  insideBrackets  lhsOfDot  node  outsideBrackets  rhsOfDot  
