[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, this ) ;^45^^^^^42^46^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] LineNumberCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  DiagnosticType  MISSING_LINE_INFO  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  this ) ;^45^^^^^42^46^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] LineNumberCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  DiagnosticType  MISSING_LINE_INFO  Node  externs  root  
[buglab_swap_variables]^NodeTraversal.traverse (  root, this ) ;^45^^^^^42^46^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] LineNumberCheck  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  DiagnosticType  MISSING_LINE_INFO  Node  externs  root  
[buglab_swap_variables]^compiler.report ( JSError.make ( MISSING_LINE_INFO, n, t, n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make ( n, t, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make (  n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make ( t,  MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make ( MISSING_LINE_INFO, n, t, n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make ( t, n,  n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, MISSING_LINE_INFO, n, n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^JSError.make ( t, MISSING_LINE_INFO, n, n.toStringTree (  )  )  ) ;^65^66^^^^57^69^JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^64^65^66^^^57^69^compiler.report ( JSError.make ( t, n, MISSING_LINE_INFO, n.toStringTree (  )  )  ) ;^[CLASS] LineNumberCheck  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  requiresLineNumbers  NodeTraversal  t  DiagnosticType  MISSING_LINE_INFO  Node  n  parent  
