[buglab_swap_variables]^this.firstChars = reserveCharacters ( reservedCharacters, FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters ( FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters ( reservedCharacters, FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters (  reservedCharacters ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters ( reservedCharacters, FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters ( FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters ( reservedCharacters, FIRST_CHAR ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.firstChars = reserveCharacters (  reservedCharacters ) ;^66^^^^^60^70^this.firstChars = reserveCharacters ( FIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( reservedCharacters, NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( reservedCharacters, NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters (  reservedCharacters ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( reservedCharacters, NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters ( reservedCharacters, NONFIRST_CHAR ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^this.nonFirstChars = reserveCharacters (  reservedCharacters ) ;^67^^^^^60^70^this.nonFirstChars = reserveCharacters ( NONFIRST_CHAR, reservedCharacters ) ;^[CLASS] NameGenerator  [METHOD] <init> [RETURN_TYPE] String,char[])   String> reservedNames String prefix Nullable
char[] reservedCharacters [VARIABLES] Set  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( reservedCharacters.length == null || reservedCharacters == 0 )  {^80^^^^^79^88^if  ( reservedCharacters == null || reservedCharacters.length == 0 )  {^[CLASS] NameGenerator  [METHOD] reserveCharacters [RETURN_TYPE] char[]   char[] chars char[] reservedCharacters [VARIABLES] char  reservedCharacter  Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( prefix, firstChars.charAt ( 0 )  )  )  {^94^^^^^91^106^if  ( !contains ( firstChars, prefix.charAt ( 0 )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( firstChars.charAt ( 0 )  )  )  {^94^^^^^91^106^if  ( !contains ( firstChars, prefix.charAt ( 0 )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains (  prefix.charAt ( 0 )  )  )  {^94^^^^^91^106^if  ( !contains ( firstChars, prefix.charAt ( 0 )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( nonFirstChars, pos.charAt ( prefix )  )  )  {^99^^^^^91^106^if  ( !contains ( nonFirstChars, prefix.charAt ( pos )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( nonFirstChars.charAt ( pos )  )  )  {^99^^^^^91^106^if  ( !contains ( nonFirstChars, prefix.charAt ( pos )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( pos, prefix.charAt ( nonFirstChars )  )  )  {^99^^^^^91^106^if  ( !contains ( nonFirstChars, prefix.charAt ( pos )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains ( prefix, nonFirstChars.charAt ( pos )  )  )  {^99^^^^^91^106^if  ( !contains ( nonFirstChars, prefix.charAt ( pos )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( !contains (  prefix.charAt ( pos )  )  )  {^99^^^^^91^106^if  ( !contains ( nonFirstChars, prefix.charAt ( pos )  )  )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^for  ( int prefix = 1; pos < pos.length (  ) ; ++pos )  {^98^^^^^91^106^for  ( int pos = 1; pos < prefix.length (  ) ; ++pos )  {^[CLASS] NameGenerator  [METHOD] checkPrefix [RETURN_TYPE] void   String prefix [VARIABLES] Set  charSet  reservedNames  String  prefix  boolean  int  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^for  ( arr.lengthnt i = 0; i < i; i++ )  {^109^^^^^108^115^for  ( int i = 0; i < arr.length; i++ )  {^[CLASS] NameGenerator  [METHOD] contains [RETURN_TYPE] boolean   char[] arr char c [VARIABLES] char  c  Set  charSet  reservedNames  String  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^for  ( arrnt i = 0; i < i.length; i++ )  {^109^^^^^108^115^for  ( int i = 0; i < arr.length; i++ )  {^[CLASS] NameGenerator  [METHOD] contains [RETURN_TYPE] boolean   char[] arr char c [VARIABLES] char  c  Set  charSet  reservedNames  String  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( c[i] == arr )  {^110^^^^^108^115^if  ( arr[i] == c )  {^[CLASS] NameGenerator  [METHOD] contains [RETURN_TYPE] boolean   char[] arr char c [VARIABLES] char  c  Set  charSet  reservedNames  String  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^i /= nonFirstChars;^136^^^^^120^148^i /= nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^i /= nonFirstChars.length.length;^136^^^^^120^148^i /= nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = nonFirstChars.length % i;^134^^^^^120^148^int pos = i % nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = i % nonFirstChars;^134^^^^^120^148^int pos = i % nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = i % nonFirstChars.length.length;^134^^^^^120^148^int pos = i % nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^i /= firstChars;^129^^^^^120^148^i /= firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^i /= firstChars.length.length;^129^^^^^120^148^i /= firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = firstChars.length % i;^127^^^^^120^148^int pos = i % firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = i % firstChars;^127^^^^^120^148^int pos = i % firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = firstChars % i.length;^127^^^^^120^148^int pos = i % firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^if  ( TokenStream.isKeyword ( reservedNames )  || name.contains ( name )  )  {^142^^^^^120^148^if  ( TokenStream.isKeyword ( name )  || reservedNames.contains ( name )  )  {^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = i % firstChars.length.length;^127^^^^^120^148^int pos = i % firstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
[buglab_swap_variables]^int pos = nonFirstChars % i.length;^134^^^^^120^148^int pos = i % nonFirstChars.length;^[CLASS] NameGenerator  [METHOD] generateNextName [RETURN_TYPE] String   [VARIABLES] Set  charSet  reservedNames  String  name  prefix  boolean  int  i  nameCount  pos  char[]  FIRST_CHAR  NONFIRST_CHAR  arr  chars  firstChars  nonFirstChars  reservedCharacters  
