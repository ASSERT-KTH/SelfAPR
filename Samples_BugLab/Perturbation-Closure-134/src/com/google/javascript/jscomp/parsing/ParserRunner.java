[buglab_swap_variables]^Parser p = new Parser ( errorReporter, compilerEnv ) ;^101^^^^^86^116^Parser p = new Parser ( compilerEnv, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Parser p = new Parser (  errorReporter ) ;^101^^^^^86^116^Parser p = new Parser ( compilerEnv, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Parser p = new Parser ( compilerEnv ) ;^101^^^^^86^116^Parser p = new Parser ( compilerEnv, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^astRoot = sourceName.parse ( sourceString, p, 1 ) ;^104^^^^^89^119^astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^astRoot = p.parse ( sourceName, sourceString, 1 ) ;^104^^^^^89^119^astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^astRoot = p.parse (  sourceName, 1 ) ;^104^^^^^89^119^astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^astRoot = p.parse ( sourceString,  1 ) ;^104^^^^^89^119^astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^astRoot = sourceString.parse ( p, sourceName, 1 ) ;^104^^^^^89^119^astRoot = p.parse ( sourceString, sourceName, 1 ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^logger.info ( "Error parsing " + e + ": " + sourceName.getMessage (  )  ) ;^106^^^^^91^121^logger.info ( "Error parsing " + sourceName + ": " + e.getMessage (  )  ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( errorReporter, sourceString, config, astRoot ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree (  sourceString, config, errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( sourceString, astRoot, config, errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( astRoot,  config, errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( astRoot, config, sourceString, errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( astRoot, sourceString,  errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( astRoot, sourceString, errorReporter, config ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( astRoot, sourceString, config ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config ( isIdeMode, annotationNames, typeRegistry ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config (  annotationNames, isIdeMode ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config ( typeRegistry, isIdeMode, annotationNames ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config ( typeRegistry, annotationNames ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config ( typeRegistry,  isIdeMode ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^Config config = new Config ( annotationNames, typeRegistry, isIdeMode ) ;^112^113^^^^97^127^Config config = new Config ( typeRegistry, annotationNames, isIdeMode ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
[buglab_swap_variables]^root = IRFactory.transformTree ( config, sourceString, astRoot, errorReporter ) ;^114^115^^^^99^129^root = IRFactory.transformTree ( astRoot, sourceString, config, errorReporter ) ;^[CLASS] ParserRunner  [METHOD] parse [RETURN_TYPE] Node   String sourceName String sourceString boolean isIdeMode JSTypeRegistry typeRegistry ErrorReporter errorReporter Logger logger [VARIABLES] Context  cx  Set  annotationNames  trimmedNames  Config  config  Node  root  CompilerEnvirons  compilerEnv  String  configResource  name  sourceName  sourceString  Logger  logger  Parser  p  JSTypeRegistry  typeRegistry  ErrorReporter  errorReporter  boolean  isIdeMode  EvaluatorException  e  AstRoot  astRoot  
