[BugLab_Wrong_Operator]^if  ( node  <=  Block )  {^172^^^^^157^187^if  ( node instanceof Block )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  >>  Block )  {^172^^^^^157^187^if  ( node instanceof Block )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  &  Scope )  {^174^^^^^159^189^} else  if  ( node instanceof Scope )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ==  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <<  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.   instanceof   class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "   instanceof   node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ==  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ==  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.   instanceof   class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ||  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  <<  Scope )  {^174^^^^^159^189^} else  if  ( node instanceof Scope )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ||  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &&  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ==  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^174^181^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  <=  ExpressionStatement )  {^202^^^^^187^217^if  ( node instanceof ExpressionStatement )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  >>  ExpressionStatement )  {^202^^^^^187^217^if  ( node instanceof ExpressionStatement )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  >>  LabeledStatement )  {^204^^^^^189^219^} else  if  ( node instanceof LabeledStatement )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >>  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ==  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  !=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ^  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  |  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ^  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  |  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  !=  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  !=  LabeledStatement )  {^204^^^^^189^219^} else  if  ( node instanceof LabeledStatement )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ==  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <<  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.   instanceof   class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^204^211^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  ||  ForInLoop )  {^219^^^^^204^234^if  ( node instanceof ForInLoop )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  ==  ForInLoop )  {^219^^^^^204^234^if  ( node instanceof ForInLoop )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  &  ForLoop )  {^221^^^^^206^236^} else  if  ( node instanceof ForLoop )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  >>  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >>  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  &  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ||  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <=  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &&  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  >  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  >>  ForLoop )  {^221^^^^^206^236^} else  if  ( node instanceof ForLoop )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ^  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  &&  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^221^228^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  <<  VariableDeclaration )  {^266^^^^^251^281^if  ( node instanceof VariableDeclaration )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^if  ( node  >=  VariableDeclaration )  {^266^^^^^251^281^if  ( node instanceof VariableDeclaration )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  <  VariableInitializer )  {^268^^^^^253^283^} else  if  ( node instanceof VariableInitializer )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  !=  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >>  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  |  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  &  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ==  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <<  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^} else  if  ( node  <<  VariableInitializer )  {^268^^^^^253^283^} else  if  ( node instanceof VariableInitializer )  {^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ^  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ==  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  >  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^268^275^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  |  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &&  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &&  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  ||  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >>  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  &  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  >>  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <<  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  !=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  !=  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  !=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <<  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^177^178^179^180^^162^192^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ||  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <<  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^207^208^209^210^^192^222^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  <=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  !=  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  <  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^224^225^226^227^^209^239^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  ||  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  >>  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
[BugLab_Wrong_Operator]^throw new IllegalStateException ( "Unexpected node type.  class: "  &  node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^271^272^273^274^^256^286^throw new IllegalStateException ( "Unexpected node type.  class: " + node.getClass (  )  + " type: " + Token.typeToName ( node.getType (  )  )  ) ;^[CLASS] TypeSafeDispatcher  [METHOD] process [RETURN_TYPE] T   AstNode node [VARIABLES] boolean  AstNode  node  
