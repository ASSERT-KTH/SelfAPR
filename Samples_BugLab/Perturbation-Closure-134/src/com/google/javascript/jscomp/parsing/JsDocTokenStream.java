[BugLab_Wrong_Literal]^EOF_CHAR = -;^37^^^^^32^42^EOF_CHAR = -1;^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Wrong_Literal]^private char[] stringBuffer = new char[];^458^^^^^453^463^private char[] stringBuffer = new char[128];^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Wrong_Literal]^private final int[] ungetBuffer = new int[4];^462^^^^^457^467^private final int[] ungetBuffer = new int[3];^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Wrong_Literal]^private boolean hitEOF = true;^465^^^^^460^470^private boolean hitEOF = false;^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Wrong_Literal]^private int lineEndChar = -2;^468^^^^^463^473^private int lineEndChar = -1;^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Wrong_Literal]^private int charno = -0;^470^^^^^465^475^private int charno = -1;^[CLASS] JsDocTokenStream   [VARIABLES] 
[BugLab_Variable_Misuse]^this ( string, 0 ) ;^40^^^^^39^41^this ( sourceString, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String)   String sourceString [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^this ( sourceString, -1 ) ;^40^^^^^39^41^this ( sourceString, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String)   String sourceString [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this ( string, lineno, 0 ) ;^44^^^^^43^45^this ( sourceString, lineno, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int)   String sourceString int lineno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this ( sourceString, sourceCursor, 0 ) ;^44^^^^^43^45^this ( sourceString, lineno, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int)   String sourceString int lineno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^this ( lineno, sourceString, 0 ) ;^44^^^^^43^45^this ( sourceString, lineno, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int)   String sourceString int lineno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^this ( sourceString, lineno, -1 ) ;^44^^^^^43^45^this ( sourceString, lineno, 0 ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int)   String sourceString int lineno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( string ) ;^48^^^^^47^55^Preconditions.checkNotNull ( sourceString ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this.lineno = tokenBeg;^49^^^^^47^55^this.lineno = lineno;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this.sourceString = string;^50^^^^^47^55^this.sourceString = sourceString;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this.sourceEnd = string.length (  ) ;^51^^^^^47^55^this.sourceEnd = sourceString.length (  ) ;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^this.sourceCursor = this.cursor = 1;^52^^^^^47^55^this.sourceCursor = this.cursor = 0;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^this.initCharno = sourceEnd;^54^^^^^47^55^this.initCharno = initCharno;^[CLASS] JsDocTokenStream  [METHOD] <init> [RETURN_TYPE] String,int,int)   String sourceString int lineno int initCharno [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = 1;^63^^^^^48^78^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( sourceCursor == EOF_CHAR )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c == lineno )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != EOF_CHAR )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( lineStart == '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^} else if  ( c >= '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( sourceCursor )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( lineno )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( stringBufferTop )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return 2;^70^^^^^55^85^return JsDocToken.EOF;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( lineStart )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( sourceEnd )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isAlpha ( sourceEnd )  )  {^83^^^^^68^98^if  ( isAlpha ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = 1;^88^^^^^83^90^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^86^^^^^83^90^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^84^^^^^69^99^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( stringBufferTop == '<' )  {^142^^^^^127^157^if  ( c == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != '<' )  {^142^^^^^127^157^if  ( c == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c < '<' )  {^142^^^^^127^157^if  ( c == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( lineno == '.' )  {^145^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != '.' )  {^145^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c > '.' )  {^145^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != '.' )  {^147^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( stringBufferTop == '.' )  {^147^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c < '.' )  {^147^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = lineno;^154^^^^^142^156^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( tokenEnd == '.' )  {^145^^^^^130^160^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c >= '.' )  {^145^^^^^130^160^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != '.' )  {^145^^^^^130^160^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( lineno == '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c != '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c >= '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( !isJSDocString ( sourceCursor )  )  {^165^^^^^150^180^if  ( !isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( tokenBeg == '.' && c2 == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c1 == '.' && ungetCursor == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^if  ( c2 == '.' && c1 == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' || c2 == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 >= '.' && c2 == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' && c2 > '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( tokenBeg )  )  {^181^^^^^174^190^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = EOF_CHAR;^187^^^^^174^190^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^184^^^^^174^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( sourceEnd ) ;^182^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = sourceEnd;^187^^^^^174^190^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return null;^188^^^^^174^190^return JsDocToken.STRING;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( stringBufferTop )  )  {^181^^^^^174^190^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^182^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^184^^^^^174^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^185^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = lineStart;^178^^^^^165^192^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^175^^^^^165^192^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^176^^^^^165^192^ungetChar ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( sourceCursor )  )  {^181^^^^^165^192^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^184^^^^^181^189^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^185^^^^^181^189^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^182^^^^^165^192^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^c1 = lineStart;^172^^^^^165^192^c1 = c2;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = ungetCursor;^178^^^^^165^192^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = ;^187^^^^^165^192^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceCursor ) ;^175^^^^^165^192^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( lineStart )  )  {^181^^^^^165^192^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^184^^^^^165^192^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^185^^^^^165^192^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( sourceCursor == '.' && c2 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c1 == '.' && tokenEnd == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^if  ( c2 == '.' && c1 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' || c2 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 < '.' && c2 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' && c2 != '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( ungetCursor )  )  {^181^^^^^174^190^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( sourceCursor ) ;^185^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( stringBufferTop ) ;^182^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = sourceCursor;^187^^^^^174^190^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( lineStart )  )  {^181^^^^^174^190^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^182^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^184^^^^^174^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return null;^179^^^^^164^194^return JsDocToken.STRING;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( tokenBeg ) ;^175^^^^^160^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^176^^^^^161^191^ungetChar ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( lineStart )  )  {^181^^^^^166^196^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = c2;^187^^^^^181^189^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^184^^^^^181^189^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^185^^^^^181^189^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^182^^^^^167^197^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( ungetCursor == EOF_CHAR )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c == ungetCursor )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^if  ( EOF_CHAR == c )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c <= EOF_CHAR )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( tokenEnd == '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^} else if  ( c <= '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( tokenEnd )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( sourceCursor == '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^} else if  ( c < '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isAlpha ( lineno )  )  {^83^^^^^68^98^if  ( isAlpha ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( tokenEnd ) ;^86^^^^^83^90^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( sourceCursor ) ;^84^^^^^69^99^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( lineStart == '<' )  {^142^^^^^127^157^if  ( c == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c <= '<' )  {^142^^^^^127^157^if  ( c == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( sourceEnd == '.' )  {^145^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c <= '.' )  {^145^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( lineno == '.' )  {^147^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return 1;^148^^^^^142^156^return JsDocToken.ELLIPSIS;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( tokenEnd == '.' )  {^147^^^^^142^156^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = sourceEnd;^154^^^^^142^156^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( lineStart == '.' )  {^145^^^^^130^160^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c <= '.' )  {^145^^^^^130^160^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( sourceCursor == '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c <= '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( sourceEnd == '.' )  {^147^^^^^132^162^if  ( c == '.' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 != '.' && c2 == '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' && c2 >= '<' )  {^174^^^^^165^192^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = -1;^187^^^^^174^190^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^185^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = 1;^187^^^^^174^190^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( ungetCursor ) ;^185^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^175^^^^^165^192^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^176^^^^^165^192^ungetChar ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = c1;^187^^^^^181^189^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^184^^^^^181^189^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( stringBufferTop ) ;^185^^^^^181^189^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^182^^^^^165^192^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = ;^178^^^^^165^192^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = c1;^187^^^^^165^192^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^175^^^^^165^192^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( lineno )  )  {^181^^^^^165^192^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = tokenEnd;^168^^^^^153^183^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineStart ) ;^166^^^^^151^181^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( stringBufferTop == '.' && c2 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c1 == '.' && lineStart == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 >= '.' && c2 == '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c1 == '.' && c2 >= '<' )  {^174^^^^^159^189^if  ( c1 == '.' && c2 == '<' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( sourceEnd )  )  {^181^^^^^174^190^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( tokenBeg ) ;^185^^^^^174^190^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = EOF_CHAR;^178^^^^^163^193^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( tokenBeg ) ;^176^^^^^161^191^ungetChar ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( sourceCursor )  )  {^181^^^^^166^196^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^182^^^^^167^197^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( lineno == '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^charno = -lineStart;^67^^^^^52^82^charno = -1;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( tokenBeg )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^charno = -0;^67^^^^^52^82^charno = -1;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = stringBufferTop;^88^^^^^73^103^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = lineStart;^154^^^^^139^169^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^c1 = sourceEnd;^172^^^^^157^187^c1 = c2;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = 1;^178^^^^^163^193^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = EOF_CHAR;^187^^^^^172^202^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return 3;^89^^^^^74^104^return JsDocToken.ANNOTATION;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return this;^113^^^^^98^128^return JsDocToken.LC;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return this;^138^^^^^123^153^return JsDocToken.PIPE;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return 4;^169^^^^^154^184^return JsDocToken.STRING;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^int lineno1 = c;^162^^^^^147^177^int c1 = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^163^^^^^148^178^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( !isJSDocString ( sourceEnd )  )  {^165^^^^^150^180^if  ( !isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( tokenBeg ) ;^166^^^^^151^181^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( stringBufferTop ) ;^175^^^^^160^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceCursor ) ;^176^^^^^161^191^ungetChar ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( stringBufferTop ) ;^184^^^^^169^199^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( c == sourceEnd )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( c > EOF_CHAR )  {^69^^^^^54^84^if  ( c == EOF_CHAR )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( ungetCursor == '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^} else if  ( c != '\n' )  {^71^^^^^56^86^} else if  ( c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^} else if  ( !isJSSpace ( ungetCursor )  )  {^73^^^^^58^88^} else if  ( !isJSSpace ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return 4;^72^^^^^57^87^return JsDocToken.EOL;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^charno = -c2;^67^^^^^52^82^charno = -1;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = cursor;^88^^^^^73^103^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = sourceEnd;^154^^^^^139^169^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = lineno;^168^^^^^153^183^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = charno;^178^^^^^163^193^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = stringBufferTop;^187^^^^^172^202^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^int sourceEnd1 = c;^162^^^^^147^177^int c1 = c;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isAlpha ( lineStart )  )  {^83^^^^^68^98^if  ( isAlpha ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( sourceCursor ) ;^86^^^^^71^101^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( sourceCursor ) ;^163^^^^^148^178^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( !isJSDocString ( lineStart )  )  {^165^^^^^150^180^if  ( !isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^175^^^^^160^190^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^if  ( isJSDocString ( lineno )  )  {^181^^^^^166^196^if  ( isJSDocString ( c2 )  )  {^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( lineno ) ;^184^^^^^169^199^ungetChar ( c2 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineno ) ;^185^^^^^170^200^addToString ( c1 ) ;^[CLASS] JsDocTokenStream  [METHOD] getJsDocToken [RETURN_TYPE] JsDocToken   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( peekChar (  )  == '/' )  {^209^^^^^203^226^if  ( peekChar (  )  != '/' )  {^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^210^^^^^203^226^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^if  ( peekChar (  )  <= '/' )  {^209^^^^^203^226^if  ( peekChar (  )  != '/' )  {^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( tokenBeg ) ;^210^^^^^203^226^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = EOF_CHAR;^218^^^^^203^226^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return string;^219^^^^^203^226^return this.string;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( ungetCursor ) ;^210^^^^^203^226^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( stringBufferTop ) ;^216^^^^^203^226^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( lineStart ) ;^222^^^^^203^226^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^stringBufferTop = 1;^218^^^^^203^226^stringBufferTop = 0;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^ungetChar ( tokenEnd ) ;^216^^^^^203^226^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^addToString ( ungetCursor ) ;^222^^^^^203^226^addToString ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] getRemainingJSDocLine [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^final int getLineno (  )  { return sourceCursor; }^228^^^^^223^233^final int getLineno (  )  { return lineno; }^[CLASS] JsDocTokenStream  [METHOD] getLineno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return sourceEnd == initLineno? initCharno + charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return lineno == sourceEnd? initCharno + charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return lineno == initLineno? tokenBeg + charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return lineno == initLineno? initCharno + lineno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^return initCharno == initLineno? lineno + charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^return lineno == charno? initCharno + initLineno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^return lineno == initLineno? charno + initCharno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^return lineno >= initLineno? initCharno + charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Operator]^return lineno == initLineno? initCharno  >>  charno : charno;^231^^^^^230^232^return lineno == initLineno? initCharno + charno : charno;^[CLASS] JsDocTokenStream  [METHOD] getCharno [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^final String getString (  )  { return sourceString; }^234^^^^^229^239^final String getString (  )  { return string; }^[CLASS] JsDocTokenStream  [METHOD] getString [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^tokenEnd = tokenBeg;^239^^^^^238^241^tokenEnd = cursor;^[CLASS] JsDocTokenStream  [METHOD] getStringFromBuffer [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return new String ( stringBuffer, 0, lineEndChar ) ;^240^^^^^238^241^return new String ( stringBuffer, 0, stringBufferTop ) ;^[CLASS] JsDocTokenStream  [METHOD] getStringFromBuffer [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Argument_Swapping]^return new String ( stringBufferTop, 0, stringBuffer ) ;^240^^^^^238^241^return new String ( stringBuffer, 0, stringBufferTop ) ;^[CLASS] JsDocTokenStream  [METHOD] getStringFromBuffer [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Wrong_Literal]^return new String ( stringBuffer, -1, stringBufferTop ) ;^240^^^^^238^241^return new String ( stringBuffer, 0, stringBufferTop ) ;^[CLASS] JsDocTokenStream  [METHOD] getStringFromBuffer [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^return new String ( stringBuffer, 0, lineStart ) ;^240^^^^^238^241^return new String ( stringBuffer, 0, stringBufferTop ) ;^[CLASS] JsDocTokenStream  [METHOD] getStringFromBuffer [RETURN_TYPE] String   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  
[BugLab_Variable_Misuse]^int N = lineStart;^244^^^^^243^252^int N = stringBufferTop;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ungetCursor == stringBuffer.length )  {^245^^^^^243^252^if  ( N == stringBuffer.length )  {^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( N == lineEndChar )  {^245^^^^^243^252^if  ( N == stringBuffer.length )  {^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^if  ( stringBuffer.length == N )  {^245^^^^^243^252^if  ( N == stringBuffer.length )  {^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^if  ( N == stringBuffer.length.length )  {^245^^^^^243^252^if  ( N == stringBuffer.length )  {^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( N != stringBuffer.length )  {^245^^^^^243^252^if  ( N == stringBuffer.length )  {^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^char[] tmp = new char[ungetCursor * 2];^246^^^^^243^252^char[] tmp = new char[stringBuffer.length * 2];^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^char[] / tmp = new char[stringBuffer.length * 2];^246^^^^^243^252^char[] tmp = new char[stringBuffer.length * 2];^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^char[] tmp = new char[stringBuffer.length * 1];^246^^^^^243^252^char[] tmp = new char[stringBuffer.length * 2];^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( stringBuffer, 0, tmp, 0, lineno ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( tmp, 0, stringBuffer, 0, N ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( stringBuffer, 0, N, 0, tmp ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^System.arraycopy ( N, 0, tmp, 0, stringBuffer ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( stringBuffer, c2, tmp, c2, N ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( stringBuffer, cursor, tmp, cursor, N ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^stringBuffer = stringBuffer;^248^^^^^243^252^stringBuffer = tmp;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^char[] tmp = new char[lineEndChar * 2];^246^^^^^243^252^char[] tmp = new char[stringBuffer.length * 2];^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^char[] + tmp = new char[stringBuffer.length * 2];^246^^^^^243^252^char[] tmp = new char[stringBuffer.length * 2];^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^System.arraycopy ( stringBuffer, 0, tmp, 0, lineStart ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^System.arraycopy ( stringBuffer, c, tmp, c, N ) ;^247^^^^^243^252^System.arraycopy ( stringBuffer, 0, tmp, 0, N ) ;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^stringBufferTop = lineStart + 1;^251^^^^^243^252^stringBufferTop = N + 1;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^stringBufferTop = N ;^251^^^^^243^252^stringBufferTop = N + 1;^[CLASS] JsDocTokenStream  [METHOD] addToString [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = tokenEnd;^257^^^^^254^259^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] ungetChar [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( c == lineStart )  {^263^^^^^261^270^if  ( c == test )  {^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^if  ( test == c )  {^263^^^^^261^270^if  ( c == test )  {^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c != test )  {^263^^^^^261^270^if  ( c == test )  {^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return true;^268^^^^^261^270^return false;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^ungetCharIgnoreLineEnd ( ungetCursor ) ;^267^^^^^261^270^ungetCharIgnoreLineEnd ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^tokenEnd = sourceCursor;^264^^^^^261^270^tokenEnd = cursor;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return false;^265^^^^^261^270^return true;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^tokenEnd = test;^264^^^^^261^270^tokenEnd = cursor;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^ungetCharIgnoreLineEnd ( lineno ) ;^267^^^^^261^270^ungetCharIgnoreLineEnd ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] matchChar [RETURN_TYPE] boolean   int test [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart <= 'Z' )  {^274^^^^^272^279^if  ( c <= 'Z' )  {^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c < 'Z' )  {^274^^^^^272^279^if  ( c <= 'Z' )  {^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return 'a' <= sourceEnd && c <= 'z';^277^^^^^272^279^return 'a' <= c && c <= 'z';^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return 'a' <= c || c <= 'z';^277^^^^^272^279^return 'a' <= c && c <= 'z';^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return 'a' < c && c <= 'z';^277^^^^^272^279^return 'a' <= c && c <= 'z';^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return 'A' <= sourceEnd;^275^^^^^272^279^return 'A' <= c;^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return 'A' < c;^275^^^^^272^279^return 'A' <= c;^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return 'A' <= lineno;^275^^^^^272^279^return 'A' <= c;^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return 'A' > c;^275^^^^^272^279^return 'A' <= c;^[CLASS] JsDocTokenStream  [METHOD] isAlpha [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return true;^300^^^^^281^305^return false;^[CLASS] JsDocTokenStream  [METHOD] isJSDocString [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return !isJSSpace ( sourceCursor ) ;^303^^^^^281^305^return !isJSSpace ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] isJSDocString [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return !isJSSpace ( lineno ) ;^303^^^^^281^305^return !isJSSpace ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] isJSDocString [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart <= 127 )  {^312^^^^^311^318^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == 127 )  {^312^^^^^311^318^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( c <=  )  {^312^^^^^311^318^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return sourceEnd == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^315^316^^^^311^318^return c == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c == 0xA0 && Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^315^316^^^^311^318^return c == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c >= 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^315^316^^^^311^318^return c == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c != 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^315^316^^^^311^318^return c == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineno == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c == 0x20 && c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c <= 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c != 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c < 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineStart == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c > 0x20 || c == 0x9 || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return c == 0x20 || c == 0xinitCharno || c == 0xC || c == 0xB;^313^^^^^311^318^return c == 0x20 || c == 0x9 || c == 0xC || c == 0xB;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineStart == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^315^316^^^^311^318^return c == 0xA0 || Character.getType (  ( char ) c )  == Character.SPACE_SEPARATOR;^[CLASS] JsDocTokenStream  [METHOD] isJSSpace [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return tokenEnd > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^321^^^^^320^322^return c > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^[CLASS] JsDocTokenStream  [METHOD] isJSFormatChar [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c > 127 || Character.getType (  ( char ) c )  == Character.FORMAT;^321^^^^^320^322^return c > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^[CLASS] JsDocTokenStream  [METHOD] isJSFormatChar [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c < 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^321^^^^^320^322^return c > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^[CLASS] JsDocTokenStream  [METHOD] isJSFormatChar [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return c > 127 && Character.getType (  ( char ) c )  != Character.FORMAT;^321^^^^^320^322^return c > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^[CLASS] JsDocTokenStream  [METHOD] isJSFormatChar [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return c > 128 && Character.getType (  ( char ) c )  == Character.FORMAT;^321^^^^^320^322^return c > 127 && Character.getType (  ( char ) c )  == Character.FORMAT;^[CLASS] JsDocTokenStream  [METHOD] isJSFormatChar [RETURN_TYPE] boolean   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^ungetChar ( sourceEnd ) ;^334^^^^^332^336^ungetChar ( c ) ;^[CLASS] JsDocTokenStream  [METHOD] peekChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return test;^335^^^^^332^336^return c;^[CLASS] JsDocTokenStream  [METHOD] peekChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( test != 0 )  {^339^^^^^324^354^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( ungetCursor == 0 )  {^339^^^^^324^354^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( ungetCursor !=  )  {^339^^^^^324^354^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart == -1 )  {^342^^^^^327^357^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^342^^^^^327^357^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno >= -1 )  {^342^^^^^327^357^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -c1 )  {^342^^^^^327^357^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ungetCursor == sourceEnd )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == stringBufferTop )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor > sourceEnd )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor <= sourceEnd )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart == -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^hitEOF = false;^351^^^^^336^366^hitEOF = true;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return sourceCursor;^355^^^^^340^370^return EOF_CHAR;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno <= -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -tokenEnd )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( test >= 0 )  {^361^^^^^346^376^if  ( lineEndChar >= 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar < 0 )  {^361^^^^^346^376^if  ( lineEndChar >= 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( lineEndChar >= stringBufferTop )  {^361^^^^^346^376^if  ( lineEndChar >= 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineEndChar == '\r' && tokenBeg == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( test == '\r' && c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^if  ( c == '\r' && lineEndChar == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar == '\r' || c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar != '\r' && c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar == '\r' && c != '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineStart = sourceEnd - 1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^lineStart = sourceCursor  !=  1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineStart = sourceCursor - stringBufferTop;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( tokenBeg == '\r' && c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c < 127 )  {^371^^^^^356^386^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( ungetCursor )  )  {^377^^^^^371^384^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineStart )  )  {^380^^^^^371^384^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceCursor;^381^^^^^371^384^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineStart;^381^^^^^371^384^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineStart )  )  {^377^^^^^371^384^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart == '\n' || c == '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' && c == '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c < '\n' || c == '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' || c != '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceEnd;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineStart;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == '\n' || c == '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c != '\n' || c == '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineStart )  )  {^377^^^^^362^392^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineStart )  )  {^380^^^^^365^395^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceEnd;^381^^^^^366^396^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( stringBufferTop == -1 )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno <= -1 )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -test )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineEndChar == sourceEnd )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == lineno )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor >= sourceEnd )  {^350^^^^^335^365^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno > -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == - )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineStart;^355^^^^^340^370^return EOF_CHAR;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( tokenEnd == -1 )  {^352^^^^^337^367^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno >= 0 )  {^361^^^^^346^376^if  ( lineEndChar >= 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar > 0 )  {^361^^^^^346^376^if  ( lineEndChar >= 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineEndChar == '\r' && stringBufferTop == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == '\r' && c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar <= '\r' && c == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( lineEndChar == '\r' && c >= '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineEndChar = -tokenBeg;^366^^^^^351^381^lineEndChar = -1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineStart = lineEndChar - 1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^lineStart = sourceCursor  <  1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineStart = sourceCursor - test;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineEndChar == '\r' && sourceEnd == '\n' )  {^362^^^^^347^377^if  ( lineEndChar == '\r' && c == '\n' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart <= 127 )  {^371^^^^^356^386^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == 127 )  {^371^^^^^356^386^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( c <= ungetCursor )  {^371^^^^^356^386^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( sourceCursor )  )  {^377^^^^^371^384^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( ungetCursor )  )  {^380^^^^^371^384^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineno;^381^^^^^371^384^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = stringBufferTop;^381^^^^^371^384^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' || c >= '\r' )  {^372^^^^^357^387^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = ungetCursor;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceCursor;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = tokenEnd;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineno )  )  {^377^^^^^362^392^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineStart;^381^^^^^366^396^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == -1 )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -ungetCursor )  {^386^^^^^371^401^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineEndChar = -2;^366^^^^^351^381^lineEndChar = -1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineStart = test - 1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineStart = sourceCursor - c2;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineno;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return tokenBeg;^390^^^^^375^405^return c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^c = string.charAt ( sourceCursor++ ) ;^358^^^^^343^373^c = sourceString.charAt ( sourceCursor++ ) ;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineEndChar = -lineEndChar;^366^^^^^351^381^lineEndChar = -1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^lineStart = sourceCursor   instanceof   1;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^lineStart = sourceCursor ;^367^^^^^352^382^lineStart = sourceCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = test;^373^^^^^358^388^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineno;^381^^^^^366^396^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return sourceCursor;^390^^^^^375^405^return c;^[CLASS] JsDocTokenStream  [METHOD] getChar [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart != 0 )  {^395^^^^^380^410^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( ungetCursor == 0 )  {^395^^^^^380^410^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( ungetCursor != lineEndChar )  {^395^^^^^380^410^if  ( ungetCursor != 0 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^398^^^^^383^413^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -2 )  {^398^^^^^383^413^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == -1 )  {^398^^^^^383^413^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -test )  {^398^^^^^383^413^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == test )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^if  ( sourceEnd == sourceCursor )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor != sourceEnd )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor >= sourceEnd )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == -1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -N )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^hitEOF = false;^407^^^^^392^422^hitEOF = true;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineStart;^411^^^^^396^426^return EOF_CHAR;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart == -1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -c1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno <= 127 )  {^417^^^^^402^432^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == 127 )  {^417^^^^^402^432^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( test )  )  {^423^^^^^417^430^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceCursor;^427^^^^^417^430^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = ungetCursor;^427^^^^^417^430^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineno )  )  {^423^^^^^417^430^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineStart )  )  {^426^^^^^417^430^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' && c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c < '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' || c != '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineStart;^419^^^^^404^434^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceEnd;^419^^^^^404^434^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c != '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = tokenEnd;^419^^^^^404^434^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( tokenBeg )  )  {^426^^^^^411^441^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = lineno;^427^^^^^412^442^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceEnd == -1 )  {^432^^^^^417^447^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno != -1 )  {^432^^^^^417^447^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -c2 )  {^432^^^^^417^447^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart == sourceEnd )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceCursor == sourceCursor )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( sourceCursor <= sourceEnd )  {^406^^^^^391^421^if  ( sourceCursor == sourceEnd )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceEnd == -1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -c )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineno;^411^^^^^396^426^return EOF_CHAR;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( test == -1 )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( charno == -initCharno )  {^408^^^^^393^423^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineStart <= 127 )  {^417^^^^^402^432^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c > 127 )  {^417^^^^^402^432^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^if  ( c <= lineStart )  {^417^^^^^402^432^if  ( c <= 127 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineStart )  )  {^423^^^^^417^430^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineno )  )  {^426^^^^^417^430^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceEnd;^427^^^^^417^430^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( sourceEnd )  )  {^426^^^^^417^430^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( tokenEnd == '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c >= '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( sourceEnd == '\n' || c == '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( c == '\n' || c > '\r' )  {^418^^^^^403^433^if  ( c == '\n' || c == '\r' )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( sourceEnd )  )  {^423^^^^^408^438^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( sourceEnd )  )  {^426^^^^^411^441^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = ungetCursor;^427^^^^^412^442^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( lineno == -1 )  {^432^^^^^417^447^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^if  ( charno > -1 )  {^432^^^^^417^447^if  ( charno == -1 )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^c = string.charAt ( sourceCursor++ ) ;^414^^^^^399^429^c = sourceString.charAt ( sourceCursor++ ) ;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceEnd;^427^^^^^412^442^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return stringBufferTop;^436^^^^^421^451^return c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( isJSFormatChar ( lineno )  )  {^423^^^^^408^438^if  ( isJSFormatChar ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineno )  )  {^426^^^^^411^441^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^lineEndChar = sourceCursor;^427^^^^^412^442^lineEndChar = c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return lineStart;^436^^^^^421^451^return c;^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^if  ( ScriptRuntime.isJSLineTerminator ( lineStart )  )  {^426^^^^^411^441^if  ( ScriptRuntime.isJSLineTerminator ( c )  )  {^[CLASS] JsDocTokenStream  [METHOD] getCharIgnoreLineEnd [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^ungetBuffer[ungetCursor++] = lineStart;^441^^^^^440^443^ungetBuffer[ungetCursor++] = c;^[CLASS] JsDocTokenStream  [METHOD] ungetCharIgnoreLineEnd [RETURN_TYPE] void   int c [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Variable_Misuse]^return sourceCursor - lineStart - lineno - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^return ungetCursor - lineStart - sourceCursor - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Argument_Swapping]^return sourceCursor - ungetCursor - lineStart - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return sourceCursor  ||  lineStart - ungetCursor - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return sourceCursor  <  lineStart - ungetCursor - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Operator]^return sourceCursor  <<  lineStart - ungetCursor - 1;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
[BugLab_Wrong_Literal]^return sourceCursor - lineStart - ungetCursor ;^449^^^^^448^450^return sourceCursor - lineStart - ungetCursor - 1;^[CLASS] JsDocTokenStream  [METHOD] getOffset [RETURN_TYPE] int   [VARIABLES] int[]  ungetBuffer  boolean  hitEOF  String  sourceString  string  int  EOF_CHAR  N  c  c1  c2  charno  cursor  initCharno  initLineno  lineEndChar  lineStart  lineno  sourceCursor  sourceEnd  stringBufferTop  test  tokenBeg  tokenEnd  ungetCursor  char[]  stringBuffer  tmp  
