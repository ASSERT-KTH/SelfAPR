[buglab_swap_variables]^passes.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^passes.add ( new PassFactoryDelegate ( compiler )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^passes.add ( new PassFactoryDelegate (  factory )  ) ;^142^^^^^141^143^passes.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addOneTimePass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^pass.process ( root, externs ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^pass.process (  root ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^pass.process ( externs ) ;^168^^^^^166^173^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^Preconditions.checkState ( currentPassName == null && currentTracer == null ) ;^179^^^^^178^182^Preconditions.checkState ( currentTracer == null && currentPassName == null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] startPass [RETURN_TYPE] void   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^Preconditions.checkState ( currentPassName != null && currentTracer != null ) ;^188^^^^^187^201^Preconditions.checkState ( currentTracer != null && currentPassName != null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^stopTracer ( currentPassName, currentTracer ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^stopTracer (  currentPassName ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^stopTracer ( currentTracer ) ;^189^^^^^187^201^stopTracer ( currentTracer, currentPassName ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^maybeSanityCheck ( root, externs ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^maybeSanityCheck (  root ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^maybeSanityCheck ( externs ) ;^195^^^^^187^201^maybeSanityCheck ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] endPass [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  Exception  e  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  
[buglab_swap_variables]^sanityCheck.create ( compiler ) .process ( root, externs ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^sanityCheck.create ( compiler ) .process (  root ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^sanityCheck.create ( compiler ) .process ( externs ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^sanityCheck.create ( root ) .process ( externs, compiler ) ;^208^^^^^206^210^sanityCheck.create ( compiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] maybeSanityCheck [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^String comment = recentChange + ( passName.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^220^221^^^^219^226^String comment = passName + ( recentChange.hasCodeChanged (  )  ? " on recently changed AST" : "" ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] newTracer [RETURN_TYPE] Tracer   String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^tracker.recordPassStop ( result, passName ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[buglab_swap_variables]^tracker.recordPassStop (  result ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[buglab_swap_variables]^tracker.recordPassStop ( passName ) ;^231^^^^^228^233^tracker.recordPassStop ( passName, result ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] stopTracer [RETURN_TYPE] void   Tracer t String passName [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  long  result  
[buglab_swap_variables]^processInternal ( root, externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^processInternal (  root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^processInternal ( externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^endPass ( root, externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^endPass (  root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^endPass ( externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^factory.create ( externs ) .process ( myCompiler, root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^factory.create ( myCompiler ) .process (  root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^factory.create ( myCompiler ) .process ( externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate ( compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate (  factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^order.add ( pass ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  
[buglab_swap_variables]^compiler.throwInternalError (  null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[buglab_swap_variables]^pass.process ( root, externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[buglab_swap_variables]^pass.process (  root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[buglab_swap_variables]^pass.process ( externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  myNames  Tracer  currentTracer  t  Node  externs  root  PerformanceTracker  tracker  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  CompilerPass  pass  AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  List  OPTIMAL_ORDER  factories  loopsRun  myPasses  order  passes  
[buglab_swap_variables]^mixedupPasses.add ( random.remove ( myPasses.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^myPasses.remove ( myPasses.nextInt ( random.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Random  random  Tracer  currentTracer  t  PerformanceTracker  tracker  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^if  ( passName.name.equals ( pass )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^if  ( pass.equals ( pass.nameName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^if  ( pass.name.name.equals ( passName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^if  ( passName.equals ( pass.name )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] PhaseOptimizer NamedPass PassFactoryDelegate Loop LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] AbstractCompiler  compiler  myCompiler  RecentChange  recentChange  boolean  isCurrentLoopPopulated  loopMutex  randomizeLoops  Set  myNames  Tracer  currentTracer  t  PerformanceTracker  tracker  NamedPass  pass  List  OPTIMAL_ORDER  factories  loopsRun  mixedupPasses  myPasses  optimalPasses  order  passes  String  OPTIMIZE_LOOP_ERROR  comment  currentPassName  name  passName  passToCheck  Logger  logger  PassFactory  factory  sanityCheck  int  MAX_LOOPS  count  
[buglab_swap_variables]^processInternal ( root, externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^processInternal (  root ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^processInternal ( externs ) ;^248^^^^^245^250^processInternal ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^endPass ( root, externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^endPass (  root ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^endPass ( externs ) ;^249^^^^^245^250^endPass ( externs, root ) ;^[CLASS] NamedPass  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] String  name  Node  externs  root  boolean  
[buglab_swap_variables]^factory.create ( myCompiler ) .process (  root ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[buglab_swap_variables]^factory.create ( myCompiler ) .process ( root, externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[buglab_swap_variables]^factory.create ( myCompiler ) .process ( externs ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[buglab_swap_variables]^factory.create ( root ) .process ( externs, myCompiler ) ;^271^^^^^270^272^factory.create ( myCompiler ) .process ( externs, root ) ;^[CLASS] PassFactoryDelegate  [METHOD] processInternal [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  myCompiler  boolean  PassFactory  factory  Node  externs  root  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate ( factory, compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate ( compiler )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[buglab_swap_variables]^myPasses.add ( new PassFactoryDelegate (  factory )  ) ;^299^^^^^293^300^myPasses.add ( new PassFactoryDelegate ( compiler, factory )  ) ;^[CLASS] LoopInternal  [METHOD] addLoopedPass [RETURN_TYPE] void   PassFactory factory [VARIABLES] List  myPasses  Set  myNames  String  name  boolean  PassFactory  factory  
[buglab_swap_variables]^order.add ( pass.name.name ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[buglab_swap_variables]^order.add ( pass ) ;^308^^^^^305^311^order.add ( pass.name ) ;^[CLASS] LoopInternal  [METHOD] getPassOrder [RETURN_TYPE] List   [VARIABLES] NamedPass  pass  List  myPasses  order  Set  myNames  boolean  
[buglab_swap_variables]^compiler.throwInternalError (  null ) ;^328^^^^^313^343^compiler.throwInternalError ( OPTIMIZE_LOOP_ERROR, null ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[buglab_swap_variables]^pass.process ( root, externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[buglab_swap_variables]^pass.process (  root ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[buglab_swap_variables]^pass.process ( externs ) ;^334^^^^^319^349^pass.process ( externs, root ) ;^[CLASS] LoopInternal  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] List  myPasses  order  Set  myNames  boolean  int  count  Node  externs  root  CompilerPass  pass  
[buglab_swap_variables]^mixedupPasses.add ( random.remove ( myPasses.nextInt ( myPasses.size (  )  )  )  ) ;^355^356^^^^351^359^mixedupPasses.add ( myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[buglab_swap_variables]^myPasses.remove ( myPasses.nextInt ( random.size (  )  )  )  ) ;^356^^^^^351^359^myPasses.remove ( random.nextInt ( myPasses.size (  )  )  )  ) ;^[CLASS] LoopInternal  [METHOD] randomizePasses [RETURN_TYPE] void   [VARIABLES] List  mixedupPasses  myPasses  order  Set  myNames  boolean  Random  random  
[buglab_swap_variables]^if  ( pass.name.name.equals ( passName )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[buglab_swap_variables]^if  ( passName.equals ( pass.name )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
[buglab_swap_variables]^if  ( passName.name.equals ( pass )  )  {^372^^^^^362^381^if  ( pass.name.equals ( passName )  )  {^[CLASS] LoopInternal  [METHOD] optimizePasses [RETURN_TYPE] void   [VARIABLES] NamedPass  pass  List  mixedupPasses  myPasses  optimalPasses  order  Set  myNames  String  passName  boolean  
