[buglab_swap_variables]^this ( outputCharset, consumer, true ) ;^67^^^^^66^68^this ( consumer, outputCharset, true ) ;^[CLASS] CodeGenerator Context  [METHOD] <init> [RETURN_TYPE] Charset)   CodeConsumer consumer Charset outputCharset [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  CodeConsumer  cc  consumer  Charset  outputCharset  boolean  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^this (  outputCharset, true ) ;^67^^^^^66^68^this ( consumer, outputCharset, true ) ;^[CLASS] CodeGenerator Context  [METHOD] <init> [RETURN_TYPE] Charset)   CodeConsumer consumer Charset outputCharset [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  CodeConsumer  cc  consumer  Charset  outputCharset  boolean  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^this ( consumer,  true ) ;^67^^^^^66^68^this ( consumer, outputCharset, true ) ;^[CLASS] CodeGenerator Context  [METHOD] <init> [RETURN_TYPE] Charset)   CodeConsumer consumer Charset outputCharset [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  CodeConsumer  cc  consumer  Charset  outputCharset  boolean  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.OTHER ) ;^83^^^^^82^84^add ( n, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  CodeConsumer  cc  consumer  boolean  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  n  
[buglab_swap_variables]^if  ( opstr != null && last != first )  {^98^^^^^83^113^if  ( opstr != null && first != last )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( opstr != lastull && first != n )  {^98^^^^^83^113^if  ( opstr != null && first != last )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^} else if  ( NodeUtil.isAssignmentOp ( last )  && NodeUtil.isAssignmentOp ( n )  )  {^114^^^^^99^129^} else if  ( NodeUtil.isAssignmentOp ( n )  && NodeUtil.isAssignmentOp ( last )  )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( rhsContext, p + 1, last ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p + 1, rhsContext ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last + 1, rhsContext ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last + 1, rhsContext ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, rhsContext + 1, p ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, p + 1 ) ;^118^^^^^114^119^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last, rhsContext ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p, rhsContext ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last,  rhsContext ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, rhsContext, p ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, p ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( rhsContext, p, last ) ;^116^^^^^101^131^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last + 1, rhsContext ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p + 1, rhsContext ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last + 1, rhsContext ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, rhsContext + 1, p ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, p + 1 ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( rhsContext, p, last ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p, rhsContext ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last, rhsContext ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last,  rhsContext ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, p ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( p, first, context ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  p, context ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first,  context ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, context, p ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, p ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^cc.addOp (  true ) ;^102^^^^^87^117^cc.addOp ( opstr, true ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( rhsContext, p, last ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p, rhsContext ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, rhsContext, p ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last,  rhsContext ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, p ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( rhsContext, p + 1, last ) ;^118^^^^^103^133^addExpr ( last, p + 1, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last, rhsContext, p ) ;^113^^^^^111^119^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, p, first ) ;^101^^^^^86^116^addLeftExpr ( first, p, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last, rhsContext ) ;^113^^^^^98^128^addExpr ( last, p, rhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.PRESERVE_BLOCK ) ;^143^^^^^128^158^add ( last, Context.PRESERVE_BLOCK ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList ( context, false, getContextForNoInOperator ( first )  ) ;^184^^^^^169^199^addList ( first, false, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList (  false, getContextForNoInOperator ( context )  ) ;^184^^^^^169^199^addList ( first, false, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( n == firstull || first.getType (  )  == Token.EMPTY )  {^189^^^^^174^204^if  ( first == null || first.getType (  )  == Token.EMPTY )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( context, 0, getContextForNoInOperator ( first )  ) ;^200^^^^^189^202^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  0, getContextForNoInOperator ( context )  ) ;^200^^^^^189^202^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( context, 0, getContextForNoInOperator ( first )  ) ;^200^^^^^195^201^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  0, getContextForNoInOperator ( context )  ) ;^200^^^^^195^201^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( last.getType (  )  != Token.STRING || first.getType (  )  != Token.STRING )  {^252^253^^^^237^267^if  ( first.getType (  )  != Token.STRING || last.getType (  )  != Token.STRING )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( last + regexp.getString (  )  ) ;^261^^^^^246^276^add ( regexp + last.getString (  )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^351^352^^^^330^353^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^351^352^^^^330^353^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  0, Context.IN_FOR_INIT_CLAUSE ) ;^335^^^^^332^336^addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.IN_FOR_INIT_CLAUSE ) ;^333^^^^^318^348^add ( first, Context.IN_FOR_INIT_CLAUSE ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  0, Context.IN_FOR_INIT_CLAUSE ) ;^335^^^^^320^350^addExpr ( first, 0, Context.IN_FOR_INIT_CLAUSE ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^342^343^^^^327^357^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^342^343^^^^327^357^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^cc.addOp (  false ) ;^423^^^^^419^425^cc.addOp ( o, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, NodeUtil.precedence ( type ) , first ) ;^420^^^^^405^435^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  NodeUtil.precedence ( type ) , context ) ;^420^^^^^405^435^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( type, NodeUtil.precedence ( first ) , context ) ;^420^^^^^405^435^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( context ) , type ) ;^420^^^^^405^435^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( type )  ) ;^420^^^^^405^435^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^cc.addOp (  false ) ;^421^^^^^406^436^cc.addOp ( o, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( first.getNext (  ) , Context. false ) ;^455^^^^^448^457^addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( first.getNext (  ) , Context. false ) ;^449^450^^^^434^464^addNonEmptyExpression ( first.getNext (  ) , Context.BEFORE_DANGLING_ELSE, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^452^453^^^^437^467^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^452^453^^^^437^467^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( validation == Token.EXPR_VOID && type )  {^500^^^^^485^515^if  ( type == Token.EXPR_VOID && validation )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( first != c )  {^548^^^^^533^563^if  ( c != first )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.STATEMENT ) ;^306^^^^^291^321^add ( c, Context.STATEMENT ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( Node first = c; c != null; c = c.getNext (  ) .getNext (  )  )  {^547^^^^^532^562^for  ( Node c = first; c != null; c = c.getNext (  ) .getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^throw typeew Error ( "Unknown n " + type + "\n" + n.toStringTree (  )  ) ;^610^^^^^595^625^throw new Error ( "Unknown type " + type + "\n" + n.toStringTree (  )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^String regexp = regexpEscape ( outputCharsetEncoder.getString (  ) , first ) ;^257^^^^^242^272^String regexp = regexpEscape ( first.getString (  ) , outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^String regexp = regexpEscape ( first.getString (  )  ) ;^257^^^^^242^272^String regexp = regexpEscape ( first.getString (  ) , outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^boolean stripBlock = context.isSyntheticBlock (  )  || (  ( n != Context.PRESERVE_BLOCK )  &&  ( n.getChildCount (  )  < 2 )  ) ;^300^301^^^^285^315^boolean stripBlock = n.isSyntheticBlock (  )  || (  ( context != Context.PRESERVE_BLOCK )  &&  ( n.getChildCount (  )  < 2 )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.PRESERVE_BLOCK ) ;^132^^^^^117^147^add ( first, Context.PRESERVE_BLOCK ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.PRESERVE_BLOCK ) ;^158^^^^^143^173^add ( last, Context.PRESERVE_BLOCK ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( context, 0, getContextForNoInOperator ( first )  ) ;^200^^^^^185^215^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  0, getContextForNoInOperator ( context )  ) ;^200^^^^^185^215^addExpr ( first, 0, getContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList ( n,  ( int[] )  first.getProp ( Node.SKIP_INDEXES_PROP )  ) ;^208^^^^^193^223^addList ( first,  ( int[] )  n.getProp ( Node.SKIP_INDEXES_PROP )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList (   ( int[] )  n.getProp ( Node.SKIP_INDEXES_PROP )  ) ;^208^^^^^193^223^addList ( first,  ( int[] )  n.getProp ( Node.SKIP_INDEXES_PROP )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList ( context, false, first ) ;^219^^^^^204^234^addList ( first, false, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList (  false, context ) ;^219^^^^^204^234^addList ( first, false, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addList ( first, false ) ;^219^^^^^204^234^addList ( first, false, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( type, NodeUtil.precedence ( first )  ) ;^236^^^^^221^251^addExpr ( first, NodeUtil.precedence ( type )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  NodeUtil.precedence ( type )  ) ;^236^^^^^221^251^addExpr ( first, NodeUtil.precedence ( type )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, p + 1, first ) ;^243^^^^^228^258^addLeftExpr ( first, p + 1, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  p + 1, context ) ;^243^^^^^228^258^addLeftExpr ( first, p + 1, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, context + 1, p ) ;^243^^^^^228^258^addLeftExpr ( first, p + 1, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first + 1, context ) ;^243^^^^^228^258^addLeftExpr ( first, p + 1, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, p + 1 ) ;^243^^^^^228^258^addLeftExpr ( first, p + 1, context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p.getNext (  ) , first ) ;^245^^^^^230^260^addExpr ( first.getNext (  ) , p ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( first.getNext (  )  ) ;^245^^^^^230^260^addExpr ( first.getNext (  ) , p ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( p, last ) ;^247^^^^^232^262^addExpr ( last, p ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  p ) ;^247^^^^^232^262^addExpr ( last, p ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( last ) ;^247^^^^^232^262^addExpr ( last, p ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.PRESERVE_BLOCK ) ;^290^^^^^275^305^add ( last, Context.PRESERVE_BLOCK ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^351^352^^^^336^366^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^351^352^^^^336^366^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  Context.OTHER, false ) ;^359^^^^^344^374^addNonEmptyExpression ( first, Context.OTHER, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( first, Context. false ) ;^359^^^^^344^374^addNonEmptyExpression ( first, Context.OTHER, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^371^372^^^^356^386^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^371^372^^^^356^386^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( type, NodeUtil.precedence ( first ) , context ) ;^386^^^^^371^401^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  NodeUtil.precedence ( type ) , context ) ;^386^^^^^371^401^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, NodeUtil.precedence ( type ) , first ) ;^386^^^^^371^401^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( type )  ) ;^386^^^^^371^401^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( type, NodeUtil.precedence ( first ) , context ) ;^397^^^^^382^412^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  NodeUtil.precedence ( type ) , context ) ;^397^^^^^382^412^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, NodeUtil.precedence ( type ) , first ) ;^397^^^^^382^412^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( type )  ) ;^397^^^^^382^412^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , false ) ;^408^409^^^^393^423^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , false ) ;^408^409^^^^393^423^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^cc.addOp (  false ) ;^423^^^^^408^438^cc.addOp ( o, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( context, NodeUtil.precedence ( type ) , first ) ;^430^^^^^415^445^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr (  NodeUtil.precedence ( type ) , context ) ;^430^^^^^415^445^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( type, NodeUtil.precedence ( first ) , context ) ;^430^^^^^415^445^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( context ) , type ) ;^430^^^^^415^445^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addLeftExpr ( first, NodeUtil.precedence ( type )  ) ;^430^^^^^415^445^addLeftExpr ( first, NodeUtil.precedence ( type ) , context ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( first.getNext (  ) , Context. false ) ;^455^^^^^440^470^addNonEmptyExpression ( first.getNext (  ) , Context.OTHER, false ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.START_OF_EXPR ) ;^504^^^^^489^519^add ( first, Context.START_OF_EXPR ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( precedence, first ) ;^518^^^^^503^533^addExpr ( first, precedence ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  precedence ) ;^518^^^^^503^533^addExpr ( first, precedence ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( first ) ;^518^^^^^503^533^addExpr ( first, precedence ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( jsString ( outputCharsetEncoder.getString (  ) , n )  ) ;^531^^^^^516^546^add ( jsString ( n.getString (  ) , outputCharsetEncoder )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( jsString ( n.getString (  )  )  ) ;^531^^^^^516^546^add ( jsString ( n.getString (  ) , outputCharsetEncoder )  ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression ( context, getContextForNonEmptyExpression ( last ) , true ) ;^600^601^^^^585^615^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^addNonEmptyExpression (  getContextForNonEmptyExpression ( context ) , true ) ;^600^601^^^^585^615^addNonEmptyExpression ( last, getContextForNonEmptyExpression ( context ) , true ) ;^[CLASS] CodeGenerator Context  [METHOD] add [RETURN_TYPE] void   Node n Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  c  catchblock  first  last  n  next  CodeConsumer  cc  consumer  String  o  opstr  regexp  CharsetEncoder  outputCharsetEncoder  int  childCount  p  postProp  precedence  type  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.STATEMENT ) ;^649^^^^^646^656^add ( firstAndOnlyChild, Context.STATEMENT ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  Context.STATEMENT ) ;^649^^^^^634^664^add ( firstAndOnlyChild, Context.STATEMENT ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( context, nodeToProcess ) ;^663^^^^^660^670^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  context ) ;^663^^^^^660^670^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( nodeToProcess ) ;^663^^^^^660^670^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( context, nodeToProcess ) ;^663^^^^^648^678^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  context ) ;^663^^^^^648^678^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( nodeToProcess ) ;^663^^^^^648^678^add ( nodeToProcess, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addNonEmptyExpression [RETURN_TYPE] void   Node n Context context boolean allowNonBlockChild [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  firstAndOnlyChild  n  nodeToProcess  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  count  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( context, minPrecedence, n ) ;^683^^^^^682^684^addExpr ( n, minPrecedence, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addLeftExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  minPrecedence, context ) ;^683^^^^^682^684^addExpr ( n, minPrecedence, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addLeftExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( minPrecedence, n, context ) ;^683^^^^^682^684^addExpr ( n, minPrecedence, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addLeftExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( n,  context ) ;^683^^^^^682^684^addExpr ( n, minPrecedence, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addLeftExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( n, minPrecedence ) ;^683^^^^^682^684^addExpr ( n, minPrecedence, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addLeftExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( minPrecedence, n, Context.OTHER ) ;^687^^^^^686^688^addExpr ( n, minPrecedence, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr (  minPrecedence, Context.OTHER ) ;^687^^^^^686^688^addExpr ( n, minPrecedence, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addExpr ( n,  Context.OTHER ) ;^687^^^^^686^688^addExpr ( n, minPrecedence, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^if  (  ( NodeUtil.precedence ( n.getType (  )  )  < context )  || (  ( minPrecedence == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^691^692^693^^^690^700^if  (  ( NodeUtil.precedence ( n.getType (  )  )  < minPrecedence )  || (  ( context == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^if  (  ( NodeUtil.precedence ( context.getType (  )  )  < minPrecedence )  || (  ( n == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^691^692^693^^^690^700^if  (  ( NodeUtil.precedence ( n.getType (  )  )  < minPrecedence )  || (  ( context == Context.IN_FOR_INIT_CLAUSE )  && ( n.getType (  )  == Token.IN )  )  ) {^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( context, n ) ;^698^^^^^690^700^add ( n, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  context ) ;^698^^^^^690^700^add ( n, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( n ) ;^698^^^^^690^700^add ( n, context ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^add ( context, clearContextForNoInOperator ( n )  ) ;^695^^^^^690^700^add ( n, clearContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^add (  clearContextForNoInOperator ( context )  ) ;^695^^^^^690^700^add ( n, clearContextForNoInOperator ( context )  ) ;^[CLASS] CodeGenerator Context  [METHOD] addExpr [RETURN_TYPE] void   Node n int minPrecedence Context context [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  Node  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  minPrecedence  char[]  HEX_CHARS  
[buglab_swap_variables]^addList (  true, Context.OTHER ) ;^703^^^^^702^704^addList ( firstInList, true, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  
[buglab_swap_variables]^addList (  isArrayOrFunctionArgument, Context.OTHER ) ;^707^^^^^706^708^addList ( firstInList, isArrayOrFunctionArgument, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  
[buglab_swap_variables]^addList ( firstInList,  Context.OTHER ) ;^707^^^^^706^708^addList ( firstInList, isArrayOrFunctionArgument, Context.OTHER ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  
[buglab_swap_variables]^addExpr ( isArrayOrFunctionArgument, n ? 1 : 0 ) ;^718^^^^^710^721^addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addExpr (  isArrayOrFunctionArgument ? 1 : 0 ) ;^718^^^^^710^721^addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addExpr ( n ? 1 : 0 ) ;^718^^^^^710^721^addExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr ( lhsContext, isArrayOrFunctionArgument ? 1 : 0, n ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr (  isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr ( n, lhsContext ? 1 : 0, isArrayOrFunctionArgument ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr ( n ? 1 : 0, lhsContext ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0 ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^for  ( Node firstInList = n; n != null; n = n.getNext (  )  )  {^712^^^^^710^721^for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^addLeftExpr ( isArrayOrFunctionArgument, n ? 1 : 0, lhsContext ) ;^715^^^^^710^721^addLeftExpr ( n, isArrayOrFunctionArgument ? 1 : 0, lhsContext ) ;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^boolean isFirst = firstInList == n;^713^^^^^710^721^boolean isFirst = n == firstInList;^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList boolean isArrayOrFunctionArgument Context lhsContext [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  firstInList  n  
[buglab_swap_variables]^while  ( skipIndexes != null && skipIndexes.length < nextSkipSlot )  {^737^^^^^733^752^while  ( skipIndexes != null && nextSkipSlot < skipIndexes.length )  {^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList int[] skipIndexes [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Node  firstInList  n  CodeConsumer  cc  consumer  int[]  skipIndexes  CharsetEncoder  outputCharsetEncoder  int  nextSkipSlot  nextSlot  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( firstInList != n )  {^746^^^^^733^752^if  ( n != firstInList )  {^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList int[] skipIndexes [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Node  firstInList  n  CodeConsumer  cc  consumer  int[]  skipIndexes  CharsetEncoder  outputCharsetEncoder  int  nextSkipSlot  nextSlot  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( Node firstInList = n; n != null; n = n.getNext (  )  )  {^736^^^^^733^752^for  ( Node n = firstInList; n != null; n = n.getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] addList [RETURN_TYPE] void   Node firstInList int[] skipIndexes [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Node  firstInList  n  CodeConsumer  cc  consumer  int[]  skipIndexes  CharsetEncoder  outputCharsetEncoder  int  nextSkipSlot  nextSlot  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( Node n = c; c != null; c = c.getNext (  )  )  {^761^^^^^760^764^for  ( Node c = n; c != null; c = c.getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] addAllSiblings [RETURN_TYPE] void   Node n [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  c  n  
[buglab_swap_variables]^for  ( snt i = 0; i < i.length (  ) ; i++ )  {^771^^^^^767^794^for  ( int i = 0; i < s.length (  ) ; i++ )  {^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^switch  ( i.charAt ( s )  )  {^772^^^^^767^794^switch  ( s.charAt ( i )  )  {^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( doubleq < singleq )  {^780^^^^^767^794^if  ( singleq < doubleq )  {^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return singlequotetrEscape ( s, quote, doublequote, s, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape (  quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return quotetrEscape ( s, s, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s,  doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return doublequotetrEscape ( s, quote, s, singlequote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, quote,  singlequote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, quote, doublequote,  "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, outputCharsetEncoder, doublequote, singlequote, "\\\\", quote ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, quote, doublequote, singlequote, "\\\\" ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, singlequote, doublequote, quote, "\\\\", outputCharsetEncoder ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, quote, doublequote, outputCharsetEncoder, "\\\\", singlequote ) ;^792^793^^^^767^794^return strEscape ( s, quote, doublequote, singlequote, "\\\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] jsString [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  char  quote  CodeConsumer  cc  consumer  String  doublequote  s  singlequote  CharsetEncoder  outputCharsetEncoder  int  doubleq  i  singleq  char[]  HEX_CHARS  
[buglab_swap_variables]^return outputCharsetEncodertrEscape ( s, '/', "\"", "'", "\\", s ) ;^798^^^^^797^799^return strEscape ( s, '/', "\"", "'", "\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] regexpEscape [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  String  s  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape (  '/', "\"", "'", "\\", outputCharsetEncoder ) ;^798^^^^^797^799^return strEscape ( s, '/', "\"", "'", "\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] regexpEscape [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  String  s  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^return strEscape ( s, '/', "\"", "'", "\\" ) ;^798^^^^^797^799^return strEscape ( s, '/', "\"", "'", "\\", outputCharsetEncoder ) ;^[CLASS] CodeGenerator Context  [METHOD] regexpEscape [RETURN_TYPE] String   String s CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  String  s  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( s >= 2 && (  ( i.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^826^827^828^^^811^841^if  ( i >= 2 && (  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( END_SCRIPT.regionMatches ( true, i + 1, s, 0, END_SCRIPT.length (  )  )  )  {^836^837^^^^821^851^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( i.regionMatches ( true, s + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^836^837^^^^821^851^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( s.regionMatches ( true + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^836^837^^^^821^851^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( s.regionMatches ( true, i + 1,  0, END_SCRIPT.length (  )  )  )  {^836^837^^^^821^851^if  ( s.regionMatches ( true, i + 1, END_SCRIPT, 0, END_SCRIPT.length (  )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^863^^^^^846^865^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^863^^^^^846^865^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^863^^^^^846^865^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^if  ( c.canEncode ( outputCharsetEncoder )  )  {^847^^^^^832^862^if  ( outputCharsetEncoder.canEncode ( c )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^851^^^^^847^852^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^851^^^^^847^852^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^851^^^^^847^852^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^851^^^^^836^866^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^851^^^^^836^866^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^851^^^^^836^866^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^863^^^^^857^864^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^863^^^^^857^864^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^863^^^^^857^864^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^char c = i.charAt ( s ) ;^817^^^^^802^832^char c = s.charAt ( i ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^case '\\': backslashEscape.append ( sb ) ; break;^822^^^^^807^837^case '\\': sb.append ( backslashEscape ) ; break;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^case '\"': doublequoteEscape.append ( sb ) ; break;^823^^^^^808^838^case '\"': sb.append ( doublequoteEscape ) ; break;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^case '\'': singlequoteEscape.append ( sb ) ; break;^824^^^^^809^839^case '\'': sb.append ( singlequoteEscape ) ; break;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^(  ( i.charAt ( s - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^827^828^^^^812^842^(  ( s.charAt ( i - 1 )  == '-' && s.charAt ( i - 2 )  == '-' )  || ( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^( i.charAt ( s - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^828^^^^^813^843^( s.charAt ( i - 1 )  == ']' && s.charAt ( i - 2 )  == ']' )  )  )  {^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^863^^^^^848^878^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^863^^^^^848^878^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^863^^^^^848^878^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] strEscape [RETURN_TYPE] String   String s char quote String doublequoteEscape String singlequoteEscape String backslashEscape CharsetEncoder outputCharsetEncoder [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  quote  CodeConsumer  cc  consumer  String  END_SCRIPT  backslashEscape  doublequoteEscape  s  singlequoteEscape  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c, sb ) ;^888^^^^^872^892^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] identifierEscape [RETURN_TYPE] String   String s [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  String  s  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  c ) ;^888^^^^^872^892^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] identifierEscape [RETURN_TYPE] String   String s [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  String  s  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb ) ;^888^^^^^872^892^appendHexJavaScriptRepresentation ( sb, c ) ;^[CLASS] CodeGenerator Context  [METHOD] identifierEscape [RETURN_TYPE] String   String s [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  String  s  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( snt i = 0; i < i.length (  ) ; i++ )  {^880^^^^^872^892^for  ( int i = 0; i < s.length (  ) ; i++ )  {^[CLASS] CodeGenerator Context  [METHOD] identifierEscape [RETURN_TYPE] String   String s [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  String  s  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^char c = i.charAt ( s ) ;^881^^^^^872^892^char c = s.charAt ( i ) ;^[CLASS] CodeGenerator Context  [METHOD] identifierEscape [RETURN_TYPE] String   String s [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  String  s  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^897^^^^^895^903^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] getNonEmptyChildCount [RETURN_TYPE] int   Node n [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Node  c  n  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  i  char[]  HEX_CHARS  
[buglab_swap_variables]^for  ( Node n = c.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^907^^^^^906^913^for  ( Node c = n.getFirstChild (  ) ; c != null; c = c.getNext (  )  )  {^[CLASS] CodeGenerator Context  [METHOD] getFirstNonEmptyChild [RETURN_TYPE] Node   Node n [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  lhsContext  rhsContext  CodeConsumer  cc  consumer  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  Node  c  n  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( sb, c ) ;^961^^^^^958^966^appendHexJavaScriptRepresentation ( c, sb ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   StringBuilder sb char c [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation (  sb ) ;^961^^^^^958^966^appendHexJavaScriptRepresentation ( c, sb ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   StringBuilder sb char c [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( c ) ;^961^^^^^958^966^appendHexJavaScriptRepresentation ( c, sb ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   StringBuilder sb char c [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  StringBuilder  sb  char  c  CodeConsumer  cc  consumer  IOException  ex  CharsetEncoder  outputCharsetEncoder  char[]  HEX_CHARS  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( out[0], surrogates ) ;^984^^^^^975^993^appendHexJavaScriptRepresentation ( surrogates[0], out ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   int codePoint Appendable out [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( surrogates[0] ) ;^984^^^^^975^993^appendHexJavaScriptRepresentation ( surrogates[0], out ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   int codePoint Appendable out [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( out[1], surrogates ) ;^985^^^^^975^993^appendHexJavaScriptRepresentation ( surrogates[1], out ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   int codePoint Appendable out [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  
[buglab_swap_variables]^appendHexJavaScriptRepresentation ( surrogates[1] ) ;^985^^^^^975^993^appendHexJavaScriptRepresentation ( surrogates[1], out ) ;^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   int codePoint Appendable out [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  
[buglab_swap_variables]^out.append ( "\\u" ) .append ( codePoint[ ( HEX_CHARS >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^988^989^990^991^^975^993^out.append ( "\\u" ) .append ( HEX_CHARS[ ( codePoint >>> 12 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 8 )  & 0xf] ) .append ( HEX_CHARS[ ( codePoint >>> 4 )  & 0xf] )^[CLASS] CodeGenerator Context  [METHOD] appendHexJavaScriptRepresentation [RETURN_TYPE] void   int codePoint Appendable out [VARIABLES] Context  BEFORE_DANGLING_ELSE  IN_FOR_INIT_CLAUSE  OTHER  PRESERVE_BLOCK  START_OF_EXPR  STATEMENT  context  currentContext  lhsContext  rhsContext  boolean  allowNonBlockChild  ambiguousElseClause  funcNeedsParens  hasElse  isArrayOrFunctionArgument  isFirst  needsParens  stripBlock  validation  Appendable  out  CodeConsumer  cc  consumer  CharsetEncoder  outputCharsetEncoder  int  codePoint  char[]  HEX_CHARS  surrogates  
