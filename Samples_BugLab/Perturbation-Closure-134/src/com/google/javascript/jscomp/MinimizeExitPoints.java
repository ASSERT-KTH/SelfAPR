[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, this ) ;^46^^^^^45^47^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] MinimizeExitPoints  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Node  externs  root  boolean  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  this ) ;^46^^^^^45^47^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] MinimizeExitPoints  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Node  externs  root  boolean  
[buglab_swap_variables]^NodeTraversal.traverse (  root, this ) ;^46^^^^^45^47^NodeTraversal.traverse ( compiler, root, this ) ;^[CLASS] MinimizeExitPoints  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Node  externs  root  boolean  
[buglab_swap_variables]^if  ( matchingExitNode (  exitType, labelName )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( matchingExitNode ( n, labelName, exitType )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( matchingExitNode ( n,  labelName )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( matchingExitNode ( n, exitType )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( matchingExitNode ( exitType, n, labelName )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( matchingExitNode ( labelName, exitType, n )  )  {^115^^^^^100^130^if  ( matchingExitNode ( n, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, elseBlock ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, elseBlock, labelName ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( elseBlock,  labelName ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( elseBlock, exitType ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, ifBlock ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( ifBlock, labelName, exitType ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( ifBlock,  labelName ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( ifBlock, exitType ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( elseBlock, labelName, exitType ) ;^127^^^^^112^142^tryMinimizeExits ( elseBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, ifBlock, labelName ) ;^124^^^^^109^139^tryMinimizeExits ( ifBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, catchCodeBlock, labelName ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( catchCodeBlock,  labelName ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( catchCodeBlock, labelName, exitType ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( catchCodeBlock, exitType ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, finallyBlock ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, finallyBlock, labelName ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( finallyBlock,  labelName ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( finallyBlock, labelName, exitType ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( finallyBlock, exitType ) ;^145^^^^^130^160^tryMinimizeExits ( finallyBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, tryBlock, labelName ) ;^135^^^^^120^150^tryMinimizeExits ( tryBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^135^^^^^120^150^tryMinimizeExits ( tryBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( tryBlock, labelName, exitType ) ;^135^^^^^120^150^tryMinimizeExits ( tryBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( tryBlock,  labelName ) ;^135^^^^^120^150^tryMinimizeExits ( tryBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( tryBlock, exitType ) ;^135^^^^^120^150^tryMinimizeExits ( tryBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, catchCodeBlock ) ;^141^^^^^126^156^tryMinimizeExits ( catchCodeBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, labelBlock, labelName ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelBlock, labelName, exitType ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelBlock,  labelName ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, labelBlock ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelBlock, exitType ) ;^152^^^^^137^167^tryMinimizeExits ( labelBlock, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( ifTree, trueBlock, falseBlock, exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits (  trueBlock, ifTree, exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, exitType, ifTree, trueBlock, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock,  ifTree, exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, ifTree, trueBlock, exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock,  exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( exitType, trueBlock, ifTree, falseBlock, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree,  labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, labelName, exitType ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( ifTree, falseBlock, trueBlock, exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits (  falseBlock, ifTree, exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock,  ifTree, exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, ifTree, falseBlock, exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, falseBlock,  exitType, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( exitType, falseBlock, ifTree, trueBlock, labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree,  labelName ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, labelName, ifTree, exitType, falseBlock ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( labelName, trueBlock, ifTree, exitType, falseBlock ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, exitType, ifTree, labelName ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( n == c.getLastChild (  )  )  {^189^^^^^174^204^if  ( c == n.getLastChild (  )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, labelName, exitType ) ;^176^177^^^^161^191^tryMinimizeIfBlockExits ( trueBlock, falseBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeIfBlockExits ( falseBlock, trueBlock, labelName, exitType, ifTree ) ;^184^185^^^^169^199^tryMinimizeIfBlockExits ( falseBlock, trueBlock, ifTree, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( n == c.getLastChild (  )  )  {^199^^^^^184^214^if  ( c == n.getLastChild (  )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^for  ( Node n = c.getLastChild (  ) ; c != null; c = n.getLastChild (  )  )  {^196^^^^^181^211^for  ( Node c = n.getLastChild (  ) ; c != null; c = n.getLastChild (  )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( exitType, c, labelName ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits (  exitType, labelName ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( c, labelName, exitType ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( c,  labelName ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( c, exitType ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^tryMinimizeExits ( labelName, exitType, c ) ;^197^^^^^182^212^tryMinimizeExits ( c, exitType, labelName ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeExits [RETURN_TYPE] void   Node n int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  allCatchNodes  c  catchCodeBlock  catchNode  elseBlock  falseBlock  finallyBlock  ifBlock  ifTree  labelBlock  n  trueBlock  tryBlock  
[buglab_swap_variables]^if  ( !matchingExitNode ( exitType, exitNode, labelName )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( !matchingExitNode (  exitType, labelName )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( !matchingExitNode ( exitNode, labelName, exitType )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( !matchingExitNode ( exitNode,  labelName )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( !matchingExitNode ( labelName, exitType, exitNode )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( !matchingExitNode ( exitNode, exitType )  )  {^239^^^^^224^254^if  ( !matchingExitNode ( exitNode, exitType, labelName )  )  {^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( newDestBlock, destBlock ) ;^259^^^^^254^261^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild (  newDestBlock ) ;^259^^^^^254^261^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( destBlock ) ;^259^^^^^254^261^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild (  newDestBlock ) ;^259^^^^^244^274^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( newDestBlock, destBlock ) ;^259^^^^^244^274^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( destBlock ) ;^259^^^^^244^274^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( newDestBlock, destBlock ) ;^253^^^^^238^268^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild (  newDestBlock ) ;^253^^^^^238^268^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^ifNode.replaceChild ( destBlock ) ;^253^^^^^238^268^ifNode.replaceChild ( destBlock, newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^moveAllFollowing ( newDestBlock, ifNode.getParent (  ) , ifNode ) ;^264^^^^^249^279^moveAllFollowing ( ifNode, ifNode.getParent (  ) , newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^moveAllFollowing (  ifNode.getParent (  ) , newDestBlock ) ;^264^^^^^249^279^moveAllFollowing ( ifNode, ifNode.getParent (  ) , newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^moveAllFollowing ( ifNode, ifNode.getParent (  )  ) ;^264^^^^^249^279^moveAllFollowing ( ifNode, ifNode.getParent (  ) , newDestBlock ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^NodeUtil.removeChild ( exitNode, exitNodeParent ) ;^268^^^^^253^283^NodeUtil.removeChild ( exitNodeParent, exitNode ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^NodeUtil.removeChild (  exitNode ) ;^268^^^^^253^283^NodeUtil.removeChild ( exitNodeParent, exitNode ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^NodeUtil.removeChild ( exitNodeParentParent, exitNode ) ;^268^^^^^253^283^NodeUtil.removeChild ( exitNodeParent, exitNode ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^NodeUtil.removeChild ( exitNodeParent ) ;^268^^^^^253^283^NodeUtil.removeChild ( exitNodeParent, exitNode ) ;^[CLASS] MinimizeExitPoints  [METHOD] tryMinimizeIfBlockExits [RETURN_TYPE] void   Node srcBlock Node destBlock Node ifNode int exitType String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  exitType  Node  destBlock  exitNode  exitNodeParent  ifNode  newDestBlock  srcBlock  
[buglab_swap_variables]^if  ( n == labelNameull )  {^290^^^^^284^299^if  ( labelName == null )  {^[CLASS] MinimizeExitPoints  [METHOD] matchingExitNode [RETURN_TYPE] boolean   Node n int type String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  type  Node  n  
[buglab_swap_variables]^return labelName.hasChildren (  ) && n.equals ( n.getFirstChild (  ) .getString (  )  ) ;^293^294^^^^284^299^return n.hasChildren (  ) && labelName.equals ( n.getFirstChild (  ) .getString (  )  ) ;^[CLASS] MinimizeExitPoints  [METHOD] matchingExitNode [RETURN_TYPE] boolean   Node n int type String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  type  Node  n  
[buglab_swap_variables]^&& n.equals ( labelName.getFirstChild (  ) .getString (  )  ) ;^294^^^^^284^299^&& labelName.equals ( n.getFirstChild (  ) .getString (  )  ) ;^[CLASS] MinimizeExitPoints  [METHOD] matchingExitNode [RETURN_TYPE] boolean   Node n int type String labelName [VARIABLES] AbstractCompiler  compiler  String  labelName  boolean  int  type  Node  n  
