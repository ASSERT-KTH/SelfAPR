[BugLab_Wrong_Operator]^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, "  !=  "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^50^51^52^53^^50^53^static final String DIAGNOSTIC_GROUP_NAMES = "accessControls, checkVars, " + "checkTypes, deprecated, fileoverviewTags, invalidCasts, " + "missingProperties, nonStandardJsDocs, strictModuleDepCheck, " + "undefinedVars, unknownDefines, visibility";^[CLASS] DiagnosticGroups   [VARIABLES] 
[BugLab_Argument_Swapping]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( VISIBILITY, DEPRECATED )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[BugLab_Argument_Swapping]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( CheckGlobalNames.STRICT_MODULE_DEP_QNAME, VarCheck.STRICT_MODULE_DEP_ERROR )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[BugLab_Variable_Misuse]^groupsByName.put ( name, VISIBILITY ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[BugLab_Argument_Swapping]^groupsByName.put ( group, name ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[BugLab_Variable_Misuse]^return NON_STANDARD_JSDOC;^39^^^^^36^40^return group;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[BugLab_Variable_Misuse]^return groupsByName.get ( DIAGNOSTIC_GROUP_NAMES ) ;^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[BugLab_Argument_Swapping]^return name.get ( groupsByName ) ;^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[BugLab_Variable_Misuse]^DiagnosticGroup group = forName ( DIAGNOSTIC_GROUP_NAMES ) ;^125^^^^^122^129^DiagnosticGroup group = forName ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( VISIBILITY, "No warning class for name: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( group, "No warning class for DIAGNOSTIC_GROUP_NAMES: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[BugLab_Argument_Swapping]^Preconditions.checkNotNull ( name, "No warning class for group: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[BugLab_Wrong_Operator]^Preconditions.checkNotNull ( group, "No warning class for name: "  &  name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[BugLab_Variable_Misuse]^options.setWarningLevel ( MISSING_PROPERTIES, level ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
