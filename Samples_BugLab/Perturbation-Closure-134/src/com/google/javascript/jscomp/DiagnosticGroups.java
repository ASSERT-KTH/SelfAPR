[buglab_swap_variables]^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup (^55^56^57^58^^55^63^public static DiagnosticGroup DEPRECATED = DiagnosticGroups .registerGroup ( "deprecated", new DiagnosticGroup ( CheckAccessControls.DEPRECATED_NAME,^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup (^65^66^67^68^^65^72^public static DiagnosticGroup VISIBILITY = DiagnosticGroups .registerGroup ( "visibility", new DiagnosticGroup ( CheckAccessControls.BAD_PRIVATE_GLOBAL_ACCESS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( VISIBILITY, DEPRECATED )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup (  VISIBILITY )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED )  ) ;^78^79^80^^^78^80^public static DiagnosticGroup ACCESS_CONTROLS = DiagnosticGroups.registerGroup ( "accessControls", new DiagnosticGroup ( DEPRECATED, VISIBILITY )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( CheckGlobalNames.STRICT_MODULE_DEP_QNAME, VarCheck.STRICT_MODULE_DEP_ERROR )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup (  CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR )  ) ;^90^91^92^93^^90^93^public static DiagnosticGroup STRICT_MODULE_DEP_CHECK = DiagnosticGroups.registerGroup ( "strictModuleDepCheck", new DiagnosticGroup ( VarCheck.STRICT_MODULE_DEP_ERROR, CheckGlobalNames.STRICT_MODULE_DEP_QNAME )  ) ;^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup (^107^108^109^110^^107^111^public static DiagnosticGroup CHECK_VARIABLES = DiagnosticGroups.registerGroup ( "checkVars", new DiagnosticGroup ( VarCheck.UNDEFINED_VAR_ERROR,^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup (^113^114^115^116^^113^117^public static DiagnosticGroup CHECK_TYPES = DiagnosticGroups.registerGroup ( "checkTypes", new DiagnosticGroup ( TypeValidator.ALL_DIAGNOSTICS,^[CLASS] DiagnosticGroups   [VARIABLES] 
[buglab_swap_variables]^groupsByName.put (  group ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[buglab_swap_variables]^groupsByName.put ( name ) ;^38^^^^^36^40^groupsByName.put ( name, group ) ;^[CLASS] DiagnosticGroups  [METHOD] registerGroup [RETURN_TYPE] DiagnosticGroup   String name DiagnosticGroup group [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[buglab_swap_variables]^return name.get ( groupsByName ) ;^44^^^^^43^45^return groupsByName.get ( name ) ;^[CLASS] DiagnosticGroups  [METHOD] forName [RETURN_TYPE] DiagnosticGroup   String name [VARIABLES] String  DIAGNOSTIC_GROUP_NAMES  name  boolean  Map  groupsByName  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  
[buglab_swap_variables]^Preconditions.checkNotNull ( name, "No warning class for group: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[buglab_swap_variables]^Preconditions.checkNotNull (  "No warning class for name: " + name ) ;^126^^^^^122^129^Preconditions.checkNotNull ( group, "No warning class for name: " + name ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[buglab_swap_variables]^options.setWarningLevel ( level, group ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[buglab_swap_variables]^options.setWarningLevel (  level ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
[buglab_swap_variables]^options.setWarningLevel ( group ) ;^127^^^^^122^129^options.setWarningLevel ( group, level ) ;^[CLASS] DiagnosticGroups  [METHOD] setWarningLevels [RETURN_TYPE] void   CompilerOptions options String> diagnosticGroups CheckLevel level [VARIABLES] boolean  DiagnosticGroup  ACCESS_CONTROLS  CHECK_TYPES  CHECK_VARIABLES  DEPRECATED  FILEOVERVIEW_JSDOC  INVALID_CASTS  MISSING_PROPERTIES  NON_STANDARD_JSDOC  STRICT_MODULE_DEP_CHECK  UNDEFINED_VARIABLES  UNKNOWN_DEFINES  VISIBILITY  group  CheckLevel  level  CompilerOptions  options  List  diagnosticGroups  String  DIAGNOSTIC_GROUP_NAMES  name  Map  groupsByName  
