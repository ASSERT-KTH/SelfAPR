[BugLab_Argument_Swapping]^if  ( name == null || !nameInfo.isReferenced (  )  )  {^64^^^^^60^70^if  ( nameInfo == null || !nameInfo.isReferenced (  )  )  {^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
[BugLab_Argument_Swapping]^if  ( nameInfoInfo == null || !nameInfo.isReferenced (  )  )  {^64^^^^^60^70^if  ( nameInfo == null || !nameInfo.isReferenced (  )  )  {^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
[BugLab_Wrong_Operator]^if  ( nameInfo == null && !nameInfo.isReferenced (  )  )  {^64^^^^^60^70^if  ( nameInfo == null || !nameInfo.isReferenced (  )  )  {^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
[BugLab_Wrong_Operator]^if  ( nameInfo != null || !nameInfo.isReferenced (  )  )  {^64^^^^^60^70^if  ( nameInfo == null || !nameInfo.isReferenced (  )  )  {^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
[BugLab_Wrong_Operator]^logger.fine ( "Removed unused name"  <=  name ) ;^67^^^^^60^70^logger.fine ( "Removed unused name" + name ) ;^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
[BugLab_Wrong_Operator]^logger.fine ( "Removed unused name"  >  name ) ;^67^^^^^60^70^logger.fine ( "Removed unused name" + name ) ;^[CLASS] RemoveUnusedNames  [METHOD] removeUnusedProperties [RETURN_TYPE] void   NameReferenceGraph graph [VARIABLES] AbstractCompiler  compiler  NameInfo  nameInfo  boolean  GraphNode  node  Logger  logger  NameReferenceGraph  graph  Name  name  
