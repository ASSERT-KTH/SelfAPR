[BugLab_Argument_Swapping]^if  ( callName.contains ( externMethods )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^if  ( nonMethodProperties.contains ( callName )  || externMethods.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( externMethods.contains ( callName )  && nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^Collection<Node> definitions = callName.get ( methodDefinitions ) ;^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( definitions == null && definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( definitions != null || definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( definitions == null || definitions.size (  )  != 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( definitions.size (  )  == 1 && allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( definitions.size (  )  != 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Literal]^if  ( definitions.size (  )  == 0 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  >>  callName  >>  "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"   instanceof   callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( firstDefinition != null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^if  ( returned == null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( isEmptyMethod ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^} else if  ( isEmptyMethod ( callNode )  && !NodeUtil.mayHaveSideEffects ( firstDefinition.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^} else if  ( isEmptyMethod ( firstDefinition )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >=  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( isPropertyTree ( firstDefinition )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^} else if  ( NodeUtil.isLiteralValue ( callNode )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isLiteralValue ( returned )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  ||  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( firstDefinition, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( callNode, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( returned, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( parent.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( isPropertyTree ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  <=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, returned, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( parent, returned, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  |  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ^  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  >>  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  &&  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^Node returned = returnedExpression ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^Node returned = returnedExpression ( returned ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  <  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >>  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( parent != null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "   instanceof   callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, callNode, firstDefinition ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  <<  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( returned, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ^  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( !argsMayHaveSideEffects ( returned )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( !argsMayHaveSideEffects ( parent )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  <<  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ==  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <<  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  >  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  !=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ^  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  |  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  |  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  !=  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  ^  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  <  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ||  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ||  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  >  callName  >  "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  !=  callName + "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  Logger  logger  
[BugLab_Variable_Misuse]^if  ( retVal.getType (  )  != Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Operator]^if  ( expectedGetprop.getType (  )  == Token.GETPROP )  {^123^^^^^122^138^if  ( expectedGetprop.getType (  )  != Token.GETPROP )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Literal]^return true;^124^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^if  ( retVal.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Operator]^if  ( leftChild.getType (  )  != Token.THIS || !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Operator]^if  ( leftChild.getType (  )  == Token.THIS && !isPropertyTree ( leftChild )  )  {^128^129^^^^122^138^if  ( leftChild.getType (  )  != Token.THIS && !isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Literal]^return true;^130^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^!isPropertyTree ( retVal )  )  {^129^^^^^122^138^!isPropertyTree ( leftChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^Node retVal = expectedGetprop.getNext (  ) ;^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^Node retVal = retVal.getNext (  ) ;^133^^^^^122^138^Node retVal = leftChild.getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^if  ( NodeUtil.getStringValue ( leftChild )  == null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Operator]^if  ( NodeUtil.getStringValue ( retVal )  != null )  {^134^^^^^122^138^if  ( NodeUtil.getStringValue ( retVal )  == null )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Literal]^return true;^135^^^^^122^138^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Wrong_Literal]^return false;^137^^^^^122^138^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isPropertyTree [RETURN_TYPE] boolean   Node expectedGetprop [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  retVal  
[BugLab_Variable_Misuse]^Node leftChild = replacement.getFirstChild (  ) ;^145^^^^^144^151^Node leftChild = expectedGetprop.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^if  ( expectedGetprop.getType (  )  == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Wrong_Operator]^if  ( leftChild.getType (  )  != Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^replaceThis ( expectedGetprop, replacement ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^replaceThis ( leftChild, expectedGetprop ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Argument_Swapping]^replaceThis ( replacement, leftChild ) ;^149^^^^^144^151^replaceThis ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^expectedGetprop.replaceChild ( replacement, replacement ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Argument_Swapping]^expectedGetprop.replaceChild ( replacement, leftChild ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^if  ( replacement.getType (  )  == Token.THIS )  {^146^^^^^144^151^if  ( leftChild.getType (  )  == Token.THIS )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^expectedGetprop.replaceChild ( leftChild, leftChild ) ;^147^^^^^144^151^expectedGetprop.replaceChild ( leftChild, replacement ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] replaceThis [RETURN_TYPE] void   Node expectedGetprop Node replacement [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedGetprop  leftChild  replacement  
[BugLab_Variable_Misuse]^Node expectedBlock = getMethodBlock ( expectedReturn ) ;^158^^^^^157^173^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[BugLab_Variable_Misuse]^Node expectedReturn = fn.getFirstChild (  ) ;^163^^^^^157^173^Node expectedReturn = expectedBlock.getFirstChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[BugLab_Variable_Misuse]^if  ( fn.getType (  )  != Token.RETURN )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[BugLab_Wrong_Operator]^if  ( expectedReturn.getType (  )  > Token.RETURN )  {^164^^^^^157^173^if  ( expectedReturn.getType (  )  != Token.RETURN )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[BugLab_Variable_Misuse]^return fn.getLastChild (  ) ;^172^^^^^157^173^return expectedReturn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] returnedExpression [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  expectedReturn  fn  
[BugLab_Variable_Misuse]^Node expectedBlock = getMethodBlock ( expectedBlock ) ;^182^^^^^181^185^Node expectedBlock = getMethodBlock ( fn ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Variable_Misuse]^return fn == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Wrong_Operator]^return expectedBlock != null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Wrong_Literal]^return expectedBlock == null ? true : NodeUtil.isEmptyBlock ( expectedBlock ) ;^183^184^^^^181^185^return expectedBlock == null ? false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Variable_Misuse]^false : NodeUtil.isEmptyBlock ( fn ) ;^184^^^^^181^185^false : NodeUtil.isEmptyBlock ( expectedBlock ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] isEmptyMethod [RETURN_TYPE] boolean   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Variable_Misuse]^if  ( expectedBlock.getChildCount (  )  != 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Wrong_Operator]^if  ( fn.getChildCount (  )  < 3 )  {^194^^^^^193^201^if  ( fn.getChildCount (  )  != 3 )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Variable_Misuse]^Node expectedBlock = expectedBlock.getLastChild (  ) ;^198^^^^^193^201^Node expectedBlock = fn.getLastChild (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Variable_Misuse]^return  fn.getType (  )  == Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Wrong_Operator]^return  expectedBlock.getType (  )  != Token.BLOCK ? expectedBlock : null;^199^200^^^^193^201^return  expectedBlock.getType (  )  == Token.BLOCK ? expectedBlock : null;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getMethodBlock [RETURN_TYPE] Node   Node fn [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  expectedBlock  fn  
[BugLab_Wrong_Literal]^Node nodei = list.get ( i ) ;^210^^^^^206^217^Node node0 = list.get ( 0 ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[BugLab_Argument_Swapping]^if  ( !list.get ( node0 ) .checkTreeEqualsSilent ( i )  )  {^212^^^^^206^217^if  ( !list.get ( i ) .checkTreeEqualsSilent ( node0 )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[BugLab_Wrong_Literal]^return true;^213^^^^^206^217^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[BugLab_Wrong_Operator]^for  ( int i = 1; i > list.size (  ) ; i++ )  {^211^^^^^206^217^for  ( int i = 1; i < list.size (  ) ; i++ )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[BugLab_Wrong_Literal]^return false;^216^^^^^206^217^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] allDefinitionsEquivalent [RETURN_TYPE] boolean   Node> definitions [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Node  node0  Collection  definitions  List  list  Logger  logger  int  i  
[BugLab_Variable_Misuse]^Node getProp = parent.cloneTree (  ) ;^231^^^^^229^235^Node getProp = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Variable_Misuse]^replaceThis ( returnedValue, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Variable_Misuse]^replaceThis ( getProp, returnedValue.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Argument_Swapping]^replaceThis ( call, getProp.getFirstChild (  ) .removeFirstChild (  )  ) ;^232^^^^^229^235^replaceThis ( getProp, call.getFirstChild (  ) .removeFirstChild (  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Variable_Misuse]^parent.replaceChild ( returnedValue, getProp ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Variable_Misuse]^parent.replaceChild ( call, returnedValue ) ;^233^^^^^229^235^parent.replaceChild ( call, getProp ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlinePropertyReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  getProp  parent  returnedValue  
[BugLab_Variable_Misuse]^Node retValue = parent.cloneTree (  ) ;^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[BugLab_Variable_Misuse]^Node retValue = retValue.cloneTree (  ) ;^244^^^^^242^247^Node retValue = returnedValue.cloneTree (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[BugLab_Argument_Swapping]^parent.replaceChild ( retValue, call ) ;^245^^^^^242^247^parent.replaceChild ( call, retValue ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineConstReturn [RETURN_TYPE] void   Node parent Node call Node returnedValue [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  parent  retValue  returnedValue  
[BugLab_Wrong_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( -1 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[BugLab_Variable_Misuse]^parent.getParent (  ) .replaceChild ( call, new Node ( Token.EMPTY )  ) ;^256^^^^^252^261^parent.getParent (  ) .replaceChild ( parent, new Node ( Token.EMPTY )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[BugLab_Wrong_Literal]^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 1 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[BugLab_Variable_Misuse]^parent.replaceChild ( parent, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^258^^^^^252^261^parent.replaceChild ( call, new Node ( Token.VOID, Node.newNumber ( 0 )  )  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] inlineEmptyMethod [RETURN_TYPE] void   NodeTraversal t Node parent Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  NodeTraversal  t  Node  call  parent  
[BugLab_Variable_Misuse]^if  ( NodeUtil.mayHaveSideEffects ( call )  )  {^271^^^^^267^277^if  ( NodeUtil.mayHaveSideEffects ( currentChild )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Wrong_Literal]^return false;^272^^^^^267^277^return true;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Variable_Misuse]^for  ( Node call = call.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Argument_Swapping]^for  ( Node call = currentChild.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Variable_Misuse]^currentChild = call.getNext (  )  )  {^270^^^^^267^277^currentChild = currentChild.getNext (  )  )  {^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Variable_Misuse]^for  ( Node currentChild = currentChild.getFirstChild (  ) .getNext (  ) ;^268^^^^^267^277^for  ( Node currentChild = call.getFirstChild (  ) .getNext (  ) ;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Wrong_Literal]^return true;^276^^^^^267^277^return false;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] argsMayHaveSideEffects [RETURN_TYPE] boolean   Node call [VARIABLES] SignatureStore  DUMMY_SIGNATURE_STORE  boolean  Logger  logger  Node  call  currentChild  
[BugLab_Variable_Misuse]^return 2;^300^^^^^299^301^return DUMMY_SIGNATURE_STORE;^[CLASS] InlineGetters InlineTrivialAccessors 1  [METHOD] getSignatureStore [RETURN_TYPE] SignatureStore   [VARIABLES] Logger  logger  SignatureStore  DUMMY_SIGNATURE_STORE  boolean  
[BugLab_Variable_Misuse]^if  ( 2.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^if  ( callName.contains ( externMethods )  || nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^if  ( nonMethodProperties.contains ( callName )  || externMethods.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( externMethods.contains ( callName )  && nonMethodProperties.contains ( callName )  )  {^71^72^^^^56^86^if  ( externMethods.contains ( callName )  || nonMethodProperties.contains ( callName )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^Collection<Node> definitions = callName.get ( methodDefinitions ) ;^76^^^^^61^91^Collection<Node> definitions = methodDefinitions.get ( callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( definitions == null && definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( definitions != null || definitions.size (  )  == 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( definitions == null || definitions.size (  )  != 0 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Literal]^if  ( definitions == null || definitions.size (  )  == -1 )  {^77^^^^^62^92^if  ( definitions == null || definitions.size (  )  == 0 )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^Node firstDefinition = 4.iterator (  ) .next (  ) ;^83^^^^^68^98^Node firstDefinition = definitions.iterator (  ) .next (  ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( 0.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( definitions.size (  )  == 1 && allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( definitions.size (  )  != 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Literal]^if  ( definitions.size (  )  == 2 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"   instanceof   callName   instanceof   "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  >  callName + "' has conflicting definitions." ) ;^107^^^^^86^108^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( !argsMayHaveSideEffects ( parent )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^if  ( returned == null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( isEmptyMethod ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^} else if  ( isEmptyMethod ( callNode )  && !NodeUtil.mayHaveSideEffects ( firstDefinition.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^} else if  ( isEmptyMethod ( firstDefinition )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^100^101^^^^85^115^} else if  ( isEmptyMethod ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  <=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^101^^^^^86^116^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  <<  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, returned, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( callNode, parent, t ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( t, callNode, parent ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( isPropertyTree ( firstDefinition )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( parent )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^} else if  ( NodeUtil.isLiteralValue ( callNode )  && !NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^} else if  ( NodeUtil.isLiteralValue ( returned )  || !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "   instanceof   callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^!NodeUtil.mayHaveSideEffects ( returned.getFirstChild (  )  )  )  {^96^^^^^81^111^!NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "   instanceof   callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, returned, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( returned, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( callNode, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  >=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( returned, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, callNode, firstDefinition ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( returned, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( callNode, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlinePropertyReturn ( parent, returned, callNode ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( firstDefinition )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( parent.getFirstChild (  )  )  )  {^95^96^^^^80^110^} else if  ( NodeUtil.isLiteralValue ( returned )  && !NodeUtil.mayHaveSideEffects ( callNode.getFirstChild (  )  )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineConstReturn ( parent, returned, callNode ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  &  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( firstDefinition, callNode, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, returned, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( returned, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, parent, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, parent ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( isPropertyTree ( parent )  )  {^92^^^^^77^107^if  ( isPropertyTree ( returned )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  ||  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, parent, returned ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  !=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineEmptyMethod ( t, parent, returned ) ;^103^^^^^100^104^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^Node returned = returnedExpression ( parent ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^Node returned = returnedExpression ( returned ) ;^90^^^^^75^105^Node returned = returnedExpression ( firstDefinition ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  ==  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( firstDefinition, callNode, returned ) ;^98^^^^^83^113^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  &&  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( parent != null )  {^91^^^^^76^106^if  ( returned != null )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  &  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ^  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Argument_Swapping]^inlineEmptyMethod ( parent, t, callNode ) ;^103^^^^^88^118^inlineEmptyMethod ( t, parent, callNode ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlineConstReturn ( parent, callNode, firstDefinition ) ;^98^^^^^95^99^inlineConstReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  !=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  <  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^inlinePropertyReturn ( parent, callNode, parent ) ;^94^^^^^79^109^inlinePropertyReturn ( parent, callNode, returned ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  |  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  |  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ^  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( !argsMayHaveSideEffects ( returned )  )  {^88^^^^^73^103^if  ( !argsMayHaveSideEffects ( callNode )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  !=  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  |  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <<  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  ==  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  <<  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining property accessor: "  &&  callName ) ;^93^^^^^78^108^logger.fine ( "Inlining property accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >=  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  ==  callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "  >=  callName ) ;^102^^^^^100^104^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  >>  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  <=  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &&  callName ) ;^97^^^^^95^99^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining constant accessor: "  &  callName ) ;^97^^^^^82^112^logger.fine ( "Inlining constant accessor: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Variable_Misuse]^if  ( 1.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^86^^^^^71^101^if  ( definitions.size (  )  == 1 || allDefinitionsEquivalent ( definitions )  )  {^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Inlining empty method: "   instanceof   callName ) ;^102^^^^^87^117^logger.fine ( "Inlining empty method: " + callName ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  <  callName  <  "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
[BugLab_Wrong_Operator]^logger.fine ( "Method '"  <=  callName + "' has conflicting definitions." ) ;^107^^^^^92^122^logger.fine ( "Method '" + callName + "' has conflicting definitions." ) ;^[CLASS] InlineTrivialAccessors  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node callNode Node parent String callName [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstDefinition  parent  returned  Collection  definitions  String  callName  
