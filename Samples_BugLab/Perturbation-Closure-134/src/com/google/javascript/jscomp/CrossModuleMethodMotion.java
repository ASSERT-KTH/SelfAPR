[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  <  {" + "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  >  {" + "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  >>  {" + "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  !=  {" + "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  >=  {" + "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Operator]^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {"  |  "  return function (  )  {" +^54^55^56^57^^54^63^static final String STUB_DECLARATIONS = "var JSCompiler_stubMap = [];" + "function JSCompiler_stubMethod ( id )  {" + "  return function (  )  {" +^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Wrong_Literal]^private int currentId = null;^185^^^^^180^190^private int currentId = 0;^[CLASS] CrossModuleMethodMotion IdGenerator   [VARIABLES] 
[BugLab_Argument_Swapping]^this.analyzer = new AnalyzePrototypeProperties ( canModifyExterns, moduleGraph, compiler, false ) ;^77^78^^^^72^79^this.analyzer = new AnalyzePrototypeProperties ( compiler, moduleGraph, canModifyExterns, false ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] <init> [RETURN_TYPE] CrossModuleMethodMotion$IdGenerator,boolean)   AbstractCompiler compiler IdGenerator idGenerator boolean canModifyExterns [VARIABLES] AbstractCompiler  compiler  boolean  canModifyExterns  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Argument_Swapping]^this.analyzer = new AnalyzePrototypeProperties ( compiler, canModifyExterns, moduleGraph, false ) ;^77^78^^^^72^79^this.analyzer = new AnalyzePrototypeProperties ( compiler, moduleGraph, canModifyExterns, false ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] <init> [RETURN_TYPE] CrossModuleMethodMotion$IdGenerator,boolean)   AbstractCompiler compiler IdGenerator idGenerator boolean canModifyExterns [VARIABLES] AbstractCompiler  compiler  boolean  canModifyExterns  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Wrong_Literal]^this.analyzer = new AnalyzePrototypeProperties ( compiler, moduleGraph, canModifyExterns, true ) ;^77^78^^^^72^79^this.analyzer = new AnalyzePrototypeProperties ( compiler, moduleGraph, canModifyExterns, false ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] <init> [RETURN_TYPE] CrossModuleMethodMotion$IdGenerator,boolean)   AbstractCompiler compiler IdGenerator idGenerator boolean canModifyExterns [VARIABLES] AbstractCompiler  compiler  boolean  canModifyExterns  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Argument_Swapping]^this.analyzer = new AnalyzePrototypeProperties ( moduleGraph, compiler, canModifyExterns, false ) ;^77^78^^^^72^79^this.analyzer = new AnalyzePrototypeProperties ( compiler, moduleGraph, canModifyExterns, false ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] <init> [RETURN_TYPE] CrossModuleMethodMotion$IdGenerator,boolean)   AbstractCompiler compiler IdGenerator idGenerator boolean canModifyExterns [VARIABLES] AbstractCompiler  compiler  boolean  canModifyExterns  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Wrong_Operator]^if  ( moduleGraph != null || moduleGraph.getModuleCount (  )  > 1 )  {^84^^^^^81^88^if  ( moduleGraph != null && moduleGraph.getModuleCount (  )  > 1 )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null && moduleGraph.getModuleCount (  )  > 1 )  {^84^^^^^81^88^if  ( moduleGraph != null && moduleGraph.getModuleCount (  )  > 1 )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Wrong_Operator]^if  ( moduleGraph != null && moduleGraph.getModuleCount (  )  >= 1 )  {^84^^^^^81^88^if  ( moduleGraph != null && moduleGraph.getModuleCount (  )  > 1 )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Variable_Misuse]^analyzer.process ( root, root ) ;^85^^^^^81^88^analyzer.process ( externRoot, root ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Argument_Swapping]^analyzer.process ( root, externRoot ) ;^85^^^^^81^88^analyzer.process ( externRoot, root ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Variable_Misuse]^analyzer.process ( externRoot, externRoot ) ;^85^^^^^81^88^analyzer.process ( externRoot, root ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] process [RETURN_TYPE] void   Node externRoot Node root [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Node  externRoot  root  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  
[BugLab_Wrong_Operator]^if  ( ! ( symbol  <  Property )  )  {^113^^^^^98^128^if  ( ! ( symbol instanceof Property )  )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  || value.getType (  )  == Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  != Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( currentId )  )  ) ;^142^143^144^^^127^157^new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^142^143^144^^^127^157^new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^new Node ( Token.CALL, Node.newString ( Token.NAME, stubId ) , Node.newNumber ( STUB_METHOD_NAME )  )  ) ;^142^143^144^^^127^157^new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( currentId ) , value )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , valueParent )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^new Node ( Token.CALL, Node.newString ( Token.NAME, stubId ) , Node.newNumber ( UNSTUB_METHOD_NAME ) , value )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^new Node ( Token.CALL, Node.newString ( Token.NAME, value ) , Node.newNumber ( stubId ) , UNSTUB_METHOD_NAME )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^Node unstubParent = deepestCommonModuleRef.getNodeForCodeInsertion ( compiler ) ;^147^148^^^^132^162^Node unstubParent = compiler.getNodeForCodeInsertion ( deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^valueParent.replaceChild ( unstubParent,  new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) ,^140^141^142^143^^125^155^valueParent.replaceChild ( value,  new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) ,^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^valueParent.replaceChild ( value,  new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) ,^140^141^142^143^^125^155^valueParent.replaceChild ( value,  new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) ,^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^143^144^^^^128^158^Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^Node.newNumber ( currentId )  )  ) ;^144^^^^^129^159^Node.newNumber ( stubId )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, STUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^157^158^159^^^142^172^Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^Node.newNumber ( currentId ) , value )  )  )  ) ;^158^159^^^^143^173^Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  &&  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  <=  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  ^  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  ==  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  !=  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: "  ||  proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^if  ( moduleGraph.dependsOn ( prop, deepestCommonModuleRef.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^if  ( prop.dependsOn ( deepestCommonModuleRef, moduleGraph.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  &  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  >=  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  ||  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: "  >>  proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if ( deepestCommonModuleRef != null )  {^104^^^^^89^119^if ( deepestCommonModuleRef == null )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if  ( ! ( symbol  >=  Property )  )  {^113^^^^^98^128^if  ( ! ( symbol instanceof Property )  )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  > Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( value ) , stubId )  )  )  ) ;^156^157^158^159^^141^171^new Node ( Token.CALL, Node.newString ( Token.NAME, UNSTUB_METHOD_NAME ) , Node.newNumber ( stubId ) , value )  )  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  >  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: "  ^  proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^if  ( deepestCommonModuleRef.dependsOn ( moduleGraph, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^133^134^^^^118^148^if  ( moduleGraph.dependsOn ( deepestCommonModuleRef, prop.getModule (  )  )  && value.getType (  )  == Token.FUNCTION )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^valueParent.replaceChild ( valueParent,  new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) ,^140^141^142^143^^125^155^valueParent.replaceChild ( value,  new Node ( Token.CALL, Node.newString ( Token.NAME, STUB_METHOD_NAME ) ,^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (   instanceof   )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  |  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: " + proto.getQualifiedName (  <<  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^logger.fine ( "Moved method: "  <  proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^162^163^164^165^^147^177^logger.fine ( "Moved method: " + proto.getQualifiedName (  )  + "." + nameInfo.name + " from module " + prop.getModule (  )  + " to module " + deepestCommonModuleRef ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Wrong_Operator]^if  ( !hasStubDeclaration || idGenerator.hasGeneratedAnyIds (  )  )  {^170^^^^^155^185^if  ( !hasStubDeclaration && idGenerator.hasGeneratedAnyIds (  )  )  {^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^Node declarations = compiler.parseSyntheticCode ( UNSTUB_METHOD_NAME ) ;^172^^^^^157^187^Node declarations = compiler.parseSyntheticCode ( STUB_DECLARATIONS ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Argument_Swapping]^Node declarations = STUB_DECLARATIONS.parseSyntheticCode ( compiler ) ;^172^^^^^157^187^Node declarations = compiler.parseSyntheticCode ( STUB_DECLARATIONS ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^compiler.getNodeForCodeInsertion ( null ) .addChildrenToFront ( valueParent.removeChildren (  )  ) ;^173^174^^^^158^188^compiler.getNodeForCodeInsertion ( null ) .addChildrenToFront ( declarations.removeChildren (  )  ) ;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] moveMethods [RETURN_TYPE] void   NameInfo> allNameInfo [VARIABLES] Symbol  symbol  Node  declarations  proto  unstubParent  value  valueParent  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  AbstractCompiler  compiler  boolean  hasStubDeclaration  NameInfo  nameInfo  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  Iterator  declarations  Collection  allNameInfo  JSModule  deepestCommonModuleRef  Property  prop  
[BugLab_Variable_Misuse]^return stubId != 0;^191^^^^^190^192^return currentId != 0;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] hasGeneratedAnyIds [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  
[BugLab_Wrong_Operator]^return currentId == 0;^191^^^^^190^192^return currentId != 0;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] hasGeneratedAnyIds [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  
[BugLab_Wrong_Literal]^return currentId != currentId;^191^^^^^190^192^return currentId != 0;^[CLASS] CrossModuleMethodMotion IdGenerator  [METHOD] hasGeneratedAnyIds [RETURN_TYPE] boolean   [VARIABLES] AbstractCompiler  compiler  boolean  DiagnosticType  NULL_COMMON_MODULE_ERROR  AnalyzePrototypeProperties  analyzer  IdGenerator  idGenerator  String  STUB_DECLARATIONS  STUB_METHOD_NAME  UNSTUB_METHOD_NAME  Logger  logger  JSModuleGraph  moduleGraph  long  serialVersionUID  int  currentId  stubId  
[BugLab_Wrong_Operator]^return currentId < 0;^191^^^^^190^192^return currentId != 0;^[CLASS] IdGenerator  [METHOD] hasGeneratedAnyIds [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  int  currentId  boolean  
[BugLab_Wrong_Literal]^return currentId != currentId;^191^^^^^190^192^return currentId != 0;^[CLASS] IdGenerator  [METHOD] hasGeneratedAnyIds [RETURN_TYPE] boolean   [VARIABLES] long  serialVersionUID  int  currentId  boolean  
