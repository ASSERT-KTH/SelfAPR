[buglab_swap_variables]^new LinkedDirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^63^^^^^49^67^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedDirectedGraphEdge<N, E> (  edgeValue, dest ) ;^63^^^^^49^67^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedDirectedGraphEdge<N, E> ( edgeValue, src, dest ) ;^63^^^^^49^67^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedDirectedGraphEdge<N, E> ( src,  dest ) ;^63^^^^^49^67^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue ) ;^63^^^^^49^67^new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> (  edgeValue, dest ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( edgeValue, src, dest ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src,  dest ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, dest, edgeValue ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue ) ;^62^63^^^^49^67^LinkedDirectedGraphEdge<N, E> edge = new LinkedDirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedDirectedGraphEdge  edge  LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection ( n2, n1 ) ;^71^^^^^70^73^disconnectInDirection ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection (  n2 ) ;^71^^^^^70^73^disconnectInDirection ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection ( n1 ) ;^71^^^^^70^73^disconnectInDirection ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection ( n1, n2 ) ;^72^^^^^70^73^disconnectInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection (  n1 ) ;^72^^^^^70^73^disconnectInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^disconnectInDirection ( n2 ) ;^72^^^^^70^73^disconnectInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( destValue, srcValue )  )  {^89^^^^^76^93^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnectInDirection [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  DiGraphEdge  edge  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges (  destValue )  )  {^89^^^^^76^93^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnectInDirection [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  DiGraphEdge  edge  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( srcValue )  )  {^89^^^^^76^93^for  ( DiGraphEdge<?, E> edge : getDirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] disconnectInDirection [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedDirectedGraphNode  dest  src  DiGraphNode  destNode  node  sourceNode  DiGraphEdge  edge  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^return nodeValue.get ( nodes ) ;^104^^^^^103^105^return nodes.get ( nodeValue ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedGraphNode [RETURN_TYPE] DiGraphNode   N nodeValue [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphNode<N, E> node = nodeValue.get ( nodes ) ;^114^^^^^113^125^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getInEdges [RETURN_TYPE] List   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  DiGraphEdge  edge  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphNode<N, E> node = nodeValue.get ( nodes ) ;^129^^^^^128^139^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getOutEdges [RETURN_TYPE] List   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  DiGraphEdge  edge  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedDirectedGraphNode<N, E> node = nodeValue.get ( nodes ) ;^143^^^^^142^149^LinkedDirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] createDirectedGraphNode [RETURN_TYPE] DiGraphNode   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put (  node ) ;^146^^^^^142^149^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] createDirectedGraphNode [RETURN_TYPE] DiGraphNode   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put ( nodeValue ) ;^146^^^^^142^149^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] createDirectedGraphNode [RETURN_TYPE] DiGraphNode   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put ( node, nodeValue ) ;^146^^^^^142^149^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] createDirectedGraphNode [RETURN_TYPE] DiGraphNode   N nodeValue [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  edgeList  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^155^^^^^152^162^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges (  n2 ) ;^155^^^^^152^162^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1 ) ;^155^^^^^152^162^List<DiGraphEdge<N, E>> forwardEdges = getDirectedGraphEdges ( n1, n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n1, n2 ) ;^156^^^^^152^162^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges (  n1 ) ;^156^^^^^152^162^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2 ) ;^156^^^^^152^162^List<DiGraphEdge<N, E>> backwardEdges = getDirectedGraphEdges ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^int totalSize = backwardEdges.size (  )  + forwardEdges.size (  ) ;^157^^^^^152^162^int totalSize = forwardEdges.size (  )  + backwardEdges.size (  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^DiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^171^^^^^170^186^DiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^DiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^175^^^^^170^186^DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^if  ( dNode2.getDestination (  )  == outEdge )  {^181^^^^^170^186^if  ( outEdge.getDestination (  )  == dNode2 )  {^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^DiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^191^^^^^189^207^DiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnectedInDirection [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^DiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^195^^^^^189^207^DiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnectedInDirection [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^if  ( dNode2.getDestination (  )  == outEdge )  {^201^^^^^189^207^if  ( outEdge.getDestination (  )  == dNode2 )  {^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnectedInDirection [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  DiGraphEdge  outEdge  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return getDirectedPredNodes ( nodeValue.get ( nodes )  ) ;^211^^^^^210^212^return getDirectedPredNodes ( nodes.get ( nodeValue )  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedPredNodes [RETURN_TYPE] List   N nodeValue [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return getDirectedSuccNodes ( nodeValue.get ( nodes )  ) ;^216^^^^^215^217^return getDirectedSuccNodes ( nodes.get ( nodeValue )  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getDirectedSuccNodes [RETURN_TYPE] List   N nodeValue [VARIABLES] DiGraphNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return isConnectedInDirection ( n2, n1 )  || isConnectedInDirection ( n2, n1 ) ;^247^^^^^246^248^return isConnectedInDirection ( n1, n2 )  || isConnectedInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return isConnectedInDirection (  n2 )  || isConnectedInDirection ( n2, n1 ) ;^247^^^^^246^248^return isConnectedInDirection ( n1, n2 )  || isConnectedInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return isConnectedInDirection ( n1, n2 )  || isConnectedInDirection (  n1 ) ;^247^^^^^246^248^return isConnectedInDirection ( n1, n2 )  || isConnectedInDirection ( n2, n1 ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  nodeList  outEdgeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^LinkedDirectedGraphNode<N, E> node = value.get ( nodes ) ;^305^^^^^304^308^LinkedDirectedGraphNode<N, E> node = nodes.get ( value ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] LinkedDirectedGraphNode  node  DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return out.hasNext (  )  || in.hasNext (  ) ;^416^^^^^415^417^return in.hasNext (  )  || out.hasNext (  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  in ? out : isOut;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  isOut  DiGraphEdge  s  E  edgeValue  value  Iterator  curIterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  out ? isOut : in;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  isOut  DiGraphEdge  s  E  edgeValue  value  Iterator  curIterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? in : out;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  isOut  DiGraphEdge  s  E  edgeValue  value  Iterator  curIterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return s ? isOut.getDestination (  )  : s.getSource (  ) ;^424^^^^^420^425^return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  isOut  DiGraphEdge  s  E  edgeValue  value  Iterator  curIterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return destNode.toString (  )  + " -> " + sourceNode.toString (  ) ;^519^^^^^518^520^return sourceNode.toString (  )  + " -> " + destNode.toString (  ) ;^[CLASS] LinkedDirectedGraph LinkedDirectedGraphNode NeighborIterator LinkedDirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] DiGraphNode  dNode  dNode1  dNode2  destNode  node  sourceNode  boolean  E  edgeValue  value  Iterator  curIterator  i  in  out  List  backwardEdges  edgeList  edges  forwardEdges  inEdgeList  list  nodeList  outEdgeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  totalSize  
[buglab_swap_variables]^return out.hasNext (  )  || in.hasNext (  ) ;^416^^^^^415^417^return in.hasNext (  )  || out.hasNext (  ) ;^[CLASS] LinkedDirectedGraphNode NeighborIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  in  out  List  inEdgeList  outEdgeList  boolean  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  in ? out : isOut;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] LinkedDirectedGraphNode NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  isOut  DiGraphEdge  s  Iterator  curIterator  in  out  List  inEdgeList  outEdgeList  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? in : out;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] LinkedDirectedGraphNode NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  isOut  DiGraphEdge  s  Iterator  curIterator  in  out  List  inEdgeList  outEdgeList  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[buglab_swap_variables]^return s ? isOut.getDestination (  )  : s.getSource (  ) ;^424^^^^^420^425^return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[CLASS] LinkedDirectedGraphNode NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  isOut  DiGraphEdge  s  Iterator  curIterator  in  out  List  inEdgeList  outEdgeList  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[buglab_swap_variables]^return out.hasNext (  )  || in.hasNext (  ) ;^416^^^^^415^417^return in.hasNext (  )  || out.hasNext (  ) ;^[CLASS] NeighborIterator  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] Iterator  in  out  boolean  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  out ? isOut : in;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] Iterator  curIterator  in  out  boolean  isOut  DiGraphEdge  s  
[buglab_swap_variables]^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? in : out;^422^^^^^420^425^Iterator<DiGraphEdge<N, E>> curIterator =  isOut ? out : in;^[CLASS] NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] Iterator  curIterator  in  out  boolean  isOut  DiGraphEdge  s  
[buglab_swap_variables]^return s ? isOut.getDestination (  )  : s.getSource (  ) ;^424^^^^^420^425^return isOut ? s.getDestination (  )  : s.getSource (  ) ;^[CLASS] NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] Iterator  curIterator  in  out  boolean  isOut  DiGraphEdge  s  
[buglab_swap_variables]^return destNode.toString (  )  + " -> " + sourceNode.toString (  ) ;^519^^^^^518^520^return sourceNode.toString (  )  + " -> " + destNode.toString (  ) ;^[CLASS] LinkedDirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] DiGraphNode  destNode  node  sourceNode  boolean  E  edgeValue  value  Annotation  annotation  data  
