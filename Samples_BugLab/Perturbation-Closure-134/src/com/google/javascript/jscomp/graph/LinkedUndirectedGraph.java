[buglab_swap_variables]^new LinkedUndirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedUndirectedGraphEdge<N, E> (  edgeValue, dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedUndirectedGraphEdge<N, E> ( edgeValue, src, dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedUndirectedGraphEdge<N, E> ( src,  dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> (  edgeValue, dest ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, dest, edgeValue ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src,  dest ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^getUndirectedGraphEdges ( destValue, srcValue )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^getUndirectedGraphEdges (  destValue )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^getUndirectedGraphEdges ( srcValue )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^LinkedUndirectedGraphNode<N, E> node = nodeValue.get ( nodes ) ;^95^^^^^93^101^LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put ( node, nodeValue ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put (  node ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put ( nodeValue ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^nodes.put ( nodeValueValue, node ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^Preconditions.checkNotNull ( value, uNode + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^Preconditions.checkNotNull (  value + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^Preconditions.checkNotNull ( uNode + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^UndiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^124^^^^^123^139^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^UndiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^128^^^^^123^139^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^return nodeValue.get ( nodes ) ;^143^^^^^142^144^return nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^result.addAll ( getUndirectedGraphEdges (  n2 )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^result.addAll ( getUndirectedGraphEdges ( n1 )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^result.addAll ( getUndirectedGraphEdges ( n2, n1 )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^UndiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^172^^^^^171^187^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^UndiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^176^^^^^171^187^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^if  (  ( dNode2.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == outEdge )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^if  (  ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^if  ( node.getNodeA (  )  == edge )  {^235^^^^^231^241^if  ( edge.getNodeA (  )  == node )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[buglab_swap_variables]^return nodeB.toString (  )  + " -- " + nodeA.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[buglab_swap_variables]^return nodeB.toString (  )  + " -- " + nodeA.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
