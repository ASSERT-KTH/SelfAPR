[BugLab_Variable_Misuse]^this.value = value;^267^^^^^266^269^this.value = nodeValue;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] <init> [RETURN_TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N)   N nodeValue [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  nodeValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^this.value = value;^351^^^^^349^354^this.value = edgeValue;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] <init> [RETURN_TYPE] UndiGraphNode)   UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  nodeValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> node = getUndirectedGraphNode ( value ) ;^47^^^^^46^66^UndiGraphNode<N, E> node = getUndirectedGraphNode ( srcValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( node != null )  {^48^^^^^46^66^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( value + " does not exist in graph" ) ;^49^50^^^^46^66^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  ^  " does not exist in graph" ) ;^49^50^^^^46^66^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  !=  " does not exist in graph" ) ;^49^50^^^^46^66^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  >=  " does not exist in graph" ) ;^49^50^^^^46^66^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^node = getUndirectedGraphNode ( value ) ;^54^^^^^46^66^node = getUndirectedGraphNode ( destValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( node != null )  {^55^^^^^46^66^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( value + " does not exist in graph" ) ;^56^57^^^^46^66^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  <=  " does not exist in graph" ) ;^56^57^^^^46^66^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  ==  " does not exist in graph" ) ;^56^57^^^^46^66^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue   instanceof   " does not exist in graph" ) ;^56^57^^^^46^66^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  ^  " does not exist in graph" ) ;^56^57^^^^46^66^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^new LinkedUndirectedGraphEdge<N, E> ( null, edgeValue, dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^new LinkedUndirectedGraphEdge<N, E> ( src, value, dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^new LinkedUndirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^new LinkedUndirectedGraphEdge<N, E> ( edgeValue, src, dest ) ;^62^^^^^46^66^new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, value, dest ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( edgeValue, src, dest ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, dest, edgeValue ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( dest, edgeValue, src ) ;^61^62^^^^46^66^LinkedUndirectedGraphEdge<N, E> edge = new LinkedUndirectedGraphEdge<N, E> ( src, edgeValue, dest ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return null;^65^^^^^46^66^return edge;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] connect [RETURN_TYPE] GraphEdge   N srcValue E edgeValue N destValue [VARIABLES] LinkedUndirectedGraphEdge  edge  LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> node = getUndirectedGraphNode ( value ) ;^70^^^^^69^90^UndiGraphNode<N, E> node = getUndirectedGraphNode ( srcValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( node != null )  {^71^^^^^69^90^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  <  " does not exist in graph" ) ;^72^73^^^^69^90^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( value + " does not exist in graph" ) ;^72^73^^^^69^90^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  <<  " does not exist in graph" ) ;^72^73^^^^69^90^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue   instanceof   " does not exist in graph" ) ;^72^73^^^^69^90^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( srcValue  &&  " does not exist in graph" ) ;^72^73^^^^69^90^throw new IllegalArgumentException ( srcValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^node = getUndirectedGraphNode ( value ) ;^77^^^^^69^90^node = getUndirectedGraphNode ( destValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( node != null )  {^78^^^^^69^90^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^throw new IllegalArgumentException ( value + " does not exist in graph" ) ;^79^80^^^^69^90^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  &  " does not exist in graph" ) ;^79^80^^^^69^90^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  &&  " does not exist in graph" ) ;^79^80^^^^69^90^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  <<  " does not exist in graph" ) ;^79^80^^^^69^90^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( destValue  >=  " does not exist in graph" ) ;^79^80^^^^69^90^throw new IllegalArgumentException ( destValue + " does not exist in graph" ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^getUndirectedGraphEdges ( value, destValue )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^getUndirectedGraphEdges ( srcValue, value )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^getUndirectedGraphEdges ( destValue, srcValue )  )  {^86^^^^^69^90^getUndirectedGraphEdges ( srcValue, destValue )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^dest.getNeighborEdges (  ) .remove ( 0 ) ;^88^^^^^69^90^dest.getNeighborEdges (  ) .remove ( edge ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] disconnect [RETURN_TYPE] void   N srcValue N destValue [VARIABLES] LinkedUndirectedGraphNode  dest  src  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^LinkedUndirectedGraphNode<N, E> node = nodes.get ( value ) ;^95^^^^^93^101^LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^LinkedUndirectedGraphNode<N, E> node = nodeValue.get ( nodes ) ;^95^^^^^93^101^LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^LinkedUndirectedGraphNode<N, E> node = null.get ( nodeValue ) ;^95^^^^^93^101^LinkedUndirectedGraphNode<N, E> node = nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^if  ( 3 == null )  {^96^^^^^93^101^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( node != null )  {^96^^^^^93^101^if  ( node == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^node = new LinkedUndirectedGraphNode<N, E> ( value ) ;^97^^^^^93^101^node = new LinkedUndirectedGraphNode<N, E> ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^nodes.put ( value, node ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^nodes.put ( node, nodeValue ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^nodes.put ( nodeValueValue, node ) ;^98^^^^^93^101^nodes.put ( nodeValue, node ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  node  nodeA  nodeB  E  edgeValue  value  Iterator  edgeIterator  List  neighborList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^105^^^^^104^112^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodes [RETURN_TYPE] List   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( srcValue ) ;^107^^^^^104^112^for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodes [RETURN_TYPE] List   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^for  ( Iterator<GraphNode<N, E>> value = getNeighborNodesIterator ( i ) ;^107^^^^^104^112^for  ( Iterator<GraphNode<N, E>> i = getNeighborNodesIterator ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodes [RETURN_TYPE] List   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^nodeList.add ( 4.next (  )  ) ;^109^^^^^104^112^nodeList.add ( i.next (  )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodes [RETURN_TYPE] List   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^116^^^^^115^119^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( null, value + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^Preconditions.checkNotNull ( uNode, srcValue + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^Preconditions.checkNotNull ( value, uNode + " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^Preconditions.checkNotNull ( uNode, value  <=  " should be in the graph." ) ;^117^^^^^115^119^Preconditions.checkNotNull ( uNode, value + " should be in the graph." ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNeighborNodesIterator [RETURN_TYPE] Iterator   N value [VARIABLES] boolean  UndiGraphNode  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  neighborList  nodeList  Map  nodes  N  destValue  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> dNode1 = nodes.get ( value ) ;^124^^^^^123^139^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^UndiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^124^^^^^123^139^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> dNode1 = nodes.get ( srcValue ) ;^124^^^^^123^139^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( dNode1 != null )  {^125^^^^^123^139^if  ( dNode1 == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> dNode2 = nodes.get ( value ) ;^128^^^^^123^139^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^UndiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^128^^^^^123^139^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( dNode2 != null )  {^129^^^^^123^139^if  ( dNode2 == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^if  ( dNode2.getNodeA (  )  == outEdge || outEdge.getNodeB (  )  == dNode2 )  {^134^^^^^123^139^if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode2 )  {^134^^^^^123^139^if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( outEdge.getNodeA (  )  >= dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^134^^^^^123^139^if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  != dNode2 )  {^134^^^^^123^139^if  ( outEdge.getNodeA (  )  == dNode2 || outEdge.getNodeB (  )  == dNode2 )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return nodes.get ( value ) ;^143^^^^^142^144^return nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^return nodeValue.get ( nodes ) ;^143^^^^^142^144^return nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return 2.get ( nodeValue ) ;^143^^^^^142^144^return nodes.get ( nodeValue ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getUndirectedGraphNode [RETURN_TYPE] UndiGraphNode   N nodeValue [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return createUndirectedGraphNode ( nodeValue ) ;^155^^^^^154^156^return createUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] createNode [RETURN_TYPE] GraphNode   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^result.addAll ( getUndirectedGraphEdges ( value, n2 )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^result.addAll ( getUndirectedGraphEdges ( n1, value )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^result.addAll ( getUndirectedGraphEdges ( n2, n1 )  ) ;^161^^^^^159^163^result.addAll ( getUndirectedGraphEdges ( n1, n2 )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return getUndirectedGraphNode ( srcValue ) ;^167^^^^^166^168^return getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNode [RETURN_TYPE] GraphNode   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return getUndirectedGraphNode ( nodeValue ) ;^167^^^^^166^168^return getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNode [RETURN_TYPE] GraphNode   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> dNode1 = nodes.get ( value ) ;^172^^^^^171^187^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^UndiGraphNode<N, E> dNode1 = n1.get ( nodes ) ;^172^^^^^171^187^UndiGraphNode<N, E> dNode1 = nodes.get ( n1 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( dNode1 != null )  {^173^^^^^171^187^if  ( dNode1 == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Literal]^return true;^174^^^^^171^187^return false;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^UndiGraphNode<N, E> dNode2 = n2.get ( nodes ) ;^176^^^^^171^187^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> dNode2 = nodes.get ( value ) ;^176^^^^^171^187^UndiGraphNode<N, E> dNode2 = nodes.get ( n2 ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( dNode2 != null )  {^177^^^^^171^187^if  ( dNode2 == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Literal]^return true;^178^^^^^171^187^return false;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^if  (  ( dNode1.getNodeA (  )  == outEdge && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^if  (  ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  && ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  == dNode1 || outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  != dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  > dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  <= dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  != dNode1 )  )  {^181^182^^^^171^187^if  (  ( outEdge.getNodeA (  )  == dNode1 && outEdge.getNodeB (  )  == dNode2 )  || ( outEdge.getNodeA (  )  == dNode2 && outEdge.getNodeB (  )  == dNode1 )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Literal]^return false;^183^^^^^171^187^return true;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Literal]^return true;^186^^^^^171^187^return false;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isConnected [RETURN_TYPE] boolean   N n1 N n2 [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edges  neighborList  nodeList  result  UndiGraphEdge  outEdge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( edge.getNodeA (  )  >= node )  {^194^^^^^190^200^if  ( edge.getNodeA (  )  == node )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getGraphvizEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^if  ( 0.getNodeA (  )  == node )  {^194^^^^^190^200^if  ( edge.getNodeA (  )  == node )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getGraphvizEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^List<GraphvizNode> nodeList = Lists.newArrayListWithCapacity ( null.size (  )  ) ;^209^210^^^^208^215^List<GraphvizNode> nodeList = Lists.newArrayListWithCapacity ( nodes.size (  )  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getGraphvizNodes [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Literal]^return true;^219^^^^^218^220^return false;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] isDirected [RETURN_TYPE] boolean   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Argument_Swapping]^if  ( node.getNodeA (  )  == edge )  {^235^^^^^231^241^if  ( edge.getNodeA (  )  == node )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( edge.getNodeA (  )  <= node )  {^235^^^^^231^241^if  ( edge.getNodeA (  )  == node )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^for  ( LinkedUndirectedGraphNode<N, E> node : 2.values (  )  )  {^233^^^^^231^241^for  ( LinkedUndirectedGraphNode<N, E> node : nodes.values (  )  )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getEdges [RETURN_TYPE] List   [VARIABLES] LinkedUndirectedGraphNode  node  boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( srcValue ) ;^245^^^^^244^250^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNodeDegree [RETURN_TYPE] int   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( nodeValue ) ;^245^^^^^244^250^UndiGraphNode<N, E> uNode = getUndirectedGraphNode ( value ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNodeDegree [RETURN_TYPE] int   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( uNode != null )  {^246^^^^^244^250^if  ( uNode == null )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getNodeDegree [RETURN_TYPE] int   N value [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return srcValue;^284^^^^^283^285^return value;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getValue [RETURN_TYPE] N   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^annotation = annotation;^289^^^^^288^290^annotation = data;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] setAnnotation [RETURN_TYPE] void   Annotation data [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return "LDN" + totalNodes;^299^^^^^298^300^return "LDN" + id;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getId [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return srcValue != null ? value.toString (  )  : "null";^304^^^^^303^305^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^return value == null ? value.toString (  )  : "null";^304^^^^^303^305^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return nodeValue != null ? value.toString (  )  : "null";^304^^^^^303^305^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return null.hasNext (  ) ;^318^^^^^317^319^return edgeIterator.hasNext (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] hasNext [RETURN_TYPE] boolean   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( edge.getNodeA (  )  < LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return this.getNodeA (  ) ;^327^^^^^322^329^return edge.getNodeA (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return 1.getNodeB (  ) ;^325^^^^^322^329^return edge.getNodeB (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  UndiGraphEdge  edge  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return edgeValue;^358^^^^^357^359^return value;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getValue [RETURN_TYPE] E   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^annotation = annotation;^379^^^^^378^380^annotation = data;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] setAnnotation [RETURN_TYPE] void   Annotation data [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^return value == null ? value.toString (  )  : "null";^389^^^^^388^390^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return nodeA.toString (  )  + " -- " + 0.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Argument_Swapping]^return nodeB.toString (  )  + " -- " + nodeA.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^return nodeA.toString (  &  )  + " -- " + nodeB.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^return nodeA.toString (  )   ||  " -- " + nodeB.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraph LinkedUndirectedGraphNode NeighborIterator LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  dNode1  dNode2  node  nodeA  nodeB  uNode  E  edgeValue  value  Iterator  edgeIterator  i  List  edgeList  edges  list  neighborList  nodeList  result  Map  nodes  N  destValue  n1  n2  nodeValue  srcValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^this.value = value;^267^^^^^266^269^this.value = nodeValue;^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] <init> [RETURN_TYPE] LinkedUndirectedGraph$LinkedUndirectedGraphNode(N)   N nodeValue [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^return nodeValue;^284^^^^^283^285^return value;^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] getValue [RETURN_TYPE] N   [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  int  id  totalNodes  
[BugLab_Variable_Misuse]^annotation = annotation;^289^^^^^288^290^annotation = data;^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] setAnnotation [RETURN_TYPE] void   Annotation data [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return "LDN" + totalNodes;^299^^^^^298^300^return "LDN" + id;^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] getId [RETURN_TYPE] String   [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Variable_Misuse]^return nodeValue != null ? value.toString (  )  : "null";^304^^^^^303^305^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^return value == null ? value.toString (  )  : "null";^304^^^^^303^305^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] Iterator  edgeIterator  List  neighborList  boolean  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( edge.getNodeA (  )  != LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[CLASS] LinkedUndirectedGraphNode NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] boolean  Iterator  edgeIterator  List  neighborList  UndiGraphEdge  edge  N  nodeValue  value  Annotation  annotation  data  int  id  totalNodes  
[BugLab_Wrong_Operator]^if  ( edge.getNodeA (  )  > LinkedUndirectedGraphNode.this )  {^324^^^^^322^329^if  ( edge.getNodeA (  )  == LinkedUndirectedGraphNode.this )  {^[CLASS] NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] Iterator  edgeIterator  UndiGraphEdge  edge  boolean  
[BugLab_Variable_Misuse]^return 2.getNodeB (  ) ;^325^^^^^322^329^return edge.getNodeB (  ) ;^[CLASS] NeighborIterator  [METHOD] next [RETURN_TYPE] GraphNode   [VARIABLES] Iterator  edgeIterator  UndiGraphEdge  edge  boolean  
[BugLab_Variable_Misuse]^this.value = value;^351^^^^^349^354^this.value = edgeValue;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] <init> [RETURN_TYPE] UndiGraphNode)   UndiGraphNode<N, E> nodeA E edgeValue UndiGraphNode<N, E> nodeB [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  
[BugLab_Variable_Misuse]^annotation = annotation;^379^^^^^378^380^annotation = data;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] setAnnotation [RETURN_TYPE] void   Annotation data [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
[BugLab_Variable_Misuse]^return edgeValue != null ? value.toString (  )  : "null";^389^^^^^388^390^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
[BugLab_Wrong_Operator]^return value == null ? value.toString (  )  : "null";^389^^^^^388^390^return value != null ? value.toString (  )  : "null";^[CLASS] LinkedUndirectedGraphEdge  [METHOD] getLabel [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
[BugLab_Argument_Swapping]^return nodeB.toString (  )  + " -- " + nodeA.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
[BugLab_Wrong_Operator]^return nodeA.toString (  ^  )  + " -- " + nodeB.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
[BugLab_Wrong_Operator]^return nodeA.toString (  )   <<  " -- " + nodeB.toString (  ) ;^406^^^^^405^407^return nodeA.toString (  )  + " -- " + nodeB.toString (  ) ;^[CLASS] LinkedUndirectedGraphEdge  [METHOD] toString [RETURN_TYPE] String   [VARIABLES] boolean  UndiGraphNode  nodeA  nodeB  E  edgeValue  value  Annotation  annotation  data  
