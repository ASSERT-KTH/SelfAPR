[buglab_swap_variables]^Color color = node.getNode ( graph ) .getAnnotation (  ) ;^75^^^^^72^83^Color color = graph.getNode ( node ) .getAnnotation (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[buglab_swap_variables]^N headNode = colorToNodeMapToNodeMap[color.value];^76^^^^^72^83^N headNode = colorToNodeMap[color.value];^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[buglab_swap_variables]^return o1 == 0 && tieBreaker != null ? tieBreaker.compare ( result.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return tieBreaker == 0 && result != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^Collections.sort (  new Comparator<GraphNode<N, E>> (  )  {^137^^^^^122^152^Collections.sort ( worklist, new Comparator<GraphNode<N, E>> (  )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^if  ( node.isIndependentOf ( subgraph.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^for  ( Iterator<GraphNode<N, E>> worklist = i.iterator (  ) ; i.hasNext (  ) ; )  {^154^^^^^139^169^for  ( Iterator<GraphNode<N, E>> i = worklist.iterator (  ) ; i.hasNext (  ) ; )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && o1 != null ? tieBreaker.compare ( tieBreaker.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[buglab_swap_variables]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && o1 != null ? tieBreaker.compare ( tieBreaker.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^Collections.sort (  new Comparator<GraphNode<N, E>> (  )  {^137^^^^^122^152^Collections.sort ( worklist, new Comparator<GraphNode<N, E>> (  )  {^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^if  ( node.isIndependentOf ( subgraph.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && o2 != null ? tieBreaker.compare ( o1.getValue (  ) , tieBreaker.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^return result == 0 && o1 != null ? tieBreaker.compare ( tieBreaker.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[buglab_swap_variables]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^return result == 0 && o2 != null ? tieBreaker.compare ( o1.getValue (  ) , tieBreaker.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[buglab_swap_variables]^tieBreaker.compare ( o1.getValue (  ) .getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
