[BugLab_Variable_Misuse]^Color color = graph.getNode ( headNode ) .getAnnotation (  ) ;^75^^^^^72^83^Color color = graph.getNode ( node ) .getAnnotation (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^Color color = this.getNode ( node ) .getAnnotation (  ) ;^75^^^^^72^83^Color color = graph.getNode ( node ) .getAnnotation (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^Color color = node.getNode ( graph ) .getAnnotation (  ) ;^75^^^^^72^83^Color color = graph.getNode ( node ) .getAnnotation (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^Color color = null.getNode ( node ) .getAnnotation (  ) ;^75^^^^^72^83^Color color = graph.getNode ( node ) .getAnnotation (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^N headNode = colorToNodeMapToNodeMap[color.value];^76^^^^^72^83^N headNode = colorToNodeMap[color.value];^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^if  ( headNode != null )  {^77^^^^^72^83^if  ( headNode == null )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^colorToNodeMap[color.value] = headNode;^78^^^^^72^83^colorToNodeMap[color.value] = node;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return headNode;^79^^^^^72^83^return node;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return node;^81^^^^^72^83^return headNode;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] getPartitionSuperNode [RETURN_TYPE] N   N node [VARIABLES] N[]  colorToNodeMap  boolean  Color  color  AdjacencyGraph  graph  int  value  N  headNode  node  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^if  ( ! ( other  <  Color )  )  {^98^^^^^97^103^if  ( ! ( other instanceof Color )  )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] N[]  colorToNodeMap  Object  other  AdjacencyGraph  graph  boolean  int  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return value >=  (  ( Color )  other ) .value;^101^^^^^97^103^return value ==  (  ( Color )  other ) .value;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] N[]  colorToNodeMap  Object  other  AdjacencyGraph  graph  boolean  int  value  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^return true;^99^^^^^97^103^return false;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] N[]  colorToNodeMap  Object  other  AdjacencyGraph  graph  boolean  int  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return value == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( null.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return o1 == 0 && tieBreaker != null ? tieBreaker.compare ( result.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return tieBreaker == 0 && result != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 || tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result != 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 && tieBreaker == null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^return result == value && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^int result = graph.getWeight ( o2.getValue (  )  )  <=  graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^- graph.getWeight ( 2.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^int count = value;^150^^^^^135^165^int count = 0;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^subgraph.addNode ( 4.getValue (  )  ) ;^157^^^^^142^172^subgraph.addNode ( node.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^for  ( Iterator<GraphNode<N, E>> worklist = i.iterator (  ) ; i.hasNext (  ) ; )  {^154^^^^^139^169^for  ( Iterator<GraphNode<N, E>> i = worklist.iterator (  ) ; i.hasNext (  ) ; )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^subgraph.addNode ( null.getValue (  )  ) ;^157^^^^^142^172^subgraph.addNode ( node.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^if  ( subgraph.isIndependentOf ( null.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^if  ( node.isIndependentOf ( subgraph.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^Color color = new Color ( value ) ;^152^^^^^137^167^Color color = new Color ( count ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^SubGraph<N, E> subgraph = this.newSubGraph (  ) ;^153^^^^^138^168^SubGraph<N, E> subgraph = graph.newSubGraph (  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^subgraph.addNode ( 0.getValue (  )  ) ;^157^^^^^142^172^subgraph.addNode ( node.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^colorToNodeMap = colorToNodeMap;^166^^^^^151^181^colorToNodeMap = map;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return value;^167^^^^^152^182^return count;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  colorToNodeMap  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  AdjacencyGraph  graph  SubGraph  subgraph  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^int result = graph.getWeight ( o2.getValue (  )  )  ^  graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^int result = graph.getWeight ( this.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^int result = null.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return value == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && o1 != null ? tieBreaker.compare ( tieBreaker.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 || tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result != 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 && tieBreaker == null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^return result == -1 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GraphColoring Color GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^int value = 1;^90^^^^^85^95^int value = 0;^[CLASS] Color  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] N[]  colorToNodeMap  map  GraphNode  o1  o2  AdjacencyGraph  graph  boolean  int  count  result  value  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^if  ( ! ( other  ^  Color )  )  {^98^^^^^97^103^if  ( ! ( other instanceof Color )  )  {^[CLASS] Color  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] int  value  Object  other  boolean  
[BugLab_Wrong_Operator]^return value !=  (  ( Color )  other ) .value;^101^^^^^97^103^return value ==  (  ( Color )  other ) .value;^[CLASS] Color  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] int  value  Object  other  boolean  
[BugLab_Wrong_Literal]^return true;^99^^^^^97^103^return false;^[CLASS] Color  [METHOD] equals [RETURN_TYPE] boolean   Object other [VARIABLES] int  value  Object  other  boolean  
[BugLab_Variable_Misuse]^return count == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && o2 != null ? tieBreaker.compare ( o1.getValue (  ) , tieBreaker.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 || tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result != 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 && tieBreaker == null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^return result == count && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^127^157^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( 2.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^int result = graph.getWeight ( o2.getValue (  )  )  |  graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^125^155^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^- graph.getWeight ( null.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^126^156^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^128^158^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^int count = -1;^150^^^^^135^165^int count = 0;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^if  ( subgraph.isIndependentOf ( 2.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^if  ( node.isIndependentOf ( subgraph.getValue (  )  )  )  {^156^^^^^141^171^if  ( subgraph.isIndependentOf ( node.getValue (  )  )  )  {^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^subgraph.addNode ( null.getValue (  )  ) ;^157^^^^^142^172^subgraph.addNode ( node.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^Color color = new Color ( result ) ;^152^^^^^137^167^Color color = new Color ( count ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^SubGraph<N, E> subgraph = 2.newSubGraph (  ) ;^153^^^^^138^168^SubGraph<N, E> subgraph = graph.newSubGraph (  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^return result;^167^^^^^152^182^return count;^[CLASS] GreedyGraphColoring 1  [METHOD] color [RETURN_TYPE] int   [VARIABLES] N[]  map  boolean  Color  color  Iterator  i  List  worklist  GraphNode  node  o1  o2  SubGraph  subgraph  int  count  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^int result = graph.getWeight ( o2.getValue (  )  )  !=  graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Variable_Misuse]^- graph.getWeight ( 0.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return o2 == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , result.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^return result == 0 && o2 != null ? tieBreaker.compare ( o1.getValue (  ) , tieBreaker.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 || tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result != 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Wrong_Operator]^return result == 0 && tieBreaker == null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Wrong_Literal]^return result == result && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] GreedyGraphColoring 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] GraphNode  o1  o2  boolean  int  result  Comparator  tieBreaker  
[BugLab_Argument_Swapping]^int result = graph.getWeight ( o1.getValue (  )  ) - graph.getWeight ( o2.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^int result = o1.getWeight ( o2.getValue (  )  ) - graph.getWeight ( graph.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Wrong_Operator]^int result = graph.getWeight ( o2.getValue (  )  )  ||  graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Variable_Misuse]^int result = 4.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^int result = o2.getWeight ( graph.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^140^141^^^^139^144^int result = graph.getWeight ( o2.getValue (  )  ) - graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^- o1.getWeight ( graph.getValue (  )  ) ;^141^^^^^139^144^- graph.getWeight ( o1.getValue (  )  ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^return tieBreaker == 0 && result != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^return o1 == 0 && tieBreaker != null ? tieBreaker.compare ( result.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^return result == 0 && o2 != null ? tieBreaker.compare ( o1.getValue (  ) , tieBreaker.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^return result == 0 && o1 != null ? tieBreaker.compare ( tieBreaker.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Wrong_Operator]^return result == 0 || tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Wrong_Operator]^return result != 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Wrong_Operator]^return result == 0 && tieBreaker == null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Wrong_Literal]^return result == result && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^142^143^^^^139^144^return result == 0 && tieBreaker != null ? tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
[BugLab_Argument_Swapping]^tieBreaker.compare ( o2.getValue (  ) , o1.getValue (  )  )  : result;^143^^^^^139^144^tieBreaker.compare ( o1.getValue (  ) , o2.getValue (  )  )  : result;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   GraphNode<N, E> o1 GraphNode<N, E> o2 [VARIABLES] boolean  GraphNode  o1  o2  int  result  
