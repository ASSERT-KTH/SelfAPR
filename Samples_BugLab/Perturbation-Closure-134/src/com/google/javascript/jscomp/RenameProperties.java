[buglab_swap_variables]^this ( generatePseudoNames, compiler, null, null ) ;^118^^^^^116^119^this ( compiler, generatePseudoNames, null, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)   AbstractCompiler compiler boolean generatePseudoNames [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this (  generatePseudoNames, null, null ) ;^118^^^^^116^119^this ( compiler, generatePseudoNames, null, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)   AbstractCompiler compiler boolean generatePseudoNames [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this ( compiler,  null, null ) ;^118^^^^^116^119^this ( compiler, generatePseudoNames, null, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] AbstractCompiler,boolean)   AbstractCompiler compiler boolean generatePseudoNames [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this ( generatePseudoNames, compiler, prevUsedPropertyMap, null ) ;^132^^^^^130^133^this ( compiler, generatePseudoNames, prevUsedPropertyMap, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] VariableMap)   AbstractCompiler compiler boolean generatePseudoNames VariableMap prevUsedPropertyMap [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this (  generatePseudoNames, prevUsedPropertyMap, null ) ;^132^^^^^130^133^this ( compiler, generatePseudoNames, prevUsedPropertyMap, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] VariableMap)   AbstractCompiler compiler boolean generatePseudoNames VariableMap prevUsedPropertyMap [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this ( compiler,  prevUsedPropertyMap, null ) ;^132^^^^^130^133^this ( compiler, generatePseudoNames, prevUsedPropertyMap, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] VariableMap)   AbstractCompiler compiler boolean generatePseudoNames VariableMap prevUsedPropertyMap [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this ( compiler, prevUsedPropertyMap, generatePseudoNames, null ) ;^132^^^^^130^133^this ( compiler, generatePseudoNames, prevUsedPropertyMap, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] VariableMap)   AbstractCompiler compiler boolean generatePseudoNames VariableMap prevUsedPropertyMap [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^this ( compiler, generatePseudoNames,  null ) ;^132^^^^^130^133^this ( compiler, generatePseudoNames, prevUsedPropertyMap, null ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] <init> [RETURN_TYPE] VariableMap)   AbstractCompiler compiler boolean generatePseudoNames VariableMap prevUsedPropertyMap [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  
[buglab_swap_variables]^if  ( p2.numOccurrences != p1.numOccurrences )  {^81^^^^^80^85^if  ( p1.numOccurrences != p2.numOccurrences )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^if  ( p1 != p2.numOccurrences )  {^81^^^^^80^85^if  ( p1.numOccurrences != p2.numOccurrences )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p1.numOccurrences - p2.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p2.numOccurrences - p1.numOccurrences.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p1.numOccurrences.numOccurrences - p2;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p1 - p2.numOccurrences.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p2 - p1.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p2.oldName.compareTo ( p1.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p1.compareTo ( p2.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p1.oldName.compareTo ( p2 ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^return p2.compareTo ( p1.oldName.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] Set  externedNames  quotedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p1  p2  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new ProcessExterns (  )  ) ;^160^^^^^145^175^NodeTraversal.traverse ( compiler, externs, new ProcessExterns (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new ProcessExterns (  )  ) ;^160^^^^^145^175^NodeTraversal.traverse ( compiler, externs, new ProcessExterns (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new ProcessExterns (  )  ) ;^160^^^^^145^175^NodeTraversal.traverse ( compiler, externs, new ProcessExterns (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new ProcessProperties (  )  ) ;^161^^^^^146^176^NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new ProcessProperties (  )  ) ;^161^^^^^146^176^NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new ProcessProperties (  )  ) ;^161^^^^^146^176^NodeTraversal.traverse ( compiler, root, new ProcessProperties (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^new HashSet<String> ( quotedNames.size (  )  + externedNames.size (  )  ) ;^164^^^^^149^179^new HashSet<String> ( externedNames.size (  )  + quotedNames.size (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Set<String> reservedNames = new HashSet<String> ( quotedNames.size (  )  + externedNames.size (  )  ) ;^163^164^^^^148^178^Set<String> reservedNames = new HashSet<String> ( externedNames.size (  )  + quotedNames.size (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^reusePropertyNames ( propertyMap, reservedNames.values (  )  ) ;^171^^^^^156^186^reusePropertyNames ( reservedNames, propertyMap.values (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^reusePropertyNames (  propertyMap.values (  )  ) ;^171^^^^^156^186^reusePropertyNames ( reservedNames, propertyMap.values (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^reusePropertyNames ( reservedNames.values (  )  ) ;^171^^^^^156^186^reusePropertyNames ( reservedNames, propertyMap.values (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^generateNames ( reservedNames, propsByFreq ) ;^179^^^^^164^194^generateNames ( propsByFreq, reservedNames ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^generateNames (  reservedNames ) ;^179^^^^^164^194^generateNames ( propsByFreq, reservedNames ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^generateNames ( propsByFreq ) ;^179^^^^^164^194^generateNames ( propsByFreq, reservedNames ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Preconditions.checkState ( p.oldName.equals ( oldName )  ) ;^187^^^^^172^202^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Preconditions.checkState ( p.equals ( oldName.oldName )  ) ;^187^^^^^172^202^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^n.setString ( p.newName.newName ) ;^188^^^^^173^203^n.setString ( p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Property p = oldName.get ( propertyMap ) ;^185^^^^^170^200^Property p = propertyMap.get ( oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^replacement = p.newName.newName;^203^^^^^188^218^replacement = p.newName;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^replacement = p;^203^^^^^188^218^replacement = p.newName;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Preconditions.checkState ( p.oldName.equals ( oldName )  ) ;^202^^^^^187^217^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Preconditions.checkState ( p.equals ( oldName.oldName )  ) ;^202^^^^^187^217^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Node parent = n.get ( callNodeToParentMap ) ;^195^^^^^180^210^Node parent = callNodeToParentMap.get ( n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Property p = oldName.get ( propertyMap ) ;^199^^^^^184^214^Property p = propertyMap.get ( oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^Preconditions.checkState ( oldName.equals ( p.oldName.oldName )  ) ;^202^^^^^187^217^Preconditions.checkState ( oldName.equals ( p.oldName )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^parent.replaceChild ( sb, Node.newString ( n.toString (  )  )  ) ;^212^^^^^197^227^parent.replaceChild ( n, Node.newString ( sb.toString (  )  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^parent.replaceChild (  Node.newString ( sb.toString (  )  )  ) ;^212^^^^^197^227^parent.replaceChild ( n, Node.newString ( sb.toString (  )  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  StringBuilder  sb  Node  externs  firstArg  n  parent  root  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^if  ( prevName.contains ( reservedNames )  )  {^236^^^^^228^244^if  ( reservedNames.contains ( prevName )  )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] reusePropertyNames [RETURN_TYPE] void   String> reservedNames Property> allProps [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  Collection  allProps  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  prop  
[buglab_swap_variables]^String prevName = prevUsedPropertyMap.lookupNewName ( prop.oldName.oldName ) ;^233^^^^^228^244^String prevName = prevUsedPropertyMap.lookupNewName ( prop.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] reusePropertyNames [RETURN_TYPE] void   String> reservedNames Property> allProps [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  Collection  allProps  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  prop  
[buglab_swap_variables]^String prevName = prop.lookupNewName ( prevUsedPropertyMap.oldName ) ;^233^^^^^228^244^String prevName = prevUsedPropertyMap.lookupNewName ( prop.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] reusePropertyNames [RETURN_TYPE] void   String> reservedNames Property> allProps [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  Collection  allProps  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  prop  
[buglab_swap_variables]^String prevName = prop.oldName.lookupNewName ( prevUsedPropertyMap ) ;^233^^^^^228^244^String prevName = prevUsedPropertyMap.lookupNewName ( prop.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] reusePropertyNames [RETURN_TYPE] void   String> reservedNames Property> allProps [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  Collection  allProps  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  prop  
[buglab_swap_variables]^String prevName = prevUsedPropertyMap.lookupNewName ( prop ) ;^233^^^^^228^244^String prevName = prevUsedPropertyMap.lookupNewName ( prop.oldName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] reusePropertyNames [RETURN_TYPE] void   String> reservedNames Property> allProps [VARIABLES] Set  externedNames  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  Collection  allProps  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  prop  
[buglab_swap_variables]^NameGenerator nameGen = new NameGenerator ( reservedCharacters, "", reservedNames ) ;^254^255^^^^253^270^NameGenerator nameGen = new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NameGenerator nameGen = new NameGenerator (  "", reservedCharacters ) ;^254^255^^^^253^270^NameGenerator nameGen = new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^NameGenerator nameGen = new NameGenerator ( reservedNames, "" ) ;^254^255^^^^253^270^NameGenerator nameGen = new NameGenerator ( reservedNames, "", reservedCharacters ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^if  ( p.newName.newName == null )  {^261^^^^^253^270^if  ( p.newName == null )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^p.newName = "$" + p.oldName.oldName + "$";^258^^^^^253^270^p.newName = "$" + p.oldName + "$";^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^p.newName = "$" + p + "$";^258^^^^^253^270^p.newName = "$" + p.oldName + "$";^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^if  ( p == null )  {^261^^^^^253^270^if  ( p.newName == null )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^reservedNames.add ( p.newName.newName ) ;^266^^^^^253^270^reservedNames.add ( p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^compiler.addToDebugLog ( p.newName + " => " + p.oldName ) ;^268^^^^^253^270^compiler.addToDebugLog ( p.oldName + " => " + p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] generateNames [RETURN_TYPE] void   Property> props String> reservedNames [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NameGenerator  nameGen  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  propertyMap  Property  p  
[buglab_swap_variables]^map.put ( p.oldName.newName ) ;^281^^^^^277^285^map.put ( p.oldName, p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] getPropertyMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  p  
[buglab_swap_variables]^map.put ( p.newName, p.oldName ) ;^281^^^^^277^285^map.put ( p.oldName, p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] getPropertyMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  p  
[buglab_swap_variables]^map.put (  p.newName ) ;^281^^^^^277^285^map.put ( p.oldName, p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] getPropertyMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  p  
[buglab_swap_variables]^map.put ( p.oldName ) ;^281^^^^^277^285^map.put ( p.oldName, p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] getPropertyMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  p  
[buglab_swap_variables]^map.put ( p.newName.oldName, p ) ;^281^^^^^277^285^map.put ( p.oldName, p.newName ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] getPropertyMap [RETURN_TYPE] VariableMap   [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  p  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ;^304^^^^^295^313^for  ( Node child = n.getFirstChild (  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  dest  n  parent  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( t, propNode ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( propNode ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( t, key ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( key ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put ( parent, n ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put (  parent ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put ( n ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates ( n, t ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates (  n ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates ( t ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^} else if  ( RENAME_PROPERTY_FUNCTION_NAME.getType (  )  == Token.NAME && parent.equals ( parent.getString (  )  )  )  {^383^384^^^^368^398^} else if  ( parent.getType (  )  == Token.NAME && RENAME_PROPERTY_FUNCTION_NAME.equals ( parent.getString (  )  )  )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^if  ( name.equals ( RENAME_PROPERTY_FUNCTION_NAME )  )  {^375^^^^^360^390^if  ( RENAME_PROPERTY_FUNCTION_NAME.equals ( name )  )  {^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^for  ( Node n = key.getFirstChild (  ) ; key != null;^336^^^^^321^351^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( t, key ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^maybeMarkCandidate ( key ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put ( parent, n ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put (  parent ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^callNodeToParentMap.put ( n ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates ( n, t ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates (  n ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countCallCandidates ( t ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence ( t, name ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  n  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence (  t ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  n  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence ( name ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  n  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( BAD_CALL, callNode ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report (  BAD_CALL ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( callNode ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( BAD_ARG, callNode, name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report (  BAD_ARG, name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( callNode, name, BAD_ARG ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( callNode, BAD_ARG ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^t.report ( callNode,  name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence ( t, name ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence (  t ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^countPropertyOccurrence ( name ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  Node  callNode  firstArg  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  
[buglab_swap_variables]^Property prop = name.get ( propertyMap ) ;^445^^^^^444^451^Property prop = propertyMap.get ( name ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^prop = new Property ( t, name.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^prop = new Property (  t.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^prop = new Property ( name.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^propertyMap.put ( prop, name ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^propertyMap.put (  prop ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^propertyMap.put ( name ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] RenameProperties 1 ProcessExterns ProcessProperties Property  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] Set  externedNames  props  propsByFreq  quotedNames  reservedNames  NodeTraversal  t  String  RENAME_PROPERTY_FUNCTION_NAME  name  newName  oldName  prevName  replacement  int  numOccurrences  char[]  reservedCharacters  Comparator  FREQUENCY_COMPARATOR  AbstractCompiler  compiler  CompilerInput  input  boolean  changed  generatePseudoNames  VariableMap  prevUsedPropertyMap  DiagnosticType  BAD_ARG  BAD_CALL  List  stringNodesToRename  Map  callNodeToParentMap  map  propertyMap  Property  prop  
[buglab_swap_variables]^if  ( p1.numOccurrences.numOccurrences != p2.numOccurrences )  {^81^^^^^80^85^if  ( p1.numOccurrences != p2.numOccurrences )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^if  ( p2 != p1.numOccurrences.numOccurrences )  {^81^^^^^80^85^if  ( p1.numOccurrences != p2.numOccurrences )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^if  ( p2.numOccurrences != p1.numOccurrences )  {^81^^^^^80^85^if  ( p1.numOccurrences != p2.numOccurrences )  {^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p1.numOccurrences - p2.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p2.numOccurrences.numOccurrences - p1.numOccurrences;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p2.numOccurrences - p1;^82^^^^^80^85^return p2.numOccurrences - p1.numOccurrences;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p1.oldName.oldName.compareTo ( p2.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p2.oldName.compareTo ( p1.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p2.oldName.oldName.compareTo ( p1 ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^return p2.compareTo ( p1.oldName.oldName ) ;^84^^^^^80^85^return p1.oldName.compareTo ( p2.oldName ) ;^[CLASS] 1  [METHOD] compare [RETURN_TYPE] int   Property p1 Property p2 [VARIABLES] boolean  Property  p1  p2  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ;^304^^^^^295^313^for  ( Node child = n.getFirstChild (  ) ;^[CLASS] ProcessExterns  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  dest  n  parent  
[buglab_swap_variables]^maybeMarkCandidate ( t, propNode ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate ( propNode ) ;^330^^^^^315^345^maybeMarkCandidate ( propNode, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate ( t, key ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate ( key ) ;^342^^^^^327^357^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^if  ( RENAME_PROPERTY_FUNCTION_NAME.getType (  )  == Token.NAME && fnName.equals ( fnName.getString (  )  )  )  {^364^365^^^^349^379^if  ( fnName.getType (  )  == Token.NAME && RENAME_PROPERTY_FUNCTION_NAME.equals ( fnName.getString (  )  )  )  {^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put ( parent, n ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put (  parent ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put ( n ) ;^366^^^^^364^368^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates ( n, t ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates (  n ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates ( t ) ;^367^^^^^364^368^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^if  ( name.equals ( RENAME_PROPERTY_FUNCTION_NAME )  )  {^375^^^^^360^390^if  ( RENAME_PROPERTY_FUNCTION_NAME.equals ( name )  )  {^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^for  ( Node n = key.getFirstChild (  ) ; key != null;^336^^^^^321^351^for  ( Node key = n.getFirstChild (  ) ; key != null;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate ( t, key ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate (  t ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^maybeMarkCandidate ( key ) ;^342^^^^^336^349^maybeMarkCandidate ( key, t ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put ( parent, n ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put (  parent ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^callNodeToParentMap.put ( n ) ;^366^^^^^351^381^callNodeToParentMap.put ( n, parent ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates ( n, t ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates (  n ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countCallCandidates ( t ) ;^367^^^^^352^382^countCallCandidates ( t, n ) ;^[CLASS] ProcessProperties  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  child  fnName  key  n  parent  propNode  varNode  String  name  
[buglab_swap_variables]^countPropertyOccurrence ( t, name ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  Node  n  String  name  
[buglab_swap_variables]^countPropertyOccurrence (  t ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  Node  n  String  name  
[buglab_swap_variables]^countPropertyOccurrence ( name ) ;^409^^^^^405^411^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] maybeMarkCandidate [RETURN_TYPE] void   Node n NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  Node  n  String  name  
[buglab_swap_variables]^t.report (  BAD_CALL ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( BAD_CALL, callNode ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( callNode ) ;^423^^^^^420^436^t.report ( callNode, BAD_CALL ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( name, BAD_ARG, callNode ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report (  BAD_ARG, name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( callNode, BAD_ARG ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( callNode,  name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^countPropertyOccurrence ( t, name ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^countPropertyOccurrence (  t ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^countPropertyOccurrence ( name ) ;^433^^^^^420^436^countPropertyOccurrence ( name, t ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^t.report ( BAD_ARG, callNode, name ) ;^429^^^^^420^436^t.report ( callNode, BAD_ARG, name ) ;^[CLASS] ProcessProperties  [METHOD] countCallCandidates [RETURN_TYPE] void   NodeTraversal t Node callNode [VARIABLES] boolean  NodeTraversal  t  Node  callNode  firstArg  String  name  
[buglab_swap_variables]^Property prop = name.get ( propertyMap ) ;^445^^^^^444^451^Property prop = propertyMap.get ( name ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^prop = new Property ( t, name.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^prop = new Property (  t.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^prop = new Property ( name.getInput (  )  ) ;^447^^^^^444^451^prop = new Property ( name, t.getInput (  )  ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^propertyMap.put (  prop ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^propertyMap.put ( prop, name ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
[buglab_swap_variables]^propertyMap.put ( name ) ;^448^^^^^444^451^propertyMap.put ( name, prop ) ;^[CLASS] ProcessProperties  [METHOD] countPropertyOccurrence [RETURN_TYPE] void   String name NodeTraversal t [VARIABLES] boolean  NodeTraversal  t  String  name  Property  prop  
