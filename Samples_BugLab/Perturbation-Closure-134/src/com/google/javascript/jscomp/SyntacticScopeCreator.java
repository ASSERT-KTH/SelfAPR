[buglab_swap_variables]^scope = parentew Scope ( n, n ) ;^64^^^^^59^73^scope = new Scope ( parent, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope = new Scope (  n ) ;^64^^^^^59^73^scope = new Scope ( parent, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope = new Scope ( parent ) ;^64^^^^^59^73^scope = new Scope ( parent, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope = compilerew Scope ( n, n ) ;^62^^^^^59^73^scope = new Scope ( n, compiler ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope = new Scope (  compiler ) ;^62^^^^^59^73^scope = new Scope ( n, compiler ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope = new Scope ( n ) ;^62^^^^^59^73^scope = new Scope ( n, compiler ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanRoot ( parent, n ) ;^67^^^^^59^73^scanRoot ( n, parent ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanRoot (  parent ) ;^67^^^^^59^73^scanRoot ( n, parent ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanRoot ( n ) ;^67^^^^^59^73^scanRoot ( n, parent ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] createScope [RETURN_TYPE] Scope   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  n  String  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnNameNode, fnName, n, null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar (  fnNameNode, n, null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName,  n, null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( n, fnNameNode, fnName, null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName, fnNameNode,  null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^for  ( Node a = n.getFirstChild (  ) ; a != argsull;^92^^^^^75^105^for  ( Node a = args.getFirstChild (  ) ; a != null;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^for  ( Node n = args.getFirstChild (  ) ; a != aull;^92^^^^^75^105^for  ( Node a = args.getFirstChild (  ) ; a != null;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( args.getString (  ) , a, a, n, null, n ) ;^95^^^^^92^96^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) ,  args, n, null, n ) ;^95^^^^^92^96^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) , a,  n, null, n ) ;^95^^^^^92^96^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( n.getString (  ) , a, args, a, null, n ) ;^95^^^^^92^96^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) , a, args,  null, n ) ;^95^^^^^92^96^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName, n, fnNameNode, null, null, n ) ;^87^^^^^75^105^declareVar ( fnName, fnNameNode, n, null, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( n.getString (  ) , a, args, a, null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) ,  args, n, null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( args.getString (  ) , a, a, n, null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) , a,  n, null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) , a, n, args, null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( a.getString (  ) , a, args,  null, n ) ;^95^^^^^75^105^declareVar ( a.getString (  ) , a, args, n, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( n, body ) ;^99^^^^^75^105^scanVars ( body, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars (  n ) ;^99^^^^^75^105^scanVars ( body, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( body ) ;^99^^^^^75^105^scanVars ( body, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanRoot [RETURN_TYPE] void   Node n Scope parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  a  args  body  fnNameNode  n  String  fnName  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( child, name, n, parent, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar (  child, n, parent, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, parent, n, child, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name,  n, parent, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( parentame, child, n, n, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, child,  parent, null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, child, n,  null, n ) ;^120^^^^^114^122^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( child, name, n, parent, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar (  child, n, parent, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( childame, n, n, parent, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name,  n, parent, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, child,  parent, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, parent, n, child, null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( name, child, n,  null, n ) ;^120^^^^^105^135^declareVar ( name, child, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( n, fnName.getFirstChild (  ) , n, parent, null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar (  n.getFirstChild (  ) , n, parent, null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName, parent.getFirstChild (  ) , n, n, null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName, n.getFirstChild (  ) ,  parent, null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( parent, n.getFirstChild (  ) , n, fnName, null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( fnName, n.getFirstChild (  ) , n,  null, n ) ;^135^^^^^120^150^declareVar ( fnName, n.getFirstChild (  ) , n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( n.getString (  ) , var, var, parent, null, n ) ;^147^^^^^132^162^declareVar ( var.getString (  ) , var, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( var.getString (  ) ,  n, parent, null, n ) ;^147^^^^^132^162^declareVar ( var.getString (  ) , var, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( var.getString (  ) , var,  parent, null, n ) ;^147^^^^^132^162^declareVar ( var.getString (  ) , var, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( parent.getString (  ) , var, n, var, null, n ) ;^147^^^^^132^162^declareVar ( var.getString (  ) , var, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^declareVar ( var.getString (  ) , var, n,  null, n ) ;^147^^^^^132^162^declareVar ( var.getString (  ) , var, n, parent, null, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( n, block ) ;^148^^^^^133^163^scanVars ( block, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars (  n ) ;^148^^^^^133^163^scanVars ( block, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( block ) ;^148^^^^^133^163^scanVars ( block, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^for  ( Node n = child.getFirstChild (  ) ;^159^^^^^144^174^for  ( Node child = n.getFirstChild (  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( n, child ) ;^162^^^^^159^164^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars (  n ) ;^162^^^^^159^164^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( child ) ;^162^^^^^159^164^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( n, child ) ;^162^^^^^147^177^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars (  n ) ;^162^^^^^147^177^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scanVars ( child ) ;^162^^^^^147^177^scanVars ( child, n ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] scanVars [RETURN_TYPE] void   Node n Node parent [VARIABLES] AbstractCompiler  compiler  boolean  Scope  parent  returnedScope  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  block  child  n  next  parent  var  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^if  ( parent.getType (  )  == Token.CATCH && origParent.getType (  )  == Token.CATCH )  {^188^189^^^^183^212^if  ( origParent.getType (  )  == Token.CATCH && parent.getType (  )  == Token.CATCH )  {^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] onRedeclaration [RETURN_TYPE] void   Scope s String name Node n Node parent Node gramps Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  boolean  allowDupe  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Var  origVar  Node  gramps  n  nodeWithLineNumber  origParent  parent  String  fnName  name  sourceName  JSDocInfo  info  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^Scope.Var origVar = name.getVar ( scope ) ;^186^^^^^183^212^Scope.Var origVar = scope.getVar ( name ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] onRedeclaration [RETURN_TYPE] void   Scope s String name Node n Node parent Node gramps Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  boolean  allowDupe  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Var  origVar  Node  gramps  n  nodeWithLineNumber  origParent  parent  String  fnName  name  sourceName  JSDocInfo  info  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^if  ( scope.isDeclared (  false )  )  {^229^^^^^226^235^if  ( scope.isDeclared ( name, false )  )  {^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( sourceName, n, declaredType, compiler.getInput ( name )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare (  n, declaredType, compiler.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( sourceNameame, n, declaredType, compiler.getInput ( n )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( name,  declaredType, compiler.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( name, n,  compiler.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( name, n, compiler, declaredType.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( name, n, declaredType.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( name, n, declaredType, sourceName.getInput ( compiler )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, gramps, n, parent, name, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope,  n, parent, gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, parentame, n, n, gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name,  parent, gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n,  gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n, gramps, parent, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n, parent,  nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n, parent, nodeWithLineNumber, gramps ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( nodeWithLineNumber, name, n, parent, gramps, scope ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration (  name, n, parent, gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^if  ( name.isDeclared ( scope, false )  )  {^229^^^^^226^235^if  ( scope.isDeclared ( name, false )  )  {^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( n, scopeame, n, parent, gramps, nodeWithLineNumber ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, name, n, nodeWithLineNumber, gramps, parent ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^redeclarationHandler.onRedeclaration ( scope, nodeWithLineNumberame, n, parent, gramps, n ) ;^230^231^^^^226^235^redeclarationHandler.onRedeclaration ( scope, name, n, parent, gramps, nodeWithLineNumber ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^scope.declare ( compilerame, n, declaredType, n.getInput ( sourceName )  ) ;^233^^^^^226^235^scope.declare ( name, n, declaredType, compiler.getInput ( sourceName )  ) ;^[CLASS] SyntacticScopeCreator DefaultRedeclarationHandler  [METHOD] declareVar [RETURN_TYPE] void   String name Node n Node parent Node gramps JSType declaredType Node nodeWithLineNumber [VARIABLES] AbstractCompiler  compiler  JSType  declaredType  boolean  Scope  parent  returnedScope  s  scope  DiagnosticType  VAR_MULTIPLY_DECLARED_ERROR  Node  gramps  n  nodeWithLineNumber  parent  String  fnName  name  sourceName  RedeclarationHandler  redeclarationHandler  
[buglab_swap_variables]^if  ( parent.getType (  )  == Token.CATCH && origParent.getType (  )  == Token.CATCH )  {^188^189^^^^183^212^if  ( origParent.getType (  )  == Token.CATCH && parent.getType (  )  == Token.CATCH )  {^[CLASS] DefaultRedeclarationHandler  [METHOD] onRedeclaration [RETURN_TYPE] void   Scope s String name Node n Node parent Node gramps Node nodeWithLineNumber [VARIABLES] boolean  allowDupe  Scope  s  Var  origVar  Node  gramps  n  nodeWithLineNumber  origParent  parent  String  name  JSDocInfo  info  
[buglab_swap_variables]^Scope.Var origVar = name.getVar ( scope ) ;^186^^^^^183^212^Scope.Var origVar = scope.getVar ( name ) ;^[CLASS] DefaultRedeclarationHandler  [METHOD] onRedeclaration [RETURN_TYPE] void   Scope s String name Node n Node parent Node gramps Node nodeWithLineNumber [VARIABLES] boolean  allowDupe  Scope  s  Var  origVar  Node  gramps  n  nodeWithLineNumber  origParent  parent  String  name  JSDocInfo  info  
