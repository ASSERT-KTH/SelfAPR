[BugLab_Wrong_Literal]^private static final int DEFAULT_REQUIRED_USAGE = 3;^82^^^^^77^87^private static final int DEFAULT_REQUIRED_USAGE = 4;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Wrong_Literal]^private static final int MIN_PROP_SIZE = 5;^88^^^^^83^93^private static final int MIN_PROP_SIZE = 4;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Wrong_Literal]^public int accessorCount = -1;^733^^^^^728^738^public int accessorCount = 0;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Wrong_Literal]^public int mutatorCount = -1;^734^^^^^729^739^public int mutatorCount = 0;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Wrong_Literal]^public boolean aliasMutator = true;^735^^^^^730^740^public boolean aliasMutator = false;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Wrong_Literal]^public boolean aliasAccessor = true;^736^^^^^731^741^public boolean aliasAccessor = false;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property   [VARIABLES] 
[BugLab_Argument_Swapping]^this ( moduleGraph, compiler, null, null ) ;^162^^^^^161^163^this ( compiler, moduleGraph, null, null ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] JSModuleGraph)   AbstractCompiler compiler JSModuleGraph moduleGraph [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  name  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( name )  )  {^183^184^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( !StringUtil.isEmpty ( aliasableGlobals )  && !StringUtil.isEmpty ( unaliasableGlobals )  )  {^183^184^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  || !StringUtil.isEmpty ( aliasableGlobals )  )  {^183^184^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must "  <<  "choose one or the other." ) ;^185^186^187^^^177^202^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must "  !=  "choose one or the other." ) ;^185^186^187^^^177^202^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must "  |  "choose one or the other." ) ;^185^186^187^^^177^202^throw new IllegalArgumentException ( "Cannot pass in both unaliasable and aliasable globals; you must " + "choose one or the other." ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( !StringUtil.isEmpty ( name )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^183^184^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^!StringUtil.isEmpty ( unaliasableGlobals )  )  {^184^^^^^177^202^!StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( !StringUtil.isEmpty ( name )  )  {^190^^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Arrays.asList ( name.split ( "," )  )  ) ;^192^^^^^177^202^Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^this.unaliasableGlobals.addAll ( Arrays.asList ( name.split ( "," )  )  ) ;^191^192^^^^177^202^this.unaliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  )  {^195^^^^^177^202^if  ( !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^this.aliasableGlobals.addAll ( Arrays.asList ( unaliasableGlobals.split ( "," )  )  ) ;^196^^^^^177^202^this.aliasableGlobals.addAll ( Arrays.asList ( aliasableGlobals.split ( "," )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null )  {^199^^^^^177^202^if  ( moduleGraph != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^this.name = unaliasableGlobals;^742^^^^^741^743^this.name = name;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   String name [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^defaultRoot = externs.getFirstChild (  ) ;^217^^^^^216^222^defaultRoot = root.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Preconditions.checkState ( root.getType (  )  == Token.SCRIPT ) ;^218^^^^^216^222^Preconditions.checkState ( defaultRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^Preconditions.checkState ( defaultRoot.getType (  )  != Token.SCRIPT ) ;^218^^^^^216^222^Preconditions.checkState ( defaultRoot.getType (  )  == Token.SCRIPT ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^aliasProperties ( defaultRoot, root ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^aliasProperties ( externs, defaultRoot ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^aliasProperties ( root, externs ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^aliasGlobals ( defaultRoot, root ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^aliasGlobals ( externs, defaultRoot ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^aliasGlobals ( root, externs ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, root, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( externs, compiler, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( aliasableGlobals, externs, new GetAliasableNames ( compiler )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( compiler, aliasableGlobals, new GetAliasableNames ( externs )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, propInfo, new PropertyGatherer (  )  ) ;^231^^^^^216^246^NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new PropertyGatherer (  )  ) ;^231^^^^^216^246^NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( name.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( prop.name.length (  )  >= usage )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( prop.name.length (  )  > MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( usage >= requiredUsage )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( prop.accessorCount >= mutatorCount )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop.accessorCount.accessorCount >= requiredUsage )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( requiredUsage >= prop.accessorCount )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( prop.accessorCount == requiredUsage )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^prop.aliasAccessor = false;^239^^^^^224^254^prop.aliasAccessor = true;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( usage >= requiredUsage )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( prop.mutatorCount >= usage )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop.mutatorCount.mutatorCount >= requiredUsage )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( requiredUsage >= prop.mutatorCount )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( prop.mutatorCount == requiredUsage )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^prop.aliasMutator = false;^242^^^^^227^257^prop.aliasMutator = true;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( prop.accessorCount > requiredUsage )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( prop.mutatorCount >= mutatorCount )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( requiredUsage.mutatorCount >= prop )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( prop.mutatorCount < requiredUsage )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( unaliasableGlobals.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop.name.name.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceAccessor ( root ) ;^248^^^^^233^263^replaceAccessor ( propInfo ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceMutator ( root ) ;^253^^^^^238^268^replaceMutator ( propInfo ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( aliasMutator )  {^260^^^^^245^275^if  ( prop.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop.aliasAccessor.aliasAccessor )  {^260^^^^^245^275^if  ( prop.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop )  {^260^^^^^245^275^if  ( prop.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addAccessorPropName ( unaliasableGlobals, getAddingRoot ( prop.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addAccessorPropName ( prop.name, getAddingRoot ( deepestModuleMutate )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addAccessorPropName ( prop.name.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addAccessorPropName ( prop.deepestModuleAccess, getAddingRoot ( prop.name )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addAccessorPropName ( prop.deepestModuleAccess.name, getAddingRoot ( prop )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addAccessorPropName ( name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addAccessorPropName ( prop, getAddingRoot ( prop.name.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( aliasMutator )  {^266^^^^^251^281^if  ( prop.aliasMutator )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( prop )  {^266^^^^^251^281^if  ( prop.aliasMutator )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addMutatorFunction ( unaliasableGlobals, getAddingRoot ( prop.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addMutatorFunction ( prop.name, getAddingRoot ( deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addMutatorFunction ( prop.name.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addMutatorFunction ( prop, getAddingRoot ( prop.name.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addMutatorFunction ( prop.deepestModuleMutate.name, getAddingRoot ( prop )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addMutatorFunction ( name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addMutatorFunction ( prop.deepestModuleMutate, getAddingRoot ( prop.name )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = propSrc.getLastChild (  ) ;^288^^^^^277^302^Node propNameNode = getPropNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = propInfo.getLastChild (  ) ;^288^^^^^277^302^Node propNameNode = getPropNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String propName = propSrc.getString (  ) ;^289^^^^^277^302^String propName = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String propName = root.getString (  ) ;^289^^^^^277^302^String propName = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( props.get ( name ) .aliasAccessor )  {^290^^^^^277^302^if  ( props.get ( propName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( props.get ( propName ) .aliasMutator )  {^290^^^^^277^302^if  ( props.get ( propName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, propInfo, newNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, propSrc, propSrc ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node elemNode = new Node ( Token.GETELEM, newNameNode, propSrc ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = root.getFirstChild (  ) ;^291^^^^^277^302^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( unaliasableGlobals )  ) ;^294^295^^^^277^302^Node newNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, propSrc, propNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = propNameNode.getFirstChild (  ) ;^291^^^^^277^302^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getPropNode.removeChild ( root ) ;^292^^^^^277^302^getPropNode.removeChild ( propSrc ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, getArrayNotationNameFor ( unaliasableGlobals )  ) ;^295^^^^^277^302^Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( root.getParent (  ) , getPropNode, elemNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( getPropNode.getParent (  ) , getPropNode, propNameNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^replaceNode ( elemNode.getParent (  ) , getPropNode, getPropNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, root, newNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, propSrc, root ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = propInfo.getFirstChild (  ) ;^291^^^^^277^302^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node elemNode = new Node ( Token.GETELEM, propNameNode, newNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( props.get ( unaliasableGlobals ) .aliasAccessor )  {^290^^^^^277^302^if  ( props.get ( propName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( propName.get ( props ) .aliasAccessor )  {^290^^^^^277^302^if  ( props.get ( propName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getPropNode.removeChild ( propNameNode ) ;^292^^^^^277^302^getPropNode.removeChild ( propSrc ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, getArrayNotationNameFor ( name )  ) ;^295^^^^^277^302^Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( propNameNode.getParent (  ) , getPropNode, elemNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( getPropNode.getParent (  ) , getPropNode, propSrc ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = parentNode.getLastChild (  ) ;^324^^^^^309^339^Node propNameNode = getPropNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = propSrc.getLastChild (  ) ;^324^^^^^309^339^Node propNameNode = getPropNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node parentNode = propDest.getParent (  ) ;^325^^^^^310^340^Node parentNode = getPropNode.getParent (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node parentNode = propInfo.getParent (  ) ;^325^^^^^310^340^Node parentNode = getPropNode.getParent (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Property prop = props.get ( newNameNode.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Property prop = null.get ( propNameNode.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Property prop = propNameNode.get ( props.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Property prop = props.get ( parentNode.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Property prop = props.get ( propInfo.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, root, propSrc, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, propDest, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, propSrc, propNameNode ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node call = new Node ( Token.CALL, propDest, propSrc, callName ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node call = new Node ( Token.CALL, propSrc, callName, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = propInfo.getFirstChild (  ) ;^329^^^^^314^344^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propDest = root.getLastChild (  ) ;^330^^^^^315^345^Node propDest = parentNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, propDest, propSrc, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, propInfo, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, propSrc, propInfo ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node call = new Node ( Token.CALL, callName, propDest, propSrc ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = parentNode.getFirstChild (  ) ;^329^^^^^314^344^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propDest = propInfo.getLastChild (  ) ;^330^^^^^315^345^Node propDest = parentNode.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getPropNode.removeChild ( propNameNode ) ;^333^^^^^318^348^getPropNode.removeChild ( propSrc ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getPropNode.removeChild ( propSrc ) ;^334^^^^^319^349^getPropNode.removeChild ( propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parentNode.removeChild ( propSrc ) ;^335^^^^^320^350^parentNode.removeChild ( propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propDest.getString (  )  )  ) ;^339^340^^^^324^354^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getMutatorFor ( newNameNode.getString (  )  )  ) ;^340^^^^^325^355^getMutatorFor ( propNameNode.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^replaceNode ( call.getParent (  ) , parentNode, parentNode ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, root, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node call = new Node ( Token.CALL, callName, propSrc, root ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propSrc = root.getFirstChild (  ) ;^329^^^^^314^344^Node propSrc = getPropNode.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( root.getString (  )  )  ) ;^339^340^^^^324^354^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getPropNode.removeChild ( propDest ) ;^334^^^^^319^349^getPropNode.removeChild ( propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parentNode.removeChild ( root ) ;^335^^^^^320^350^parentNode.removeChild ( propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propSrc.getString (  )  )  ) ;^339^340^^^^324^354^Node callName = Node.newString ( Token.NAME, getMutatorFor ( propNameNode.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getMutatorFor ( propDest.getString (  )  )  ) ;^340^^^^^325^355^getMutatorFor ( propNameNode.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( propDest.getParent (  ) , parentNode, call ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( parentNode.getParent (  ) , parentNode, propInfo ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceNode ( propInfo.getParent (  ) , parentNode, call ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( replacementMap.containsKey ( newNameNode )  )  {^359^^^^^358^364^if  ( replacementMap.containsKey ( parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( null.containsKey ( parent )  )  {^359^^^^^358^364^if  ( replacementMap.containsKey ( parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( parent.containsKey ( replacementMap )  )  {^359^^^^^358^364^if  ( replacementMap.containsKey ( parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent = replacementMap.get ( root ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^parent = parent.get ( replacementMap ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent = replacementMap.get ( propNameNode ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent = replacementMap.get ( newNameNode ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( replacementMap.containsKey ( root )  )  {^359^^^^^358^364^if  ( replacementMap.containsKey ( parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent = replacementMap.get ( parentNode ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent.replaceChild ( propInfo, after ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^parent.replaceChild ( before, parentNode ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^parent.replaceChild ( after, before ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replacementMap.put ( parentNode, after ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replacementMap.put ( before, propNameNode ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^replacementMap.put ( after, before ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propValue = Node.newString ( Token.STRING, unaliasableGlobals ) ;^383^^^^^375^391^Node propValue = Node.newString ( Token.STRING, propName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node unaliasableGlobalsNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^384^385^^^^375^391^Node propNameNode = Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, getArrayNotationNameFor ( name )  ) ;^385^^^^^375^391^Node.newString ( Token.NAME, getArrayNotationNameFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^propNameNode.addChildToFront ( propInfo ) ;^386^^^^^375^391^propNameNode.addChildToFront ( propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, propDest ) ;^387^^^^^375^391^Node var = new Node ( Token.VAR, propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, parent ) ;^387^^^^^375^391^Node var = new Node ( Token.VAR, propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^root.addChildToFront ( propInfo ) ;^388^^^^^375^391^root.addChildToFront ( var ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node functionName = Node.newString ( Token.NAME, getMutatorFor ( unaliasableGlobals )  ) ;^417^418^^^^402^432^Node functionName = Node.newString ( Token.NAME, getMutatorFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getMutatorFor ( name )  ) ;^418^^^^^403^433^getMutatorFor ( propName )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String localPropName = getMutatorFor ( unaliasableGlobals )  + "$a";^421^^^^^406^436^String localPropName = getMutatorFor ( propName )  + "$a";^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^String localPropName = getMutatorFor ( propName )  !=  + "$a";^421^^^^^406^436^String localPropName = getMutatorFor ( propName )  + "$a";^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String localPropName = getMutatorFor ( localValueName )  + "$a";^421^^^^^406^436^String localPropName = getMutatorFor ( propName )  + "$a";^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^String localValueName = getMutatorFor ( propName )  >>  + "$b";^422^^^^^407^437^String localValueName = getMutatorFor ( propName )  + "$b";^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String localValueName = getMutatorFor ( unaliasableGlobals )  + "$b";^422^^^^^407^437^String localValueName = getMutatorFor ( propName )  + "$b";^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node hasPropNode = Node.newString ( Token.NAME, name ) ;^423^^^^^408^438^Node hasPropNode = Node.newString ( Token.NAME, localPropName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propValueNode = Node.newString ( Token.NAME, unaliasableGlobals ) ;^424^^^^^409^439^Node propValueNode = Node.newString ( Token.NAME, localValueName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propValueNode = Node.newString ( Token.NAME, name ) ;^424^^^^^409^439^Node propValueNode = Node.newString ( Token.NAME, localValueName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node args = new Node ( Token.LP, getPropNode, propValueNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node args = new Node ( Token.LP, hasPropNode, getPropNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node args = new Node ( Token.LP, propValueNode, hasPropNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node args = new Node ( Token.LP, hasPropNode, parent ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = Node.newString ( Token.NAME, name ) ;^428^^^^^413^443^Node propNameNode = Node.newString ( Token.NAME, localPropName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = Node.newString ( Token.NAME, unaliasableGlobals ) ;^428^^^^^413^443^Node propNameNode = Node.newString ( Token.NAME, localPropName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propValue = Node.newString ( Token.STRING, name ) ;^429^^^^^414^444^Node propValue = Node.newString ( Token.STRING, propName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propValue = Node.newString ( Token.STRING, unaliasableGlobals ) ;^429^^^^^414^444^Node propValue = Node.newString ( Token.STRING, propName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node getProp = new Node ( Token.GETPROP, newNameNode, propValue ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node getProp = new Node ( Token.GETPROP, propValue, propNameNode ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node getProp = new Node ( Token.GETPROP, propValueNode, propValue ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node getProp = new Node ( Token.GETPROP, propNameNode, newNameNode ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node assignFrom = Node.newString ( Token.NAME, unaliasableGlobals ) ;^431^^^^^416^446^Node assignFrom = Node.newString ( Token.NAME, localValueName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node assign = new Node ( Token.ASSIGN, parent, assignFrom ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node assign = new Node ( Token.ASSIGN, getProp, propNameNode ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node assign = new Node ( Token.ASSIGN, assignFrom, getProp ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node assign = new Node ( Token.ASSIGN, getProp, parentNode ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node returnNode = new Node ( Token.RETURN, hasPropNode ) ;^433^^^^^418^448^Node returnNode = new Node ( Token.RETURN, assign ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node returnNode = new Node ( Token.RETURN, propDest ) ;^433^^^^^418^448^Node returnNode = new Node ( Token.RETURN, assign ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node functionBlock = new Node ( Token.BLOCK, getPropNode ) ;^434^^^^^419^449^Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node functionBlock = new Node ( Token.BLOCK, newNameNode ) ;^434^^^^^419^449^Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^FunctionNode fnNode = new FunctionNode ( parent.getString (  )  ) ;^437^^^^^422^452^FunctionNode fnNode = new FunctionNode ( functionName.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^FunctionNode fnNode = new FunctionNode ( hasPropNode.getString (  )  ) ;^437^^^^^422^452^FunctionNode fnNode = new FunctionNode ( functionName.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^fnNode.addChildToBack ( propNameNode ) ;^444^^^^^429^459^fnNode.addChildToBack ( functionBlock ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( deepestModuleMutate != null )  {^459^^^^^458^473^if  ( m != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( m == null )  {^459^^^^^458^473^if  ( m != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( newNameNode != null )  {^461^^^^^458^473^if  ( root != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( root == null )  {^461^^^^^458^473^if  ( root != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return hasPropNode;^462^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( getPropNode != null )  {^466^^^^^458^473^if  ( root != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( root == null )  {^466^^^^^458^473^if  ( root != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return parent;^468^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleRoots.put ( deepestModuleMutate, root ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleRoots.put ( m, newNameNode ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^moduleRoots.put ( root, m ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^root = compiler.getNodeForCodeInsertion ( deepestModuleMutate ) ;^465^^^^^458^473^root = compiler.getNodeForCodeInsertion ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^root = m.getNodeForCodeInsertion ( compiler ) ;^465^^^^^458^473^root = compiler.getNodeForCodeInsertion ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return hasPropNode;^468^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node root = deepestModuleMutateoduleRoots.get ( m ) ;^460^^^^^458^473^Node root = moduleRoots.get ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node root = moduleRootsoduleRoots.get ( m ) ;^460^^^^^458^473^Node root = moduleRoots.get ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^Node root = m.get ( moduleRoots ) ;^460^^^^^458^473^Node root = moduleRoots.get ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleRoots.put ( m, propDest ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( parentNode != null )  {^461^^^^^458^473^if  ( root != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return getPropNode;^462^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return propInfo;^468^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleRoots.put ( m, propInfo ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return newNameNode;^462^^^^^458^473^return root;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleRoots.put ( m, getPropNode ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return propDest;^472^^^^^458^473^return defaultRoot;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING || ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  && whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.put ( n.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.put ( hasPropNode.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.put ( newNameNode.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^switch  ( parentNode.getType (  )  )  {^486^^^^^485^495^switch  ( n.getType (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node dest = hasPropNode.getFirstChild (  ) .getNext (  ) ;^489^^^^^485^495^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node dest = newNameNode.getFirstChild (  ) .getNext (  ) ;^489^^^^^485^495^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( newNameNode.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^( null.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^( whitelist.isEmpty (  )  || whitelist.contains ( newNameNode.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^( dest.isEmpty (  )  || whitelist.contains ( whitelist.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^( whitelist.isEmpty (  )  || whitelist.contains ( propValue.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.GETPROP )  {^505^^^^^504^520^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( hasPropNode, n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, newNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, n, parentNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( parent, n, propNameNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = getPropNode.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( propName ) .recordAccessor ( t ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^props.get ( t ) .recordAccessor ( name ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( localValueName ) .recordAccessor ( t ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^accessors.add ( getPropNode ) ;^511^^^^^504^520^accessors.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( getPropNode, n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, n, newNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( parent, n, propNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( n, propNameNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = hasPropNode.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = propDest.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( unaliasableGlobals ) .recordMutator ( t ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^props.get ( t ) .recordMutator ( name ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^mutators.add ( hasPropNode ) ;^517^^^^^504^520^mutators.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = hasPropNode.getLastChild (  ) ;^506^^^^^504^520^Node propNameNode = n.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = n.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = parentNode.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = getPropNode.getLastChild (  ) ;^506^^^^^504^520^Node propNameNode = n.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( getPropNode, n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, getPropNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, n, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( propNameNode, parent, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( unaliasableGlobals ) .recordAccessor ( t ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^accessors.add ( hasPropNode ) ;^511^^^^^504^520^accessors.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( hasPropNode, n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, propSrc, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, n, hasPropNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( propNameNode, parent, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( propName ) .recordMutator ( t ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^mutators.add ( getPropNode ) ;^517^^^^^504^520^mutators.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propSrc, n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, n, propValueNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = newNameNode.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^accessors.add ( parentNode ) ;^511^^^^^504^520^accessors.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( parentNode, n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, n, propInfo )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = n.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^props.get ( localValueName ) .recordMutator ( t ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = hasPropNode.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^String name = getPropNode.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( hasPropNode.getType (  )  == Token.GETPROP )  {^505^^^^^504^520^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node propNameNode = newNameNode.getLastChild (  ) ;^506^^^^^504^520^Node propNameNode = n.getLastChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, propDest, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, n, propDest )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( n, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, parentNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, n, parentNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isCallTarget =  ( var.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^boolean isCallTarget =  ( getPropNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == parent ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  != Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  != getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isCallTarget =  ( getPropNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&&  ( getPropNode.getFirstChild (  )  == getPropNode ) ;^536^^^^^533^545^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( getPropNode ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == n ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( getPropNode ) &&  ( parent.getFirstChild (  )  == parent ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  <= getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&&  ( newNameNode.getFirstChild (  )  == getPropNode ) ;^538^^^^^533^545^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  && ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isIncOrDec =  ( parent.getType (  )  != Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isIncOrDec =  ( getPropNode.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^( getPropNode.getType (  )  == Token.DEC ) ;^540^^^^^533^545^( parent.getType (  )  == Token.DEC ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( getPropNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isCallTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isAssignTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  || !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  != Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget && !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&&  ( !isCallTarget || !"eval".equals ( n.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^542^543^544^^^533^545^&&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&& props.containsKey ( getPropNode.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^&& propNameNode.containsKey ( props.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isAssignTarget =  ( n.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == hasPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^boolean isAssignTarget =  ( getPropNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == parent ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  < Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  < getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^boolean isAssignTarget =  ( parentNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&&  ( propInfo.getFirstChild (  )  == getPropNode ) ;^559^^^^^556^562^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( root.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && isCallTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^return  ( props.getType (  )  == Token.STRING )  && isAssignTarget && propNameNode.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  || isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  != Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return  ( getPropNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&& props.containsKey ( hasPropNode.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&& null.containsKey ( propNameNode.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^&& propNameNode.containsKey ( props.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^&& props.containsKey ( getPropNode.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^return "$$PROP_" + propName;^576^^^^^575^577^return "$$PROP_" + prop;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getArrayNotationNameFor [RETURN_TYPE] String   String prop [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^NodeTraversal.traverse ( compiler, n, new GetGlobals (  )  ) ;^581^^^^^566^596^NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( externs, compiler, new GetGlobals (  )  ) ;^581^^^^^566^596^NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^NodeTraversal.traverse ( root, compiler, new GlobalGatherer (  )  ) ;^584^^^^^569^599^NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( currentBytes > 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( global.mutatorCount.mutatorCount > 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( global > 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( global.mutatorCount >= 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^if  ( global.mutatorCount > accessorCount )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( usage < currentBytes )  {^597^^^^^582^612^if  ( aliasedBytes < currentBytes )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( aliasedBytes < usage )  {^597^^^^^582^612^if  ( aliasedBytes < currentBytes )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( currentBytes < aliasedBytes )  {^597^^^^^582^612^if  ( aliasedBytes < currentBytes )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( aliasedBytes <= currentBytes )  {^597^^^^^582^612^if  ( aliasedBytes < currentBytes )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^global.aliasAccessor = false;^598^^^^^583^613^global.aliasAccessor = true;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^int currentBytes = unaliasableGlobals.length (  )  * global.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^int currentBytes = global.name.length (  )  * usage;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int currentBytes = global.accessorCount.name.length (  )  * global;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int currentBytes = global.accessorCount.length (  )  * global.name;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^int + currentBytes = global.name.length (  )  * global.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^int aliasedBytes = 8 + unaliasableGlobals.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^int aliasedBytes = 8 + global.name.length (  )  + 2 * mutatorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int aliasedBytes = 8 + global.accessorCount.name.length (  )  + 2 * global;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int aliasedBytes = 8 + global.length (  )  + 2 * global.name.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int aliasedBytes = 8 + global.accessorCount.length (  )  + 2 * global.name;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^int aliasedBytes = 8 + global.name.length (   instanceof   )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^int aliasedBytes = 8 + global.name.length (  ==  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^int + aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^int aliasedBytes = aliasedBytes + global.name.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Literal]^int aliasedBytes = 8 + global.name.length (  )   * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int currentBytes = global.name.name.length (  )  * global.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int currentBytes = global.length (  )  * global.name.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^int aliasedBytes = 8 + name.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^int aliasedBytes = 8 + global.name.name.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^replaceGlobalUse ( root ) ;^604^^^^^589^619^replaceGlobalUse ( globalUse ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( isAssignTarget )  {^608^^^^^593^623^if  ( global.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( global.aliasAccessor.aliasAccessor )  {^608^^^^^593^623^if  ( global.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addGlobalAliasNode ( unaliasableGlobals, getAddingRoot ( global.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addGlobalAliasNode ( global.name, getAddingRoot ( deepestModuleMutate )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addGlobalAliasNode ( global.name.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addGlobalAliasNode ( global, getAddingRoot ( global.name.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addGlobalAliasNode ( global.deepestModuleAccess, getAddingRoot ( global.name )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getAddingRoot ( m )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getAddingRoot ( global.deepestModuleAccess.deepestModuleAccess )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getAddingRoot ( global )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^addGlobalAliasNode ( name, getAddingRoot ( global.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^addGlobalAliasNode ( global.deepestModuleAccess.name, getAddingRoot ( global )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getAddingRoot ( deepestModuleMutate )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( hasPropNode.getType (  )  == Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  != Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^if  ( isCallTarget )  {^627^^^^^619^636^if  ( aliasable )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^if  ( var != null || !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^if  ( var == null && !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^globals.put ( unaliasableGlobals, new Property ( name )  ) ;^632^^^^^619^636^globals.put ( name, new Property ( name )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^globals.put ( prop, new Property ( name )  ) ;^632^^^^^619^636^globals.put ( name, new Property ( name )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^628^^^^^619^636^String name = dest.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( unaliasableGlobals ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^String name = hasPropNode.getString (  ) ;^628^^^^^619^636^String name = dest.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^globals.put ( propName, new Property ( name )  ) ;^632^^^^^619^636^globals.put ( name, new Property ( name )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? propDest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Argument_Swapping]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? dest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^JSDocInfo docInfo = dest.getJSDocInfo (  )  != null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( hasPropNode.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Argument_Swapping]^boolean aliasable = !unaliasableGlobals.contains ( docInfo.getString (  )  )  && ( dest == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  || ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null && !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo != null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^String name = n.getString (  ) ;^628^^^^^619^636^String name = dest.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = parentNode.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^parent.getJSDocInfo (  )  : hasPropNode.getJSDocInfo (  ) ;^623^^^^^619^636^parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( n.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( parentNode.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( prop ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^if  ( this != null && !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^if  ( isIncOrDec )  {^627^^^^^619^636^if  ( aliasable )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = newNameNode.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parentNode.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( parent.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^if  ( n.getType (  )  == Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = propSrc.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^parent.getJSDocInfo (  )  : parent.getJSDocInfo (  ) ;^623^^^^^619^636^parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( newNameNode.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( propName ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[BugLab_Variable_Misuse]^for  ( Node varChild = newNameNode.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^for  ( Node hasPropNode = n.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^for  ( Node n = varChild.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getGlobalName ( t, varChild, newNameNode ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getGlobalName ( n, varChild, t ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getGlobalName ( t, n, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^varChild = globalUse.getNext (  )  )  {^646^^^^^638^651^varChild = varChild.getNext (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^for  ( Node varChild = hasPropNode.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^switch  ( newNameNode.getType (  )  )  {^639^^^^^638^651^switch  ( n.getType (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getGlobalName ( t, parentNode.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getGlobalName ( n, t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getGlobalName ( t, parent.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^for  ( Node varChild = parent.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^varChild = propSrc.getNext (  )  )  {^646^^^^^638^651^varChild = varChild.getNext (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getGlobalName ( t, parent, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^getGlobalName ( t, varChild, parentNode ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^getGlobalName ( varChild, t, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  < Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( var != null || var.isLocal (  )  )  {^666^^^^^651^681^if  ( var != null && var.isLocal (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^651^681^if  ( var != null && var.isLocal (  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  ( global != propNameNodeull )  {^671^^^^^656^686^if  ( global != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  ( global == null )  {^671^^^^^656^686^if  ( global != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( globalUse )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.this ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Argument_Swapping]^if  (  ( NodeUtil.isAssignmentOp ( n )  && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  || parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  >= n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  != n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( hasPropNode )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getFirstChild (  )  == n )  || propNameNode.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^678^679^680^681^^663^693^parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.INC || hasPropNode.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^679^680^681^^^664^694^parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.DEC || hasPropNode.getType (  )  == Token.NEW )  {^680^681^^^^665^695^parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( propNameNode )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == globalUse )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  <= n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^String newNameNodeame = n.getString (  ) ;^661^^^^^646^676^String name = n.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( prop ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Property global = globals.get ( unaliasableGlobals ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Property global = 4.get ( name ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Argument_Swapping]^Property global = name.get ( globals ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^661^^^^^646^676^String name = n.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( unaliasableGlobals ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( newNameNode )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getFirstChild (  )  == n )  || propInfo.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^678^679^680^681^^663^693^parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.DEC || n.getType (  )  == Token.NEW )  {^680^681^^^^665^695^parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  ( global != globalUseull )  {^671^^^^^656^686^if  ( global != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == propDest )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getFirstChild (  )  == n )  || parentNode.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^678^679^680^681^^663^693^parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.INC || n.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^679^680^681^^^664^694^parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.DEC || newNameNode.getType (  )  == Token.NEW )  {^680^681^^^^665^695^parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^globalUses.add ( hasPropNode ) ;^687^^^^^672^702^globalUses.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^String hasPropNodeame = n.getString (  ) ;^661^^^^^646^676^String name = n.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Scope.Var var = t.getScope (  ) .getVar ( propName ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^Property global = 0.get ( name ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  ( globalUse.getType (  )  == Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( parentNode )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getFirstChild (  )  == n )  || hasPropNode.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^678^679^680^681^^663^693^parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.DEC || globalUse.getType (  )  == Token.NEW )  {^680^681^^^^665^695^parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^globalUses.add ( parentNode ) ;^687^^^^^672^702^globalUses.add ( n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[BugLab_Variable_Misuse]^String globalName = parent.getString (  ) ;^697^^^^^696^702^String globalName = globalUse.getString (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( globals.get ( unaliasableGlobals ) .aliasAccessor )  {^698^^^^^696^702^if  ( globals.get ( globalName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( globals.get ( globalName ) .isIncOrDec )  {^698^^^^^696^702^if  ( globals.get ( globalName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^if  ( globalName.get ( globals ) .aliasAccessor )  {^698^^^^^696^702^if  ( globals.get ( globalName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^globalUse.setString ( "GLOBAL_"  &  globalName ) ;^699^^^^^696^702^globalUse.setString ( "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^globalUse.setString ( "GLOBAL_" + unaliasableGlobals ) ;^699^^^^^696^702^globalUse.setString ( "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^globalUse.setString ( "GLOBAL_"  !=  globalName ) ;^699^^^^^696^702^globalUse.setString ( "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node globalValue = Node.newString ( Token.NAME, unaliasableGlobals ) ;^720^^^^^712^728^Node globalValue = Node.newString ( Token.NAME, globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node globalValue = Node.newString ( Token.NAME, name ) ;^720^^^^^712^728^Node globalValue = Node.newString ( Token.NAME, globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node nameNode = Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^721^722^^^^712^728^Node globalNameNode = Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^Node globalNameNode = Node.newString ( Token.NAME, "GLOBAL_"  <<  globalName ) ;^721^722^^^^712^728^Node globalNameNode = Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node.newString ( Token.NAME, "GLOBAL_" + prop ) ;^722^^^^^712^728^Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^Node.newString ( Token.NAME, "GLOBAL_"  ^  globalName ) ;^722^^^^^712^728^Node.newString ( Token.NAME, "GLOBAL_" + globalName ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^globalNameNode.addChildToFront ( newNameNode ) ;^723^^^^^712^728^globalNameNode.addChildToFront ( globalValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^Node var = new Node ( Token.VAR, hasPropNode ) ;^724^^^^^712^728^Node var = new Node ( Token.VAR, globalNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^root.addChildToFront ( parentNode ) ;^725^^^^^712^728^root.addChildToFront ( var ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null )  {^747^^^^^745^753^if  ( moduleGraph != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^deepestModuleAccess =  ( m == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^deepestModuleAccess =  ( t == null )  ? deepestModuleAccess.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^deepestModuleAccess =  ( deepestModuleAccess != null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , m ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleAccess.getModule (  ) , t ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null )  {^757^^^^^755^763^if  ( moduleGraph != null )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^deepestModuleMutate =  ( m == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( t == null )  ? deepestModuleMutate.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleMutate.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Wrong_Operator]^deepestModuleMutate =  ( deepestModuleMutate != null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , m ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleMutate.getModule (  ) , t ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^if  ( dest.getType (  )  == Token.STRING && ( null.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING || ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  >= Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  && whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^props.put ( parent.getString (  ) , new Property ( dest.getString (  )  )  ) ;^492^^^^^485^495^props.put ( dest.getString (  ) , new Property ( dest.getString (  )  )  ) ;^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^Node dest = parent.getFirstChild (  ) .getNext (  ) ;^489^^^^^485^495^Node dest = n.getFirstChild (  ) .getNext (  ) ;^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^switch  ( parent.getType (  )  )  {^486^^^^^485^495^switch  ( n.getType (  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^( whitelist.isEmpty (  )  || whitelist.contains ( parent.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Argument_Swapping]^( dest.isEmpty (  )  || whitelist.contains ( whitelist.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.GETPROP )  {^505^^^^^504^520^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.GETPROP )  {^505^^^^^504^520^if  ( n.getType (  )  == Token.GETPROP )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( parent, n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithGetProp ( propNameNode, n, propNameNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( parent, n, propNameNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( propNameNode, parent, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^509^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^props.get ( t ) .recordAccessor ( name ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^accessors.add ( propNameNode ) ;^511^^^^^504^520^accessors.add ( n ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( parent, n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, propNameNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, n, propNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( propNameNode, parent, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^514^^^^^504^520^String name = propNameNode.getString (  ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^props.get ( t ) .recordMutator ( name ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^mutators.add ( propNameNode ) ;^517^^^^^504^520^mutators.add ( n ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^Node propNameNode = parent.getLastChild (  ) ;^506^^^^^504^520^Node propNameNode = n.getLastChild (  ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^Node propNameNode = propNameNode.getLastChild (  ) ;^506^^^^^504^520^Node propNameNode = n.getLastChild (  ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( n, n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( n, propNameNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithGetProp ( n, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Argument_Swapping]^if  ( canReplaceWithSetProp ( parent, n, propNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^if  ( canReplaceWithSetProp ( propNameNode, parent, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[BugLab_Variable_Misuse]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == propNameNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^boolean isCallTarget =  ( getPropNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == parent ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  != Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  != getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isCallTarget =  ( propNameNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&&  ( propNameNode.getFirstChild (  )  == getPropNode ) ;^536^^^^^533^545^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( propNameNode ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == propNameNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( getPropNode ) &&  ( parent.getFirstChild (  )  == parent ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  != getPropNode ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&&  ( propNameNode.getFirstChild (  )  == getPropNode ) ;^538^^^^^533^545^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isIncOrDec =  ( parent.getType (  )  == Token.4 )  || ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  && ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isIncOrDec =  ( parent.getType (  )  != Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^539^540^^^^533^545^boolean isIncOrDec =  ( parent.getType (  )  == Token.INC )  || ( parent.getType (  )  == Token.DEC ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^( propNameNode.getType (  )  == Token.DEC ) ;^540^^^^^533^545^( parent.getType (  )  == Token.DEC ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^return  ( parent.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isIncOrDec &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isIncOrDec || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  || !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  != Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget && !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^541^542^543^544^^533^545^return  ( propNameNode.getType (  )  == Token.STRING )  && !isAssignTarget &&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&&  ( !isCallTarget || !"eval".equals ( parent.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^542^543^544^^^533^545^&&  ( !isCallTarget || !"eval".equals ( propNameNode.getString (  )  )  ) && !isIncOrDec && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&& props.containsKey ( parent.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^&& propNameNode.containsKey ( props.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isAssignTarget =  ( propNameNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == propNameNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^boolean isAssignTarget =  ( getPropNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == parent ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) ||  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  != Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  >= getPropNode ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&&  ( propNameNode.getFirstChild (  )  == getPropNode ) ;^559^^^^^556^562^&&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^return  ( parent.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^return  ( isAssignTarget.getType (  )  == Token.STRING )  && propNameNode && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^return  ( propNameNode.getType (  )  == Token.STRING )  && props && isAssignTarget.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^return  ( props.getType (  )  == Token.STRING )  && isAssignTarget && propNameNode.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  == Token.STRING )  || isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Wrong_Operator]^return  ( propNameNode.getType (  )  <= Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^&& props.containsKey ( parent.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Argument_Swapping]^&& propNameNode.containsKey ( props.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  < Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^if  ( dest.getType (  )  <= Token.NAME )  {^620^^^^^619^636^if  ( dest.getType (  )  == Token.NAME )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^if  ( 3 != null && !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^if  ( var != null || !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^if  ( var == null && !var.isLocal (  )  )  {^631^^^^^619^636^if  ( var != null && !var.isLocal (  )  )  {^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^String name = parent.getString (  ) ;^628^^^^^619^636^String name = dest.getString (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Argument_Swapping]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? dest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^JSDocInfo docInfo = dest.getJSDocInfo (  )  != null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^boolean aliasable = !unaliasableGlobals.contains ( parent.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Argument_Swapping]^boolean aliasable = !unaliasableGlobals.contains ( docInfo.getString (  )  )  && ( dest == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  || ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null && !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Wrong_Operator]^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo != null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^parent.getJSDocInfo (  )  : parent.getJSDocInfo (  ) ;^623^^^^^619^636^parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? dest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[BugLab_Variable_Misuse]^for  ( Node varChild = parent.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^for  ( Node parent = n.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Argument_Swapping]^for  ( Node n = varChild.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^getGlobalName ( t, parent, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^getGlobalName ( t, varChild, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Argument_Swapping]^getGlobalName ( varChild, t, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Argument_Swapping]^getGlobalName ( t, n, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^varChild = parent.getNext (  )  )  {^646^^^^^638^651^varChild = varChild.getNext (  )  )  {^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^switch  ( varChild.getType (  )  )  {^639^^^^^638^651^switch  ( n.getType (  )  )  {^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^getGlobalName ( t, varChild.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Argument_Swapping]^getGlobalName ( n, t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^for  ( Node varChild = varChild.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^getGlobalName ( t, varChild, parent ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Argument_Swapping]^getGlobalName ( n, varChild, t ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[BugLab_Variable_Misuse]^if  ( parent.getType (  )  == Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  != Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  < Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  >= Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( n.getType (  )  <= Token.NAME )  {^660^^^^^645^675^if  ( n.getType (  )  == Token.NAME )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( var != null || var.isLocal (  )  )  {^666^^^^^651^681^if  ( var != null && var.isLocal (  )  )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( var == null && var.isLocal (  )  )  {^666^^^^^651^681^if  ( var != null && var.isLocal (  )  )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( global == null )  {^671^^^^^656^686^if  ( global != null )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Argument_Swapping]^if  (  ( NodeUtil.isAssignmentOp ( n )  && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  && parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  || parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  >= n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  != n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  < n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^if  (  ( NodeUtil.isAssignmentOp ( n )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^parent.getFirstChild (  )  == n )  || n.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^678^679^680^681^^663^693^parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.INC || n.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^679^680^681^^^664^694^parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^parent.getType (  )  == Token.DEC || n.getType (  )  == Token.NEW )  {^680^681^^^^665^695^parent.getType (  )  == Token.DEC || parent.getType (  )  == Token.NEW )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^globalUses.add ( parent ) ;^687^^^^^672^702^globalUses.add ( n ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Variable_Misuse]^String parentame = n.getString (  ) ;^661^^^^^646^676^String name = n.getString (  ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Argument_Swapping]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Argument_Swapping]^Property global = name.get ( globals ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Literal]^public int mutatorCount = 1;^734^^^^^729^739^public int mutatorCount = 0;^[CLASS] Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Literal]^public boolean aliasMutator = true;^735^^^^^730^740^public boolean aliasMutator = false;^[CLASS] Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Literal]^public boolean aliasAccessor = true;^736^^^^^731^741^public boolean aliasAccessor = false;^[CLASS] Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null )  {^747^^^^^745^753^if  ( moduleGraph != null )  {^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Variable_Misuse]^deepestModuleAccess =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleAccess =  ( t == null )  ? deepestModuleAccess.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleAccess =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleAccess.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Wrong_Operator]^deepestModuleAccess =  ( deepestModuleAccess != null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Variable_Misuse]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleAccess.getModule (  ) , t ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Wrong_Operator]^if  ( moduleGraph == null )  {^757^^^^^755^763^if  ( moduleGraph != null )  {^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Variable_Misuse]^deepestModuleMutate =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Variable_Misuse]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : 4.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleMutate.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Wrong_Operator]^deepestModuleMutate =  ( deepestModuleMutate != null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Variable_Misuse]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleMutate.getModule (  ) , t ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[BugLab_Argument_Swapping]^deepestModuleMutate =  ( t == null )  ? deepestModuleMutate.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
