[buglab_swap_variables]^this ( moduleGraph, compiler, null, null ) ;^162^^^^^161^163^this ( compiler, moduleGraph, null, null ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] JSModuleGraph)   AbstractCompiler compiler JSModuleGraph moduleGraph [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  name  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^this (  moduleGraph, null, null ) ;^162^^^^^161^163^this ( compiler, moduleGraph, null, null ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] JSModuleGraph)   AbstractCompiler compiler JSModuleGraph moduleGraph [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  name  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^this ( compiler,  null, null ) ;^162^^^^^161^163^this ( compiler, moduleGraph, null, null ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] JSModuleGraph)   AbstractCompiler compiler JSModuleGraph moduleGraph [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  name  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( !StringUtil.isEmpty ( aliasableGlobals )  && !StringUtil.isEmpty ( unaliasableGlobals )  )  {^183^184^^^^177^202^if  ( !StringUtil.isEmpty ( unaliasableGlobals )  && !StringUtil.isEmpty ( aliasableGlobals )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] <init> [RETURN_TYPE] String)   AbstractCompiler compiler JSModuleGraph moduleGraph String unaliasableGlobals String aliasableGlobals [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasProperties ( root, externs ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasProperties (  root ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasProperties ( externs ) ;^220^^^^^216^222^aliasProperties ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasGlobals ( root, externs ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasGlobals (  root ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^aliasGlobals ( externs ) ;^221^^^^^216^222^aliasGlobals ( externs, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, aliasableGlobals, new GetAliasableNames ( externs )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new GetAliasableNames ( aliasableGlobals )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( aliasableGlobals, externs, new GetAliasableNames ( compiler )  ) ;^226^227^^^^211^241^NodeTraversal.traverse ( compiler, externs, new GetAliasableNames ( aliasableGlobals )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new PropertyGatherer (  )  ) ;^231^^^^^216^246^NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new PropertyGatherer (  )  ) ;^231^^^^^216^246^NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new PropertyGatherer (  )  ) ;^231^^^^^216^246^NodeTraversal.traverse ( compiler, root, new PropertyGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( prop.name.name.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( requiredUsage.accessorCount >= prop )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( requiredUsage >= prop.accessorCount )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( requiredUsage.mutatorCount >= prop )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( requiredUsage >= prop.mutatorCount )  {^241^^^^^226^256^if  ( prop.mutatorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( prop >= requiredUsage )  {^238^^^^^223^253^if  ( prop.accessorCount >= requiredUsage )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( prop.length (  )  >= MIN_PROP_SIZE )  {^237^^^^^222^252^if  ( prop.name.length (  )  >= MIN_PROP_SIZE )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( prop.aliasAccessor.aliasAccessor )  {^260^^^^^245^275^if  ( prop.aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addAccessorPropName ( prop.deepestModuleAccess.name, getAddingRoot ( prop )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addAccessorPropName ( prop, getAddingRoot ( prop.name.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addAccessorPropName (  getAddingRoot ( prop.deepestModuleAccess )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addAccessorPropName ( prop.deepestModuleAccess, getAddingRoot ( prop.name )  ) ;^261^^^^^246^276^addAccessorPropName ( prop.name, getAddingRoot ( prop.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( prop.aliasMutator.aliasMutator )  {^266^^^^^251^281^if  ( prop.aliasMutator )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addMutatorFunction ( prop.deepestModuleMutate.name, getAddingRoot ( prop )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addMutatorFunction ( prop, getAddingRoot ( prop.name.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addMutatorFunction (  getAddingRoot ( prop.deepestModuleMutate )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addMutatorFunction ( prop.deepestModuleMutate, getAddingRoot ( prop.name )  ) ;^267^^^^^252^282^addMutatorFunction ( prop.name, getAddingRoot ( prop.deepestModuleMutate )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasProperties [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  externs  propInfo  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( propName.get ( props ) .aliasAccessor )  {^290^^^^^277^302^if  ( props.get ( propName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node elemNode = new Node ( Token.GETELEM, newNameNode, propSrc ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node elemNode = new Node ( Token.GETELEM,  newNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node elemNode = new Node ( Token.GETELEM, propSrc ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node elemNode = new Node ( Token. propSrc, newNameNode ) ;^297^^^^^277^302^Node elemNode = new Node ( Token.GETELEM, propSrc, newNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( elemNode.getParent (  ) , getPropNode, getPropNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( getPropNode.getParent (  ) ,  elemNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( getPropNode.getParent (  ) , getPropNode ) ;^298^^^^^277^302^replaceNode ( getPropNode.getParent (  ) , getPropNode, elemNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceAccessor [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  defaultRoot  elemNode  externs  getPropNode  newNameNode  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Property prop = propNameNode.get ( props.getString (  )  ) ;^327^^^^^312^342^Property prop = props.get ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL, propSrc, callName, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL,  propSrc, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL, callName, propDest, propSrc ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL, callName,  propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL, callName, propSrc ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token. callName, propSrc, propDest ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( call.getParent (  ) , parentNode, parentNode ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( parentNode.getParent (  ) ,  call ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replaceNode ( parentNode.getParent (  ) , parentNode ) ;^344^^^^^329^359^replaceNode ( parentNode.getParent (  ) , parentNode, call ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node call = new Node ( Token.CALL, propDest, propSrc, callName ) ;^341^^^^^326^356^Node call = new Node ( Token.CALL, callName, propSrc, propDest ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceMutator [RETURN_TYPE] void   Node getPropNode [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  prop  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( parent.containsKey ( replacementMap )  )  {^359^^^^^358^364^if  ( replacementMap.containsKey ( parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^parent = parent.get ( replacementMap ) ;^360^^^^^358^364^parent = replacementMap.get ( parent ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^parent.replaceChild (  after ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^parent.replaceChild ( after, before ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^parent.replaceChild ( before ) ;^362^^^^^358^364^parent.replaceChild ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replacementMap.put ( after, before ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replacementMap.put (  after ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^replacementMap.put ( before ) ;^363^^^^^358^364^replacementMap.put ( before, after ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceNode [RETURN_TYPE] void   Node parent Node before Node after [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  root  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node var = new Node ( Token.VAR ) ;^387^^^^^375^391^Node var = new Node ( Token.VAR, propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node var = new Node ( Token. propNameNode ) ;^387^^^^^375^391^Node var = new Node ( Token.VAR, propNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addAccessorPropName [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  before  call  callName  defaultRoot  elemNode  externs  getPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node args = new Node ( Token.LP, propValueNode, hasPropNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node args = new Node ( Token.LP,  propValueNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node args = new Node ( Token.LP, hasPropNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node args = new Node ( Token. hasPropNode, propValueNode ) ;^425^^^^^410^440^Node args = new Node ( Token.LP, hasPropNode, propValueNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node getProp = new Node ( Token.GETPROP,  propValue ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node getProp = new Node ( Token.GETPROP, propNameNode ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node getProp = new Node ( Token. propNameNode, propValue ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node getProp = new Node ( Token.GETPROP, propValue, propNameNode ) ;^430^^^^^415^445^Node getProp = new Node ( Token.GETPROP, propNameNode, propValue ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node assign = new Node ( Token.ASSIGN, assignFrom, getProp ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node assign = new Node ( Token.ASSIGN,  assignFrom ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node assign = new Node ( Token.ASSIGN, getProp ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node assign = new Node ( Token. getProp, assignFrom ) ;^432^^^^^417^447^Node assign = new Node ( Token.ASSIGN, getProp, assignFrom ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node returnNode = new Node ( Token.RETURN ) ;^433^^^^^418^448^Node returnNode = new Node ( Token.RETURN, assign ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node returnNode = new Node ( Token. assign ) ;^433^^^^^418^448^Node returnNode = new Node ( Token.RETURN, assign ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node functionBlock = new Node ( Token.BLOCK ) ;^434^^^^^419^449^Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node functionBlock = new Node ( Token. returnNode ) ;^434^^^^^419^449^Node functionBlock = new Node ( Token.BLOCK, returnNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addMutatorFunction [RETURN_TYPE] void   String propName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  FunctionNode  fnNode  JSModule  deepestModuleAccess  deepestModuleMutate  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleRoots.put ( root, m ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleRoots.put (  root ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleRoots.put ( m ) ;^467^^^^^458^473^moduleRoots.put ( m, root ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^root = m.getNodeForCodeInsertion ( compiler ) ;^465^^^^^458^473^root = compiler.getNodeForCodeInsertion ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node root = moduleRootsoduleRoots.get ( m ) ;^460^^^^^458^473^Node root = moduleRoots.get ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node root = m.get ( moduleRoots ) ;^460^^^^^458^473^Node root = moduleRoots.get ( m ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getAddingRoot [RETURN_TYPE] Node   JSModule m [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^( dest.isEmpty (  )  || whitelist.contains ( whitelist.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( parent, n, propNameNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp (  n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode, parent, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode,  parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^props.get ( t ) .recordAccessor ( name ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( parent, n, propNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp (  n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode, parent, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode,  parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^props.get ( t ) .recordMutator ( name ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( n, propNameNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( n, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^boolean isCallTarget =  ( getPropNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == parent ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( getPropNode ) &&  ( parent.getFirstChild (  )  == parent ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^&& propNameNode.containsKey ( props.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^boolean isAssignTarget =  ( getPropNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == parent ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^return  ( isAssignTarget.getType (  )  == Token.STRING )  && propNameNode && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^return  ( props.getType (  )  == Token.STRING )  && isAssignTarget && propNameNode.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^&& propNameNode.containsKey ( props.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( externs, compiler, new GetGlobals (  )  ) ;^581^^^^^566^596^NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GetGlobals (  )  ) ;^581^^^^^566^596^NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse (  externs, new GetGlobals (  )  ) ;^581^^^^^566^596^NodeTraversal.traverse ( compiler, externs, new GetGlobals (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( root, compiler, new GlobalGatherer (  )  ) ;^584^^^^^569^599^NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  new GlobalGatherer (  )  ) ;^584^^^^^569^599^NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^NodeTraversal.traverse (  root, new GlobalGatherer (  )  ) ;^584^^^^^569^599^NodeTraversal.traverse ( compiler, root, new GlobalGatherer (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( global.mutatorCount.mutatorCount > 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( global > 0 )  {^588^^^^^573^603^if  ( global.mutatorCount > 0 )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( currentBytes < aliasedBytes )  {^597^^^^^582^612^if  ( aliasedBytes < currentBytes )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int currentBytes = global.name.name.length (  )  * global.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int currentBytes = global.accessorCount.length (  )  * global.name;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int aliasedBytes = 8 + global.name.name.length (  )  + 2 * global.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int aliasedBytes = 8 + global.accessorCount.length (  )  + 2 * global.name;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int currentBytes = global.length (  )  * global.name.accessorCount;^594^^^^^579^609^int currentBytes = global.name.length (  )  * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^int aliasedBytes = 8 + global.length (  )  + 2 * global.name.accessorCount;^595^^^^^580^610^int aliasedBytes = 8 + global.name.length (  )  + 2 * global.accessorCount;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addGlobalAliasNode ( global.deepestModuleAccess.name, getAddingRoot ( global )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addGlobalAliasNode ( global.deepestModuleAccess, getAddingRoot ( global.name )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addGlobalAliasNode (  getAddingRoot ( global.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getAddingRoot ( global.deepestModuleAccess.deepestModuleAccess )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getAddingRoot ( global )  ) ;^610^^^^^595^625^getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^addGlobalAliasNode ( global.name.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^609^610^^^^594^624^addGlobalAliasNode ( global.name, getAddingRoot ( global.deepestModuleAccess )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] aliasGlobals [RETURN_TYPE] void   Node externs Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  Property  global  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^globals.put (  new Property ( name )  ) ;^632^^^^^619^636^globals.put ( name, new Property ( name )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[buglab_swap_variables]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? dest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[buglab_swap_variables]^boolean aliasable = !unaliasableGlobals.contains ( docInfo.getString (  )  )  && ( dest == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  JSDocInfo  docInfo  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  
[buglab_swap_variables]^for  ( Node n = varChild.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( n, varChild, t ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName (  varChild, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( varChild, t, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( t,  n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( t, n, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( t, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( n, t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName (  n.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^getGlobalName ( t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  (  ( NodeUtil.isAssignmentOp ( n )  && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[buglab_swap_variables]^Property global = name.get ( globals ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  aliasableGlobals  unaliasableGlobals  whitelist  NodeTraversal  t  Var  var  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  localPropName  localValueName  name  prop  propName  unaliasableGlobals  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  AbstractCompiler  compiler  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  Map  globals  moduleRoots  props  replacementMap  Property  global  
[buglab_swap_variables]^if  ( globalName.get ( globals ) .aliasAccessor )  {^698^^^^^696^702^if  ( globals.get ( globalName ) .aliasAccessor )  {^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] replaceGlobalUse [RETURN_TYPE] void   Node globalUse [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalUse  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node var = new Node ( Token.VAR ) ;^724^^^^^712^728^Node var = new Node ( Token.VAR, globalNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^Node var = new Node ( Token. globalNameNode ) ;^724^^^^^712^728^Node var = new Node ( Token.VAR, globalNameNode ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] addGlobalAliasNode [RETURN_TYPE] void   String globalName Node root [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleAccess =  ( t == null )  ? deepestModuleAccess.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleAccess.getModule (  ) , t ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleAccess =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleAccess.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleMutate =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleMutate.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleMutate.getModule (  ) , t ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] AliasExternals GetAliasableNames PropertyGatherer GetGlobals GlobalGatherer Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Set  aliasableGlobals  unaliasableGlobals  whitelist  boolean  aliasAccessor  aliasMutator  aliasable  isAssignTarget  isCallTarget  isIncOrDec  NodeTraversal  t  Node  after  args  assign  assignFrom  before  call  callName  defaultRoot  dest  elemNode  externs  functionBlock  functionName  getProp  getPropNode  globalNameNode  globalUse  globalValue  hasPropNode  n  newNameNode  parent  parentNode  propDest  propInfo  propNameNode  propSrc  propValue  propValueNode  returnNode  root  var  varChild  JSModule  deepestModuleAccess  deepestModuleMutate  m  List  accessors  globalUses  mutators  String  PROTOTYPE_PROPERTY_NAME  aliasableGlobals  globalName  localPropName  localValueName  name  prop  propName  unaliasableGlobals  Map  globals  moduleRoots  props  replacementMap  int  DEFAULT_REQUIRED_USAGE  MIN_PROP_SIZE  accessorCount  aliasedBytes  currentBytes  mutatorCount  requiredUsage  usage  JSModuleGraph  moduleGraph  
[buglab_swap_variables]^if  ( whitelist.getType (  )  == Token.STRING && ( dest.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^490^491^^^^485^495^if  ( dest.getType (  )  == Token.STRING && ( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[buglab_swap_variables]^( dest.isEmpty (  )  || whitelist.contains ( whitelist.getString (  )  )  )  )  {^491^^^^^485^495^( whitelist.isEmpty (  )  || whitelist.contains ( dest.getString (  )  )  )  )  {^[CLASS] GetAliasableNames  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  whitelist  boolean  NodeTraversal  t  Node  dest  n  parent  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( n, propNameNode, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithGetProp (  n, parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode, parent, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode,  parent )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( propNameNode, n )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^props.get ( t ) .recordAccessor ( name ) ;^510^^^^^504^520^props.get ( name ) .recordAccessor ( t ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp (  n, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( n, propNameNode, parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode,  parent )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode, parent, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( propNameNode, n )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^props.get ( t ) .recordMutator ( name ) ;^516^^^^^504^520^props.get ( name ) .recordMutator ( t ) ;^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithGetProp ( parent, n, propNameNode )  )  {^508^^^^^504^520^if  ( canReplaceWithGetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^if  ( canReplaceWithSetProp ( parent, n, propNameNode )  )  {^513^^^^^504^520^if  ( canReplaceWithSetProp ( propNameNode, n, parent )  )  {^[CLASS] PropertyGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  propNameNode  String  name  
[buglab_swap_variables]^boolean isCallTarget =  ( getPropNode.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == parent ) ;^535^536^^^^533^545^boolean isCallTarget =  ( parent.getType (  )  == Token.CALL ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^boolean isAssignTarget = NodeUtil.isAssignmentOp ( getPropNode ) &&  ( parent.getFirstChild (  )  == parent ) ;^537^538^^^^533^545^boolean isAssignTarget = NodeUtil.isAssignmentOp ( parent ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^&& propNameNode.containsKey ( props.getString (  )  ) ;^544^^^^^533^545^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithGetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  isCallTarget  isIncOrDec  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^boolean isAssignTarget =  ( getPropNode.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == parent ) ;^558^559^^^^556^562^boolean isAssignTarget =  ( parent.getType (  )  == Token.ASSIGN ) &&  ( parent.getFirstChild (  )  == getPropNode ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^return  ( isAssignTarget.getType (  )  == Token.STRING )  && propNameNode && props.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^return  ( propNameNode.getType (  )  == Token.STRING )  && props && isAssignTarget.containsKey ( propNameNode.getString (  )  ) ;^560^561^^^^556^562^return  ( propNameNode.getType (  )  == Token.STRING )  && isAssignTarget && props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^&& propNameNode.containsKey ( props.getString (  )  ) ;^561^^^^^556^562^&& props.containsKey ( propNameNode.getString (  )  ) ;^[CLASS] PropertyGatherer  [METHOD] canReplaceWithSetProp [RETURN_TYPE] boolean   Node propNameNode Node getPropNode Node parent [VARIABLES] boolean  isAssignTarget  Node  getPropNode  parent  propNameNode  
[buglab_swap_variables]^globals.put (  new Property ( name )  ) ;^632^^^^^619^636^globals.put ( name, new Property ( name )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^629^^^^^619^636^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[buglab_swap_variables]^JSDocInfo docInfo = parent.getJSDocInfo (  )  == null ? dest.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^622^623^^^^619^636^JSDocInfo docInfo = dest.getJSDocInfo (  )  == null ? parent.getJSDocInfo (  )  : dest.getJSDocInfo (  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[buglab_swap_variables]^boolean aliasable = !unaliasableGlobals.contains ( docInfo.getString (  )  )  && ( dest == null || !docInfo.isNoAlias (  )  ) ;^624^625^^^^619^636^boolean aliasable = !unaliasableGlobals.contains ( dest.getString (  )  )  && ( docInfo == null || !docInfo.isNoAlias (  )  ) ;^[CLASS] GetGlobals  [METHOD] getGlobalName [RETURN_TYPE] void   NodeTraversal t Node dest Node parent [VARIABLES] boolean  aliasable  NodeTraversal  t  Var  var  Node  dest  parent  String  name  JSDocInfo  docInfo  
[buglab_swap_variables]^for  ( Node n = varChild.getFirstChild (  ) ;^644^^^^^638^651^for  ( Node varChild = n.getFirstChild (  ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( varChild, t, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName (  varChild, n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( t, n, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( t,  n ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( t, varChild ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( n, t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName (  n.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( t.getFirstChild (  ) , n ) ;^641^^^^^638^651^getGlobalName ( t, n.getFirstChild (  ) , n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^getGlobalName ( n, varChild, t ) ;^647^^^^^638^651^getGlobalName ( t, varChild, n ) ;^[CLASS] GetGlobals  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Node  n  parent  varChild  
[buglab_swap_variables]^if  ( n != globalull )  {^671^^^^^656^686^if  ( global != null )  {^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[buglab_swap_variables]^if  (  ( NodeUtil.isAssignmentOp ( n )  && parent.getFirstChild (  )  == parent )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^677^678^679^680^^662^692^if  (  ( NodeUtil.isAssignmentOp ( parent )  && parent.getFirstChild (  )  == n )  || parent.getType (  )  == Token.INC || parent.getType (  )  == Token.DEC ||^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[buglab_swap_variables]^Scope.Var var = name.getScope (  ) .getVar ( t ) ;^662^^^^^647^677^Scope.Var var = t.getScope (  ) .getVar ( name ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[buglab_swap_variables]^Property global = name.get ( globals ) ;^670^^^^^655^685^Property global = globals.get ( name ) ;^[CLASS] GlobalGatherer  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] boolean  NodeTraversal  t  Var  var  Node  n  parent  String  name  Property  global  
[buglab_swap_variables]^deepestModuleAccess =  ( t == null )  ? deepestModuleAccess.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleAccess =  ( deepestModuleAccess == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^748^749^750^751^^745^753^deepestModuleAccess =  ( deepestModuleAccess == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleAccess.getModule (  ) , t ) ;^750^751^^^^745^753^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleAccess ) ;^[CLASS] Property  [METHOD] recordAccessor [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleMutate =  ( t == null )  ? deepestModuleMutate.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleMutate =  ( moduleGraph == null )  ? t.getModule (  )  : deepestModuleMutate.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( deepestModuleMutate.getModule (  ) , t ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  )  ) ;^760^761^^^^755^763^moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
[buglab_swap_variables]^deepestModuleMutate =  ( deepestModuleMutate == null )  ? moduleGraph.getModule (  )  : t.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^758^759^760^761^^755^763^deepestModuleMutate =  ( deepestModuleMutate == null )  ? t.getModule (  )  : moduleGraph.getDeepestCommonDependencyInclusive ( t.getModule (  ) , deepestModuleMutate ) ;^[CLASS] Property  [METHOD] recordMutator [RETURN_TYPE] void   NodeTraversal t [VARIABLES] JSModule  deepestModuleAccess  deepestModuleMutate  boolean  aliasAccessor  aliasMutator  String  name  NodeTraversal  t  int  accessorCount  mutatorCount  
