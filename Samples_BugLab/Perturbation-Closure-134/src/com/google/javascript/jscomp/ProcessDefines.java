[buglab_swap_variables]^allRefInfo.put ( name.node, new RefInfo ( ref, ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allRefInfo.put ( ref.node, new RefInfo (  name )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allRefInfo.put ( ref.node, new RefInfo ( ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^namespace = new GlobalNamespace ( root, compiler ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^namespace = new GlobalNamespace ( compiler ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^namespace = new GlobalNamespace (  root ) ;^109^^^^^107^112^namespace = new GlobalNamespace ( compiler, root ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^overrideDefines ( collectDefines ( namespace, root )  ) ;^111^^^^^107^112^overrideDefines ( collectDefines ( root, namespace )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^overrideDefines ( collectDefines (  namespace )  ) ;^111^^^^^107^112^overrideDefines ( collectDefines ( root, namespace )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^overrideDefines ( collectDefines ( root )  ) ;^111^^^^^107^112^overrideDefines ( collectDefines ( root, namespace )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] process [RETURN_TYPE] void   Node externs Node root [VARIABLES] Set  KNOWN_DEFINES  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  Node  externs  initialValue  initialValueParent  lastValue  lvalueToRemoveLater  root  String  reasonNotAssignable  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^changed = info.initialValue || finalValue.getType (  )  != changed.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^changed = changed || info.initialValue.getType (  )  != finalValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^changed = info || finalValue.getType (  )  != changed.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^126^127^128^^^114^142^changed = changed || finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.initialValueParent.replaceChild ( finalValue.initialValue, info.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.initialValueParent.replaceChild ( info.initialValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.initialValueParent.replaceChild ( finalValue, info.initialValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.initialValueParent.replaceChild (  finalValue.cloneTree (  )  ) ;^123^124^^^^114^142^info.initialValueParent.replaceChild ( info.initialValue, finalValue.cloneTree (  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^finalValue.getType (  )  != info.initialValue.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^finalValue.getType (  )  != info.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue.initialValue ) ;^127^128^^^^114^142^finalValue.getType (  )  != info.initialValue.getType (  )  || !finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Node inputValue = defineName.get ( dominantReplacements ) ;^119^^^^^114^142^Node inputValue = dominantReplacements.get ( defineName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Node finalValue = info != null ? inputValue : inputValue.getLastValue (  ) ;^120^121^^^^114^142^Node finalValue = inputValue != null ? inputValue : info.getLastValue (  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^!finalValue.isEquivalentTo ( info ) ;^128^^^^^114^142^!finalValue.isEquivalentTo ( info.initialValue ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( unknownDefine, UNKNOWN_DEFINE_WARNING )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  unknownDefine )  ) ;^140^^^^^114^142^compiler.report ( JSError.make ( UNKNOWN_DEFINE_WARNING, unknownDefine )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] overrideDefines [RETURN_TYPE] void   DefineInfo> allDefines [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  Entry  def  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^return params.format ( format ) ;^145^^^^^144^146^return format.format ( params ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] format [RETURN_TYPE] String   MessageFormat format  params [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  root  String  defineName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  Object[]  params  
[buglab_swap_variables]^if  ( parent == null && info.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^165^166^^^^154^181^if  ( info == null && parent.getType (  )  == Token.VAR && parent.hasOneChild (  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^CollectDefines pass = new CollectDefines ( allDefines, compiler ) ;^178^^^^^154^181^CollectDefines pass = new CollectDefines ( compiler, allDefines ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^CollectDefines pass = new CollectDefines ( compiler ) ;^178^^^^^154^181^CollectDefines pass = new CollectDefines ( compiler, allDefines ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^CollectDefines pass = new CollectDefines (  allDefines ) ;^178^^^^^154^181^CollectDefines pass = new CollectDefines ( compiler, allDefines ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, pass, root ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler,  pass ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^NodeTraversal.traverse ( pass, root, compiler ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^NodeTraversal.traverse ( compiler, root ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^NodeTraversal.traverse (  root, pass ) ;^179^^^^^154^181^NodeTraversal.traverse ( compiler, root, pass ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] collectDefines [RETURN_TYPE] Map   Node root GlobalNamespace namespace [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  Node  externs  finalValue  initialValue  initialValueParent  inputValue  lastValue  lvalueToRemoveLater  n  parent  root  String  defineName  reasonNotAssignable  unknownDefine  JSDocInfo  info  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  List  allDefines  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  CollectDefines  pass  
[buglab_swap_variables]^RefInfo refInfo = n.get ( allRefInfo ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment (  fullName, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t,  val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName,  valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, valParent, val, fullName )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( val, fullName, t, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, val, fullName, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName, valParent, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val,  fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, val,  fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( fullName, t, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable ( t, info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable (  t ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable ( info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^DefineInfo info = fullName.get ( assignableDefines ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Ref ref = refInfo.ref.ref;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Ref ref = refInfo;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Name name = refInfo.name.name;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^Name name = refInfo;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val,  fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, val,  fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( valParent, fullName, val, t )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, n,  "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, n,  "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^if  ( n == lvalueToRemoveLater )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^parent.replaceChild ( last, n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^parent.replaceChild (  last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable ( t, info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable (  t ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^setDefineInfoNotAssignable ( info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  String  defineName  fullName  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  RefInfo  refInfo  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^if  ( allDefines == null || !NodeUtil.isValidDefineValue ( value, value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^if  ( value == null || !NodeUtil.isValidDefineValue (  allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^if  ( value == null || !NodeUtil.isValidDefineValue ( value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo (  valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo ( value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put ( info, name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put (  info ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put ( name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put ( info, name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put (  info ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put ( name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo (  valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info = new DefineInfo ( value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put ( info, name ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put (  info ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allDefines.put ( name ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put ( info, name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put (  info ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^assignableDefines.put ( name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, value, INVALID_DEFINE_INIT_ERROR, t )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value,  name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, value,  name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value,  name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( name, value, INVALID_DEFINE_INIT_ERROR, t )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^JSError.make ( t, value,  name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.setNotAssignable ( format ( t, REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^info.setNotAssignable ( format (  t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] ProcessDefines CollectDefines RefInfo DefineInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] Set  KNOWN_DEFINES  unusedReplacements  MessageFormat  REASON_DEFINE_NOT_ASSIGNABLE  format  NodeTraversal  t  DefineInfo  info  Node  externs  finalValue  initialValue  initialValueParent  inputValue  last  lastValue  lvalueToRemoveLater  n  parent  root  val  valParent  value  valueParent  String  defineName  fullName  name  reasonNotAssignable  unknownDefine  GlobalNamespace  namespace  Deque  assignAllowed  Name  name  AbstractCompiler  compiler  Ref  ref  boolean  changed  entering  isAssignable  DiagnosticType  DEFINE_NOT_ASSIGNABLE_ERROR  INVALID_DEFINE_INIT_ERROR  NON_GLOBAL_DEFINE_INIT_ERROR  UNKNOWN_DEFINE_WARNING  Map  allDefines  allRefInfo  assignableDefines  dominantReplacements  replacements  
[buglab_swap_variables]^allRefInfo.put ( name.node, new RefInfo ( ref, ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allRefInfo.put ( ref.node, new RefInfo (  name )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allRefInfo.put ( ref.node, new RefInfo ( ref )  ) ;^222^^^^^203^227^allRefInfo.put ( ref.node, new RefInfo ( ref, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] <init> [RETURN_TYPE] List)   AbstractCompiler compiler Name> listOfDefines [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  Node  lvalueToRemoveLater  List  listOfDefines  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^RefInfo refInfo = n.get ( allRefInfo ) ;^248^^^^^233^263^RefInfo refInfo = allRefInfo.get ( n ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment (  fullName, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, val, fullName, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t,  val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName, valParent, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName,  valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, fullName, val )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( val, fullName, t, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val,  fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val,  fullName )  ) ;^263^^^^^258^273^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable ( t, info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable (  t ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable ( info ) ;^282^^^^^267^297^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^DefineInfo info = fullName.get ( assignableDefines ) ;^280^^^^^265^295^DefineInfo info = assignableDefines.get ( fullName ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^Ref ref = refInfo.ref.ref;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^Ref ref = refInfo;^250^^^^^235^265^Ref ref = refInfo.ref;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^Name name = refInfo.name.name;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^Name name = refInfo;^251^^^^^236^266^Name name = refInfo.name;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val,  fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( fullName, val, INVALID_DEFINE_INIT_ERROR, t )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, val,  fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( valParent, fullName, val, t )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( fullName, t, val, valParent )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( processDefineAssignment ( t, valParent, val, fullName )  )  {^264^^^^^249^279^} else if  ( processDefineAssignment ( t, fullName, val, valParent )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, fullName, INVALID_DEFINE_INIT_ERROR, val )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( INVALID_DEFINE_INIT_ERROR, val, t, fullName )  ) ;^262^263^^^^258^273^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, val, fullName, INVALID_DEFINE_INIT_ERROR )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, INVALID_DEFINE_INIT_ERROR, val, fullName )  ) ;^262^263^^^^247^277^compiler.report ( JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( val, t, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^263^^^^^248^278^JSError.make ( t, val, INVALID_DEFINE_INIT_ERROR, fullName )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( n, t, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  "" )  ) ;^293^294^^^^290^295^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, n,  "" )  ) ;^294^^^^^290^295^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, n,  "" )  ) ;^293^294^^^^278^308^compiler.report ( JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, n, t, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, n, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, n,  "" )  ) ;^294^^^^^279^309^JSError.make ( t, n, NON_GLOBAL_DEFINE_INIT_ERROR, "" )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^if  ( n == lvalueToRemoveLater )  {^297^^^^^282^312^if  ( lvalueToRemoveLater == n )  {^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^parent.replaceChild (  last ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^parent.replaceChild ( n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^parent.replaceChild ( last, n ) ;^302^^^^^287^317^parent.replaceChild ( n, last ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable ( t, info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable (  t ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^setDefineInfoNotAssignable ( info ) ;^323^^^^^308^338^setDefineInfoNotAssignable ( info, t ) ;^[CLASS] CollectDefines RefInfo  [METHOD] visit [RETURN_TYPE] void   NodeTraversal t Node n Node parent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  RefInfo  refInfo  String  fullName  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^if  ( value == null || !NodeUtil.isValidDefineValue (  allDefines.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^if  ( value == null || !NodeUtil.isValidDefineValue ( value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^381^402^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo (  valueParent ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo ( value ) ;^388^^^^^381^402^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put (  info ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put ( name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put (  info ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put ( name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^381^402^DefineInfo info = allDefines.get ( name ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put ( info, name ) ;^389^^^^^381^402^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put ( info, name ) ;^390^^^^^381^402^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, NON_GLOBAL_DEFINE_INIT_ERROR )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^} else if  ( value.recordAssignment ( info )  )  {^391^^^^^376^405^} else if  ( info.recordAssignment ( value )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR,  info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent,  name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo ( valueParent, value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo (  valueParent ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info = new DefineInfo ( value ) ;^388^^^^^376^405^info = new DefineInfo ( value, valueParent ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put ( info, name ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put (  info ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^allDefines.put ( name ) ;^389^^^^^376^405^allDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put (  info ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put ( info, name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^assignableDefines.put ( name ) ;^390^^^^^376^405^assignableDefines.put ( name, info ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^DefineInfo info = name.get ( allDefines ) ;^385^^^^^376^405^DefineInfo info = allDefines.get ( name ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, t )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( NON_GLOBAL_DEFINE_INIT_ERROR, valueParent, t, name )  ) ;^382^383^^^^376^405^compiler.report ( JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( valueParent, t, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, value, INVALID_DEFINE_INIT_ERROR, t )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value,  name )  ) ;^379^380^^^^377^402^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( name, value, INVALID_DEFINE_INIT_ERROR, t )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( INVALID_DEFINE_INIT_ERROR, value, t, name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, value,  name )  ) ;^380^^^^^377^402^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^381^402^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^381^402^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( info, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, t.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, info, DEFINE_NOT_ASSIGNABLE_ERROR, name, valueParent.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, name, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, t, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, info, name, DEFINE_NOT_ASSIGNABLE_ERROR.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, DEFINE_NOT_ASSIGNABLE_ERROR, valueParent, info.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^391^401^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( valueParent, t, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( name, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, t, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^391^401^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^if  ( allDefines == null || !NodeUtil.isValidDefineValue ( value, value.keySet (  )  )  )  {^377^378^^^^376^405^if  ( value == null || !NodeUtil.isValidDefineValue ( value, allDefines.keySet (  )  )  )  {^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, value,  name )  ) ;^379^380^^^^376^405^compiler.report ( JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( value, t, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make (  value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t,  INVALID_DEFINE_INIT_ERROR, name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, INVALID_DEFINE_INIT_ERROR, value )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, value, name, INVALID_DEFINE_INIT_ERROR )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, value,  name )  ) ;^380^^^^^376^405^JSError.make ( t, value, INVALID_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, name, NON_GLOBAL_DEFINE_INIT_ERROR, valueParent )  ) ;^383^^^^^376^405^JSError.make ( t, valueParent, NON_GLOBAL_DEFINE_INIT_ERROR, name )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, info, name.getReasonWhyNotAssignable (  )  )  ) ;^398^399^400^^^376^405^compiler.report ( JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^JSError.make ( t, valueParent, name, DEFINE_NOT_ASSIGNABLE_ERROR, info.getReasonWhyNotAssignable (  )  )  ) ;^399^400^^^^376^405^JSError.make ( t, valueParent, DEFINE_NOT_ASSIGNABLE_ERROR, name, info.getReasonWhyNotAssignable (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] processDefineAssignment [RETURN_TYPE] boolean   NodeTraversal t String name Node value Node valueParent [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  String  name  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info.setNotAssignable ( format ( t, REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
[buglab_swap_variables]^info.setNotAssignable ( format (  t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^428^429^^^^427^430^info.setNotAssignable ( format ( REASON_DEFINE_NOT_ASSIGNABLE, t.getLineNumber (  ) , t.getSourceName (  )  )  ) ;^[CLASS] CollectDefines RefInfo  [METHOD] setDefineInfoNotAssignable [RETURN_TYPE] void   DefineInfo info NodeTraversal t [VARIABLES] AbstractCompiler  compiler  Ref  ref  boolean  NodeTraversal  t  DefineInfo  info  Node  last  lvalueToRemoveLater  n  parent  val  valParent  value  valueParent  Map  allDefines  allRefInfo  assignableDefines  Deque  assignAllowed  Name  name  
